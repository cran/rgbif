http_interactions:
- request:
    method: get
    uri: https://api.gbif.org/v1/dataset/suggest?q=Amazon&limit=100&type=OCCURRENCE
    body:
      encoding: ''
      string: ''
    headers:
      Accept-Encoding: gzip, deflate
      Accept: application/json, text/xml, application/xml, */*
      User-Agent: r-curl/4.3 crul/1.0.0 rOpenSci(rgbif/3.4.0.95)
      X-USER-AGENT: r-curl/4.3 crul/1.0.0 rOpenSci(rgbif/3.4.0.95)
  response:
    status:
      status_code: '200'
      message: OK
      explanation: Request fulfilled, document follows
    headers:
      status: 'HTTP/2 200 '
      vary: Origin, Access-Control-Request-Method, Access-Control-Request-Headers
      x-content-type-options: nosniff
      x-xss-protection: 1; mode=block
      pragma: no-cache
      expires: '0'
      x-frame-options: DENY
      content-type: application/json
      date: Tue, 08 Dec 2020 23:53:41 GMT
      cache-control: public, max-age=3601
      x-varnish: '482836526'
      age: '0'
      via: 1.1 varnish (Varnish/6.0)
      accept-ranges: bytes
    body:
      encoding: ASCII-8BIT
      file: no
      string: 
  recorded_at: 2020-12-08 23:53:42 GMT
  recorded_with: vcr/0.5.4, webmockr/0.7.0
