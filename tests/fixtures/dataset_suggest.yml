http_interactions:
- request:
    method: get
    uri: https://api.gbif.org/v1/dataset/suggest?q=Amazon&limit=100&type=OCCURRENCE
    body:
      encoding: ''
      string: ''
    headers:
      Accept-Encoding: gzip, deflate
      Accept: application/json, text/xml, application/xml, */*
      User-Agent: r-curl/3.3 crul/0.7.4 rOpenSci(rgbif/1.2.0.9515)
      X-USER-AGENT: r-curl/3.3 crul/0.7.4 rOpenSci(rgbif/1.2.0.9515)
  response:
    status:
      status_code: '200'
      message: OK
      explanation: Request fulfilled, document follows
    headers:
      status: HTTP/1.1 200 OK
      date: Tue, 07 May 2019 00:18:17 GMT
      content-type: application/json
      access-control-allow-origin: '*'
      access-control-allow-methods: HEAD, GET, POST, DELETE, PUT, OPTIONS
      server: Jetty(9.3.z-SNAPSHOT)
      cache-control: public, max-age=3601
      x-varnish: 271454597 285312133
      age: '0'
      via: 1.1 varnish (Varnish/5.2)
      accept-ranges: bytes
      content-length: '32269'
      connection: keep-alive
    body:
      encoding: ASCII-8BIT
      string: 
  recorded_at: 2019-05-07 00:18:17 GMT
  recorded_with: vcr/0.2.6, webmockr/0.3.4.9100
