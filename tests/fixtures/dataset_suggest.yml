http_interactions:
- request:
    method: get
    uri: https://api.gbif.org/v1/dataset/suggest?q=Amazon&limit=100&type=OCCURRENCE
    body:
      encoding: ''
      string: ''
    headers:
      Accept-Encoding: gzip, deflate
      Accept: application/json, text/xml, application/xml, */*
      User-Agent: r-curl/4.3 crul/0.9.0 rOpenSci(rgbif/2.1.0)
      X-USER-AGENT: r-curl/4.3 crul/0.9.0 rOpenSci(rgbif/2.1.0)
  response:
    status:
      status_code: '200'
      message: OK
      explanation: Request fulfilled, document follows
    headers:
      status: HTTP/1.1 200 OK
      date: Wed, 12 Feb 2020 06:01:22 GMT
      content-type: application/json
      access-control-allow-origin: '*'
      access-control-allow-methods: HEAD, GET, POST, DELETE, PUT, OPTIONS
      server: Jetty(9.3.z-SNAPSHOT)
      cache-control: public, max-age=3601
      x-varnish: 535036809 469213644
      age: '1'
      via: 1.1 varnish (Varnish/5.2)
      accept-ranges: bytes
      content-length: '33960'
      connection: keep-alive
    body:
      encoding: ASCII-8BIT
      file: no
      string: 
  recorded_at: 2020-02-12 06:01:25 GMT
  recorded_with: vcr/0.4.0, webmockr/0.5.0
