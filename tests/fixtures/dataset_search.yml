http_interactions:
- request:
    method: get
    uri: https://api.gbif.org/v1/dataset/search?limit=100&type=OCCURRENCE
    body:
      encoding: ''
      string: ''
    headers:
      Accept-Encoding: gzip, deflate
      Accept: application/json, text/xml, application/xml, */*
      User-Agent: r-curl/4.3 crul/1.0.0 rOpenSci(rgbif/3.4.0.95)
      X-USER-AGENT: r-curl/4.3 crul/1.0.0 rOpenSci(rgbif/3.4.0.95)
  response:
    status:
      status_code: '200'
      message: OK
      explanation: Request fulfilled, document follows
    headers:
      status: 'HTTP/2 200 '
      vary: Origin, Access-Control-Request-Method, Access-Control-Request-Headers
      x-content-type-options: nosniff
      x-xss-protection: 1; mode=block
      pragma: no-cache
      expires: '0'
      x-frame-options: DENY
      content-type: application/json
      date: Tue, 08 Dec 2020 23:53:31 GMT
      cache-control: public, max-age=600
      x-varnish: '482836519'
      age: '0'
      via: 1.1 varnish (Varnish/6.0)
      accept-ranges: bytes
    body:
      encoding: ASCII-8BIT
      file: no
      string: {"offset":0,"limit":100,"endOfRecords":false,"count":20024,"results":[{"key":"4fa7b334-ce0d-4e88-aaae-2e0c138d049e","title":"EOD - eBird Observation Dataset","doi":"10.15468/aomfnb","description":"eBird is a collective enterprise that takes a novel approach to citizen science by developing cooperative partnerships among experts in a wide range of fields: population ecologists, conservation biologists, quantitative ecologists, statisticians, computer scientists, GIS and informatics specialists, application developers, and data administrators. Managed by the Cornell Lab of Ornithology eBird’s goal is to increase data quantity through participant recruitment and engagement globally, but also to quantify and control for data quality issues such as observer variability, imperfect detection of species, and both spatial and temporal bias in data collection. eBird data are openly available and used by a broad spectrum of students, teachers, scientists, NGOs, government agencies, land managers, and policy makers. The result is that eBird has become a major source of biodiversity data, increasing our knowledge of the dynamics of species distributions, and having a direct impact on the conservation of birds and their habitats.","type":"OCCURRENCE","hostingOrganizationKey":"e2e717bf-551a-4917-bdc9-4fa0f342c530","hostingOrganizationTitle":"Cornell Lab of Ornithology","publishingCountry":"US","publishingOrganizationKey":"e2e717bf-551a-4917-bdc9-4fa0f342c530","publishingOrganizationTitle":"Cornell Lab of Ornithology","license":"http://creativecommons.org/publicdomain/zero/1.0/legalcode","decades":[1810,1820,1830,1840,1850,1860,1870,1880,1890,1900,1910,1920,1930,1940,1950,1960,1970,1980,1990,2000,2010],"keywords":["Occurrence","Observation"],"recordCount":705008469},{"key":"38b4c89f-584c-41bb-bd8f-cd1def33e92f","title":"Artportalen (Swedish Species Observation System)","doi":"10.15468/kllkyl","description":"Artportalen (Swedish Species Observation System) – formerly recognized as Artdata - is a website for reporting and retrieving information on observations of Sweden’s plants, animals and fungi. Observations are entered individually or into several thousand subsets/projects (some of which are individually searchable) by individuals and NGOs (95% of data), by public authorities or agencies, and by corporate enterprises. An observation may include not only the species identity, reporter identity, location and date but additional information such as habitat type and weather can also be entered. Ca. 93% of all data contained in the dataset is unrestricted, the remainder requiring special log-in credentials.\nArtportalen (Swedish Species Observation System) covers 30 000 Swedish species out of approximately 60 000 in total recorded in the country, including plants (12% of data representing flowering plants and mosses), vertebrates (3 % fishes and herptiles, 74% birds, 0.2% mammals), invertebrates (7%) and fungi (4%). 80% of all data represent observations made from 2001-present, and almost all remaining observations refer to the period 1951-2000. Taxa, nomenclature and hierarchy are sourced from the Swedish Taxonomic Database (Dyntaxa).  \nArtportalen is developed and operated by the Swedish Species Information Centre (ArtDatabanken) at the Swedish University of Agricultural Sciences, on behalf of the Swedish Environmental Protection Agency","type":"OCCURRENCE","hostingOrganizationKey":"4c415e40-1e21-11de-9e40-a0d6ecebb8bf","hostingOrganizationTitle":"GBIF-Sweden","publishingCountry":"SE","publishingOrganizationKey":"b8323864-602a-4a7d-9127-bb903054e97d","publishingOrganizationTitle":"SLU Artdatabanken","license":"http://creativecommons.org/publicdomain/zero/1.0/legalcode","keywords":["Occurrence","Observation"],"recordCount":78826309},{"key":"8a863029-f435-446a-821e-275f4f641165","title":"Observation.org, Nature data from around the World","doi":"10.15468/5nilie","description":"This dataset contains occurrence data of flora and fauna species. From the Netherlands on a 5 x 5 km scale, data from other countries are exact. Observations from Belgium are excluded and can be accessed on GBIF through Natuurpunt and Natagora.  It summarizes the observations recorded by >175.000 volunteers.","type":"OCCURRENCE","hostingOrganizationKey":"396d5f30-dea9-11db-8ab4-b8a03c50a862","hostingOrganizationTitle":"Naturalis Biodiversity Center","publishingCountry":"NL","publishingOrganizationKey":"c8d737e0-2ff8-42e8-b8fc-6b805d26fc5f","publishingOrganizationTitle":"Observation.org","license":"http://creativecommons.org/licenses/by-nc/4.0/legalcode","decades":[1900,1910,1920,1930,1940,1950,1960,1970,1980,1990,2000,2010,2020],"keywords":["Bugs","Lichens","Plantlice","Mushrooms","Orthoptera","Algae","Mosses","Birds","Plants","Mammals","Moths","Dragonflies","Butterflies","Molluscs","Beetles","Reptiles and amphibians","Fish","Cicadas","Diptera","Weeds","occurrence","Observation"],"recordCount":39969765},{"key":"95db4db8-f762-11e1-a439-00145eb45e9a","title":"DOF - Observations from the Danish Ornithological Society","doi":"10.15468/tww7cj","description":"<p>DOFbasen is an online database for bird observations in Denmark (www.dofbasen.dk), administrated by\n                Dansk Ornitologisk Forening DOF/BirdLife Denmark.\n                DOF is a NGO with ca. 16,000 members working for increasing the knowledge and protection of birds and\n                their habitats in Denmark and abroad (www.dof.dk).</p>\n<p>The data are collected by volunteers and apart from bird observations also includes observations of\n                mammals, amphibians, reptiles and butterflies. Most data are casual records, meaning that not all\n                species and individuals seen by the observer necessarily have been reported. Rare and unusual bird\n                observations are subjected to quality assessment by two Rarity Committees and observations under\n                evaluation or dismissed are not included in this dataset.</p>\n<p>The data can be used freely for non-profit purposes including scientific analysis if cited\n                appropriately. We would appreciate receiving copies of any publications using our data to use for\n                motivating the volunteers in their data collection. All images and other media associated with the\n                records are copyright of the observer.</p>\n<p>A small number of vulnerable breeding bird observations have their precision blurred by rounding the\n                coordinates and setting the uncertainty to 25 km.</p>\n<p>The dataset is updated on a weekly basis, but not including data with an observation date within the\n                last 60 days.</p>","type":"OCCURRENCE","hostingOrganizationKey":"8b734449-479a-4924-8f7a-9a2a64112f8f","hostingOrganizationTitle":"Danish Ornithological Society","publishingCountry":"DK","publishingOrganizationKey":"8b734449-479a-4924-8f7a-9a2a64112f8f","publishingOrganizationTitle":"Danish Ornithological Society","license":"http://creativecommons.org/licenses/by-nc/4.0/legalcode","decades":[1400,1500,1600,1700,1800,1810,1820,1830,1840,1850,1860,1870,1880,1890,1900,1910,1920,1930,1940,1950,1960,1970,1980,1990,2000,2010,2020],"keywords":["Animalia","DOFbasen","Europe","DOF","DENMARK","Occurrence","Observation"],"recordCount":25020594},{"key":"b124e1e0-4755-430f-9eab-894f25a9b59c","title":"Norwegian Species Observation Service","doi":"10.15468/zjbzel","description":"Citizen science species observations from the Species Observation Service in Norway (Artsobservasjoner).","type":"OCCURRENCE","hostingOrganizationKey":"d3978a37-635a-4ae3-bb85-7b4d41bc0b88","hostingOrganizationTitle":"The Norwegian Biodiversity Information Centre (NBIC)","publishingCountry":"NO","publishingOrganizationKey":"d3978a37-635a-4ae3-bb85-7b4d41bc0b88","publishingOrganizationTitle":"The Norwegian Biodiversity Information Centre (NBIC)","license":"http://creativecommons.org/licenses/by/4.0/legalcode","keywords":["Occurrence","Observation","cs","citizen science"],"recordCount":23983783},{"key":"50c9509d-22c7-4a22-a47d-8c48425ef4a7","title":"iNaturalist Research-grade Observations","doi":"10.15468/ab3s5x","description":"<p>Observations from iNaturalist.org, an online social network of people sharing biodiversity information to help each other learn about nature. iNaturalist is a joint initiative of the California Academy of Sciences and the National Geographic Society.</p>\n<p>Observations included in this archive met the following requirements:</p>\n<p>* Published under one of the following licenses or waivers:\n        1) http://creativecommons.org/publicdomain/zero/1.0/, 2) http://creativecommons.org/licenses/by/4.0/, 3) http://creativecommons.org/licenses/by-nc/4.0/</p>\n<p>* Achieved one of following iNaturalist quality grades: Research</p>\n<p>* Created on or before 2020-11-26 18:00:45 -0800</p>\n<p>You can view observations meeting these requirements at https://www.inaturalist.org/observations?created_d2&#61;2020-11-26&#43;18%3A00%3A45&#43;-0800&amp;license&#61;CC0%2CCC-BY%2CCC-BY-NC&amp;quality_grade&#61;research</p>","type":"OCCURRENCE","hostingOrganizationKey":"28eb1a3f-1c15-4a95-931a-4af90ecb574d","hostingOrganizationTitle":"iNaturalist.org","publishingCountry":"US","publishingOrganizationKey":"28eb1a3f-1c15-4a95-931a-4af90ecb574d","publishingOrganizationTitle":"iNaturalist.org","license":"http://creativecommons.org/licenses/by-nc/4.0/legalcode","decades":[1000,1100,1200,1300,1400,1500,1600,1700,1800,1810,1820,1830,1840,1850,1860,1870,1880,1890,1900,1910,1920,1930,1940,1950,1960,1970,1980,1990,2000,2010,2020],"recordCount":21960324},{"key":"75956ee6-1a2b-4fa3-b3e8-ccda64ce6c2d","title":"INPN - Données flore des CBN agrégées par la FCBN","doi":"10.15468/omae84","description":"Dès la création de leur Fédération (FCBN - www.fcbn.fr) en 1999, les onze Conservatoires botaniques nationaux (CBN) ont exprimé la volonté collective de constituer un système d’information national pour mettre en commun leurs données, et celles de leurs partenaires, sur la flore, la fonge et les végétations-habitats. C’est réellement en 2010 avec le lancement de l’établissement du Format Standard de Données sur la flore (FSD Flore), conçu comme le « format commun de données de la Fédération des CBN », que la démarche a été initiée. Il s’en est suivi de nombreux échanges ayant permis de finaliser le format, de le tester sur les premiers jeux de données, d’établir une charte d’adhésion au projet et d’élaborer le cadrage final de l’exercice d’agrégation des données. Le projet s’est concrétisé au premier trimestre 2013 à travers la mise au format des données détenues par les CBN et leur intégration dans le Système d’Information de la FCBN (SI-Flore). A l’horizon de l’année 2014, il résulte, de ce projet structurant, que la FCBN dispose d’un système d’information d’envergure nationale et fort de plus de 20 millions de données d’observation sur la flore de France. Les données centralisées ont été consolidées sur la base du référentiel TAXREF 5.0 et une mise à jour est prévue pour fin 2015.","type":"OCCURRENCE","hostingOrganizationKey":"5d5e5d82-076c-4e9a-b5b0-c88d1b691a6a","hostingOrganizationTitle":"GBIF France","publishingCountry":"FR","publishingOrganizationKey":"1928bdf0-f5d2-11dc-8c12-b8a03c50a862","publishingOrganizationTitle":"UMS PatriNat (OFB-CNRS-MNHN), Paris","license":"http://creativecommons.org/licenses/by/4.0/legalcode","decades":[1400,1500,1600,1700,1800,1810,1820,1830,1840,1850,1860,1870,1880,1890,1900,1910,1920,1930,1940,1950,1960,1970,1980,1990,2000,2010],"keywords":["Flore, Flora, Conservatoire Botanique National, CBN, FCBN, observation","Occurrence"],"recordCount":20999334},{"key":"906e6978-e292-4a8b-9c39-adf6bb0f3323","title":"Southern African Bird Atlas Project 2","doi":"10.15468/8x5b7h","description":"The Second Southern African Bird Atlas Project (SABAP2) is the most important bird conservation project in the region. It holds this status because all other conservation initiatives depend on the results of the bird atlas, to a greater or lesser extent. You cannot determine the conservation status of a species unless you know its range and how this is changing. So red-listing depends on the results of this project. So does the selection of sites and habitats critical to bird conservation. SABAP2 is the follow-up project to the Southern African Bird Atlas Project (for which the acronym was SABAP, and which is now referred to as SABAP1). This first bird atlas project took place from 1987-1991. The second bird atlas project started on 1 July 2007 and plans to run indefinitely. The current project is a partnership between the Animal Demography Unit at the University of Cape Town, BirdLife South Africa and the South African National Biodiversity Institute (SANBI). The project aims to map the distribution and relative abundance of birds in southern Africa and the atlas area includes South Africa, Lesotho and Swaziland. SABAP2 was launched in Namibia in May 2012.\n\nThe field work for this project is done by more than one thousand nine hundred volunteers, known as citizen scientists - they are making a huge contribution to the conservation of birds and their habitats. The unit of data collection is the pentad, five minutes of latitude by five minutes of longitude, squares with sides of roughly 9 km. There are 17339 pentads in the original atlas area of South Africa, Lesotho and Swaziland, and a further 10600 in Namibia, 4900 in Zimbabawe and 6817 in Kenya.\n\nAt the end of April 2016, the SABAP2 database contained more than 153,000 checklists. The milestone of eight million records of bird distribution in the SABAP2 database was reached on 14 April 2016, less than eight months after reaching seven million on 22 August 2015, which in turn was 10 months after the six million record milestone. It had taken two days less than a year to get from five million to six million, the fastest million records ever up to then. So doing a million in just less than eight months is awesome. More than 75% of the original SABAP2 atlas area (ie South Africa, Lesotho and Swaziland) has at least one checklist at this stage in the project's development. More than 32% of pentads have four or more lists.\n\nThe most pressing data collection needs are to get coverage as complete as possible, and to try to build a foundation of four checklists per pentad. On top of this foundation the skyscraper of checklists can be built. Ideally, we would like checklists representing every month of the year. We would also like to have lots of checklists for each pentad in every year.\n\nThis dataset upload includes data from both the Full protocol submissions, as well as adhoc and incidental sightings that have been submitted to the project. Full Protocol submissions are done using a defined protocol, spatial and temporal. Adhoc and incidental (incid) sightings are single occurrence sightings within the same spatial resolution. The protocol type can be defined from the catalogNumber of each record.","type":"OCCURRENCE","hostingOrganizationKey":"dd862d06-e6e9-4ab9-bc86-c875cc148c1f","hostingOrganizationTitle":"Animal Demography Unit, Department of Zoology, University of Cape Town","publishingCountry":"ZA","publishingOrganizationKey":"dd862d06-e6e9-4ab9-bc86-c875cc148c1f","publishingOrganizationTitle":"Animal Demography Unit, Department of Zoology, University of Cape Town","license":"http://creativecommons.org/licenses/by/4.0/legalcode","decades":[2000,2010,2020],"keywords":["Occurrence","Observation"],"recordCount":14541771},{"key":"e7cbb0ed-04c6-44ce-ac86-ebe49f4efb28","title":"Waarnemingen.be - Bird occurrences in Flanders and the Brussels Capital Region, Belgium","doi":"10.15468/0mbhvd","description":"<p>Waarnemingen.be - Bird occurrences in Flanders and the Brussels Capital Region, Belgium is a species occurrence dataset published by Natuurpunt. The dataset contains over 12.8 million bird (Aves) occurrences of 445 naturally occurring species (native, vagrant or migrant species), recorded by volunteers (citizen scientists), mainly since 2008. The occurrences are derived from the database http://www.waarnemingen.be, hosted at the nature conservation NGO Natuurpunt in collaboration with Stichting Natuurinformatie. Standardized information regarding sex, lifeStage, behavior, occurrenceRemarks, and samplingProtocol are included as well.</p>\n<p>Generalized and/or withheld information: location information is generalized to 5 x 5 km² Universal Transverse Mercator (UTM) grid cells. Observer name, exact XY-coordinates, toponyms, and photographs are not included in the published dataset, but are known in the source database.</p>\n<p>To allow anyone to use this dataset, we have released the data to the public domain under a Creative Commons Zero waiver (http://creativecommons.org/publicdomain/zero/1.0/). We would appreciate however, if you read and follow these norms for data use (http://www.natuurpunt.be/normen-voor-datagebruik) and provide a link to the original dataset (https://doi.org/10.15468/0mbhvd) whenever possible. If you use these data for a scientific paper, please cite the dataset following the applicable citation norms and/or consider us for co-authorship. We are always interested to provide more information or know how you have used the data, so please contact us via the contact information provided in the metadata or natuurdata@natuurpunt.be.</p>\n<p>The publication of this dataset is supported by INBO and funded by Research Foundation - Flanders (FWO) as part of the Belgian contribution to LifeWatch.</p>","type":"OCCURRENCE","hostingOrganizationKey":"1cd669d0-80ea-11de-a9d0-f1765f95f18b","hostingOrganizationTitle":"Research Institute for Nature and Forest (INBO)","publishingCountry":"BE","publishingOrganizationKey":"4d3ceea8-5699-439d-a899-decac9cbbdac","publishingOrganizationTitle":"Natuurpunt","license":"http://creativecommons.org/publicdomain/zero/1.0/legalcode","decades":[1700,1800,1810,1820,1830,1840,1850,1860,1870,1880,1890,1900,1910,1920,1930,1940,1950,1960,1970,1980,1990,2000,2010],"keywords":["Occurrence","Observation","observation.org","observations","citizen science","waarnemingen.be","birds","Aves","distribution","Natuurpunt"],"recordCount":12811851},{"key":"0645ccdb-e001-4ab0-9729-51f1755e007e","title":"OEH Atlas of NSW Wildlife","doi":"10.15468/14jd9g","description":"Records from OEH&#39;s Atlas of NSW Wildlife database of flora and fauna sightings. Includes records from other custodians such as the National Herbarium of NSW, Forests NSW, Australian Bird and Bat Banding Scheme and the Australian Museum.","type":"OCCURRENCE","hostingOrganizationKey":"3c5e4331-7f2f-4a8d-aa56-81ece7014fc8","hostingOrganizationTitle":"Atlas of Living Australia","publishingCountry":"AU","publishingOrganizationKey":"5eee35c2-c5b7-4f62-a527-09eec0c54f22","publishingOrganizationTitle":"Office of Environment & Heritage","license":"http://creativecommons.org/licenses/by/4.0/legalcode","recordCount":12510150},{"key":"292a71df-588b-48fa-9ab5-29ae868ba88c","title":"Finnish Bird Ringing and Recovery Database","doi":"10.15468/kht1r3","description":"Database of birds ringed in Finland and all reported encounters of the birds.","type":"OCCURRENCE","hostingOrganizationKey":"04fd2e13-6881-4e5c-9dd1-8fdd9ab993c1","hostingOrganizationTitle":"Finnish Biodiversity Information Facility","publishingCountry":"FI","publishingOrganizationKey":"04fd2e13-6881-4e5c-9dd1-8fdd9ab993c1","publishingOrganizationTitle":"Finnish Biodiversity Information Facility","license":"http://creativecommons.org/licenses/by/4.0/legalcode","decades":[1900,1910,1920,1930,1940,1950,1960,1970,1980,1990,2000,2010,2020,2030,2040,2050,2100],"keywords":["Occurrence","Observation"],"recordCount":11930748},{"key":"4bf1cca8-832c-4891-9e17-7e7a65b7cc81","title":"BirdLife Australia, Birdata","doi":"10.15468/dchsnk","description":"Birdata is your gateway to BirdLife Australia data including the Atlas of Australian Birds and Nest record scheme. You can use Birdata to draw bird distribution maps and generate bird lists for any part of the country. You can also join in the Atlas and submit survey information to this important environmental database.\n\nPlease note that Birdlife data is available under a non-commercial license and consultants should contact Birdlife directly to arrange access to full resolution records for commercial purposes.","type":"OCCURRENCE","hostingOrganizationKey":"3c5e4331-7f2f-4a8d-aa56-81ece7014fc8","hostingOrganizationTitle":"Atlas of Living Australia","publishingCountry":"AU","publishingOrganizationKey":"75ed4c27-9997-41c4-81a4-675b4282ffad","publishingOrganizationTitle":"BirdLife Australia","license":"http://creativecommons.org/licenses/by-nc/4.0/legalcode","recordCount":11635460},{"key":"67fabcac-a638-40a6-9bea-aeca8aced9f1","title":"The Danish Environmental Portal, species and habitats-database \"Danmarks Miljøportals Naturdatabase\"","doi":"10.15468/ku2f82","description":"The Danish Environmental Portal: One gateway to data on nature and the environment in Denmark. This dataset is an extract of species observations from the nationwide &#34;Naturdatabasen&#34;. Data are mainly collected by municipalities and governmental organizations (the Danish Environmental Protection Agency), in nature monitoring and other administrative tasks and projects.","type":"OCCURRENCE","hostingOrganizationKey":"299958e0-4c06-11d8-b290-b8a03c50a862","hostingOrganizationTitle":"Danish Biodiversity Information Facility","publishingCountry":"DK","publishingOrganizationKey":"1a4e6112-b3af-402e-b29f-c2ade2167f72","publishingOrganizationTitle":"Miljøstyrelsen / The Danish Environmental Protection Agency","license":"http://creativecommons.org/licenses/by/4.0/legalcode","keywords":["Occurrence","Occurrence"],"recordCount":11518526},{"key":"6ac3f774-d9fb-4796-b3e9-92bf6c81c084","title":"naturgucker","doi":"10.15468/uc1apo","description":"naturgucker.de / enjoynature.net is a rapidly growing social network with several millions of observations of wild plants and animals, thus naturgucker.de / enjoynature.net supports and promotes nature conservancy. naturgucker.de / enjoynature.net offers nature observers (mainly citizen scientists) a personal data center for their data in which they can pool and manage all their observations and nature photographs for the surrounding region, or even worldwide from their vacations. In addition, beginners can find a myriad of information, such as hundreds of thousands of photographs, up to date distribution maps, tenthousands observation areas with helpful hints, and a strong community in naturgucker.de /enjoaynature.net.","type":"OCCURRENCE","hostingOrganizationKey":"bb646dff-a905-4403-a49b-6d378c2cf0d9","hostingOrganizationTitle":"naturgucker.de","publishingCountry":"DE","publishingOrganizationKey":"bb646dff-a905-4403-a49b-6d378c2cf0d9","publishingOrganizationTitle":"naturgucker.de","license":"http://creativecommons.org/licenses/by/4.0/legalcode","recordCount":10052553},{"key":"14d5676a-2c54-4f94-9023-1e8dcd822aa0","title":"Pl@ntNet automatically identified occurrences","doi":"10.15468/mma2ec","description":"Pl&#64;ntNet is a participatory botanical observation platform allowing to identify plants from photos (using deep learning) and to share the observations with the community. The platform has three main front-ends: Pl&#64;ntNet androïd (http://bit.ly/1K4D1eU), Pl&#64;ntNet iOS (http://apple.co/2cMtWgu) and Pl&#64;ntNet web (https://identify.plantnet.org/). Pl&#64;ntNet was founded in 2010 by a consortium of four French research organisms (CIRAD, Inria, INRAE and IRD) and is now open to other members. More information about Pl&#64;ntNet can be found at https://plantnet.org/.  \n\nThe occurrences in this collection are Pl&#64;ntNet observations that have been identified only by the deep learning algorithm but which the algorithm confidence was sufficiently high to consider them as valid.","type":"OCCURRENCE","hostingOrganizationKey":"da86174a-a605-43a4-a5e8-53d484152cd3","hostingOrganizationTitle":"Pl@ntNet","publishingCountry":"FR","publishingOrganizationKey":"da86174a-a605-43a4-a5e8-53d484152cd3","publishingOrganizationTitle":"Pl@ntNet","license":"http://creativecommons.org/licenses/by/4.0/legalcode","keywords":["Occurrence","Observation","Occurrence"],"recordCount":9634639},{"key":"f06fef3c-6ea6-4345-b724-a1b8e490dc55","title":"Anillamiento SEO_Bird ringing","doi":"10.15470/1byo33","description":"Scientific bird ringing is a research method based on the individual marking of birds.\nBird Ringing involves the marking of individual birds by highly trained ornithologists to provide vitaldata on migration patterns, demography\nand ecological processes.","type":"OCCURRENCE","hostingOrganizationKey":"6c4a0bb0-2a4d-11d8-aa2d-b8a03c50a862","hostingOrganizationTitle":"GBIF-Spain","publishingCountry":"ES","publishingOrganizationKey":"2d1fabab-9504-4cd8-aa19-79627dd3b010","publishingOrganizationTitle":"Sociedad Española de Ornitología (SEO/BirdLife)","license":"http://creativecommons.org/licenses/by-nc/4.0/legalcode","decades":[1950,1960,1970,1980,1990,2000,2010],"keywords":["anillamiento científico","España","Bird ringing","birds","aves","bird banding","Spain","Specimen"],"recordCount":9435714},{"key":"83e20573-f7dd-4852-9159-21566e1e691e","title":"Bird tracking - GPS tracking of Lesser Black-backed Gulls and Herring Gulls breeding at the southern North Sea coast","doi":"10.15468/02omly","description":"Bird tracking - GPS tracking of Lesser Black-backed Gulls and Herring Gulls breeding at the southern North Sea coast is a species occurrence dataset published by the Research Institute for Nature and Forest (INBO) and described (v5.5) in Stienen et al. 2016 (https://doi.org/10.3897/zookeys.555.6173). The dataset contains close to 8.5 million occurrences (GPS fixes) recorded by GPS trackers mounted on 108 Lesser Black-backed Gulls and 37 Herring Gulls breeding at the Belgian and Dutch coast. The trackers are developed by the University of Amsterdam Bird Tracking System (UvA-BiTS, http://www.uva-bits.nl) and allow to study the gulls' habitat use and migration behaviour in great detail. Our bird tracking network is operational since 2013 and is maintained and used by the INBO, the Flanders Marine Institute (VLIZ), UvA-BiTS, Ghent University (UGent), and the University of Antwerp (UA). See the dataset metadata for contact information, scope, and methodology. Issues with the dataset can be reported at https://github.com/inbo/data-publication/tree/master/datasets/bird-tracking-gull-occurrences\nThe following information is not included in the dataset and available upon request: outliers, speed, temperature, barometric pressure, accelerometer data, GPS metadata (fix time, number of satellites used, vertical accuracy), bird biometrics data measured during tagging (bill length, bill depth, tarsus length, wing length, body mass), life history data (day of ringing, age, resightings by volunteers), as well as growth data of chicks.\nTo allow anyone to use this dataset, we have released the data to the public domain under a Creative Commons Zero waiver (http://creativecommons.org/publicdomain/zero/1.0/). We would appreciate however, if you read and follow these norms for data use (http://www.inbo.be/en/norms-for-data-use) and provide a link to the original dataset (https://doi.org/10.15468/02omly) whenever possible. If you use these data for a scientific paper, please cite the dataset following the applicable citation norms and/or consider us for co-authorship. We are always interested to know how you have used or visualized the data, or to provide more information, so please contact us via the contact information provided in the metadata, opendata@inbo.be or https://twitter.com/LifeWatchINBO.\nThe bird tracking network used to collect these data is set up and maintained by the INBO and VLIZ as part of the Flemish contribution to LifeWatch.","type":"OCCURRENCE","hostingOrganizationKey":"1cd669d0-80ea-11de-a9d0-f1765f95f18b","hostingOrganizationTitle":"Research Institute for Nature and Forest (INBO)","publishingCountry":"BE","publishingOrganizationKey":"1cd669d0-80ea-11de-a9d0-f1765f95f18b","publishingOrganizationTitle":"Research Institute for Nature and Forest (INBO)","license":"http://creativecommons.org/publicdomain/zero/1.0/legalcode","decades":[2010],"keywords":["Occurrence","Observation","","Larus fuscus","Herring Gull","animal movement","LifeWatch","bird tracking","Larus argentatus","UvA-BiTS","Lesser Black-backed Gull","habitat use","migration","GPS tracking","MachineObservation"],"recordCount":8474604},{"key":"821cc27a-e3bb-4bc5-ac34-89ada245069d","title":"NMNH Extant Specimen Records","doi":"10.15468/hnhrg3","description":"Public records of accessioned specimens and observations curated by the National Museum of Natural History, Smithsonian Institution. These data are from the Departments of Botany, Entomology, Invertebrate Zoology and Vertebrate Zoology (Amphibians &amp; Reptiles, Birds, Fishes, and Mammals) and include more than 270,000 primary type specimen records.","type":"OCCURRENCE","hostingOrganizationKey":"bc092ff0-02e4-11dc-991f-b8a03c50a862","hostingOrganizationTitle":"National Museum of Natural History, Smithsonian Institution","publishingCountry":"US","publishingOrganizationKey":"bc092ff0-02e4-11dc-991f-b8a03c50a862","publishingOrganizationTitle":"National Museum of Natural History, Smithsonian Institution","license":"http://creativecommons.org/publicdomain/zero/1.0/legalcode","keywords":["Occurrence","Specimen","Occurrence"],"recordCount":8592024},{"key":"dd238f50-f594-4e51-82af-033227ccab55","title":"Flore du Bassin parisien (CBNBP)","doi":"10.15468/vctras","description":"Jeux de données du CBNBP et de son réseau (bénévoles, associations, autres structures professionnelles). Elles intègrent principalement des données de flore vasculaire mais aussi des bryophytes, des algues notamment charophytes, des champignons y compris les lichens.","type":"OCCURRENCE","hostingOrganizationKey":"1928bdf0-f5d2-11dc-8c12-b8a03c50a862","hostingOrganizationTitle":"UMS PatriNat (OFB-CNRS-MNHN), Paris","publishingCountry":"FR","publishingOrganizationKey":"1928bdf0-f5d2-11dc-8c12-b8a03c50a862","publishingOrganizationTitle":"UMS PatriNat (OFB-CNRS-MNHN), Paris","license":"http://creativecommons.org/licenses/by-nc/4.0/legalcode","keywords":["Occurrence"],"recordCount":7911814},{"key":"4f70108a-dda7-4e8b-8298-babaee5182c3","title":"Bird Ringing Centre in Sweden (NRM)","doi":"10.15468/cghs8p","description":"This database contains information about bird ringing in Sweden.","type":"OCCURRENCE","hostingOrganizationKey":"4c415e40-1e21-11de-9e40-a0d6ecebb8bf","hostingOrganizationTitle":"GBIF-Sweden","publishingCountry":"SE","publishingOrganizationKey":"4c415e40-1e21-11de-9e40-a0d6ecebb8bf","publishingOrganizationTitle":"GBIF-Sweden","license":"http://creativecommons.org/publicdomain/zero/1.0/legalcode","keywords":["Occurrence"],"recordCount":7891989},{"key":"1e266c3d-92ef-4d5a-8e4a-c04742c772c3","title":"UK Butterfly Monitoring Scheme (UKBMS)","doi":"10.15468/gmqvmk","description":"The UK Butterfly Monitoring Scheme (UKBMS) generates butterfly count data that is used to assess trends in the abundance of butterflies within the United Kingdom and for conservation policy and research. This dataset includes records from traditional fixed transect sites, often called 'Pollard Walks'; data from the Wider Countryside Butterfly Survey is excluded and available within a separate dataset – see https://registry.nbnatlas.org/public/show/dr1383\n\nThe surveys are undertaken by volunteers and other recorders, who contribute their data free of charge. Where you use the information you must acknowledge the UKBMS using the following attribution statement: Contains UK Butterfly Monitoring Scheme (UKBMS) data © copyright and database right Butterfly Conservation, the Centre for Ecology & Hydrology, British Trust for Ornithology, and the Joint Nature Conservation Committee.","type":"OCCURRENCE","hostingOrganizationKey":"07f617d0-c688-11d8-bf62-b8a03c50a862","hostingOrganizationTitle":"National Biodiversity Network","publishingCountry":"GB","publishingOrganizationKey":"179ccc1f-7315-4925-9725-69377ca8b6d4","publishingOrganizationTitle":"UK Butterfly Monitoring Scheme","license":"http://creativecommons.org/licenses/by/4.0/legalcode","decades":[1970,1980,1990,2000,2010],"recordCount":7170466},{"key":"8ea4250e-0ff0-44f8-812e-bffc3b9ba2a4","title":"Floristic records from survey studies of the Bayerisches Landesamt für Umwelt","doi":"10.15468/thgjx1","description":"http://wiki.bayernflora.de/web/Floristic_records_from_survey_studies_of_the_Bayerisches_Landesamt_f%C3%BCr_Umwelt","type":"OCCURRENCE","hostingOrganizationKey":"0674aea0-a7e1-11d8-9534-b8a03c50a862","hostingOrganizationTitle":"Staatliche Naturwissenschaftliche Sammlungen Bayerns","publishingCountry":"DE","publishingOrganizationKey":"0674aea0-a7e1-11d8-9534-b8a03c50a862","publishingOrganizationTitle":"Staatliche Naturwissenschaftliche Sammlungen Bayerns","license":"http://creativecommons.org/licenses/by/4.0/legalcode","recordCount":7131680},{"key":"82cb293c-f762-11e1-a439-00145eb45e9a","title":"Great Backyard Bird Count","doi":"10.15468/dml1pk","description":"The Great Backyard Bird Count (GBBC) is a late winter weekend survey of bird populations across the United States and Canada. Developed by the Cornell Lab of Ornithology and Audubon, the GBBC engages tens of thousands of participants. Data is collected with postal code or town geographical resolution. Started in 1998, the GBBC provides a place-based characterization of a given area through a checklist of birds observed at that location. Presently, GBBC collects approximately 50 thousand checklists annually during a 4-day period in mid-February.","type":"OCCURRENCE","hostingOrganizationKey":"95f1c5d0-8996-11d9-a962-b8a03c50a862","hostingOrganizationTitle":"Avian Knowledge Network","publishingCountry":"US","publishingOrganizationKey":"95f1c5d0-8996-11d9-a962-b8a03c50a862","publishingOrganizationTitle":"Avian Knowledge Network","license":"http://creativecommons.org/publicdomain/zero/1.0/legalcode","recordCount":7076556},{"key":"64dabd3c-4f34-4520-b9dd-d227a0bf1582","title":"Occurrence Data of Vascular Plants collected or compiled for the Flora of Bavaria","doi":"10.15468/osi63h","description":"http://wiki.bayernflora.de/web/Flora_of_Bavaria_%E2%94%80_occurrence_data_online","type":"OCCURRENCE","hostingOrganizationKey":"0674aea0-a7e1-11d8-9534-b8a03c50a862","hostingOrganizationTitle":"Staatliche Naturwissenschaftliche Sammlungen Bayerns","publishingCountry":"DE","publishingOrganizationKey":"0674aea0-a7e1-11d8-9534-b8a03c50a862","publishingOrganizationTitle":"Staatliche Naturwissenschaftliche Sammlungen Bayerns","license":"http://creativecommons.org/licenses/by/4.0/legalcode","recordCount":7005170},{"key":"37beb6ea-e591-41e3-b781-e384250dc42c","title":"Victorian Biodiversity Atlas","doi":"10.15468/khlfs3","description":"The Department of Environment, Land, Water & Planning works in partnership with a range of agencies and stakeholders to protect and preserve Victoria’s native landscape through a range of biodiversity, wildlife and community programs. \n\nWe manage threatened species conservation and recovery, biodiversity research, invasive species, and climate change adaptation strategies. - See more at: http://www.delwp.vic.gov.au/environment-and-wildlife#sthash.giDedj4S.dpuf\n\nThe Victorian Biodiversity Atlas (VBA) is the web-based information system designed to manage information about native and naturalised species occurring in Victoria. The system includes species attribute information, including origin and conservation status, along with more than six million records of species distribution and abundance. All the published records have been through the verification process of the VBA which includes review by a panel of Victorian experts. \n\nThe VBA includes the data submitted to DELWP from external sources as well as the Department’s own data collections from systematic surveys and general observations. The VBA replaces several legacy systems, including the Victorian Flora Site Database, the Atlas of Victorian Wildlife, the Aquatic Fauna Database and the Victorian Rare or Threatened Plant Population monitoring (VROTPop) systems. \n\nFor further information and access to the VBA please go to the DELWP website http://www.depi.vic.gov.au/environment-and-wildlife/biodiversity/victorian-biodiversity-atlas).","type":"OCCURRENCE","hostingOrganizationKey":"3c5e4331-7f2f-4a8d-aa56-81ece7014fc8","hostingOrganizationTitle":"Atlas of Living Australia","publishingCountry":"AU","publishingOrganizationKey":"a4ee8241-94f8-40b8-8c47-31aaf9430c90","publishingOrganizationTitle":"Victorian Department of Environment, Land, Water and Planning","license":"http://creativecommons.org/licenses/by/4.0/legalcode","recordCount":6905468},{"key":"040c5662-da76-4782-a48e-cdea1892d14c","title":"International Barcode of Life project (iBOL)","doi":"10.15468/inygc6","description":"<p>Established in 2008, the International Barcode of Life Consortium (iBOL, http://www.ibol.org/) is a research alliance of nations with the desire to transform biodiversity science by building the DNA barcode reference libraries, the sequencing facilities, the informatics platforms, the analytical protocols, and the international collaboration required to inventory and assess biodiversity.</p>\n<p>iBOL has overseen the completion of one major program, BARCODE 500K, and a second program, BIOSCAN runs for seven years from June 2019. The first program barcoded 500,000 species reflecting the investment of $150 million by research organizations in 25 nations. Building on this success, BIOSCAN will extend barcode coverage to 2.5 million species by 2025. This program will stimulate activation of the Planetary Biodiversity Mission (PBM) – iBOL’s final project. PBM is a research initiative that will deliver a comprehensive understanding of the composition and distribution of multi-cellular life by 2045.</p>\n<p>iBOL maintains the Barcode of Life Data System (BOLD, http://www.boldsystems.org/). BOLD is a cloud-based data storage and analysis platform developed at the Centre for Biodiversity Genomics in Canada. It consists of four main modules, a data portal, an educational portal, a registry of BINs (putative species), and a data collection and analysis workbench.</p>","type":"OCCURRENCE","hostingOrganizationKey":"fbca90e3-8aed-48b1-84e3-369afbd000ce","hostingOrganizationTitle":"GBIF Secretariat","publishingOrganizationKey":"b3bf3a83-1f68-4541-a03f-330d30d567f5","publishingOrganizationTitle":"The International Barcode of Life Consortium","license":"http://creativecommons.org/licenses/by/4.0/legalcode","recordCount":6825556},{"key":"a86201a4-fa20-44e5-ade2-68ea3563cfa8","title":"Macro-moth distribution records for the UK for the period pre 2000 from Butterfly Conservation","doi":"10.15468/xnm1lw","description":"Moth provisional distribution data for the period pre 2000 from the National Moth Recording Scheme led by Butterfly Conservation. The National Moth Recording Scheme provides a comprehensive network for recording the 2500+ species of moths in the UK, the Isle of Man and the Channel Islands, through which members of the public can contribute moth sightings to underpin conservation. The NMRS was launched in 2007 and was developed as part of the Moths Count project funded by the Heritage Lottery Fund with support from many other organisations and is now an ongoing recording scheme.","type":"OCCURRENCE","hostingOrganizationKey":"07f617d0-c688-11d8-bf62-b8a03c50a862","hostingOrganizationTitle":"National Biodiversity Network","publishingCountry":"GB","publishingOrganizationKey":"0d72dd7f-6f05-46af-85c2-8b6e77ce5534","publishingOrganizationTitle":"Butterfly Conservation","license":"http://creativecommons.org/licenses/by-nc/4.0/legalcode","decades":[1400,1500,1600,1700,1800,1810,1820,1830,1840,1850,1860,1870,1880,1890,1900,1910,1920,1930,1940,1950,1960,1970,1980,1990],"recordCount":6518294},{"key":"fa7e6ad8-0a2e-49f2-b95d-e9f1e380fadf","title":"Localización de táxones botánicos de interés para la identificación de hábitats de la REDIAM (Secretaría General de Medio Ambiente, Agua y Cambio Climático)","doi":"10.15470/zatyqi","description":"Localización de especies de flora andaluza procedente de la recopilación de diferentes contenidos de información disponibles en la REDIAM,siendo los principales: Mapa de usos y coberturas vegetales del suelo de Andalucía, 2007 (MUCVA2007); Cartografía y evaluación de la vegetación de la masa forestal de Andalucía (VEGE10); Inventario de árboles y arboledas singulares de Andalucía; Inventario y cartografía de los recursos etnobotánicos de Andalucía; Actuaciones gestionadas en EENNPP para el Plan de Recuperación de Artales en Andalucía; Estudio y conservación de las vides silvestres de Andalucía;Inventario, cartografía y caracterización de los Bosques Isla y Setos de Andalucía. Además se han incluido las localizaciones de especies disponibles en el Tercer Inventario Forestal Nacional (IFN3) (https://www.miteco.gob.es/es/biodiversidad/servicios/banco-datos-naturaleza/informacion-disponible/ifn3.aspx.","type":"OCCURRENCE","hostingOrganizationKey":"6c4a0bb0-2a4d-11d8-aa2d-b8a03c50a862","hostingOrganizationTitle":"GBIF-Spain","publishingCountry":"ES","publishingOrganizationKey":"799acb53-2764-4e89-9792-5fdb6f7d7d29","publishingOrganizationTitle":"Environmental Information Network of Andalusia (REDIAM), Regional Ministry for the Environment, Regional Government of Andalusia","license":"http://creativecommons.org/licenses/by/4.0/legalcode","keywords":["Occurrence","Observation","distribución","Flora","opendata","cubierta terrestre","flora","IDEAndalucía","distribución de las especies"],"recordCount":6468324},{"key":"83fdfd3d-3a25-4705-9fbe-3db1d1892b13","title":"Swiss National Databank of Vascular Plants","doi":"10.15468/7jffp3","description":"This dataset ist maintained by Info Flora (National Data and Information Center of Swiss Flora), a member of Info Species. It includes records of vascular plants from Switzerland and the adjacent area. Data sources include field observations provided by a large network of volunteer collaborators, environmental impact studies, national inventories (Red List strategy), museum collections, literature and academic work. The period covered by the data extends from 1880 to the present day. All data provided have been subject to a validation procedure.","type":"OCCURRENCE","hostingOrganizationKey":"23e067c0-a255-11da-beae-b8a03c50a862","hostingOrganizationTitle":"GBIF Swiss Node","publishingCountry":"CH","publishingOrganizationKey":"64ee55c9-570a-42af-b7da-3f13c6b4e5a9","publishingOrganizationTitle":"Swiss National Biodiversity Data and Information Centres – infospecies.ch","license":"http://creativecommons.org/licenses/by/4.0/legalcode","decades":[1880,1890,1900,1910,1920,1930,1940,1950,1960,1970,1980,1990,2000,2010,2020],"keywords":["Occurrence"],"recordCount":6144978},{"key":"e6fab7b3-c733-40b9-8df3-2a03e49532c1","title":"Flora von Deutschland (Phanerogamen)","doi":"10.15468/0fxsox","description":"Verbreitung der Farn- und Bluetenpflanzen in Deutschland, Vorkommensnachweise aggregiert auf Quadranten der Topographischen Karte 1 : 25000 (TK25 &#61; MTB), sowie in Zeitperioden , &lt;1950 - 1980&gt;, ","type":"OCCURRENCE","hostingOrganizationKey":"43cab2b0-0653-11d9-acb2-b8a03c50a862","hostingOrganizationTitle":"Bundesamt für Naturschutz / Netzwerk Phytodiversität Deutschland","publishingCountry":"DE","publishingOrganizationKey":"43cab2b0-0653-11d9-acb2-b8a03c50a862","publishingOrganizationTitle":"Bundesamt für Naturschutz / Netzwerk Phytodiversität Deutschland","license":"http://creativecommons.org/licenses/by-nc/4.0/legalcode","recordCount":5814340},{"key":"f2e389da-39c3-4f21-8d72-b7d574d924a9","title":"Finnish Floristic Database (Finnish Museum of Natural History Collections)","doi":"10.15468/kasmwk","description":"Occurrence data of plants from the collections and archives of the Finnish Museum of Natural History.","type":"OCCURRENCE","hostingOrganizationKey":"04fd2e13-6881-4e5c-9dd1-8fdd9ab993c1","hostingOrganizationTitle":"Finnish Biodiversity Information Facility","publishingCountry":"FI","publishingOrganizationKey":"04fd2e13-6881-4e5c-9dd1-8fdd9ab993c1","publishingOrganizationTitle":"Finnish Biodiversity Information Facility","license":"http://creativecommons.org/licenses/by/4.0/legalcode","decades":[1700],"keywords":["Occurrence"],"recordCount":5534356},{"key":"b5cdf794-8fa4-4a85-8b26-755d087bf531","title":"The vascular plants collection (P) at the Herbarium of the Muséum national d'Histoire Naturelle (MNHN - Paris)","doi":"10.15468/nc6rxy","description":"The French National Herbarium, estimated at 8 million\n\t\tpreserved specimens from around the world,\n\t\tbut particularly in France, Francophone Africa, New Caledonia,\n\t\tMadagascar, Southeast Asia, in French Guiana .\n\t\tIt also has important collections in light of the history of botany:\n\t\tTournefort, Jussieu, Lamarck, Adanson, and those of famous travelers\n\t\tas Bonpland, Michaud, Saint-Hilaire, Richard, D&#39;Orbigny etc.\n\t\tThe designation at CITES is FR 75A. It publishes Adansonia, a botanical\n\t\tperiodical, and journals on\n\t\tthe flora of New Caledonia, Madagascar and Comores, Cambodia, Laos and\n\t\tVietnam, Cameroon, and Gabon.","type":"OCCURRENCE","hostingOrganizationKey":"2cd829bb-b713-433d-99cf-64bef11e5b3e","hostingOrganizationTitle":"MNHN - Museum national d'Histoire naturelle","publishingCountry":"FR","publishingOrganizationKey":"2cd829bb-b713-433d-99cf-64bef11e5b3e","publishingOrganizationTitle":"MNHN - Museum national d'Histoire naturelle","license":"http://creativecommons.org/licenses/by/4.0/legalcode","keywords":["Occurrence","Specimen","Types","Tracheophytes","Angiosperm","Taxonomy","Botany","Specimens","Plants","Vascular","Pteridophyta","Collections"],"recordCount":5509422},{"key":"282d0ccb-4fa0-40f9-8593-105c77e88417","title":"Southern African Bird Atlas Project","doi":"10.15468/ry4ux6","description":"The Southern African Bird Atlas Project started in July 2007, so it has been running for almost three and a half years. To date, over 800 SABAP2 atlasers have collected more than two million records of bird distribution from more than 75% of the quarter degree grid cells in the SABAP2 region. Most of the SABAP1 data were collected in the period 1987–1991, 20 years ago. The SABAP1 database contains seven million records. One of the SABAP2 objectives is to see how the distributions of the bird species occurring in South Africa, Lesotho and Swaziland have changed over the past two decades.","type":"OCCURRENCE","hostingOrganizationKey":"c5f7ef70-e233-11d9-a4d6-b8a03c50a862","hostingOrganizationTitle":"South African National Biodiversity Institute","publishingCountry":"ZA","publishingOrganizationKey":"c5f7ef70-e233-11d9-a4d6-b8a03c50a862","publishingOrganizationTitle":"South African National Biodiversity Institute","license":"http://creativecommons.org/licenses/by/4.0/legalcode","recordCount":5053399},{"key":"15f819bd-6612-4447-854b-14d12ee1022d","title":"Naturalis Biodiversity Center (NL) - Botany","doi":"10.15468/ib5ypt","description":"This database contains specimen records from the former herbarium of the Leiden University within the botanical collection of the Naturalis Biodiversity Center (Leiden, Netherlands). The Department of Botany houses the National Herbarium of the Netherlands (NHN) which consists of herbarium collections of the universities of Leiden, Wageningen and Utrecht. In 2010 the collection of the University of Amsterdam also moved to Naturalis.The focal areas of the collection are Southeast Asia, tropical America, tropical Africa and the Netherlands. The former herbarium of the Leiden University (acronym: L) contains about 4 million specimens and has extensive collections from Southeast Asia, especially from Indonesia and New Guinea, but it also holds a large collection of palearctic plants, and is the principle herbarium for Dutch plants. As the oldest Dutch herbarium, it also contains several historic collections.","type":"OCCURRENCE","hostingOrganizationKey":"396d5f30-dea9-11db-8ab4-b8a03c50a862","hostingOrganizationTitle":"Naturalis Biodiversity Center","publishingCountry":"NL","publishingOrganizationKey":"396d5f30-dea9-11db-8ab4-b8a03c50a862","publishingOrganizationTitle":"Naturalis Biodiversity Center","license":"http://creativecommons.org/publicdomain/zero/1.0/legalcode","keywords":["Occurrence","Specimen"],"recordCount":4924185},{"key":"ad43e954-dd79-4986-ae34-9ccdbd8bf568","title":"Geographically tagged INSDC sequences","doi":"10.15468/cndomv","description":"Metadata for INSDC sequences that have been geographically tagged.","type":"OCCURRENCE","hostingOrganizationKey":"ada9d123-ddb4-467d-8891-806ea8d94230","hostingOrganizationTitle":"European Nucleotide Archive (EMBL-EBI)","publishingCountry":"GB","publishingOrganizationKey":"ada9d123-ddb4-467d-8891-806ea8d94230","publishingOrganizationTitle":"European Nucleotide Archive (EMBL-EBI)","license":"http://creativecommons.org/licenses/by/4.0/legalcode","recordCount":4766787},{"key":"857aa892-f762-11e1-a439-00145eb45e9a","title":"Observations du Conservatoire botanique national du Bassin parisien.","doi":"10.15468/megroo","description":"Système d&#39;information sur la flore du Bassin parisien, Flora.","type":"OCCURRENCE","hostingOrganizationKey":"6bcc0290-6e76-11db-bcd5-b8a03c50a862","hostingOrganizationTitle":"Conservatoire botanique national du Bassin parisien","publishingCountry":"FR","publishingOrganizationKey":"6bcc0290-6e76-11db-bcd5-b8a03c50a862","publishingOrganizationTitle":"Conservatoire botanique national du Bassin parisien","license":"http://creativecommons.org/licenses/by/4.0/legalcode","recordCount":4697245},{"key":"7bd65a7a-f762-11e1-a439-00145eb45e9a","title":"Tropicos Specimen Data","doi":"10.15468/hja69f","description":"The Missouri Botanical Garden’s Herbarium is one of the world’s outstanding research resources for specimens and information on bryophytes and vascular plants. The collection is limited to these two major groups of plants. As of 31 December 2015 the collection had 6.66 million specimens (6.1 million vascular plants and 563,000 bryophytes). This specimen dataset includes over 4.4 million records (4.0 million vascular plants and 300,000 bryophytes).","type":"OCCURRENCE","hostingOrganizationKey":"90fd6680-349f-11d8-aa2d-b8a03c50a862","hostingOrganizationTitle":"Missouri Botanical Garden","publishingCountry":"US","publishingOrganizationKey":"90fd6680-349f-11d8-aa2d-b8a03c50a862","publishingOrganizationTitle":"Missouri Botanical Garden","license":"http://creativecommons.org/licenses/by/4.0/legalcode","keywords":["Occurrence","Specimen"],"recordCount":4752311},{"key":"53f13c8f-413e-4537-bda6-98666cd7975f","title":"Other BSBI Scottish data up to 2015","doi":"10.15468/2dohar","type":"OCCURRENCE","hostingOrganizationKey":"07f617d0-c688-11d8-bf62-b8a03c50a862","hostingOrganizationTitle":"National Biodiversity Network","publishingCountry":"GB","publishingOrganizationKey":"aa569acf-991d-4467-b327-8442f30ddbd2","publishingOrganizationTitle":"Botanical Society of Britain & Ireland","license":"http://creativecommons.org/licenses/by-nc/4.0/legalcode","recordCount":4710750},{"key":"271c444f-f8d8-4986-b748-e7367755c0c1","title":"Florabank1 - A grid-based database on vascular plant distribution in the northern part of Belgium (Flanders and the Brussels Capital region)","doi":"10.3897/phytokeys.12.2849","description":"<p>Florabank1 is a database that contains distributional data on the wild flora indigenous species, archeophytes and naturalised aliens) of Flanders and the Brussels Capital Region. It holds about 3 million records of vascular plants, dating from 1800 till present. Furthermore, it includes ecological data on vascular plant species, redlist category information, Ellenberg values, legal status, global distribution, seed bank etc. The database is an initiative of \"Flo.Wer\" (http://www.plantenwerkgroep.be), the Research Institute for Nature and Forest (INBO) (http://www.inbo.be) and the National Botanic Garden of Belgium (http://www.br.fgov.be). Florabank aims at centralizing botanical distribution data gathered by both professional and amateur botanists and to make these data available to the benefit of nature conservation, policy and scientific research. The occurrence data contained in Florabank1 are extracted from checklists, literature and herbarium specimen information. Of survey lists, the locality name (verbatimLocality), species name, observation date and IFBL square code - the grid system used for plant mapping in Belgium (Van Rompaey 1943) - are recorded. For records dating from the period 1972–2004 all pertinent botanical journals dealing with Belgian flora were systematically screened. Analysis of herbarium specimens in the collection of the National Botanic Garden of Belgium, the University of Ghent and the University of Liège provided interesting distribution knowledge concerning rare species, this information is also included in Florabank1.</p>\n<p>The data recorded before 1972 is available through the Belgian GBIF node (http://www.gbif.org/dataset/940821c0-3269-11df-855a-b8a03c50a862), not through Florabank1, to avoid duplication of information. A dedicated portal providing access to all currently published Belgian IFBL records is available at: http://projects.biodiversity.be/ifbl.</p>\n<p>All data in Florabank1 is georeferenced. Every record holds the decimal centroid coordinates of the > IFBL square containing the observation. The uncertainty radius is the smallest circle possible covering the whole IFBL square, which can measure 1 km² or 4 km². Florabank is a work in progress and new occurrences are added as they become available; the dataset will be updated through GBIF on a regularly base.</p>","type":"OCCURRENCE","hostingOrganizationKey":"1cd669d0-80ea-11de-a9d0-f1765f95f18b","hostingOrganizationTitle":"Research Institute for Nature and Forest (INBO)","publishingCountry":"BE","publishingOrganizationKey":"1cd669d0-80ea-11de-a9d0-f1765f95f18b","publishingOrganizationTitle":"Research Institute for Nature and Forest (INBO)","license":"http://creativecommons.org/publicdomain/zero/1.0/legalcode","keywords":["Occurrence","Observation","naturalised aliens","indigenous species","archeophytes","flora","grid mapping","Tracheophyta"],"recordCount":4540366},{"key":"0d8cc344-d880-42ec-a200-40b4ad71affd","title":"Observations floristiques - plateforme SINP régionale SILENE   PACA","doi":"10.15468/uecyo6","description":"Observations floristiques issues de la plateforme SINP régionale SILENE PACA. Ces observations sont administrées par les Conservatoires botaniques nationaux (CBN) alpin et méditerranéen sur leur territoires d'agréments respectifs (départements 04 et 05 pour le CBN Alpin ; départements 06, 13, 83, 84 pour le CBN Méditerranéen). Les observations proviennent des CBN, des partenaires et producteurs de données.","type":"OCCURRENCE","hostingOrganizationKey":"1928bdf0-f5d2-11dc-8c12-b8a03c50a862","hostingOrganizationTitle":"UMS PatriNat (OFB-CNRS-MNHN), Paris","publishingCountry":"FR","publishingOrganizationKey":"1928bdf0-f5d2-11dc-8c12-b8a03c50a862","publishingOrganizationTitle":"UMS PatriNat (OFB-CNRS-MNHN), Paris","license":"http://creativecommons.org/licenses/by-nc/4.0/legalcode","keywords":["Occurrence"],"recordCount":4386918},{"key":"7e380070-f762-11e1-a439-00145eb45e9a","title":"Natural History Museum (London) Collection Specimens","doi":"10.5519/0002965","description":"Natural History Museum (London) Collection Specimens","type":"OCCURRENCE","hostingOrganizationKey":"19456090-b49a-11d8-abeb-b8a03c50a862","hostingOrganizationTitle":"Natural History Museum","publishingCountry":"GB","publishingOrganizationKey":"19456090-b49a-11d8-abeb-b8a03c50a862","publishingOrganizationTitle":"Natural History Museum","license":"http://creativecommons.org/publicdomain/zero/1.0/legalcode","keywords":["Occurrence"],"recordCount":4295332},{"key":"d415c253-4d61-4459-9d25-4015b9084fb0","title":"The New York Botanical Garden Herbarium (NY)","doi":"10.15468/6e8nje","description":"The William and Lynda Steere Herbarium of The New York Botanical Garden holds a collection of more than seven million preserved specimens. All plant groups–flowering plants, conifers, ferns, mosses, liverworts, and algae, as well as fungi and lichens --are represented in the Herbarium collection, which is particularly strong in New World specimens. Digitization of all groups is underway, with more than 3.5 million specimens barcoded and 2.5 million specimens imaged.","type":"OCCURRENCE","hostingOrganizationKey":"ae447c50-b8a8-11d8-92a4-b8a03c50a862","hostingOrganizationTitle":"The New York Botanical Garden","publishingCountry":"US","publishingOrganizationKey":"ae447c50-b8a8-11d8-92a4-b8a03c50a862","publishingOrganizationTitle":"The New York Botanical Garden","license":"http://creativecommons.org/publicdomain/zero/1.0/legalcode","keywords":["Occurrence","Specimen"],"recordCount":4093941},{"key":"3b301884-51b9-443f-b63c-47feeccfb89f","title":"Finnish Entomological Database","doi":"10.15468/jlud8r","description":"Finnish Entomological Database contains species occurrence data for insects and arachnids from Finland, collected by professional and amateur entomologists.","type":"OCCURRENCE","hostingOrganizationKey":"04fd2e13-6881-4e5c-9dd1-8fdd9ab993c1","hostingOrganizationTitle":"Finnish Biodiversity Information Facility","publishingCountry":"FI","publishingOrganizationKey":"04fd2e13-6881-4e5c-9dd1-8fdd9ab993c1","publishingOrganizationTitle":"Finnish Biodiversity Information Facility","license":"http://creativecommons.org/licenses/by/4.0/legalcode","decades":[1900],"keywords":["Occurrence"],"recordCount":3669111},{"key":"07044577-bd82-4089-9f3a-f4a9d2170b2e","title":"A global database for the distributions of crop wild relatives","doi":"10.15468/jyrthk","description":"This dataset originally held 5 647 442 total records, where 34% of the records corresponded to germplasm accessions and 66% to herbarium samples. A total of 3 231 286 records had cross-checked coordinates (see Figure 2). 322 735 records were newly georeferenced using The Google Geocoding API and 15 713 new records were obtained after digitizing the information contained in herbaria specimens. Data was gathered from more than 100 data providers, including GBIF (a comprehensive list of institutions and individuals is available here: http://www.cwrdiversity.org/data-sources/ ).\nThe geographic coverage of the dataset includes 96% of the world countries and also includes records of cultivated plants (1/3 of the dataset). Records of the crop wild relatives of 80 crop gene pools can be queried and visualized in this interactive map: http://www.cwrdiversity.org/distribution-map/\nThis dataset was assembled as part of the project ‘Adapting Agriculture to Climate Change: Collecting, Protecting and Preparing Crop Wild Relatives’, which is supported by the Government of Norway. The project is managed by the Global Crop Diversity Trust and the Millennium Seed Bank of the Royal Botanic Gardens, Kew, and implemented in partnership with national and international genebanks and plant breeding institutes around the world. For further information, please refer to the project website: http://www.cwrdiversity.org/\nFor publication to GBIF, all records originally gathered from GBIF have been removed to avoid data duplication.\nCitation: Crop Wild Relatives Occurrence data consortia ([year]). A global database for the distributions of crop wild relatives. Centro Internacional de Agricultura Tropical (CIAT). Occurrence dataset https://doi.org/10.15468/jyrthk accessed via GBIF.org on [date].","type":"OCCURRENCE","hostingOrganizationKey":"64795dcb-ad74-41b3-95e5-cc52ba754776","hostingOrganizationTitle":"GBIF.no","publishingCountry":"CO","publishingOrganizationKey":"fee3882f-5360-4f01-a1ca-767c48fa629c","publishingOrganizationTitle":"Centro Internacional de Agricultura Tropical - CIAT","license":"http://creativecommons.org/licenses/by/4.0/legalcode","keywords":["Occurrence","crop wild relatives","http://dbpedia.org/page/Crop_wild_relative","https://g.co/kg/m/04jcxvp","https://www.wikidata.org/wiki/Q1141015"],"recordCount":3403810},{"key":"c3f5731f-4ebc-48a2-83ba-3fb5c895f6c1","title":"New South Wales Bird Atlassers","doi":"10.15468/kfkspo","description":"Observation records collected by the NSW Bird Atlassers Inc.","type":"OCCURRENCE","hostingOrganizationKey":"3c5e4331-7f2f-4a8d-aa56-81ece7014fc8","hostingOrganizationTitle":"Atlas of Living Australia","publishingCountry":"AU","publishingOrganizationKey":"c04876ed-3e07-417b-97ef-bc5071f97a5c","publishingOrganizationTitle":"NSW Bird Atlassers","license":"http://creativecommons.org/licenses/by/4.0/legalcode","recordCount":3381819},{"key":"37f48e00-1fe8-11dc-b461-b8a03c50a862","title":"Dutch Foundation for Applied Water Research (STOWA) - Limnodata Neerlandica","doi":"10.15468/ennulm","description":"The Limnodata Neerlandica data set contains the data of more than 30 years systematic and project based sampling of Dutch, mainly freshwater, waterbodies. Data originate from 37 data providers; 26 water boards, the provinces and the Ministry of Transport, Public Works and Water Management. Over 20,000 sample points were used. The main purpose of the dataset is monitoring the quality of Dutch surface waters. Next to the biological characteristics also a-biotic data were sampled and stored alongside the biotic data. Observations are available from phytoplankton, diatoms, aquatic and riparian plants, macro-invertebrates and fish. The data were collected on a yearly base. The taxonomy has been validated according to the Dutch standardised checklist of aquatic species.\n\nUpdate January 2015: Added data for 2011 and 2012. Enhanced taxonomic and locality data fields.","type":"OCCURRENCE","hostingOrganizationKey":"cace8d10-2646-11d8-a2da-b8a03c50a862","hostingOrganizationTitle":"Netherlands Biodiversity Information Facility (NLBIF)","publishingCountry":"NL","publishingOrganizationKey":"68a216ee-f721-40cd-932c-84153afd9451","publishingOrganizationTitle":"Dutch Foundation for Applied Water Research","license":"http://creativecommons.org/licenses/by/4.0/legalcode","decades":[1980,1990,2000,2010],"keywords":["macrofauna","Netherlands","riparian","diatoms","plants","zooplankton","fish","phytoplankton","aquatic","monitoring","Limnofauna","Occurrence","Observation"],"recordCount":3359932},{"key":"b05a19cf-dcf2-4ef9-bbbb-ad0ecbd2917c","title":"Eremaea","doi":"10.15468/eq54iw","type":"OCCURRENCE","hostingOrganizationKey":"3c5e4331-7f2f-4a8d-aa56-81ece7014fc8","hostingOrganizationTitle":"Atlas of Living Australia","publishingCountry":"AU","publishingOrganizationKey":"633f217c-c007-48dc-86ed-f8fdae6fd0d8","publishingOrganizationTitle":"Eremaea","license":"http://creativecommons.org/licenses/by/4.0/legalcode","recordCount":3291911},{"key":"3e9817c1-8302-4955-87e3-a408db0ea379","title":"Insecta of Costa Rica (INBio)","doi":"10.15468/mykn0u","description":"Occurrence records of the Insecta class collected, identified, digitized, and published by the National Biodiversity Institute (INBio) of Costa Rica.","type":"OCCURRENCE","hostingOrganizationKey":"5c7a5c20-1bd0-11d8-a2da-b8a03c50a862","hostingOrganizationTitle":"Instituto Nacional de Biodiversidad (INBio), Costa Rica","publishingCountry":"CR","publishingOrganizationKey":"5c7a5c20-1bd0-11d8-a2da-b8a03c50a862","publishingOrganizationTitle":"Instituto Nacional de Biodiversidad (INBio), Costa Rica","license":"http://creativecommons.org/publicdomain/zero/1.0/legalcode","keywords":["Occurrence","Specimen"],"recordCount":3276500},{"key":"f1929b90-79f5-47aa-b983-51f108eb491f","title":"Bryophyte data for Great Britain from the British Bryological Society held by BRC: Atlas 2014","doi":"10.15468/gvqhjb","description":"Bryophyte records submitted to the Biological Records Centre for England, Ireland, Scotland, Wales, the Isle of Man and the Channel Islands. The dataset comprises records collected for the Bryophyte Recording Scheme, as well as those extracted from literature and museum sources. Details of all the surveys in this dataset can be obtained by clicking the 'Surveys' tab. This 'Atlas' dataset contains all of the records presented in Blockeel et al. (2014) Atlas of British and Irish Bryophytes, with the exception of two datasets (one from Cofnod [North Wales Environmental Information Centre] and one from CEDaR [Centre for Environmental Data and Recording, Northern Ireland]) which the BBS were not given permission to export to the NBN. These are datasets 883 and 881 in the BBS/BRC database. This new dataset contains records covering 109 vice-counties since the last NBN export, with over five hundred new records for each of the following counties: Cheshire, North Ebudes, East Sussex, West Ross, Caernarvonshire, Merionethshire, Shropshire (Salop), Carmarthenshire, Argyll Main, West Inverness-shire, South Lancashire, Surrey, East Norfolk, Outer Hebrides, South-west Yorkshire, East Inverness-shire (with Nairn), Breconshire, Cambridgeshire, West Lancashire, Dumfriesshire, West Norfolk, West Sussex, Huntingdonshire, North Essex, Durham, Cardiganshire, Buckinghamshire, North Northumberland (Cheviot), West Sutherland, and Derbyshire. This dataset will not be added to in future, but will only be subject to amendments. Data collected or collated by the BBS post-Atlas (i.e. from the 01/01/2014) will form a new dataset on the NBN.","type":"OCCURRENCE","hostingOrganizationKey":"07f617d0-c688-11d8-bf62-b8a03c50a862","hostingOrganizationTitle":"National Biodiversity Network","publishingCountry":"GB","publishingOrganizationKey":"32f1b389-5871-4da3-832f-9a89132520c5","publishingOrganizationTitle":"British Bryological Society","license":"http://creativecommons.org/licenses/by/4.0/legalcode","decades":[1600,1700,1800,1810,1820,1830,1840,1850,1860,1870,1880,1890,1900,1910,1920,1930,1940,1950,1960,1970,1980,1990,2000,2010],"recordCount":2785010},{"key":"5f501df0-0c61-11dd-84ce-b8a03c50a862","title":"SLU Aqua Institute of Freshwater Research National register of survey test-fishing - NORS","doi":"10.15468/9meff0","description":"Standardized test-fishing with Nordic multi-mesh gillnets is a widely used method in Sweden to investigate the fish fauna in a lake. In 2005 the method became an European standard (EN 14757). Standardized test-fishing catch most of the Swedish species in a representative way, giving a good estimate of species abundance and size distribution. The results are generally used for purposes of environmental protection and fishery management.\n\nNORS consists of thousands of test-fishing occasions back to the 1950’s. The Department of Aquatic Resources (SLU Aqua) at the Swedish University of Agricultural Sciences is responsible of collecting and checking test-fishing data generated in national and regional environmental programs, on behalf of the Swedish Agency for Marine and Water Management. SLU Aqua also collect test-fishing data from several other types of investigations in order to create a database as representative as possible. The purpose is to facilitate obtaining data of high quality for research, national investigations and reports. The database also serves as a reference for local and regional investigations. All data is available for the public.","type":"OCCURRENCE","hostingOrganizationKey":"4c415e40-1e21-11de-9e40-a0d6ecebb8bf","hostingOrganizationTitle":"GBIF-Sweden","publishingCountry":"SE","publishingOrganizationKey":"4c415e40-1e21-11de-9e40-a0d6ecebb8bf","publishingOrganizationTitle":"GBIF-Sweden","license":"http://creativecommons.org/publicdomain/zero/1.0/legalcode","keywords":["Occurrence","Observation","Sweden","Pisces","Lakes","Fish","Freshwater"],"recordCount":2842040},{"key":"962f59bc-f762-11e1-a439-00145eb45e9a","title":"Collections and observation data National Museum of Natural History Luxembourg","doi":"10.15468/s2iu7d","description":"Collections and observation data National Museum of Natural History Luxembourg","type":"OCCURRENCE","hostingOrganizationKey":"75642970-f855-11dd-8235-b8a03c50a862","hostingOrganizationTitle":"Musée national d'histoire naturelle Luxembourg","publishingCountry":"LU","publishingOrganizationKey":"75642970-f855-11dd-8235-b8a03c50a862","publishingOrganizationTitle":"Musée national d'histoire naturelle Luxembourg","license":"http://creativecommons.org/publicdomain/zero/1.0/legalcode","keywords":["Occurrence","Observation"],"recordCount":2800985},{"key":"73d4365a-8868-4d84-a6fd-51098b968170","title":"First Bird Atlas","doi":"10.15468/f6tipo","description":"Records collected by Birds Australia between 1977 and 1981, each survey was ascribed to a grid with the coords given as the central point. Grids size varied, with most being 10-minute grids or 1-degree grids.","type":"OCCURRENCE","hostingOrganizationKey":"3c5e4331-7f2f-4a8d-aa56-81ece7014fc8","hostingOrganizationTitle":"Atlas of Living Australia","publishingCountry":"AU","publishingOrganizationKey":"75ed4c27-9997-41c4-81a4-675b4282ffad","publishingOrganizationTitle":"BirdLife Australia","license":"http://creativecommons.org/licenses/by-nc/4.0/legalcode","recordCount":2712345},{"key":"67c54f85-7910-4cbf-8de4-6f0b136a0e34","title":"Continuous Plankton Recorder Dataset (SAHFOS)","doi":"10.15468/ygwilu","description":"SAHFOS is unique in having comparable data on the geographical distribution, seasonal cycles and year-to-year changes in abundance of plankton over a large spatial area. There is no other survey in the world with 80 years of marine plankton data.\n\nCPR Data are available in paper form back to 1931 and from January 1946 onwards in a computerised relational database. The database contains results  with 2,629,628 taxonomic abundance entries.","type":"OCCURRENCE","hostingOrganizationKey":"09b17aee-d3fb-48ca-a30b-303d671a8155","hostingOrganizationTitle":"Sir Alister Hardy Foundation for Ocean Science (SAHFOS)","publishingCountry":"GB","publishingOrganizationKey":"09b17aee-d3fb-48ca-a30b-303d671a8155","publishingOrganizationTitle":"Sir Alister Hardy Foundation for Ocean Science (SAHFOS)","license":"http://creativecommons.org/licenses/by/4.0/legalcode","recordCount":2629628},{"key":"20e3fcbb-c285-49ee-a93d-cc6ccd06ca9e","title":"FLORIVON","doi":"10.15468/ke2ody","description":"Observations of vascular plants by botanists between 1902 and 1950 and a small number of published records and specimen data. Data have been collected in 1.3 x 1.01 km grid squares. The entire country of the Netherlands was surveyed.","type":"OCCURRENCE","hostingOrganizationKey":"2d08e940-df21-45b4-9d17-1eff118907ff","hostingOrganizationTitle":"FLORON Plant Conservation Netherlands","publishingCountry":"NL","publishingOrganizationKey":"2d08e940-df21-45b4-9d17-1eff118907ff","publishingOrganizationTitle":"FLORON Plant Conservation Netherlands","license":"http://creativecommons.org/licenses/by-nc/4.0/legalcode","decades":[1830,1840,1850,1860,1870,1880,1890,1900,1910,1920,1930,1940,1950],"keywords":["Occurrence","Observation"],"recordCount":2626773},{"key":"e707e6da-e143-445d-b41d-529c4a777e8b","title":"Suffolk Biodiversity Information Service (SBIS) Dataset","doi":"10.15468/ab4vwo","description":"All species records from the SBIS Recorder Database","type":"OCCURRENCE","hostingOrganizationKey":"07f617d0-c688-11d8-bf62-b8a03c50a862","hostingOrganizationTitle":"National Biodiversity Network","publishingCountry":"GB","publishingOrganizationKey":"f0edcf5c-2a34-4a6b-b9bb-44d52ed50f7a","publishingOrganizationTitle":"Suffolk Biodiversity Information Service","license":"http://creativecommons.org/licenses/by-nc/4.0/legalcode","decades":[1600,1700,1800,1810,1820,1830,1840,1850,1860,1870,1880,1890,1900,1910,1920,1930,1940,1950,1960,1970,1980,1990,2000,2010],"recordCount":2573318},{"key":"24baf0da-60a9-4a13-99d7-a8c860c3cb30","title":"Azorean Biodiversity Portal","doi":"10.15468/j0iceo","description":"The University of Azores hosts the Azores Bioportal (http://azoresbioportal.uac.pt/) a regional E-Infrastructure. The Azorean Biodiversity Portal (ABP) is an e-infrastructure now associated with Portuguese PORBIOTA and LIFEWATCH. The ABP is a key e-infrastructure for the integrated management of biodiversity data of the Azores, providing a large number of specialized services supporting research, policy and education. The 3000 visits per day, the numerous international scientific collaborations, resulting in publications and academic thesis, and the connection with other prestigious databases demonstrate the Portal’s scientific quality as well as its general appeal. Several Natural History Collections are also managed by University of Azores, namely of Algae, Bryophytes, Vascular Plants, Molluscs and Arthropods.The Azorean Biodiversity Portal shares all the information available on the biodiversity of the Azores, one of the five Macaronesian archipelagos (the other being Madeira, Salvage Islands, the Canary Islands and Cape Verde). Macaronesia is recognized as an important part of the Mediterranean hotspot of biodiversity; however, a comprehensive systematic revision of its biodiversity was still lacking at the end of the 20th century.Based in two European INTERREG IIIB projects, an unprecedented collaboration of more than 200 taxonomists and other scientists resulted in accurate and comprehensive lists of terrestrial species in the Canary Islands (Izquierdo et al., 2001, 2004; Moro et al., 2003), Cape Verde (Arechavaleta et al., 2005), the Azores (Borges et al., 2005b, 2010) and Madeira–Selvagens (Borges et al., 2008). This unique collaboration was fundamental for creating the baseline taxonomic information for the ABP, updating the taxonomic information, listing synonyms.","type":"OCCURRENCE","hostingOrganizationKey":"cdcc4ce1-7f6e-4ed2-b47c-eb451925b038","hostingOrganizationTitle":"Instituto Superior de Agronomia / Universidade de Lisboa","publishingCountry":"PT","publishingOrganizationKey":"0a80feca-b411-428a-a34e-c5c2fa07cdba","publishingOrganizationTitle":"Universidade dos Açores","license":"http://creativecommons.org/licenses/by/4.0/legalcode","decades":[1400,1500,1600,1700,1800,1810,1820,1830,1840,1850,1860,1870,1880,1890,1900,1910,1920,1930,1940,1950,1960,1970,1980,1990,2000,2010],"keywords":["database","biodiversity","species distribution","webpage","Azores","science communication","Observation"],"recordCount":2408695},{"key":"bfc6fe18-77c7-4ede-a555-9207d60d1d86","title":"Waarnemingen.be - Plant occurrences in Flanders and the Brussels Capital Region, Belgium","doi":"10.15468/fyuklz","description":"<p>Waarnemingen.be - Plant occurrences in Flanders and the Brussels Capital Region, Belgium is a species occurrence dataset published by Natuurpunt and described (v1.4) in Steeman et al. (2017, https://doi.org/10.3897/phytokeys.85.14925). The dataset contains over 2.3 million plant occurrences of almost 1,300 naturally occurring species (native, vagrant or migrant species), recorded by volunteers (citizen scientists), mainly since 2008. Together with the datasets Van Landuyt & Brosens (2017, http://www.gbif.org/dataset/271c444f-f8d8-4986-b748-e7367755c0c1) and Van Landuyt & Noé (2015, https://doi.org/10.15468/xnlbke), the dataset represents the most complete overview of indigenous plants in Flanders and the Brussels Capital Region (north Belgium). The occurrences are derived from the database http://www.waarnemingen.be, hosted at the nature conservation NGO Natuurpunt in collaboration with Stichting Natuurinformatie. Standardized information regarding the occurrence's sex, reproductiveCondition, behavior, occurrenceRemarks, and samplingProtocol is included as well.</p>\n<p>Generalized and/or withheld information: location information is generalized to 4 x 4 km² IFBL grid cells. Observer name, exact XY-coordinates, toponyms, and photographs are not included in the published dataset, but are known in the source database.</p>\n<p>To allow anyone to use this dataset, we have released the data to the public domain under a Creative Commons Zero waiver (http://creativecommons.org/publicdomain/zero/1.0/). We would appreciate however, if you read and follow these norms for data use (http://www.natuurpunt.be/normen-voor-datagebruik) and provide a link to the original dataset (https://doi.org/10.15468/fyuklz) whenever possible. If you use these data for a scientific paper, please cite the dataset following the applicable citation norms and/or consider us for co-authorship. We are always interested to provide more information or know how you have used the data, so please contact us via the contact information provided in the metadata or natuurdata@natuurpunt.be.</p>\n<p>The publication of this dataset is supported by INBO and funded by Research Foundation - Flanders (FWO) as part of the Belgian contribution to LifeWatch.</p>","type":"OCCURRENCE","hostingOrganizationKey":"1cd669d0-80ea-11de-a9d0-f1765f95f18b","hostingOrganizationTitle":"Research Institute for Nature and Forest (INBO)","publishingCountry":"BE","publishingOrganizationKey":"4d3ceea8-5699-439d-a899-decac9cbbdac","publishingOrganizationTitle":"Natuurpunt","license":"http://creativecommons.org/publicdomain/zero/1.0/legalcode","decades":[1850,1860,1870,1880,1890,1900,1910,1920,1930,1940,1950,1960,1970,1980,1990,2000,2010],"keywords":["Occurrence","Observation","observation.org","plants","Plantae","observations","citizen science","waarnemingen.be","distribution","Natuurpunt"],"recordCount":2300868},{"key":"857bce66-f762-11e1-a439-00145eb45e9a","title":"Biologiezentrum Linz","doi":"10.15468/ynjblx","description":"ZOBODAT (Zoological Botanical Database)","type":"OCCURRENCE","hostingOrganizationKey":"2d6e0e40-2aee-11d8-aa2d-b8a03c50a862","hostingOrganizationTitle":"Biologiezentrum Linz Oberoesterreich","publishingCountry":"AT","publishingOrganizationKey":"2d6e0e40-2aee-11d8-aa2d-b8a03c50a862","publishingOrganizationTitle":"Biologiezentrum Linz Oberoesterreich","license":"http://creativecommons.org/publicdomain/zero/1.0/legalcode","recordCount":2243034},{"key":"86306e4b-5ed8-4684-a626-d9b9f439dcce","title":"Observations floristiques issues de la base de données du Conservatoire botanique national alpin","doi":"10.15468/0fd8vr","description":"Observations floristiques issues de la base de données flore du Conservatoire botanique national alpin (CBNA). Ces observations sont produites par le CBNA, les partenaires du CBNA (Parcs nationaux de la Vanoise et des Ecrins, FRAPNA 01). Ces observations sont diffusées sur la plateforme du Pôle d'Informations Flore Habitats (PIFH) de la région Auvergne-Rhône-Alpes.","type":"OCCURRENCE","hostingOrganizationKey":"1928bdf0-f5d2-11dc-8c12-b8a03c50a862","hostingOrganizationTitle":"UMS PatriNat (OFB-CNRS-MNHN), Paris","publishingCountry":"FR","publishingOrganizationKey":"1928bdf0-f5d2-11dc-8c12-b8a03c50a862","publishingOrganizationTitle":"UMS PatriNat (OFB-CNRS-MNHN), Paris","license":"http://creativecommons.org/licenses/by-nc/4.0/legalcode","keywords":["Occurrence"],"recordCount":2215722},{"key":"b4ae1720-1431-49ee-bfeb-8146fc42b1a3","title":"SAFRING: Historical Bird Ringing Records (2005-2009)","doi":"10.15468/jclwaz","description":"Bird ringing started in 1948 in southern Africa and is thus the longest running bird monitoring project in the sub-region. Although the data are biased to areas where ringers operated, it is an invaluable record of bird occurrence and distribution changes, arrival and departure times of migrants, survival and mass data in historical times.The South African Bird Ringing Unit (SAFRING), which is an essential arm of the Animal Demography Unit, administers bird ringing in southern Africa.","type":"OCCURRENCE","hostingOrganizationKey":"c5f7ef70-e233-11d9-a4d6-b8a03c50a862","hostingOrganizationTitle":"South African National Biodiversity Institute","publishingCountry":"ZA","publishingOrganizationKey":"c5f7ef70-e233-11d9-a4d6-b8a03c50a862","publishingOrganizationTitle":"South African National Biodiversity Institute","license":"http://creativecommons.org/licenses/by/4.0/legalcode","decades":[1940,1950,1960,1970,1980,1990,2000],"keywords":["birds","Birds","Occurrence","bird ringing","Observation"],"recordCount":2162753},{"key":"912ac7b3-f473-435b-97d1-20b6ed0a6208","title":"RSPB Big Garden Birdwatch winter sightings in the UK in 2009","doi":"10.15468/jgbsaa","description":"The dataset contains the records from garden bird observations, made by the public during a one-hour period of their choice on the 24-25 January 2009. The survey has been conducted in the UK annually in the last weekend of January since 1979. This dataset contains data for 69 different species.\n <br /><br />\n The first Big Garden Birdwatch dataset to be uploaded onto the NBN, was the 2008 house sparrow, starling and blackbird dataset. These three species were the most commonly recorded during 2008. More data for other years will be included in annual datasets. This survey is funded by the RSPB.","type":"OCCURRENCE","hostingOrganizationKey":"07f617d0-c688-11d8-bf62-b8a03c50a862","hostingOrganizationTitle":"National Biodiversity Network","publishingCountry":"GB","publishingOrganizationKey":"c71f0513-c95a-4e98-abad-0c222b87ec66","publishingOrganizationTitle":"Royal Society for the Protection of Birds","license":"http://creativecommons.org/licenses/by/4.0/legalcode","decades":[2000],"recordCount":2126593},{"key":"7d17a2b2-8751-41b5-ac9b-48effc1ea236","title":"BRERC species records from all years at full resolution excluding Notable Species within the last 10 years","doi":"10.15468/h1ln5p","description":"Species records at full resolution as held at BRERC excluding; Notable Species within the last 10 years, sensitive records, and those without NHM Taxon Version Keys (species name code)\nRecorder details held at BRERC. BRERC policy is not to publish personal details including names or addresses. Please let BRERC know if you come across any names or addresses and they will be removed (please note the record id number)","type":"OCCURRENCE","hostingOrganizationKey":"07f617d0-c688-11d8-bf62-b8a03c50a862","hostingOrganizationTitle":"National Biodiversity Network","publishingCountry":"GB","publishingOrganizationKey":"950cbfcc-1cb7-46c1-92ce-05ec232512d1","publishingOrganizationTitle":"Bristol Regional Environmental Records Centre","license":"http://creativecommons.org/licenses/by-nc/4.0/legalcode","decades":[1400,1500,1600,1700,1800,1810,1820,1830,1840,1850,1860,1870,1880,1890,1900,1910,1920,1930,1940,1950,1960,1970,1980,1990,2000,2010],"recordCount":2069684},{"key":"4bfac3ea-8763-4f4b-a71a-76a6f5f243d3","title":"Museum of Comparative Zoology, Harvard University","doi":"10.15468/p5rupv","description":"The Museum of Comparative Zoology was founded in 1859 on the concept that collections are an integral and fundamental component of zoological research and teaching. This more than 150-year-old commitment remains a strong and proud tradition for the MCZ.\n\nThe present-day MCZ contains over 21-million specimens in ten research collections which comprise one of the world&#39;s richest and most varied resources for studying the diversity of life. The museum serves as the primary repository for zoological specimens collected by past and present Harvard faculty-curators, staff and associates conducting research around the world.\n\nAs a premier university museum and research institution, the specimens and their related data are available to researchers of the scientific and museum community.","type":"OCCURRENCE","hostingOrganizationKey":"b4640710-8e03-11d8-b956-b8a03c50a862","hostingOrganizationTitle":"Museum of Comparative Zoology, Harvard University","publishingCountry":"US","publishingOrganizationKey":"b4640710-8e03-11d8-b956-b8a03c50a862","publishingOrganizationTitle":"Museum of Comparative Zoology, Harvard University","license":"http://creativecommons.org/licenses/by-nc/4.0/legalcode","decades":[1600,1700,1800,1810,1820,1830,1840,1850,1860,1870,1880,1890,1900,1910,1920,1930,1940,1950,1960,1970,1980,1990,2000,2010],"keywords":["Occurrence","Specimen"],"recordCount":2087371},{"key":"e5f16d86-e225-4822-97be-a64ce17079c7","title":"Relevés floristiques du protocole de l'Inventaire National Forestier de l'IGN","doi":"10.15468/kqs0zw","description":"Inventaire forestier décennal concernant la France métropolitaine mené par l’IGN depuis novembre 2004. Relevés floristiques et forestiers effectués sur placettes en forêt et peupleraie. Il s’agit de relevés protocolés, avec un plan d’échantillonnage basé sur une grille régulière de mailles carrées de 1 km de côté, couvrant l’ensemble du territoire. Les placettes sont de 15 m de rayon (7 ares) pour l’ensemble de la flore vasculaire et de 25 m de rayon (20 ares) pour les arbres. Les relevés sont associes à d’autres mesures dendrologiques et écologiques. Ils ne sont pas tous effectues à la même période. \nhttp://inventaire-forestier.ign.fr/spip/spip.php?rubrique205","type":"OCCURRENCE","hostingOrganizationKey":"1928bdf0-f5d2-11dc-8c12-b8a03c50a862","hostingOrganizationTitle":"UMS PatriNat (OFB-CNRS-MNHN), Paris","publishingCountry":"FR","publishingOrganizationKey":"1928bdf0-f5d2-11dc-8c12-b8a03c50a862","publishingOrganizationTitle":"UMS PatriNat (OFB-CNRS-MNHN), Paris","license":"http://creativecommons.org/licenses/by-nc/4.0/legalcode","keywords":["Occurrence"],"recordCount":1969174},{"key":"95e635d4-f762-11e1-a439-00145eb45e9a","title":"Banco de Datos de la Biodiversidad de la Comunitat Valenciana","doi":"10.15468/b4yqdy","description":"El Banco de Datos de Biodiversidad de la Comunitat Valenciana tiene como objetivo recoger toda la información de localización de especies en el territorio de la Comunitat Valenciana y su entorno marino. Los datos son provenientes de colecciones, bibliografía y trabajos de campo. Todas las citas están georreferenciadas. Se aportan, para algunas especies, imágenes y fichas con descripción y biología, distribución, hábitat, situación actual, amenazas y acciones de conservación, y las evoluciones poblaciones.","type":"OCCURRENCE","hostingOrganizationKey":"6c4a0bb0-2a4d-11d8-aa2d-b8a03c50a862","hostingOrganizationTitle":"GBIF-Spain","publishingCountry":"ES","publishingOrganizationKey":"ebda1cab-dda8-418b-8f25-df1e71ff5bc2","publishingOrganizationTitle":"Biodiversity data bank of Generalitat Valenciana","license":"http://creativecommons.org/licenses/by-nc/4.0/legalcode","decades":[1950,1960,1970,1980,1990,2000,2010],"keywords":["plantae","Banco de datos de biodiversidad","hongos","información sobre biodiversidad","distribución geográfica","fauna","comunidad valenciana","flora","taxon","taxonomia","animalia","Occurrence"],"recordCount":1954698},{"key":"2a513d16-f4ce-4252-974f-2486ce70b788","title":"SA Flora (BDBSA)","doi":"10.15468/af24d8","description":"The flora and fauna data sets represent the spatial locations of flora and fauna species observation data maintained by DEW in the Biological Databases of South Australia.","type":"OCCURRENCE","hostingOrganizationKey":"3c5e4331-7f2f-4a8d-aa56-81ece7014fc8","hostingOrganizationTitle":"Atlas of Living Australia","publishingOrganizationKey":"4c46f883-69c1-42ac-8a20-4cdba2afb9a6","publishingOrganizationTitle":"South Australia, Department for Environment and Water","license":"http://creativecommons.org/licenses/by/4.0/legalcode","recordCount":1843410},{"key":"4ebe5835-851f-43fd-beed-afade357bfc7","title":"Observations floristiques floutées issues de la base de données flore du Conservatoire botanique national alpin","doi":"10.15468/2cp7ye","description":"Observations floristiques floutées à la maille de 10 km issues de la base de données flore du Conservatoire botanique national alpin (CBNA). Ces observations sont produites par le CBNA, les partenaires du CBNA ou proviennent de la bibliographie ou d'herbier. Ces observations sont diffusées sue la plateforme du Pôle d'Informations Flore Habitats (PIFH) de la région Auvergne-Rhône-Alpes.","type":"OCCURRENCE","hostingOrganizationKey":"1928bdf0-f5d2-11dc-8c12-b8a03c50a862","hostingOrganizationTitle":"UMS PatriNat (OFB-CNRS-MNHN), Paris","publishingCountry":"FR","publishingOrganizationKey":"1928bdf0-f5d2-11dc-8c12-b8a03c50a862","publishingOrganizationTitle":"UMS PatriNat (OFB-CNRS-MNHN), Paris","license":"http://creativecommons.org/licenses/by-nc/4.0/legalcode","keywords":["Occurrence"],"recordCount":1782873},{"key":"492d63a8-4978-4bc7-acd8-7d0e3ac0e744","title":"Norwegian Biodiversity Information Centre - Other datasets","doi":"10.15468/tm56sc","description":"Other data providers sharing occurence data via the Norwegian Species Map Service. These providers allow Nbic to share their data as they do not provide their own IPT servide. Providers: Following databases/datasets from the Norwegian Environment Agency (http://www.miljodirektoratet.no/): Predator database, water species database, naturedatabase and salmon registry. From Sustain.no (http://www.miljolare.no/en/) following databases/datasets: Alien species, plants, butterflies, earthworms, snails, water species, garden birds, coastal species, ponds species and steam species.","type":"OCCURRENCE","hostingOrganizationKey":"d3978a37-635a-4ae3-bb85-7b4d41bc0b88","hostingOrganizationTitle":"The Norwegian Biodiversity Information Centre (NBIC)","publishingCountry":"NO","publishingOrganizationKey":"d3978a37-635a-4ae3-bb85-7b4d41bc0b88","publishingOrganizationTitle":"The Norwegian Biodiversity Information Centre (NBIC)","license":"http://creativecommons.org/licenses/by/4.0/legalcode","decades":[1800],"keywords":["Occurrence","Observation"],"recordCount":1817130},{"key":"b740eaa0-0679-41dc-acb7-990d562dfa37","title":"Meise Botanic Garden Herbarium (BR)","doi":"10.15468/wrthhx","description":"Meise Botanic Garden was founded in the early 18th century and is one of the 15 largest botanic gardens, covering 92ha and containing 4 million preserved and living specimens. The collection has a global scope with a focus on Central Africa, Belgium, and South-West Europe. There are also important historical herbarium collections from Latin America, India and Australia. Notable collectors who have contributed to the herbarium, include Van Heurck, Von Martius, Sieber-von Reichenbach and Crepin. A wide range of taxonomic groups are covered including: vascular plants, lichens, mosses, liverworts, fungi, myxomycetes and algae.","type":"OCCURRENCE","hostingOrganizationKey":"a344ee9f-f1b7-4761-be2c-58ee6d741395","hostingOrganizationTitle":"Botanic Garden Meise","publishingCountry":"BE","publishingOrganizationKey":"a344ee9f-f1b7-4761-be2c-58ee6d741395","publishingOrganizationTitle":"Botanic Garden Meise","license":"http://creativecommons.org/licenses/by/4.0/legalcode","decades":[1700,1800,1810,1820,1830,1840,1850,1860,1870,1880,1890,1900,1910,1920,1930,1940,1950,1960,1970,1980,1990,2000,2010],"keywords":["Herbarium","","Plant","Algae","Myxomycetes","Occurrence","Specimen"],"recordCount":1776041},{"key":"82ad4e4e-f762-11e1-a439-00145eb45e9a","title":"Swiss National Butterflies and Forester Moths Databank","doi":"10.15468/atyl1j","description":"This dataset includes records of the butterflies (Papilionoidea: Hesperiidae, Lycaenidae, Nymphalidae,Papilionidae,Pieridae) and forester moths (Zygaenidae) from Switzerland and the adjacent area. Data sources include museum and private collections, the literature, field observations provided by a large network of volunteer collaborators, environmental impact studies, national inventories (Red List strategy, Biodiversity Monitoring)  and academic work. The period covered by the data extends from 1775 to the present day. All data provided have been subject to a validation procedure (http://www.cscf.ch/cscf/validation). Nomenclature largely follows Wiemers et al. (2018 : https://doi.org/10.3897/zookeys.811.28712) for butterflies, as well as SwissLepTeam (2010) for Zygaenidae.","type":"OCCURRENCE","hostingOrganizationKey":"23e067c0-a255-11da-beae-b8a03c50a862","hostingOrganizationTitle":"GBIF Swiss Node","publishingCountry":"CH","publishingOrganizationKey":"64ee55c9-570a-42af-b7da-3f13c6b4e5a9","publishingOrganizationTitle":"Swiss National Biodiversity Data and Information Centres – infospecies.ch","license":"http://creativecommons.org/licenses/by/4.0/legalcode","decades":[1830,1840,1850,1860,1870,1880,1890,1900,1910,1920,1930,1940,1950,1960,1970,1980,1990,2000,2010,2020],"keywords":["Occurrence"],"recordCount":1771865},{"key":"d4aa2255-f927-4220-af22-2958298733b7","title":"Sistema de Información de la vegetación Ibérica y Macaronésica","doi":"10.15468/qyzfdt","type":"OCCURRENCE","hostingOrganizationKey":"6c4a0bb0-2a4d-11d8-aa2d-b8a03c50a862","hostingOrganizationTitle":"GBIF-Spain","publishingCountry":"ES","publishingOrganizationKey":"cb202839-87c6-456a-821c-dc5b268a200f","publishingOrganizationTitle":"CeDoc of Plant Biodiversity (CeDocBIV), Univ. Barcelona","license":"http://creativecommons.org/licenses/by-nc/4.0/legalcode","recordCount":1709819},{"key":"a4b7c71e-fc73-434e-a008-d63c222179d0","title":"FloraCAT: Banco de datos de los cormófitos de Cataluña","doi":"10.15470/fzwiiu","description":"FloraCat es un banco de datos que recoge las observaciones sobre Cormófitos (pteridofitos, gimnosperamas y angiospermas) que a aparecen en la bibliografía especializada en el marco territorial de Cataluña. También se recoge la información taxonómica, ecológica, corológica, fitosociológica, etc., del taxón, siempre que estos datos figuren en el trabajo.","type":"OCCURRENCE","hostingOrganizationKey":"6c4a0bb0-2a4d-11d8-aa2d-b8a03c50a862","hostingOrganizationTitle":"GBIF-Spain","publishingCountry":"ES","publishingOrganizationKey":"7b4f2f30-a456-11d9-8049-b8a03c50a862","publishingOrganizationTitle":"Banc de dades de biodiversitat de Catalunya","license":"http://creativecommons.org/licenses/by-nc/4.0/legalcode","decades":[1700,1800,1810,1820,1830,1840,1850,1860,1870,1880,1890,1900,1910,1920,1930,1940,1950,1960,1970,1980,1990,2000,2010],"keywords":["Occurrence","Observation"],"recordCount":1703418},{"key":"02d1e772-54ee-4767-b4b8-c35f0c7270ba","title":"NBIS Records to December 2016","doi":"10.15468/jca5lo","description":"Species records for the county of Norfolk","type":"OCCURRENCE","hostingOrganizationKey":"07f617d0-c688-11d8-bf62-b8a03c50a862","hostingOrganizationTitle":"National Biodiversity Network","publishingCountry":"GB","publishingOrganizationKey":"05c84e36-2006-4e3d-ad77-ebd529aa09c4","publishingOrganizationTitle":"Norfolk Biodiversity Information Service","license":"http://creativecommons.org/licenses/by-nc/4.0/legalcode","decades":[1000,1100,1200,1300,1400,1500,1600,1700,1800,1810,1820,1830,1840,1850,1860,1870,1880,1890,1900,1910,1920,1930,1940,1950,1960,1970,1980,1990,2000,2010],"recordCount":1715185},{"key":"4cf3eec1-b902-40c9-b15b-05c5fe5928b6","title":"CSIC-Real Jardín Botánico-Anthos. Sistema de Información de las Plantas de España","doi":"10.15468/4wnutv","description":"El Real Jardín Botánico ha desarrollado y mantenido diversas bases de datos sobre las plantas de la Península Ibérica. Uno de los proyectos que se desarrollaron en el RJB en la década de 1990 consistió en extraer de la literatura los datos de distribución de plantas. En 1999, cuando esta base de datos contaba con aproximadamente 600.000 registros, se continuó el trabajo a través del programa ANTHOS, financiado por la Fundación Biodiversidad (Ministerio de Agricultura, Alimentación y Medio Ambiente) y el Consejo Superior de Investigaciones Científicas - Real Jardín Botánico (Ministerio de Economía y Competitividad). Desde el año 2006 cuenta con una aplicación desarrollada sobre un sistema de información geográfica (SIG) que integra y mejora los procedimientos y consultas de la anterior, incrementa notablemente el conjunto de los datos disponibles —en la actualidad tenemos c. 1,8 millones—, hasta un horizonte de c. 3,5 millones de registros que estimamos para la bibliografía botánica de España. Además, la nueva aplicación combina la información corológica con otra de tipo cartográfico sobre variables ambientales y mapas de referencia, lo que permite localizar con mayor exactitud las citas de plantas, así como explicar de forma visual los patrones de distribución de las distintas especies. Se ha elegido como ámbito geográfico general del proyecto, la vista de la Península Ibérica e islas de la Macaronesia (Canarias, Madeira y Azores) como representación de las unidades biogeográficas presentes en España, de manera que se pueda estudiar la distribución de un taxon en todo el territorio nacional y zonas aledañas, e integrado en su componente geográfica.\nActualmente la información está también accesible a través del portal de colecciones del RJB (http://colecciones.rjb.csic.es/), con lo que conseguimos llegar aún a más usuarios.","type":"OCCURRENCE","hostingOrganizationKey":"6c4a0bb0-2a4d-11d8-aa2d-b8a03c50a862","hostingOrganizationTitle":"GBIF-Spain","publishingCountry":"ES","publishingOrganizationKey":"0363cbd4-f666-455e-8e86-0bbddcf51950","publishingOrganizationTitle":"CSIC-Real Jardín Botánico","license":"http://creativecommons.org/licenses/by-nc/4.0/legalcode","keywords":["Other"],"recordCount":1667138},{"key":"ce58b7bb-fed6-46b9-9424-135499c7afdf","title":"Garden Bird Surveys","doi":"10.15468/jsjoae","description":"The Garden Bird Survey (GBS) has been run by the Canberra Ornithologists Group (COG) since 3 July 1981.  Summary results of the GBS are published by COG in the Annual Bird Report  published as an issue of \"Canberra Bird Notes\" in hard copy and on the COG website  http://cbn.canberrabirds.org.au/ (navigate through the link to Canberra Bird Notes).\n\nThe basis of the Survey is a site equivalent in area to a circle of 100m in radius around the observer's home or workplace.    Not all sites are circular but all are approximately 3Ha in area.  There is no restriction on the elevation of the bird when observed, and birds flying over the site are included.\n\nMost of the Survey sites are located in the urban area of the ACT but some are also located in the City of Queanbeyan and the villages and rural residential areas in the areas of NSW surrounding the ACT.  A State indicator shows which sites are inside or outside the ACT.\n\n\n\nThe observation period is determined by standard starting dates for each year, with a year always commencing on 3 July.  In most cases the observation period is 7 days so that within each year the starting date of each period is the same day of the week.  Exceptions are:\n-\tIn Leap Years the period commencing February 26 is 8 days to accommodate the 29 February; and\n-\tEvery year the period beginning 25 June is 8 days to enable a seamless match to the first day of the week beginning 3 July.\nThe basic counting rule is to report the maximum number of birds of a species seen at any time during the week.  For example:\n-\tIf ten birds of species \"A\" are seen on the first day of a period and twelve on the second day, record \"12\".    \n-\tIf in the same period 4 birds of species \"B\" are seen on the second day and five birds of species \"B\" are seen on the sixth day report \"5\".  \n\nApplication of this rule means that the survey results are not appropriate for measuring the numbers of birds that are migrating in flocks since only the biggest flock is recorded with no measure of the number of flocks.\n\nIt should be noted that number of sites operating in any period may vary, both between years and within a year.   The number of sites tends to be low for the periods beginning 3 and 10 July (due to delays in obtaining new Charts) and from 18 December to 8 January due to observers being away on vacation.","type":"OCCURRENCE","hostingOrganizationKey":"3c5e4331-7f2f-4a8d-aa56-81ece7014fc8","hostingOrganizationTitle":"Atlas of Living Australia","publishingCountry":"AU","publishingOrganizationKey":"4e1336c8-6101-44ef-8dc1-8af45ba7178a","publishingOrganizationTitle":"Canberra Ornithologists Group","license":"http://creativecommons.org/licenses/by-nc/4.0/legalcode","recordCount":1655345},{"key":"b84a3711-b4ca-4e4f-adac-80dfaea98d1c","title":"Hatikka Observation Database","doi":"10.15468/te1t6l","description":"Hatikka Observation Database is a digital field journal for Finnish amateur naturalists. It contains occurrence data for all taxon groups from Finland and several other countries.","type":"OCCURRENCE","hostingOrganizationKey":"04fd2e13-6881-4e5c-9dd1-8fdd9ab993c1","hostingOrganizationTitle":"Finnish Biodiversity Information Facility","publishingCountry":"FI","publishingOrganizationKey":"04fd2e13-6881-4e5c-9dd1-8fdd9ab993c1","publishingOrganizationTitle":"Finnish Biodiversity Information Facility","license":"http://creativecommons.org/licenses/by/4.0/legalcode","decades":[1700,1800,1810,1820,1830,1840,1850,1860,1870,1880,1890,1900,1910,1920,1930,1940,1950,1960,1970,1980,1990,2000,2010],"keywords":["Occurrence"],"recordCount":1616778},{"key":"c4e76595-b467-4f88-8067-b8de661b99c5","title":"Données STOC-EPS","doi":"10.15468/ocucid","description":"Données pour le programme STOC-EPS, transmises par le CESCO (UMR 7204), à mettre à jour annuellement","type":"OCCURRENCE","hostingOrganizationKey":"1928bdf0-f5d2-11dc-8c12-b8a03c50a862","hostingOrganizationTitle":"UMS PatriNat (OFB-CNRS-MNHN), Paris","publishingCountry":"FR","publishingOrganizationKey":"1928bdf0-f5d2-11dc-8c12-b8a03c50a862","publishingOrganizationTitle":"UMS PatriNat (OFB-CNRS-MNHN), Paris","license":"http://creativecommons.org/licenses/by-nc/4.0/legalcode","keywords":["Occurrence"],"recordCount":1610069},{"key":"882d105b-fa99-4c3b-a736-b43674ce91f3","title":"Biodiversitätsdatenbank des Landes Salzburg","doi":"10.15468/kiosdm","description":"The Haus der Natur maintains a biodiversity database documenting the animal and plant species of Salzburg and adjacent areas. The database is being continually expanded and includes detailed information about the biodiversity and distribution of many groups of animals, fungi and plants. Special attention is given to the endangered species, threatened habitats, and protected areas of Salzburg. All coordinates for gbif are rounded to two decimal places.","type":"OCCURRENCE","hostingOrganizationKey":"7a070ba0-bafb-11d9-8e53-b8a03c50a862","hostingOrganizationTitle":"Haus der Natur Salzburg, Museum für Natur und Technik","publishingCountry":"AT","publishingOrganizationKey":"7a070ba0-bafb-11d9-8e53-b8a03c50a862","publishingOrganizationTitle":"Haus der Natur Salzburg, Museum für Natur und Technik","license":"http://creativecommons.org/licenses/by/4.0/legalcode","recordCount":1606545},{"key":"a99ca3c9-7448-4bf6-aba5-0ef61b01232c","title":"Rotherham Biological Records Centre - Non-sensitive Records from all taxonomic groups","doi":"10.15468/d3tufo","description":"This dataset is part of a pilot project of Yorkshire and Humber Environmental Data Network (YHEDN) to mobilise LRC data and Naturalist data from our region more widely.\n \n The data has been collated into 2 datasets for NBN (Sensitive and non-sensitive species) with the original survey name as an attribute. More detailed meta-data can be obtained for individual surveys on request from the centre.\n \n Currently Sensitive species includes all bats, badgers and all birds of prey.\n \n Some data has been excluded altogether from these datasets until such time as we can clarify our authority to distribute it but this can be obtained directly from the LRC.","type":"OCCURRENCE","hostingOrganizationKey":"07f617d0-c688-11d8-bf62-b8a03c50a862","hostingOrganizationTitle":"National Biodiversity Network","publishingCountry":"GB","publishingOrganizationKey":"1467829d-0779-43eb-9fab-0e27e48b6457","publishingOrganizationTitle":"Rotherham Biological Records Centre","license":"http://creativecommons.org/licenses/by-nc/4.0/legalcode","decades":[1700,1800,1810,1820,1830,1840,1850,1860,1870,1880,1890,1900,1910,1920,1930,1940,1950,1960,1970,1980,1990,2000,2010],"recordCount":1604504},{"key":"cb850587-95f8-4ab1-83e4-a20267b3aea8","title":"Flore Franco-Belge","doi":"10.15468/3bdhl3","description":"La collecte de données a débuté en 1973. Le travail de terrain s'est terminé en 1998.\nUn atlas a été publié par l'Institut Floristique Franco-Belge en 2010.","type":"OCCURRENCE","hostingOrganizationKey":"1928bdf0-f5d2-11dc-8c12-b8a03c50a862","hostingOrganizationTitle":"UMS PatriNat (OFB-CNRS-MNHN), Paris","publishingCountry":"FR","publishingOrganizationKey":"1928bdf0-f5d2-11dc-8c12-b8a03c50a862","publishingOrganizationTitle":"UMS PatriNat (OFB-CNRS-MNHN), Paris","license":"http://creativecommons.org/licenses/by-nc/4.0/legalcode","keywords":["Occurrence"],"recordCount":1560645},{"key":"788439f0-3b56-11dc-8c19-b8a03c50a862","title":"NZ National Vegetation Survey occurrence data","doi":"10.15468/uzxpbn","description":"The National Vegetation Survey Databank (NVS) is a physical archive and electronic databank containing records of over 94,000 vegetation survey plots - including data from over 21,000 permanent plots. These data can be explored online as well as requested for download. NVS provides a unique record, spanning more than 50 years, of indigenous and exotic plants in New Zealand&#39;s terrestrial ecosystems, from Northland to Stewart Island and the Kermadec and Chatham islands. A broad range of habitats are covered, with special emphasis on indigenous forests and grasslands. The physical archive includes plot sheets, maps, and photographs from many years of vegetation surveys.","type":"OCCURRENCE","hostingOrganizationKey":"6b2f029b-7823-4b84-9c30-31ff364238fe","hostingOrganizationTitle":"Landcare Research","publishingCountry":"NZ","publishingOrganizationKey":"6b2f029b-7823-4b84-9c30-31ff364238fe","publishingOrganizationTitle":"Landcare Research","license":"http://creativecommons.org/licenses/by-nc/4.0/legalcode","decades":[1940,1950,1960,1970,1980,1990,2000,2010],"keywords":["Occurrence","Observation"],"recordCount":1565774},{"key":"dce8feb0-6c89-11de-8225-b8a03c50a862","title":"Australian Museum provider for OZCAM","doi":"10.15468/e7susi","description":"Australian Museum provider for OZCAM","type":"OCCURRENCE","hostingOrganizationKey":"3c5e4331-7f2f-4a8d-aa56-81ece7014fc8","hostingOrganizationTitle":"Atlas of Living Australia","publishingCountry":"AU","publishingOrganizationKey":"770c30d2-c2a8-4bb2-8056-6167297cddae","publishingOrganizationTitle":"Australian Museum","license":"http://creativecommons.org/licenses/by/4.0/legalcode","recordCount":1556104},{"key":"40c0f670-ee87-4576-be9d-2725e0b47035","title":"SA Fauna (BDBSA)","doi":"10.15468/xsderl","description":"The flora and fauna data sets represent the spatial locations of flora and fauna species observation data maintained by DEW in the Biological Databases of South Australia.","type":"OCCURRENCE","hostingOrganizationKey":"3c5e4331-7f2f-4a8d-aa56-81ece7014fc8","hostingOrganizationTitle":"Atlas of Living Australia","publishingOrganizationKey":"4c46f883-69c1-42ac-8a20-4cdba2afb9a6","publishingOrganizationTitle":"South Australia, Department for Environment and Water","license":"http://creativecommons.org/licenses/by/4.0/legalcode","recordCount":1507122},{"key":"f9a70dab-004b-45ad-90cb-24d8ff645b44","title":"Centre for Biodiversity Genomics - Canadian Specimens","doi":"10.15468/mbwnw9","description":"The Centre for Biodiversity Genomics (CBG) at the University of Guelph is spearheading a novel approach to biodiversity research within Canada and internationally. Its three research units -- CBG Collections, CBG Genomics (or the Canadian Centre for DNA Barcoding, CCDB) and CBG Informatics -- are advancing 21st century biodiversity science by enabling species identification and discovery that is based on the analysis of sequence diversity in short, standardized gene regions, DNA barcodes. CBG Collections maintains a globally unique natural history collection of 3.3 million specimens. Every specimen is digitized, and the exact storage location of each specimen is tracked in a collection management information system for quick reference and retrieval. The databased information for every voucher is also archived in the Barcode of Life Data System (BOLD; www.boldsystems.org), permitting the permanent storage, validation and analysis of barcode sequence data and associated specimen metadata. Most (88.6%) of the specimens have been DNA barcoded, and a few representatives of every species have been digitally imaged. The CCDB holds high quality DNA extracts in a secure 2000 ft2 ultra-cold freezer bank. These DNA extracts reflect residual material following the barcode analysis of samples; it contains 5.3 million extracts from over 250,000 species derived from 231 countries, oceans and dependent territories, all connected to a voucher specimen on BOLD.\n\nThis resource represents the Canadian specimens held in the Specimen Archives of CBG Collections as of Dec 2017.  Please address inquiries to ccdbcol@uoguelph.ca","type":"OCCURRENCE","hostingOrganizationKey":"296fe5cf-ae43-4212-8f77-293e807d0d5a","hostingOrganizationTitle":"University of Guelph","publishingCountry":"CA","publishingOrganizationKey":"296fe5cf-ae43-4212-8f77-293e807d0d5a","publishingOrganizationTitle":"University of Guelph","license":"http://creativecommons.org/publicdomain/zero/1.0/legalcode","decades":[1980,1990,2000,2010],"keywords":["Occurrence","Specimen"],"recordCount":1500515},{"key":"87b6acb8-4db2-4769-93ca-e086040dfe14","title":"Bugbase, Lepidopterological Society","doi":"10.15468/fhqj1a","description":"Database on the recordings of Lepidoptera and Trichoptera by the Lepidopterological Society of Denmark (https://www.lepidoptera.dk). Occurrences are based on observations and collecting by any means, trapping, photos etc. Society specialist groups check data for errors and unusual records, mostly by contacting the observer/recorder. To assure quality of data, only members of the society are given access to enter records in the database.","type":"OCCURRENCE","hostingOrganizationKey":"299958e0-4c06-11d8-b290-b8a03c50a862","hostingOrganizationTitle":"Danish Biodiversity Information Facility","publishingCountry":"DK","publishingOrganizationKey":"ab76e54b-a6cf-4024-9e29-30df1e2f6383","publishingOrganizationTitle":"Lepidopterological Society, Denmark","license":"http://creativecommons.org/licenses/by-nc/4.0/legalcode","decades":[1900,1910,1920,1930,1940,1950,1960,1970,1980,1990,2000,2010,2020],"keywords":["butterflies","microlepidoptera","Trichoptera","Lepidoptera","caddisflies","moths","macrolepidoptera","Occurrence"],"recordCount":1467575},{"key":"b7cd5ad0-f65a-4de1-a1bb-318cf5ae12f8","title":"LERN Records","doi":"10.15468/esxc9a","description":"Records held within the LERN database which have been marked as having been validated (within LERN procedures) and where LERN has the agreement of the data owner to publish them on the NBN Gateway.","type":"OCCURRENCE","hostingOrganizationKey":"07f617d0-c688-11d8-bf62-b8a03c50a862","hostingOrganizationTitle":"National Biodiversity Network","publishingCountry":"GB","publishingOrganizationKey":"0ccc789d-ca07-4bb9-a1e7-a1d1b8491287","publishingOrganizationTitle":"Lancashire Environment Record Network","license":"http://creativecommons.org/licenses/by-nc/4.0/legalcode","decades":[1500,1600,1700,1800,1810,1820,1830,1840,1850,1860,1870,1880,1890,1900,1910,1920,1930,1940,1950,1960,1970,1980,1990,2000,2010],"recordCount":1417679},{"key":"358fbd61-739f-4102-afc9-9d468f571e4d","title":"Fauna Atlas N.T.","doi":"10.15468/eeg0zb","description":"Record fauna observational summary data within the N.T. Taxonomic and collection data for observed mammals, birds, reptiles, frogs. Includes presence/absence info, date, time, and location of sighting. Data collected after 1995 may also include counts.","type":"OCCURRENCE","hostingOrganizationKey":"3c5e4331-7f2f-4a8d-aa56-81ece7014fc8","hostingOrganizationTitle":"Atlas of Living Australia","publishingOrganizationKey":"3db29215-b8da-4f4e-875e-a5f03ab1c57c","publishingOrganizationTitle":"Northern Territory Department of Environment and Natural Resources","license":"http://creativecommons.org/licenses/by/4.0/legalcode","recordCount":1415900},{"key":"861e6afe-f762-11e1-a439-00145eb45e9a","title":"Harvard University Herbaria: All Records","doi":"10.15468/o3pvnh","description":"This dataset contains all digitized specimen records stewarded by the Harvard University Herbaria. \n\nThe Harvard University Herbaria, with over 5 million specimens, is the world’s largest University Herbaria. Included in the Herbaria are what were once six separate herbarium collections: * Herbarium of the Arnold Arboretum (A) * Economic Herbarium of Oakes Ames (ECON) * Oakes Ames Orchid Herbarium (AMES) * Farlow Herbarium (FH) * Gray Herbarium (GH) * New England Botanical Club Herbarium (NEBC).\n\nDarwinCore data follows the AppleCore guidance https://code.google.com/p/applecore/.","type":"OCCURRENCE","hostingOrganizationKey":"485ff490-e3b7-11db-9acc-b8a03c50a862","hostingOrganizationTitle":"Harvard University Herbaria","publishingCountry":"US","publishingOrganizationKey":"485ff490-e3b7-11db-9acc-b8a03c50a862","publishingOrganizationTitle":"Harvard University Herbaria","license":"http://creativecommons.org/licenses/by/4.0/legalcode","keywords":["Occurrence","Specimen"],"recordCount":1405390},{"key":"1fec2829-4ac0-4329-b448-6f768b8d3427","title":"Liste des espèces de la faune sauvage de la base de données naturalistes Faune-France 2018.","doi":"10.15468/wkzdf4","description":"Les espèces concernées par le jeux de données regardent les taxons suivants : Amphibiens, Mammifères hors Chiroptères, Oiseaux, Orthoptères, Reptiles et Rhopalocères. Pour chaque taxon, le jeu de données a été crée à partir du tirage aléatoire d'une observation de ce taxon réalisée à l'intérieur d'une même commune. \nLa diffusion de la localisation de certaines espèces pouvant nuire à leur conservation, les observations à la maille ont été floutées à l'échelle du département (cas de la Cigogne noire, du Pélobate brun, de la Salamandre de Lanza, de la Vipère d'Orsini, du Fadet des tourbières, du Pygargue à queue blanche, du Gypaète barbu, du Grand Tétras, de la Grue cendrée, du Pic tridactyle, du Loup gris, du Lynx boréal, de l'Ours brun).","type":"OCCURRENCE","hostingOrganizationKey":"1928bdf0-f5d2-11dc-8c12-b8a03c50a862","hostingOrganizationTitle":"UMS PatriNat (OFB-CNRS-MNHN), Paris","publishingCountry":"FR","publishingOrganizationKey":"1928bdf0-f5d2-11dc-8c12-b8a03c50a862","publishingOrganizationTitle":"UMS PatriNat (OFB-CNRS-MNHN), Paris","license":"http://creativecommons.org/licenses/by-nc/4.0/legalcode","keywords":["Occurrence"],"recordCount":1401185},{"key":"a4d53b24-d61b-4ee5-addd-8b42d54a913f","title":"Finnish Winter Bird Census","doi":"10.15468/vmdzin","description":"Finnish Winter Bird Census database contains occurrence data for birds and mammals in Finland since 1956/57.","type":"OCCURRENCE","hostingOrganizationKey":"04fd2e13-6881-4e5c-9dd1-8fdd9ab993c1","hostingOrganizationTitle":"Finnish Biodiversity Information Facility","publishingCountry":"FI","publishingOrganizationKey":"04fd2e13-6881-4e5c-9dd1-8fdd9ab993c1","publishingOrganizationTitle":"Finnish Biodiversity Information Facility","license":"http://creativecommons.org/licenses/by/4.0/legalcode","decades":[1940],"keywords":["Occurrence","Observation"],"recordCount":1365549},{"key":"0943f690-fde5-11dd-83f4-b8a03c50a862","title":"Phanerogamic Botanical Collections (S)","doi":"10.15468/yo3mmu","description":"This database contains information on the specimens in the Phanerogamic Botanical Collections of the Swedish Museum of Natural History.","type":"OCCURRENCE","hostingOrganizationKey":"4c415e40-1e21-11de-9e40-a0d6ecebb8bf","hostingOrganizationTitle":"GBIF-Sweden","publishingCountry":"SE","publishingOrganizationKey":"4c415e40-1e21-11de-9e40-a0d6ecebb8bf","publishingOrganizationTitle":"GBIF-Sweden","license":"http://creativecommons.org/publicdomain/zero/1.0/legalcode","keywords":["Occurrence","Specimen"],"recordCount":1355031},{"key":"aae308f4-9f9c-4cdd-b4ef-c026f48be551","title":"Snow Entomological Museum Collection","doi":"10.15468/fhntpy","description":"SEMC (Snow Entomological Museum Collection) comprises nearly 5 million pinned insect specimens.  Our strengths are Apoidea, Neotropical Coleoptera (especially Staphylinidae, Hydrophiloidea, and Chrysomoloidea), Mecoptera, and fossil insects.\nWe have digitized approximately 800,000 individual specimens (mostly Apoidea and Staphylinidae, Orthoptera, and various other smaller families).","type":"OCCURRENCE","hostingOrganizationKey":"b554c320-0560-11d8-b851-b8a03c50a862","hostingOrganizationTitle":"University of Kansas Biodiversity Institute","publishingCountry":"US","publishingOrganizationKey":"b554c320-0560-11d8-b851-b8a03c50a862","publishingOrganizationTitle":"University of Kansas Biodiversity Institute","license":"http://creativecommons.org/licenses/by/4.0/legalcode","keywords":["Specimen","Occurrence"],"recordCount":1374915},{"key":"c779b049-28f3-4daf-bbf4-0a40830819b6","title":"EBCC Atlas of European Breeding Birds","doi":"10.15468/adtfvf","description":"In 1997 the EBCC Atlas of European breeding birds, also referred to as European Ornithological Atlas or  'EOA', was published. This voluminous book was the result of more than 25 years of fieldwork, cooperation, data gathering, data processing, writing and editing. Next to a beautiful book the data in the maps provides countless possibilities fur further studies on the distribution of the European breeding birds.","type":"OCCURRENCE","hostingOrganizationKey":"1c51595e-f1e9-467f-94e5-e1b65d15b30f","hostingOrganizationTitle":"Dutch Centre for Field Ornithology (Sovon)","publishingCountry":"NL","publishingOrganizationKey":"d3f94e8a-bb06-4d2b-89a6-6cd66abfa66c","publishingOrganizationTitle":"European Bird Census Council (EBCC)","license":"http://creativecommons.org/licenses/by/4.0/legalcode","decades":[1970,1980,1990],"keywords":["Breeding Birds","Europe","Occurrence","Breeding Birds","Europe","Observation"],"recordCount":1339711},{"key":"bb5b30b4-827e-4d5e-a86a-825d65cb6583","title":"Paleobiology Database","doi":"10.15468/jfqhiu","description":"The Paleobiology Database (PBDB) is a non-governmental, non-profit public resource for paleontological data. It has been organized and operated by a multi-disciplinary, multi-institutional, international group of paleobiological researchers. Its purpose is to provide global, collection-based occurrence and taxonomic data for organisms of all geological ages, as well data services to allow easy access to data for independent development of analytical tools, visualization software, and applications of all types. The Database’s broader goal is to encourage and enable data-driven collaborative efforts that address large-scale paleobiological questions.","type":"OCCURRENCE","hostingOrganizationKey":"2053a639-84c3-4be5-b8bc-96b6d88a976c","hostingOrganizationTitle":"VertNet","publishingCountry":"US","publishingOrganizationKey":"b711353c-44d7-4e8b-90c5-16fea0d247e0","publishingOrganizationTitle":"Paleobiology Database","license":"http://creativecommons.org/licenses/by/4.0/legalcode","keywords":["Occurrence","Specimen"],"recordCount":1310925},{"key":"52f2051b-c47e-403a-8e32-04b2f2273c20","title":"Aranzadi Ringing Scheme (bird ring-recovery data)","doi":"10.15470/gprffz","description":"This data base consists of bird ring-recovery data from the Aranzadi Ringing Scheme (Aranzadi Sciences Society, Spain). Data have been compiled since 1950. For each record, you will find the following information: species, locality (province, country, X and Y coordinates), catching method, and ring-recovery conditions and circumstances.","type":"OCCURRENCE","hostingOrganizationKey":"6c4a0bb0-2a4d-11d8-aa2d-b8a03c50a862","hostingOrganizationTitle":"GBIF-Spain","publishingCountry":"ES","publishingOrganizationKey":"823818f6-0696-4e29-bc4c-b6f3817535a7","publishingOrganizationTitle":"Aranzadi Science Society","license":"http://creativecommons.org/licenses/by/4.0/legalcode","decades":[1950,1960,1970,1980,1990,2000,2010],"keywords":["Birds; Europe; Ringing; Ring-recovery data; Aranzadi Sciences Society; Banding; Aves;","Observation"],"recordCount":1329271},{"key":"1f968e89-ca96-4065-91a5-4858e736b5aa","title":"Waarnemingen.be - Butterfly occurrences in Flanders and the Brussels Capital Region, Belgium","doi":"10.15468/ezfbee","description":"<p>Waarnemingen.be - Butterfly occurrences in Flanders and the Brussels Capital Region, Belgium is a species occurrence dataset published by Natuurpunt and described (v1.4) in Maes et al. (2016, https://doi.org/10.3897/zookeys.585.8019). The dataset contains close to 1.3 million butterfly (Lepidoptera excluding moths) occurrences of 69 naturally occurring species (native, vagrant or migrant species), recorded by volunteers (citizen scientists), mainly since 2008. Together with the dataset Maes et al. (2016, https://doi.org/10.15468/njgbmh), it represents the most complete overview of butterflies in Flanders and the Brussels Capital Region (north Belgium). The occurrences are derived from the database http://www.waarnemingen.be, hosted at the nature conservation NGO Natuurpunt in collaboration with Stichting Natuurinformatie. Standardized information regarding the occurrence's sex, lifeStage, behavior, occurrenceRemarks, and samplingProtocol is included as well.</p>\n<p>Generalized and/or withheld information: location information is generalized to 5 x 5 km² Universal Transverse Mercator (UTM) grid cells. Observer name, exact XY-coordinates, toponyms, and photographs are not included in the published dataset, but are known in the source database.</p>\n<p>To allow anyone to use this dataset, we have released the data to the public domain under a Creative Commons Zero waiver (http://creativecommons.org/publicdomain/zero/1.0/). We would appreciate however, if you read and follow these norms for data use (http://www.natuurpunt.be/normen-voor-datagebruik) and provide a link to the original dataset (https://doi.org/10.15468/ezfbee) whenever possible. If you use these data for a scientific paper, please cite the dataset following the applicable citation norms and/or consider us for co-authorship. We are always interested to provide more information or know how you have used the data, so please contact us via the contact information provided in the metadata or natuurdata@natuurpunt.be.</p>\n<p>The publication of this dataset is supported by INBO and funded by Research Foundation - Flanders (FWO) as part of the Belgian contribution to LifeWatch.</p>","type":"OCCURRENCE","hostingOrganizationKey":"1cd669d0-80ea-11de-a9d0-f1765f95f18b","hostingOrganizationTitle":"Research Institute for Nature and Forest (INBO)","publishingCountry":"BE","publishingOrganizationKey":"4d3ceea8-5699-439d-a899-decac9cbbdac","publishingOrganizationTitle":"Natuurpunt","license":"http://creativecommons.org/publicdomain/zero/1.0/legalcode","decades":[1900,1910,1920,1930,1940,1950,1960,1970,1980,1990,2000,2010],"keywords":["Occurrence","Observation","observation.org","butterflies","Lepidoptera","observations","citizen science","waarnemingen.be","distribution","Natuurpunt"],"recordCount":1298346},{"key":"cb9beff3-a185-486f-975a-732251444158","title":"Herbarium specimens of Université de Montpellier 2, Institut de Botanique (MPU))","doi":"10.15468/gyvkrn","description":"The herbarium is estimated at about 4 million samples\n\t\tdistributed in 15,000 packets. The quantity and quality is one of the\n\t\tlargest French collections of dried plants.","type":"OCCURRENCE","hostingOrganizationKey":"2cd829bb-b713-433d-99cf-64bef11e5b3e","hostingOrganizationTitle":"MNHN - Museum national d'Histoire naturelle","publishingCountry":"FR","publishingOrganizationKey":"2853c0e7-c758-4c9c-83a2-7c2d18967fb9","publishingOrganizationTitle":"Herbarium of Université de Montpellier 2, Institut de Botanique","license":"http://creativecommons.org/licenses/by/4.0/legalcode","keywords":["Occurrence","Specimen","Taxonomy","Botany","Specimens","Plants","Collections"],"recordCount":1317546},{"key":"169fa761-2fb9-4022-93bd-e22b7a062efd","title":"PlutoF platform observations","doi":"10.15468/h7qtfd","description":"Observation records from Citizen Science and research projects hosted by PlutoF platform. All observations have been moderated and verified on PlutoF workbench by appointed persons.","type":"OCCURRENCE","hostingOrganizationKey":"0870a77b-587c-4369-a8ed-bc3d347b8e1c","hostingOrganizationTitle":"PlutoF","publishingCountry":"EE","publishingOrganizationKey":"0870a77b-587c-4369-a8ed-bc3d347b8e1c","publishingOrganizationTitle":"PlutoF","license":"http://creativecommons.org/licenses/by-nc/4.0/legalcode","recordCount":1286416},{"key":"d34ed8a4-d3cb-473c-a11c-79c5fec4d649","title":"Vascular Plants, Field notes, Oslo (O)","doi":"10.15468/w8gru5","description":"Vascular Plants, Field notes from Norway","type":"OCCURRENCE","hostingOrganizationKey":"64795dcb-ad74-41b3-95e5-cc52ba754776","hostingOrganizationTitle":"GBIF.no","publishingCountry":"NO","publishingOrganizationKey":"f314b0b0-e3dc-11d9-8d81-b8a03c50a862","publishingOrganizationTitle":"Natural History Museum, University of Oslo","license":"http://creativecommons.org/licenses/by/4.0/legalcode","keywords":["Occurrence"],"recordCount":1218925},{"key":"3d2619bf-9cb3-4c0e-8f2c-84e8a0586aac","title":"Atlas of Finnish Macrolepidoptera","doi":"10.15468/eea7u4","description":"Combined atlas of butterflies in Finland.","type":"OCCURRENCE","hostingOrganizationKey":"04fd2e13-6881-4e5c-9dd1-8fdd9ab993c1","hostingOrganizationTitle":"Finnish Biodiversity Information Facility","publishingCountry":"FI","publishingOrganizationKey":"04fd2e13-6881-4e5c-9dd1-8fdd9ab993c1","publishingOrganizationTitle":"Finnish Biodiversity Information Facility","license":"http://creativecommons.org/licenses/by/4.0/legalcode","decades":[1800,1810,1820,1830,1840,1850,1860,1870,1880,1890,1900,1910,1920,1930,1940,1950,1960,1970,1980,1990],"keywords":["Occurrence","Observation"],"recordCount":1216807}],"facets":[]}
  recorded_at: 2020-12-08 23:53:35 GMT
  recorded_with: vcr/0.5.4, webmockr/0.7.0
