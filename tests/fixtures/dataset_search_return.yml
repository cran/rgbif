http_interactions:
- request:
    method: get
    uri: https://api.gbif.org/v1/dataset/search?limit=100&type=OCCURRENCE
    body:
      encoding: ''
      string: ''
    headers:
      Accept-Encoding: gzip, deflate
      Accept: application/json, text/xml, application/xml, */*
      User-Agent: r-curl/3.2 crul/0.6.0 rOpenSci(rgbif/1.0.4.9100)
      X-USER-AGENT: r-curl/3.2 crul/0.6.0 rOpenSci(rgbif/1.0.4.9100)
  response:
    status:
      status_code: '200'
      message: OK
      explanation: Request fulfilled, document follows
    headers:
      status: HTTP/1.1 200 OK
      date: Wed, 10 Oct 2018 16:23:09 GMT
      content-type: application/json
      access-control-allow-origin: '*'
      access-control-allow-methods: HEAD, GET, POST, DELETE, PUT
      server: Jetty(9.3.z-SNAPSHOT)
      x-api-url: /v1/dataset/search?limit=100&type=OCCURRENCE
      cache-control: public, max-age=600
      x-varnish: 618005910 622756608
      age: '3'
      via: 1.1 varnish (Varnish/5.2)
      accept-ranges: bytes
      content-length: '124293'
      connection: keep-alive
    body:
      encoding: ASCII-8BIT
      string: {"offset":0,"limit":100,"endOfRecords":false,"count":16152,"results":[{"key":"4fa7b334-ce0d-4e88-aaae-2e0c138d049e","title":"EOD - eBird Observation Dataset","description":"eBird is a collective enterprise that takes a novel approach to citizen science by developing cooperative partnerships among experts in a wide range of fields: population ecologists, conservation biologists, quantitative ecologists, statisticians, computer scientists, GIS and informatics specialists, application developers, and data administrators. Managed by the Cornell Lab of Ornithology eBird’s goal is to increase data quantity through participant recruitment and engagement globally, but also to quantify and control for data quality issues such as observer variability, imperfect detection of species, and both spatial and temporal bias in data collection. eBird data are openly available and used by a broad spectrum of students, teachers, scientists, NGOs, government agencies, land managers, and policy makers. The result is that eBird has become a major source of biodiversity data, increasing our knowledge of the dynamics of species distributions, and having a direct impact on the conservation of birds and their habitats.","type":"OCCURRENCE","hostingOrganizationKey":"e2e717bf-551a-4917-bdc9-4fa0f342c530","hostingOrganizationTitle":"Cornell Lab of Ornithology","countryCoverage":[],"publishingCountry":"US","publishingOrganizationKey":"e2e717bf-551a-4917-bdc9-4fa0f342c530","publishingOrganizationTitle":"Cornell Lab of Ornithology","license":"http://creativecommons.org/publicdomain/zero/1.0/legalcode","decades":[1810,1820,1830,1840,1850,1860,1870,1880,1890,1900,1910,1920,1930,1940,1950,1960,1970,1980,1990,2000,2010],"keywords":["Observation","Occurrence"],"recordCount":361429888},{"key":"75956ee6-1a2b-4fa3-b3e8-ccda64ce6c2d","title":"INPN - Données flore des CBN agrégées par la FCBN","description":"Dès la création de leur Fédération (FCBN - www.fcbn.fr) en 1999, les onze Conservatoires botaniques nationaux (CBN) ont exprimé la volonté collective de constituer un système d’information national pour mettre en commun leurs données, et celles de leurs partenaires, sur la flore, la fonge et les végétations-habitats. C’est réellement en 2010 avec le lancement de l’établissement du Format Standard de Données sur la flore (FSD Flore), conçu comme le « format commun de données de la Fédération des CBN », que la démarche a été initiée. Il s’en est suivi de nombreux échanges ayant permis de finaliser le format, de le tester sur les premiers jeux de données, d’établir une charte d’adhésion au projet et d’élaborer le cadrage final de l’exercice d’agrégation des données. Le projet s’est concrétisé au premier trimestre 2013 à travers la mise au format des données détenues par les CBN et leur intégration dans le Système d’Information de la FCBN (SI-Flore). A l’horizon de l’année 2014, il résulte, de ce projet structurant, que la FCBN dispose d’un système d’information d’envergure nationale et fort de plus de 20 millions de données d’observation sur la flore de France. Les données centralisées ont été consolidées sur la base du référentiel TAXREF 5.0 et une mise à jour est prévue pour fin 2015.","type":"OCCURRENCE","hostingOrganizationKey":"5d5e5d82-076c-4e9a-b5b0-c88d1b691a6a","hostingOrganizationTitle":"GBIF France","countryCoverage":[],"publishingCountry":"FR","publishingOrganizationKey":"1928bdf0-f5d2-11dc-8c12-b8a03c50a862","publishingOrganizationTitle":"UMS PatriNat (AFB-CNRS-MNHN), Paris","license":"http://creativecommons.org/licenses/by/4.0/legalcode","decades":[1500,1600,1700,1800,1810,1820,1830,1840,1850,1860,1870,1880,1890,1900,1910,1920,1930,1940,1950,1960,1970,1980,1990,2000,2010],"keywords":["Occurrence","Flore, Flora, Conservatoire Botanique National, CBN, FCBN, observation"],"recordCount":20999334},{"key":"95db4db8-f762-11e1-a439-00145eb45e9a","title":"DOF","description":"DOFbasen. Please contact DOF (dof@dof.dk) before any use of DOFbase data in publications. Database of bird registrations administrated by Danish Ornithological Society (www.dof.dk). Danish Ornithological Society/BirdLife Denmark (in Danish: Dansk Ornitologisk Forening - DOF) is a private society working for the protection of birds and nature as well as the procurement of knowledge on birds. Information on sensitive species is omitted from the available data - see list here: http://www.dofbasen.dk/opslag/sensitive.php. Please contact DOF on how to obtain information on sensitive species","type":"OCCURRENCE","hostingOrganizationKey":"8b734449-479a-4924-8f7a-9a2a64112f8f","hostingOrganizationTitle":"Danish Ornithological Society","countryCoverage":[],"publishingCountry":"DK","publishingOrganizationKey":"8b734449-479a-4924-8f7a-9a2a64112f8f","publishingOrganizationTitle":"Danish Ornithological Society","license":"http://creativecommons.org/licenses/by-nc/4.0/legalcode","decades":[1700,1800,1810,1820,1830,1840,1850,1860,1870,1880,1890,1900,1910,1920,1930,1940,1950,1960,1970,1980,1990,2000,2010],"keywords":["Animalia","Europe","Observation","DOF","Occurrence","DOFbasen. Database of bird registrations administrated by Danish Ornithological Society (www.dof.dk). Danish Ornithological Society/BirdLife Denmark (in Danish: Dansk Ornitologisk Forening - DOF) is a private society working for the protection of birds and nature as well as the procurement of knowledge on birds. Information on sensitive species is omitted from the available data - see list here: http://www.dofbasen.dk/opslag/sensitive.php. Please contact DOF on how to obtain information on sensitive species","DENMARK"],"recordCount":19287097},{"key":"292a71df-588b-48fa-9ab5-29ae868ba88c","title":"Finnish Bird Ringing and Recovery Database","description":"Database of birds ringed in Finland and all reported encounters of the birds.","type":"OCCURRENCE","hostingOrganizationKey":"04fd2e13-6881-4e5c-9dd1-8fdd9ab993c1","hostingOrganizationTitle":"Finnish Biodiversity Information Facility","countryCoverage":[],"publishingCountry":"FI","publishingOrganizationKey":"04fd2e13-6881-4e5c-9dd1-8fdd9ab993c1","publishingOrganizationTitle":"Finnish Biodiversity Information Facility","license":"http://creativecommons.org/licenses/by/4.0/legalcode","decades":[1900,1910,1920,1930,1940,1950,1960,1970,1980,1990,2000,2010],"keywords":["Observation","Occurrence"],"projectIdentifier":"http://tun.fi/HR.48","recordCount":10930328},{"key":"906e6978-e292-4a8b-9c39-adf6bb0f3323","title":"Southern African Bird Atlas Project 2: Full protocol records","description":"The Second Southern African Bird Atlas Project (SABAP2) is the most important bird conservation project in the region. It holds this status because all other conservation initiatives depend on the results of the bird atlas, to a greater or lesser extent. You cannot determine the conservation status of a species unless you know its range and how this is changing. So red-listing depends on the results of this project. So does the selection of sites and habitats critical to bird conservation. SABAP2 is the follow-up project to the Southern African Bird Atlas Project (for which the acronym was SABAP, and which is now referred to as SABAP1). This first bird atlas project took place from 1987-1991. The second bird atlas project started on 1 July 2007 and plans to run indefinitely. The current project is a partnership between the Animal Demography Unit at the University of Cape Town, BirdLife South Africa and the South African National Biodiversity Institute (SANBI). The project aims to map the distribution and relative abundance of birds in southern Africa and the atlas area includes South Africa, Lesotho and Swaziland. SABAP2 was launched in Namibia in May 2012.\n\nThe field work for this project is done by more than one thousand nine hundred volunteers, known as citizen scientists - they are making a huge contribution to the conservation of birds and their habitats. The unit of data collection is the pentad, five minutes of latitude by five minutes of longitude, squares with sides of roughly 9 km. There are 17339 pentads in the original atlas area of South Africa, Lesotho and Swaziland, and a further 10600 in Namibia, 4900 in Zimbabawe and 6817 in Kenya.\n\nAt the end of April 2016, the SABAP2 database contained more than 153,000 checklists. The milestone of eight million records of bird distribution in the SABAP2 database was reached on 14 April 2016, less than eight months after reaching seven million on 22 August 2015, which in turn was 10 months after the six million record milestone. It had taken two days less than a year to get from five million to six million, the fastest million records ever up to then. So doing a million in just less than eight months is awesome. More than 75% of the original SABAP2 atlas area (ie South Africa, Lesotho and Swaziland) has at least one checklist at this stage in the project's development. More than 32% of pentads have four or more lists.\n\nThe most pressing data collection needs are to get coverage as complete as possible, and to try to build a foundation of four checklists per pentad. On top of this foundation the skyscraper of checklists can be built. Ideally, we would like checklists representing every month of the year. We would also like to have lots of checklists for each pentad in every year.","type":"OCCURRENCE","hostingOrganizationKey":"dd862d06-e6e9-4ab9-bc86-c875cc148c1f","hostingOrganizationTitle":"Animal Demography Unit, Department of Zoology, University of Cape Town","countryCoverage":[],"publishingCountry":"ZA","publishingOrganizationKey":"dd862d06-e6e9-4ab9-bc86-c875cc148c1f","publishingOrganizationTitle":"Animal Demography Unit, Department of Zoology, University of Cape Town","license":"http://creativecommons.org/licenses/by/4.0/legalcode","decades":[2000,2010,2020],"keywords":["Observation","Occurrence"],"recordCount":10531452},{"key":"4bf1cca8-832c-4891-9e17-7e7a65b7cc81","title":"BirdLife Australia, Birdata","description":"Birdata is your gateway to BirdLife Australia data including the Atlas of Australian Birds and Nest record scheme. You can use Birdata to draw bird distribution maps and generate bird lists for any part of the country. You can also join in the Atlas and submit survey information to this important environmental database.\n\nPlease note that Birdlife data is available under a non-commercial license and consultants should contact Birdlife directly to arrange access to full resolution records for commercial purposes.","type":"OCCURRENCE","hostingOrganizationKey":"3c5e4331-7f2f-4a8d-aa56-81ece7014fc8","hostingOrganizationTitle":"Atlas of Living Australia","countryCoverage":[],"publishingCountry":"AU","publishingOrganizationKey":"75ed4c27-9997-41c4-81a4-675b4282ffad","publishingOrganizationTitle":"BirdLife Australia","license":"http://creativecommons.org/licenses/by-nc/4.0/legalcode","decades":[],"keywords":[],"recordCount":10153635},{"key":"e6fab7b3-c733-40b9-8df3-2a03e49532c1","title":"Flora von Deutschland (Phanerogamen)","description":"Verbreitung der Farn- und Bluetenpflanzen in Deutschland, Vorkommensnachweise aggregiert auf Quadranten der Topographischen Karte 1 : 25000 (TK25 = MTB), sowie in Zeitperioden <vor 1950>, <1950 - 1980>, <nach 1980 >","type":"OCCURRENCE","hostingOrganizationKey":"43cab2b0-0653-11d9-acb2-b8a03c50a862","hostingOrganizationTitle":"Bundesamt für Naturschutz / Netzwerk Phytodiversität Deutschland","countryCoverage":[],"publishingCountry":"DE","publishingOrganizationKey":"43cab2b0-0653-11d9-acb2-b8a03c50a862","publishingOrganizationTitle":"Bundesamt für Naturschutz / Netzwerk Phytodiversität Deutschland","license":"http://creativecommons.org/licenses/by-nc/4.0/legalcode","decades":[],"keywords":[],"recordCount":9577887},{"key":"0645ccdb-e001-4ab0-9729-51f1755e007e","title":"OEH Atlas of NSW Wildlife","description":"Records from OEH's Atlas of NSW Wildlife database of flora and fauna sightings. Includes records from other custodians such as the National Herbarium of NSW, Forests NSW, Australian Bird and Bat Banding Scheme and the Australian Museum.","type":"OCCURRENCE","hostingOrganizationKey":"3c5e4331-7f2f-4a8d-aa56-81ece7014fc8","hostingOrganizationTitle":"Atlas of Living Australia","countryCoverage":[],"publishingCountry":"AU","publishingOrganizationKey":"5eee35c2-c5b7-4f62-a527-09eec0c54f22","publishingOrganizationTitle":"Office of Environment & Heritage","license":"http://creativecommons.org/licenses/by/4.0/legalcode","decades":[],"keywords":[],"recordCount":9242537},{"key":"f06fef3c-6ea6-4345-b724-a1b8e490dc55","title":"Anillamiento SEO_Bird ringing","description":"Scientific bird ringing is a research method based on the individual marking of birds.\nBird Ringing involves the marking of individual birds by highly trained ornithologists to provide vitaldata on migration patterns, demography\nand ecological processes.","type":"OCCURRENCE","hostingOrganizationKey":"6c4a0bb0-2a4d-11d8-aa2d-b8a03c50a862","hostingOrganizationTitle":"GBIF-Spain","countryCoverage":[],"publishingCountry":"ES","publishingOrganizationKey":"2d1fabab-9504-4cd8-aa19-79627dd3b010","publishingOrganizationTitle":"Sociedad Española de Ornitología (SEO/BirdLife)","license":"http://creativecommons.org/licenses/by-nc/4.0/legalcode","decades":[1950,1960,1970,1980,1990,2000,2010],"keywords":["Specimen","anillamiento científico","España","Bird ringing","birds","aves","bird banding","Spain"],"recordCount":8957407},{"key":"6ac3f774-d9fb-4796-b3e9-92bf6c81c084","title":"naturgucker","description":"naturgucker.de / enjoynature.net is a rapidly growing social network with several millions of observations of wild plants and animals, thus naturgucker.de / enjoynature.net supports and promotes nature conservancy. naturgucker.de / enjoynature.net offers nature observers (mainly citizen scientists) a personal data center for their data in which they can pool and manage all their observations and nature photographs for the surrounding region, or even worldwide from their vacations. In addition, beginners can find a myriad of information, such as hundreds of thousands of photographs, up to date distribution maps, tenthousands observation areas with helpful hints, and a strong community in naturgucker.de /enjoaynature.net.","type":"OCCURRENCE","hostingOrganizationKey":"bb646dff-a905-4403-a49b-6d378c2cf0d9","hostingOrganizationTitle":"naturgucker.de","countryCoverage":[],"publishingCountry":"DE","publishingOrganizationKey":"bb646dff-a905-4403-a49b-6d378c2cf0d9","publishingOrganizationTitle":"naturgucker.de","license":"http://creativecommons.org/licenses/by/4.0/legalcode","decades":[],"keywords":[],"recordCount":8738236},{"key":"83e20573-f7dd-4852-9159-21566e1e691e","title":"Bird tracking - GPS tracking of Lesser Black-backed Gulls and Herring Gulls breeding at the southern North Sea coast","description":"Bird tracking - GPS tracking of Lesser Black-backed Gulls and Herring Gulls breeding at the southern North Sea coast is a species occurrence dataset published by the Research Institute for Nature and Forest (INBO) and described (v5.5) in Stienen et al. 2016 (https://doi.org/10.3897/zookeys.555.6173). The dataset contains close to 8.5 million occurrences (GPS fixes) recorded by GPS trackers mounted on 108 Lesser Black-backed Gulls and 37 Herring Gulls breeding at the Belgian and Dutch coast. The trackers are developed by the University of Amsterdam Bird Tracking System (UvA-BiTS, http://www.uva-bits.nl) and allow to study the gulls' habitat use and migration behaviour in great detail. Our bird tracking network is operational since 2013 and is maintained and used by the INBO, the Flanders Marine Institute (VLIZ), UvA-BiTS, Ghent University (UGent), and the University of Antwerp (UA). See the dataset metadata for contact information, scope, and methodology. Issues with the dataset can be reported at https://github.com/inbo/data-publication/tree/master/datasets/bird-tracking-gull-occurrences\nThe following information is not included in the dataset and available upon request: outliers, speed, temperature, barometric pressure, accelerometer data, GPS metadata (fix time, number of satellites used, vertical accuracy), bird biometrics data measured during tagging (bill length, bill depth, tarsus length, wing length, body mass), life history data (day of ringing, age, resightings by volunteers), as well as growth data of chicks.\nTo allow anyone to use this dataset, we have released the data to the public domain under a Creative Commons Zero waiver (http://creativecommons.org/publicdomain/zero/1.0/). We would appreciate however, if you read and follow these norms for data use (http://www.inbo.be/en/norms-for-data-use) and provide a link to the original dataset (https://doi.org/10.15468/02omly) whenever possible. If you use these data for a scientific paper, please cite the dataset following the applicable citation norms and/or consider us for co-authorship. We are always interested to know how you have used or visualized the data, or to provide more information, so please contact us via the contact information provided in the metadata, opendata@inbo.be or https://twitter.com/LifeWatchINBO.\nThe bird tracking network used to collect these data is set up and maintained by the INBO and VLIZ as part of the Flemish contribution to LifeWatch.","type":"OCCURRENCE","hostingOrganizationKey":"1cd669d0-80ea-11de-a9d0-f1765f95f18b","hostingOrganizationTitle":"Research Institute for Nature and Forest (INBO)","countryCoverage":[],"publishingCountry":"BE","publishingOrganizationKey":"1cd669d0-80ea-11de-a9d0-f1765f95f18b","publishingOrganizationTitle":"Research Institute for Nature and Forest (INBO)","license":"http://creativecommons.org/publicdomain/zero/1.0/legalcode","decades":[2010],"keywords":["","Larus fuscus","Herring Gull","animal movement","LifeWatch","bird tracking","Larus argentatus","UvA-BiTS","Lesser Black-backed Gull","Observation","habitat use","migration","GPS tracking","MachineObservation","Occurrence"],"recordCount":8474604},{"key":"821cc27a-e3bb-4bc5-ac34-89ada245069d","title":"NMNH Extant Specimen Records","description":"Public records of accessioned specimens and observations curated by the National Museum of Natural History, Smithsonian Institution. These data are from the Departments of Botany, Entomology, Invertebrate Zoology and Vertebrate Zoology (Amphibians & Reptiles, Birds, Fishes, and Mammals) and include more than 270,000 primary type specimen records.","type":"OCCURRENCE","hostingOrganizationKey":"bc092ff0-02e4-11dc-991f-b8a03c50a862","hostingOrganizationTitle":"National Museum of Natural History, Smithsonian Institution","countryCoverage":[],"publishingCountry":"US","publishingOrganizationKey":"bc092ff0-02e4-11dc-991f-b8a03c50a862","publishingOrganizationTitle":"National Museum of Natural History, Smithsonian Institution","license":"http://creativecommons.org/publicdomain/zero/1.0/legalcode","decades":[],"keywords":["Specimen","Occurrence"],"recordCount":7112112},{"key":"82cb293c-f762-11e1-a439-00145eb45e9a","title":"Great Backyard Bird Count","description":"The Great Backyard Bird Count (GBBC) is a late winter weekend survey of bird populations across the United States and Canada. Developed by the Cornell Lab of Ornithology and Audubon, the GBBC engages tens of thousands of participants. Data is collected with postal code or town geographical resolution. Started in 1998, the GBBC provides a place-based characterization of a given area through a checklist of birds observed at that location. Presently, GBBC collects approximately 50 thousand checklists annually during a 4-day period in mid-February.","type":"OCCURRENCE","hostingOrganizationKey":"95f1c5d0-8996-11d9-a962-b8a03c50a862","hostingOrganizationTitle":"Avian Knowledge Network","countryCoverage":[],"publishingCountry":"US","publishingOrganizationKey":"95f1c5d0-8996-11d9-a962-b8a03c50a862","publishingOrganizationTitle":"Avian Knowledge Network","license":"http://creativecommons.org/publicdomain/zero/1.0/legalcode","decades":[],"keywords":[],"recordCount":7076556},{"key":"37beb6ea-e591-41e3-b781-e384250dc42c","title":"Victorian Biodiversity Atlas","description":"The Department of Environment, Land, Water & Planning works in partnership with a range of agencies and stakeholders to protect and preserve Victoria’s native landscape through a range of biodiversity, wildlife and community programs. \n\nWe manage threatened species conservation and recovery, biodiversity research, invasive species, and climate change adaptation strategies. - See more at: http://www.delwp.vic.gov.au/environment-and-wildlife#sthash.giDedj4S.dpuf\n\nThe Victorian Biodiversity Atlas (VBA) is the web-based information system designed to manage information about native and naturalised species occurring in Victoria. The system includes species attribute information, including origin and conservation status, along with more than six million records of species distribution and abundance. All the published records have been through the verification process of the VBA which includes review by a panel of Victorian experts. \n\nThe VBA includes the data submitted to DELWP from external sources as well as the Department’s own data collections from systematic surveys and general observations. The VBA replaces several legacy systems, including the Victorian Flora Site Database, the Atlas of Victorian Wildlife, the Aquatic Fauna Database and the Victorian Rare or Threatened Plant Population monitoring (VROTPop) systems. \n\nFor further information and access to the VBA please go to the DELWP website http://www.depi.vic.gov.au/environment-and-wildlife/biodiversity/victorian-biodiversity-atlas).","type":"OCCURRENCE","hostingOrganizationKey":"3c5e4331-7f2f-4a8d-aa56-81ece7014fc8","hostingOrganizationTitle":"Atlas of Living Australia","countryCoverage":[],"publishingCountry":"AU","publishingOrganizationKey":"a4ee8241-94f8-40b8-8c47-31aaf9430c90","publishingOrganizationTitle":"Victorian Department of Environment, Land, Water and Planning","license":"http://creativecommons.org/licenses/by/4.0/legalcode","decades":[],"keywords":[],"recordCount":6905471},{"key":"4f70108a-dda7-4e8b-8298-babaee5182c3","title":"Bird Ringing Centre in Sweden (NRM)","description":"This database contains information about bird ringing in Sweden.","type":"OCCURRENCE","hostingOrganizationKey":"4c415e40-1e21-11de-9e40-a0d6ecebb8bf","hostingOrganizationTitle":"GBIF-Sweden","countryCoverage":[],"publishingCountry":"SE","publishingOrganizationKey":"4c415e40-1e21-11de-9e40-a0d6ecebb8bf","publishingOrganizationTitle":"GBIF-Sweden","license":"http://creativecommons.org/publicdomain/zero/1.0/legalcode","decades":[],"keywords":["Occurrence"],"recordCount":6706047},{"key":"a86201a4-fa20-44e5-ade2-68ea3563cfa8","title":"Macro-moth distribution records for the UK for the period pre 2000 from Butterfly Conservation","description":"Moth provisional distribution data for the period pre 2000 from the National Moth Recording Scheme led by Butterfly Conservation. The National Moth Recording Scheme provides a comprehensive network for recording the 2500+ species of moths in the UK, the Isle of Man and the Channel Islands, through which members of the public can contribute moth sightings to underpin conservation. The NMRS was launched in 2007 and was developed as part of the Moths Count project funded by the Heritage Lottery Fund with support from many other organisations and is now an ongoing recording scheme.","type":"OCCURRENCE","hostingOrganizationKey":"07f617d0-c688-11d8-bf62-b8a03c50a862","hostingOrganizationTitle":"National Biodiversity Network","countryCoverage":[],"publishingCountry":"GB","publishingOrganizationKey":"0d72dd7f-6f05-46af-85c2-8b6e77ce5534","publishingOrganizationTitle":"Butterfly Conservation","license":"http://creativecommons.org/licenses/by-nc/4.0/legalcode","decades":[1500,1600,1700,1800,1810,1820,1830,1840,1850,1860,1870,1880,1890,1900,1910,1920,1930,1940,1950,1960,1970,1980,1990,2000,2010],"keywords":[],"recordCount":6518294},{"key":"1e266c3d-92ef-4d5a-8e4a-c04742c772c3","title":"UK Butterfly Monitoring Scheme (UKBMS)","description":"The UKBMS is a standarised monitoring scheme for monitoring butteflies in the UK.  This dataset includes records from traditional fixed transect sites, often called 'Pollard Walks'; data from the Wider Countryside Butterfly Survey is excluded and available within a separate dataset.\n \n The UKBMS is run by Butterfly Conservation (BC), the Centre for Ecology and Hydrology (CEH), and the British Trust for Ornithology (BTO), in partnership with the Joint Nature Conservation Committee (JNCC), and supported and steered by Forestry Commission (FC), Natural England (NE), Natural Resources Wales (NRW), Northern Ireland Environment Agency (NIEA) and Scottish Natural Heritage (SNH).","type":"OCCURRENCE","hostingOrganizationKey":"07f617d0-c688-11d8-bf62-b8a03c50a862","hostingOrganizationTitle":"National Biodiversity Network","countryCoverage":[],"publishingCountry":"GB","publishingOrganizationKey":"0c392aa0-a452-4254-be5c-e49dd60e9b02","publishingOrganizationTitle":"Biological Records Centre","license":"http://creativecommons.org/licenses/by/4.0/legalcode","decades":[1970,1980,1990,2000,2010],"keywords":[],"recordCount":5638976},{"key":"64dabd3c-4f34-4520-b9dd-d227a0bf1582","title":"Occurrence Data of Vascular Plants collected or compiled for the Flora of Bavaria","description":"http://wiki.bayernflora.de/web/Flora_of_Bavaria_%E2%94%80_occurrence_data_online","type":"OCCURRENCE","hostingOrganizationKey":"0674aea0-a7e1-11d8-9534-b8a03c50a862","hostingOrganizationTitle":"Staatliche Naturwissenschaftliche Sammlungen Bayerns","countryCoverage":[],"publishingCountry":"DE","publishingOrganizationKey":"0674aea0-a7e1-11d8-9534-b8a03c50a862","publishingOrganizationTitle":"Staatliche Naturwissenschaftliche Sammlungen Bayerns","license":"http://creativecommons.org/licenses/by/4.0/legalcode","decades":[],"keywords":[],"recordCount":5382567},{"key":"282d0ccb-4fa0-40f9-8593-105c77e88417","title":"Southern African Bird Atlas Project","description":"The Southern African Bird Atlas Project started in July 2007, so it has been running for almost three and a half years. To date, over 800 SABAP2 atlasers have collected more than two million records of bird distribution from more than 75% of the quarter degree grid cells in the SABAP2 region. Most of the SABAP1 data were collected in the period 1987–1991, 20 years ago. The SABAP1 database contains seven million records. One of the SABAP2 objectives is to see how the distributions of the bird species occurring in South Africa, Lesotho and Swaziland have changed over the past two decades.","type":"OCCURRENCE","hostingOrganizationKey":"c5f7ef70-e233-11d9-a4d6-b8a03c50a862","hostingOrganizationTitle":"South African National Biodiversity Institute","countryCoverage":[],"publishingCountry":"ZA","publishingOrganizationKey":"c5f7ef70-e233-11d9-a4d6-b8a03c50a862","publishingOrganizationTitle":"South African National Biodiversity Institute","license":"http://creativecommons.org/licenses/by/4.0/legalcode","decades":[],"keywords":[],"recordCount":5053399},{"key":"4ce8e3f9-2546-4af1-b28d-e2eadf05dfd4","title":"Australia's Virtual Herbarium","description":"AVH provides access to information obtained from the collections held in Australian herbaria.\n\nAustralia’s herbaria house over seven million plant, algae and fungi specimens. The collecting data stored with these specimens provides the most complete picture of the distribution of Australia’s flora to date.","type":"OCCURRENCE","hostingOrganizationKey":"3c5e4331-7f2f-4a8d-aa56-81ece7014fc8","hostingOrganizationTitle":"Atlas of Living Australia","countryCoverage":[],"publishingCountry":"AU","publishingOrganizationKey":"1deb09e1-ded6-469a-a46e-f6329cb03b6a","publishingOrganizationTitle":"Australia's Virtual Herbarium","license":"http://creativecommons.org/licenses/by/4.0/legalcode","decades":[],"keywords":[],"recordCount":4940788},{"key":"f2e389da-39c3-4f21-8d72-b7d574d924a9","title":"Finnish Floristic Database (Finnish Museum of Natural History Collections)","description":"Occurrence data of plants from the collections and archives of the Finnish Museum of Natural History.","type":"OCCURRENCE","hostingOrganizationKey":"04fd2e13-6881-4e5c-9dd1-8fdd9ab993c1","hostingOrganizationTitle":"Finnish Biodiversity Information Facility","countryCoverage":[],"publishingCountry":"FI","publishingOrganizationKey":"04fd2e13-6881-4e5c-9dd1-8fdd9ab993c1","publishingOrganizationTitle":"Finnish Biodiversity Information Facility","license":"http://creativecommons.org/licenses/by/4.0/legalcode","decades":[1700,1800,1810,1820,1830,1840,1850,1860,1870,1880,1890,1900,1910,1920,1930,1940,1950,1960,1970,1980,1990,2000,2010],"keywords":["Occurrence"],"recordCount":4804348},{"key":"857aa892-f762-11e1-a439-00145eb45e9a","title":"Observations du Conservatoire botanique national du Bassin parisien.","description":"Système d&#39;information sur la flore du Bassin parisien, Flora.","type":"OCCURRENCE","hostingOrganizationKey":"6bcc0290-6e76-11db-bcd5-b8a03c50a862","hostingOrganizationTitle":"Conservatoire botanique national du Bassin parisien","countryCoverage":[],"publishingCountry":"FR","publishingOrganizationKey":"6bcc0290-6e76-11db-bcd5-b8a03c50a862","publishingOrganizationTitle":"Conservatoire botanique national du Bassin parisien","license":"http://creativecommons.org/licenses/by/4.0/legalcode","decades":[],"keywords":[],"recordCount":4697245},{"key":"ad43e954-dd79-4986-ae34-9ccdbd8bf568","title":"Geographically tagged INSDC sequences","description":"Metadata for INSDC sequences that have been geographically tagged.","type":"OCCURRENCE","hostingOrganizationKey":"ada9d123-ddb4-467d-8891-806ea8d94230","hostingOrganizationTitle":"European Molecular Biology Laboratory (EMBL)","countryCoverage":[],"publishingCountry":"GB","publishingOrganizationKey":"ada9d123-ddb4-467d-8891-806ea8d94230","publishingOrganizationTitle":"European Molecular Biology Laboratory (EMBL)","license":"http://creativecommons.org/licenses/by/4.0/legalcode","decades":[],"keywords":[],"recordCount":4661554},{"key":"7bd65a7a-f762-11e1-a439-00145eb45e9a","title":"Tropicos Specimen Data","description":"The Missouri Botanical Garden’s Herbarium is one of the world’s outstanding research resources for specimens and information on bryophytes and vascular plants. The collection is limited to these two major groups of plants. As of 31 December 2015 the collection had 6.66 million specimens (6.1 million vascular plants and 563,000 bryophytes). This specimen dataset includes over 4.4 million records (4.0 million vascular plants and 300,000 bryophytes).","type":"OCCURRENCE","hostingOrganizationKey":"90fd6680-349f-11d8-aa2d-b8a03c50a862","hostingOrganizationTitle":"Missouri Botanical Garden","countryCoverage":[],"publishingCountry":"US","publishingOrganizationKey":"90fd6680-349f-11d8-aa2d-b8a03c50a862","publishingOrganizationTitle":"Missouri Botanical Garden","license":"http://creativecommons.org/licenses/by/4.0/legalcode","decades":[],"keywords":["Specimen","Occurrence"],"recordCount":4440020},{"key":"53f13c8f-413e-4537-bda6-98666cd7975f","title":"Other BSBI Scottish data up to 2012","type":"OCCURRENCE","hostingOrganizationKey":"07f617d0-c688-11d8-bf62-b8a03c50a862","hostingOrganizationTitle":"National Biodiversity Network","countryCoverage":[],"publishingCountry":"GB","publishingOrganizationKey":"aa569acf-991d-4467-b327-8442f30ddbd2","publishingOrganizationTitle":"Botanical Society of Britain & Ireland","license":"http://creativecommons.org/licenses/by-nc/4.0/legalcode","decades":[],"keywords":[],"recordCount":3953141},{"key":"d415c253-4d61-4459-9d25-4015b9084fb0","title":"The New York Botanical Garden Herbarium (NY)","description":"The William and Lynda Steere Herbarium of The New York Botanical Garden holds a collection of more than seven million preserved specimens. All plant groups--flowering plants, conifers, ferns, mosses, liverworts, and algae, as well as fungi and lichens --are represented in the Herbarium collection, which is particularly strong in New World specimens. Digitization of all groups is underway, with more than 3 million specimens barcoded and 2 million specimens imaged.","type":"OCCURRENCE","hostingOrganizationKey":"ae447c50-b8a8-11d8-92a4-b8a03c50a862","hostingOrganizationTitle":"The New York Botanical Garden","countryCoverage":[],"publishingCountry":"US","publishingOrganizationKey":"ae447c50-b8a8-11d8-92a4-b8a03c50a862","publishingOrganizationTitle":"The New York Botanical Garden","license":"http://creativecommons.org/publicdomain/zero/1.0/legalcode","decades":[],"keywords":["Specimen","Occurrence"],"recordCount":3490135},{"key":"07044577-bd82-4089-9f3a-f4a9d2170b2e","title":"A global database for the distributions of crop wild relatives","description":"<p>This dataset originally held 5 647 442 total records, where 34% of the records corresponded to germplasm accessions and 66% to herbarium samples. A total of 3 231 286 records had cross-checked coordinates (see Figure 2). 322 735 records were newly georeferenced using The Google Geocoding API and 15 713 new records were obtained after digitizing the information contained in herbaria specimens. Data was gathered from more than 100 data providers, including GBIF (a comprehensive list of institutions and individuals is available here: http://www.cwrdiversity.org/data-sources/ ).</p>\n<p>The geographic coverage of the dataset includes 96% of the world countries and also includes records of cultivated plants (1/3 of the dataset). Records of the crop wild relatives of 80 crop gene pools can be queried and visualized in this interactive map: http://www.cwrdiversity.org/distribution-map/</p>\n<p>This dataset was assembled as part of the project ‘Adapting Agriculture to Climate Change: Collecting, Protecting and Preparing Crop Wild Relatives’, which is supported by the Government of Norway. The project is managed by the Global Crop Diversity Trust and the Millennium Seed Bank of the Royal Botanic Gardens, Kew, and implemented in partnership with national and international genebanks and plant breeding institutes around the world. For further information, please refer to the project website: http://www.cwrdiversity.org/</p>\n<p>For publication to GBIF, all records originally gathered from GBIF have been removed to avoid data duplication.</p>\n<p>Citation: Crop Wild Relatives Occurrence data consortia ([year]). A global database for the distributions of crop wild relatives. Centro Internacional de Agricultura Tropical (CIAT). Occurrence dataset https://doi.org/10.15468/jyrthk accessed via GBIF.org on [date].</p>","type":"OCCURRENCE","hostingOrganizationKey":"f314b0b0-e3dc-11d9-8d81-b8a03c50a862","hostingOrganizationTitle":"Natural History Museum, University of Oslo","countryCoverage":[],"publishingCountry":"CO","publishingOrganizationKey":"fee3882f-5360-4f01-a1ca-767c48fa629c","publishingOrganizationTitle":"Centro Internacional de Agricultura Tropical (CIAT)","license":"http://creativecommons.org/licenses/by/4.0/legalcode","decades":[],"keywords":["https://www.wikidata.org/wiki/Q1141015","crop wild relatives","https://g.co/kg/m/04jcxvp","Occurrence","http://dbpedia.org/page/Crop_wild_relative"],"recordCount":3403810},{"key":"3b301884-51b9-443f-b63c-47feeccfb89f","title":"Finnish Entomological Database","description":"Finnish Entomological Database contains species occurrence data for insects and arachnids from Finland, collected by professional and amateur entomologists.","type":"OCCURRENCE","hostingOrganizationKey":"04fd2e13-6881-4e5c-9dd1-8fdd9ab993c1","hostingOrganizationTitle":"Finnish Biodiversity Information Facility","countryCoverage":[],"publishingCountry":"FI","publishingOrganizationKey":"04fd2e13-6881-4e5c-9dd1-8fdd9ab993c1","publishingOrganizationTitle":"Finnish Biodiversity Information Facility","license":"http://creativecommons.org/licenses/by/4.0/legalcode","decades":[1900,1910,1920,1930,1940,1950,1960,1970,1980,1990,2000,2010],"keywords":["Occurrence"],"recordCount":3396553},{"key":"c3f5731f-4ebc-48a2-83ba-3fb5c895f6c1","title":"New South Wales Bird Atlassers","description":"Observation records collected by the NSW Bird Atlassers Inc.","type":"OCCURRENCE","hostingOrganizationKey":"3c5e4331-7f2f-4a8d-aa56-81ece7014fc8","hostingOrganizationTitle":"Atlas of Living Australia","countryCoverage":[],"publishingCountry":"AU","publishingOrganizationKey":"c04876ed-3e07-417b-97ef-bc5071f97a5c","publishingOrganizationTitle":"NSW Bird Atlassers","license":"http://creativecommons.org/licenses/by/4.0/legalcode","decades":[],"keywords":[],"recordCount":3381819},{"key":"37f48e00-1fe8-11dc-b461-b8a03c50a862","title":"Dutch Foundation for Applied Water Research (STOWA) - Limnodata Neerlandica","description":"The Limnodata Neerlandica data set contains the data of more than 30 years systematic and project based sampling of Dutch, mainly freshwater, waterbodies. Data originate from 37 data providers; 26 water boards, the provinces and the Ministry of Transport, Public Works and Water Management. Over 20,000 sample points were used. The main purpose of the dataset is monitoring the quality of Dutch surface waters. Next to the biological characteristics also a-biotic data were sampled and stored alongside the biotic data. Observations are available from phytoplankton, diatoms, aquatic and riparian plants, macro-invertebrates and fish. The data were collected on a yearly base. The taxonomy has been validated according to the Dutch standardised checklist of aquatic species.\n\nUpdate January 2015: Added data for 2011 and 2012. Enhanced taxonomic and locality data fields.","type":"OCCURRENCE","hostingOrganizationKey":"cace8d10-2646-11d8-a2da-b8a03c50a862","hostingOrganizationTitle":"Netherlands Biodiversity Information Facility (NLBIF)","countryCoverage":[],"publishingCountry":"NL","publishingOrganizationKey":"68a216ee-f721-40cd-932c-84153afd9451","publishingOrganizationTitle":"Dutch Foundation for Applied Water Research","license":"http://creativecommons.org/licenses/by/4.0/legalcode","decades":[1980,1990,2000,2010],"keywords":["macrofauna","zooplankton","monitoring","Netherlands","riparian","diatoms","plants","fish","phytoplankton","Observation","aquatic","Limnofauna","Occurrence"],"recordCount":3359932},{"key":"b05a19cf-dcf2-4ef9-bbbb-ad0ecbd2917c","title":"Eremaea","type":"OCCURRENCE","hostingOrganizationKey":"3c5e4331-7f2f-4a8d-aa56-81ece7014fc8","hostingOrganizationTitle":"Atlas of Living Australia","countryCoverage":[],"publishingCountry":"AU","publishingOrganizationKey":"633f217c-c007-48dc-86ed-f8fdae6fd0d8","publishingOrganizationTitle":"Eremaea","license":"http://creativecommons.org/licenses/by/4.0/legalcode","decades":[],"keywords":[],"recordCount":3291911},{"key":"3e9817c1-8302-4955-87e3-a408db0ea379","title":"Insecta of Costa Rica (INBio)","description":"Occurrence records of the Insecta class collected, identified, digitized, and published by the National Biodiversity Institute (INBio) of Costa Rica.","type":"OCCURRENCE","hostingOrganizationKey":"5c7a5c20-1bd0-11d8-a2da-b8a03c50a862","hostingOrganizationTitle":"Instituto Nacional de Biodiversidad (INBio), Costa Rica","countryCoverage":[],"publishingCountry":"CR","publishingOrganizationKey":"5c7a5c20-1bd0-11d8-a2da-b8a03c50a862","publishingOrganizationTitle":"Instituto Nacional de Biodiversidad (INBio), Costa Rica","license":"http://creativecommons.org/publicdomain/zero/1.0/legalcode","decades":[],"keywords":["Specimen","Occurrence"],"recordCount":3276500},{"key":"86306e4b-5ed8-4684-a626-d9b9f439dcce","title":"Observations floristiques issues de la base de données du Conservatoire botanique national alpin","description":"Observations floristiques issues de la base de données flore du Conservatoire botanique national alpin (CBNA). Ces observations sont produites par le CBNA dans le cadre de sa mission de connaissance, par ses partenaires ou proviennent de la bibliographie ou d'herbier. (CBN-Alpin-001)","type":"OCCURRENCE","hostingOrganizationKey":"1928bdf0-f5d2-11dc-8c12-b8a03c50a862","hostingOrganizationTitle":"UMS PatriNat (AFB-CNRS-MNHN), Paris","countryCoverage":[],"publishingCountry":"FR","publishingOrganizationKey":"1928bdf0-f5d2-11dc-8c12-b8a03c50a862","publishingOrganizationTitle":"UMS PatriNat (AFB-CNRS-MNHN), Paris","license":"http://creativecommons.org/licenses/by-nc/4.0/legalcode","decades":[],"keywords":["Observation","Occurrence"],"recordCount":2861028},{"key":"040c5662-da76-4782-a48e-cdea1892d14c","title":"International Barcode of Life project (iBOL)","description":"The International Barcode of Life Project (iBOL) was formally activated in October 2010. Its first phase (2010-2015) will lead to the acquisition of DNA barcode records for 5M specimens representing 500K species. iBOL will release each barcode record in two phases. The initial phase will release barcode sequence(s), trace files, high-level (ordinal) taxonomic assignment, GPS co-ordinates and the country of collection. This phase of data release will occur automatically on a quarterly basis in datafiles posted on this page as well as at GenBank. The second phase of data release will involve a more precise taxonomic assignment and ancillary data, such as images, for each specimen.The data released to date consists of records for 2,869,168 sequences analyzed at the Canadian Centre for DNA Barcoding at the University of Guelph and the Centre for Environmental &amp; Molecular Algal Research at the University of New Brunswick during the first year of iBOL ramp-up (July 1, 2009 - June 30, 2010) and the 66 months of the officially activated iBOL project (July 1, 2010 - Dec 31, 2015). These specimens are derived from many collaborators in many nations.","type":"OCCURRENCE","hostingOrganizationKey":"92f51af1-e917-49bc-a8ed-014ed3a77bec","hostingOrganizationTitle":"Institute of Biodiversity, Animal Health and Comparative Medicine, College of Medical, Veterinary and Life Sciences, University of Glasgow","countryCoverage":[],"publishingCountry":"GB","publishingOrganizationKey":"92f51af1-e917-49bc-a8ed-014ed3a77bec","publishingOrganizationTitle":"Institute of Biodiversity, Animal Health and Comparative Medicine, College of Medical, Veterinary and Life Sciences, University of Glasgow","license":"http://creativecommons.org/licenses/by/4.0/legalcode","decades":[],"keywords":[],"recordCount":2789906},{"key":"f1929b90-79f5-47aa-b983-51f108eb491f","title":"Bryophyte data for Great Britain from the British Bryological Society held by BRC: Atlas 2014","description":"Bryophyte records submitted to the Biological Records Centre for England, Ireland, Scotland, Wales, the Isle of Man and the Channel Islands. The dataset comprises records collected for the Bryophyte Recording Scheme, as well as those extracted from literature and museum sources. Details of all the surveys in this dataset can be obtained by clicking the 'Surveys' tab. This 'Atlas' dataset contains all of the records presented in Blockeel et al. (2014) Atlas of British and Irish Bryophytes, with the exception of two datasets (one from Cofnod [North Wales Environmental Information Centre] and one from CEDaR [Centre for Environmental Data and Recording, Northern Ireland]) which the BBS were not given permission to export to the NBN. These are datasets 883 and 881 in the BBS/BRC database. This new dataset contains records covering 109 vice-counties since the last NBN export, with over five hundred new records for each of the following counties: Cheshire, North Ebudes, East Sussex, West Ross, Caernarvonshire, Merionethshire, Shropshire (Salop), Carmarthenshire, Argyll Main, West Inverness-shire, South Lancashire, Surrey, East Norfolk, Outer Hebrides, South-west Yorkshire, East Inverness-shire (with Nairn), Breconshire, Cambridgeshire, West Lancashire, Dumfriesshire, West Norfolk, West Sussex, Huntingdonshire, North Essex, Durham, Cardiganshire, Buckinghamshire, North Northumberland (Cheviot), West Sutherland, and Derbyshire. This dataset will not be added to in future, but will only be subject to amendments. Data collected or collated by the BBS post-Atlas (i.e. from the 01/01/2014) will form a new dataset on the NBN.","type":"OCCURRENCE","hostingOrganizationKey":"07f617d0-c688-11d8-bf62-b8a03c50a862","hostingOrganizationTitle":"National Biodiversity Network","countryCoverage":[],"publishingCountry":"GB","publishingOrganizationKey":"32f1b389-5871-4da3-832f-9a89132520c5","publishingOrganizationTitle":"British Bryological Society","license":"http://creativecommons.org/licenses/by/4.0/legalcode","decades":[1600,1700,1800,1810,1820,1830,1840,1850,1860,1870,1880,1890,1900,1910,1920,1930,1940,1950,1960,1970,1980,1990,2000,2010],"keywords":[],"recordCount":2787427},{"key":"73d4365a-8868-4d84-a6fd-51098b968170","title":"First Bird Atlas","description":"Records collected by Birds Australia between 1977 and 1981, each survey was ascribed to a grid with the coords given as the central point. Grids size varied, with most being 10-minute grids or 1-degree grids.","type":"OCCURRENCE","hostingOrganizationKey":"3c5e4331-7f2f-4a8d-aa56-81ece7014fc8","hostingOrganizationTitle":"Atlas of Living Australia","countryCoverage":[],"publishingCountry":"AU","publishingOrganizationKey":"75ed4c27-9997-41c4-81a4-675b4282ffad","publishingOrganizationTitle":"BirdLife Australia","license":"http://creativecommons.org/licenses/by-nc/4.0/legalcode","decades":[],"keywords":[],"recordCount":2712345},{"key":"5f501df0-0c61-11dd-84ce-b8a03c50a862","title":"SLU Aqua Institute of Freshwater Research National register of survey test-fishing - NORS","description":"Standardized test-fishing with Nordic multi-mesh gillnets is a widely used method in Sweden to investigate the fish fauna in a lake. In 2005 the method became an European standard (EN 14757). Standardized test-fishing catch most of the Swedish species in a representative way, giving a good estimate of species abundance and size distribution. The results are generally used for purposes of environmental protection and fishery management.\n\nNORS consists of thousands of test-fishing occasions back to the 1950’s. The Department of Aquatic Resources (SLU Aqua) at the Swedish University of Agricultural Sciences is responsible of collecting and checking test-fishing data generated in national and regional environmental programs, on behalf of the Swedish Agency for Marine and Water Management. SLU Aqua also collect test-fishing data from several other types of investigations in order to create a database as representative as possible. The purpose is to facilitate obtaining data of high quality for research, national investigations and reports. The database also serves as a reference for local and regional investigations. All data is available for the public.","type":"OCCURRENCE","hostingOrganizationKey":"4c415e40-1e21-11de-9e40-a0d6ecebb8bf","hostingOrganizationTitle":"GBIF-Sweden","countryCoverage":[],"publishingCountry":"SE","publishingOrganizationKey":"4c415e40-1e21-11de-9e40-a0d6ecebb8bf","publishingOrganizationTitle":"GBIF-Sweden","license":"http://creativecommons.org/publicdomain/zero/1.0/legalcode","decades":[],"keywords":["Sweden","Pisces","Observation","Lakes","Fish","Occurrence","Freshwater"],"recordCount":2690206},{"key":"67c54f85-7910-4cbf-8de4-6f0b136a0e34","title":"Continuous Plankton Recorder Dataset (SAHFOS)","description":"SAHFOS is unique in having comparable data on the geographical distribution, seasonal cycles and year-to-year changes in abundance of plankton over a large spatial area. There is no other survey in the world with 80 years of marine plankton data.\n\nCPR Data are available in paper form back to 1931 and from January 1946 onwards in a computerised relational database. The database contains results  with 2,629,628 taxonomic abundance entries.","type":"OCCURRENCE","hostingOrganizationKey":"09b17aee-d3fb-48ca-a30b-303d671a8155","hostingOrganizationTitle":"Sir Alister Hardy Foundation for Ocean Science (SAHFOS)","countryCoverage":[],"publishingCountry":"GB","publishingOrganizationKey":"09b17aee-d3fb-48ca-a30b-303d671a8155","publishingOrganizationTitle":"Sir Alister Hardy Foundation for Ocean Science (SAHFOS)","license":"http://creativecommons.org/licenses/by/4.0/legalcode","decades":[],"keywords":[],"recordCount":2629628},{"key":"e707e6da-e143-445d-b41d-529c4a777e8b","title":"Suffolk Biodiversity Information Service (SBIS) Dataset","description":"All species records from the SBIS Recorder Database","type":"OCCURRENCE","hostingOrganizationKey":"07f617d0-c688-11d8-bf62-b8a03c50a862","hostingOrganizationTitle":"National Biodiversity Network","countryCoverage":[],"publishingCountry":"GB","publishingOrganizationKey":"f0edcf5c-2a34-4a6b-b9bb-44d52ed50f7a","publishingOrganizationTitle":"Suffolk Biodiversity Information Service","license":"http://creativecommons.org/licenses/by-nc/4.0/legalcode","decades":[1600,1700,1800,1810,1820,1830,1840,1850,1860,1870,1880,1890,1900,1910,1920,1930,1940,1950,1960,1970,1980,1990,2000,2010],"keywords":[],"recordCount":2573320},{"key":"22122208-ca75-4063-abdf-ab58607dd55a","title":"Vascular plants in Denmark recorded under the The Nationwide Monitoring and Assessment Programme for the Aquatic and Terrestrial Environments (NOVANA)","description":"Occurrence of vascular plants in Denmark recorded under the The Nationwide Monitoring and Assessment Programme for the Aquatic and Terrestrial Environments (NOVANA)","type":"OCCURRENCE","hostingOrganizationKey":"299958e0-4c06-11d8-b290-b8a03c50a862","hostingOrganizationTitle":"Danish Biodiversity Information Facility","countryCoverage":[],"publishingCountry":"DK","publishingOrganizationKey":"977178c7-76fe-4c86-94f3-cf039ede5c3c","publishingOrganizationTitle":"Danish Nature Agency","license":"http://creativecommons.org/licenses/by/4.0/legalcode","decades":[2000,2010],"keywords":["Observation","vegetation","Occurrence"],"recordCount":2247405},{"key":"857bce66-f762-11e1-a439-00145eb45e9a","title":"Biologiezentrum Linz","description":"ZOBODAT (Zoological Botanical Database)","type":"OCCURRENCE","hostingOrganizationKey":"2d6e0e40-2aee-11d8-aa2d-b8a03c50a862","hostingOrganizationTitle":"Biologiezentrum Linz Oberoesterreich","countryCoverage":[],"publishingCountry":"AT","publishingOrganizationKey":"2d6e0e40-2aee-11d8-aa2d-b8a03c50a862","publishingOrganizationTitle":"Biologiezentrum Linz Oberoesterreich","license":"http://creativecommons.org/publicdomain/zero/1.0/legalcode","decades":[],"keywords":[],"recordCount":2243034},{"key":"b4ae1720-1431-49ee-bfeb-8146fc42b1a3","title":"SAFRING: Historical Bird Ringing Records (2005-2009)","description":"Bird ringing started in 1948 in southern Africa and is thus the longest running bird monitoring project in the sub-region. Although the data are biased to areas where ringers operated, it is an invaluable record of bird occurrence and distribution changes, arrival and departure times of migrants, survival and mass data in historical times.The South African Bird Ringing Unit (SAFRING), which is an essential arm of the Animal Demography Unit, administers bird ringing in southern Africa.","type":"OCCURRENCE","hostingOrganizationKey":"c5f7ef70-e233-11d9-a4d6-b8a03c50a862","hostingOrganizationTitle":"South African National Biodiversity Institute","countryCoverage":[],"publishingCountry":"ZA","publishingOrganizationKey":"c5f7ef70-e233-11d9-a4d6-b8a03c50a862","publishingOrganizationTitle":"South African National Biodiversity Institute","license":"http://creativecommons.org/licenses/by/4.0/legalcode","decades":[1940,1950,1960,1970,1980,1990,2000],"keywords":["Observation","Birds","birds","Occurrence","bird ringing"],"recordCount":2162753},{"key":"912ac7b3-f473-435b-97d1-20b6ed0a6208","title":"RSPB Big Garden Birdwatch winter sightings in the UK in 2009","description":"The dataset contains the records from garden bird observations, made by the public during a one-hour period of their choice on the 24-25 January 2009. The survey has been conducted in the UK annually in the last weekend of January since 1979. This dataset contains data for 69 different species.\n <br /><br />\n The first Big Garden Birdwatch dataset to be uploaded onto the NBN, was the 2008 house sparrow, starling and blackbird dataset. These three species were the most commonly recorded during 2008. More data for other years will be included in annual datasets. This survey is funded by the RSPB.","type":"OCCURRENCE","hostingOrganizationKey":"07f617d0-c688-11d8-bf62-b8a03c50a862","hostingOrganizationTitle":"National Biodiversity Network","countryCoverage":[],"publishingCountry":"GB","publishingOrganizationKey":"c71f0513-c95a-4e98-abad-0c222b87ec66","publishingOrganizationTitle":"Royal Society for the Protection of Birds","license":"http://creativecommons.org/licenses/by/4.0/legalcode","decades":[2000],"keywords":[],"recordCount":2126593},{"key":"95e635d4-f762-11e1-a439-00145eb45e9a","title":"Banco de Datos de la Biodiversidad de la Comunitat Valenciana","description":"El Banco de Datos de Biodiversidad de la Comunitat Valenciana tiene como objetivo recoger toda la información de localización de especies en el territorio de la Comunitat Valenciana y su entorno marino. Los datos son provenientes de colecciones, bibliografía y trabajos de campo. Todas las citas están georreferenciadas. Se aportan, para algunas especies, imágenes y fichas con descripción y biología, distribución, hábitat, situación actual, amenazas y acciones de conservación, y las evoluciones poblaciones.","type":"OCCURRENCE","hostingOrganizationKey":"6c4a0bb0-2a4d-11d8-aa2d-b8a03c50a862","hostingOrganizationTitle":"GBIF-Spain","countryCoverage":[],"publishingCountry":"ES","publishingOrganizationKey":"ebda1cab-dda8-418b-8f25-df1e71ff5bc2","publishingOrganizationTitle":"Biodiversity data bank of Generalitat Valenciana","license":"http://creativecommons.org/licenses/by-nc/4.0/legalcode","decades":[1950,1960,1970,1980,1990,2000,2010],"keywords":["plantae","Banco de datos de biodiversidad","hongos","información sobre biodiversidad","distribución geográfica","fauna","comunidad valenciana","flora","taxon","taxonomia","Occurrence","animalia"],"recordCount":1954698},{"key":"2a513d16-f4ce-4252-974f-2486ce70b788","title":"SA Flora (BDBSA)","description":"The flora and fauna data sets represent the spatial locations of flora and fauna species observation data maintained by DEWNR in the Biological Databases of South Australia.","type":"OCCURRENCE","hostingOrganizationKey":"3c5e4331-7f2f-4a8d-aa56-81ece7014fc8","hostingOrganizationTitle":"Atlas of Living Australia","countryCoverage":[],"publishingCountry":"AU","publishingOrganizationKey":"4c46f883-69c1-42ac-8a20-4cdba2afb9a6","publishingOrganizationTitle":"South Australia, Department of Environment, Water and Natural Resources","license":"http://creativecommons.org/licenses/by/4.0/legalcode","decades":[],"keywords":[],"recordCount":1742445},{"key":"02d1e772-54ee-4767-b4b8-c35f0c7270ba","title":"NBIS Records to December 2016","description":"Species records for the county of Norfolk","type":"OCCURRENCE","hostingOrganizationKey":"07f617d0-c688-11d8-bf62-b8a03c50a862","hostingOrganizationTitle":"National Biodiversity Network","countryCoverage":[],"publishingCountry":"GB","publishingOrganizationKey":"05c84e36-2006-4e3d-ad77-ebd529aa09c4","publishingOrganizationTitle":"Norfolk Biodiversity Information Service","license":"http://creativecommons.org/licenses/by-nc/4.0/legalcode","decades":[1000,1100,1200,1300,1400,1500,1600,1700,1800,1810,1820,1830,1840,1850,1860,1870,1880,1890,1900,1910,1920,1930,1940,1950,1960,1970,1980,1990,2000,2010],"keywords":[],"recordCount":1715185},{"key":"d4aa2255-f927-4220-af22-2958298733b7","title":"Sistema de Información de la vegetación Ibérica y Macaronésica","type":"OCCURRENCE","hostingOrganizationKey":"6c4a0bb0-2a4d-11d8-aa2d-b8a03c50a862","hostingOrganizationTitle":"GBIF-Spain","countryCoverage":[],"publishingCountry":"ES","publishingOrganizationKey":"6c4a0bb0-2a4d-11d8-aa2d-b8a03c50a862","publishingOrganizationTitle":"GBIF-Spain","license":"http://creativecommons.org/licenses/by-nc/4.0/legalcode","decades":[],"keywords":[],"recordCount":1709819},{"key":"a4b7c71e-fc73-434e-a008-d63c222179d0","title":"FloraCAT: Banco de datos de los cormófitos de Cataluña","description":"FloraCat es un banco de datos que recoge las observaciones sobre Cormófitos (pteridofitos, gimnosperamas y angiospermas) que a aparecen en la bibliografía especializada en el marco territorial de Cataluña. También se recoge la información taxonómica, ecológica, corológica, fitosociológica, etc., del taxón, siempre que estos datos figuren en el trabajo.","type":"OCCURRENCE","hostingOrganizationKey":"6c4a0bb0-2a4d-11d8-aa2d-b8a03c50a862","hostingOrganizationTitle":"GBIF-Spain","countryCoverage":[],"publishingCountry":"ES","publishingOrganizationKey":"7b4f2f30-a456-11d9-8049-b8a03c50a862","publishingOrganizationTitle":"Banc de dades de biodiversitat de Catalunya","license":"http://creativecommons.org/licenses/by-nc/4.0/legalcode","decades":[1700,1800,1810,1820,1830,1840,1850,1860,1870,1880,1890,1900,1910,1920,1930,1940,1950,1960,1970,1980,1990,2000,2010],"keywords":["Observation","Occurrence"],"recordCount":1703418},{"key":"4cf3eec1-b902-40c9-b15b-05c5fe5928b6","title":"CSIC-Real Jardín Botánico-Anthos. Sistema de Información de las Plantas de España","description":"El Real Jardín Botánico ha desarrollado y mantenido diversas bases de datos sobre las plantas de la Península Ibérica. Uno de los proyectos que se desarrollaron en el RJB en la década de 1990 consistió en extraer de la literatura los datos de distribución de plantas. En 1999, cuando esta base de datos contaba con aproximadamente 600.000 registros, se continuó el trabajo a través del programa ANTHOS, financiado por la Fundación Biodiversidad (Ministerio de Agricultura, Alimentación y Medio Ambiente) y el Consejo Superior de Investigaciones Científicas - Real Jardín Botánico (Ministerio de Economía y Competitividad). Desde el año 2006 cuenta con una aplicación desarrollada sobre un sistema de información geográfica (SIG) que integra y mejora los procedimientos y consultas de la anterior, incrementa notablemente el conjunto de los datos disponibles —en la actualidad tenemos c. 1,8 millones—, hasta un horizonte de c. 3,5 millones de registros que estimamos para la bibliografía botánica de España. Además, la nueva aplicación combina la información corológica con otra de tipo cartográfico sobre variables ambientales y mapas de referencia, lo que permite localizar con mayor exactitud las citas de plantas, así como explicar de forma visual los patrones de distribución de las distintas especies. Se ha elegido como ámbito geográfico general del proyecto, la vista de la Península Ibérica e islas de la Macaronesia (Canarias, Madeira y Azores) como representación de las unidades biogeográficas presentes en España, de manera que se pueda estudiar la distribución de un taxon en todo el territorio nacional y zonas aledañas, e integrado en su componente geográfica.\nActualmente la información está también accesible a través del portal de colecciones del RJB (http://colecciones.rjb.csic.es/), con lo que conseguimos llegar aún a más usuarios.","type":"OCCURRENCE","hostingOrganizationKey":"6c4a0bb0-2a4d-11d8-aa2d-b8a03c50a862","hostingOrganizationTitle":"GBIF-Spain","countryCoverage":[],"publishingCountry":"ES","publishingOrganizationKey":"0363cbd4-f666-455e-8e86-0bbddcf51950","publishingOrganizationTitle":"CSIC-Real Jardín Botánico","license":"http://creativecommons.org/licenses/by-nc/4.0/legalcode","decades":[],"keywords":["Other"],"recordCount":1667138},{"key":"b84a3711-b4ca-4e4f-adac-80dfaea98d1c","title":"Hatikka Observation Database","description":"Hatikka Observation Database is a digital field journal for Finnish amateur naturalists. It contains occurrence data for all taxon groups from Finland and several other countries.","type":"OCCURRENCE","hostingOrganizationKey":"04fd2e13-6881-4e5c-9dd1-8fdd9ab993c1","hostingOrganizationTitle":"Finnish Biodiversity Information Facility","countryCoverage":[],"publishingCountry":"FI","publishingOrganizationKey":"04fd2e13-6881-4e5c-9dd1-8fdd9ab993c1","publishingOrganizationTitle":"Finnish Biodiversity Information Facility","license":"http://creativecommons.org/licenses/by/4.0/legalcode","decades":[1700,1800,1810,1820,1830,1840,1850,1860,1870,1880,1890,1900,1910,1920,1930,1940,1950,1960,1970,1980,1990,2000,2010],"keywords":["Occurrence"],"recordCount":1616778},{"key":"ce58b7bb-fed6-46b9-9424-135499c7afdf","title":"Garden Bird Surveys","description":"The Garden Bird Survey (GBS) has been run by the Canberra Ornithologists Group (COG) since 3 July 1981.  Summary results of the GBS are published by COG in the Annual Bird Report  published as an issue of \"Canberra Bird Notes\" in hard copy and on the COG website  http://cbn.canberrabirds.org.au/ (navigate through the link to Canberra Bird Notes).\n\nThe basis of the Survey is a site equivalent in area to a circle of 100m in radius around the observer's home or workplace.    Not all sites are circular but all are approximately 3Ha in area.  There is no restriction on the elevation of the bird when observed, and birds flying over the site are included.\n\nMost of the Survey sites are located in the urban area of the ACT but some are also located in the City of Queanbeyan and the villages and rural residential areas in the areas of NSW surrounding the ACT.  A State indicator shows which sites are inside or outside the ACT.\n\n\n\nThe observation period is determined by standard starting dates for each year, with a year always commencing on 3 July.  In most cases the observation period is 7 days so that within each year the starting date of each period is the same day of the week.  Exceptions are:\n-\tIn Leap Years the period commencing February 26 is 8 days to accommodate the 29 February; and\n-\tEvery year the period beginning 25 June is 8 days to enable a seamless match to the first day of the week beginning 3 July.\nThe basic counting rule is to report the maximum number of birds of a species seen at any time during the week.  For example:\n-\tIf ten birds of species \"A\" are seen on the first day of a period and twelve on the second day, record \"12\".    \n-\tIf in the same period 4 birds of species \"B\" are seen on the second day and five birds of species \"B\" are seen on the sixth day report \"5\".  \n\nApplication of this rule means that the survey results are not appropriate for measuring the numbers of birds that are migrating in flocks since only the biggest flock is recorded with no measure of the number of flocks.\n\nIt should be noted that number of sites operating in any period may vary, both between years and within a year.   The number of sites tends to be low for the periods beginning 3 and 10 July (due to delays in obtaining new Charts) and from 18 December to 8 January due to observers being away on vacation.","type":"OCCURRENCE","hostingOrganizationKey":"3c5e4331-7f2f-4a8d-aa56-81ece7014fc8","hostingOrganizationTitle":"Atlas of Living Australia","countryCoverage":[],"publishingCountry":"AU","publishingOrganizationKey":"4e1336c8-6101-44ef-8dc1-8af45ba7178a","publishingOrganizationTitle":"Canberra Ornithologists Group","license":"http://creativecommons.org/licenses/by-nc/4.0/legalcode","decades":[],"keywords":[],"recordCount":1609021},{"key":"a99ca3c9-7448-4bf6-aba5-0ef61b01232c","title":"Rotherham Biological Records Centre - Non-sensitive Records from all taxonomic groups","description":"This dataset is part of a pilot project of Yorkshire and Humber Environmental Data Network (YHEDN) to mobilise LRC data and Naturalist data from our region more widely.\n \n The data has been collated into 2 datasets for NBN (Sensitive and non-sensitive species) with the original survey name as an attribute. More detailed meta-data can be obtained for individual surveys on request from the centre.\n \n Currently Sensitive species includes all bats, badgers and all birds of prey.\n \n Some data has been excluded altogether from these datasets until such time as we can clarify our authority to distribute it but this can be obtained directly from the LRC.","type":"OCCURRENCE","hostingOrganizationKey":"07f617d0-c688-11d8-bf62-b8a03c50a862","hostingOrganizationTitle":"National Biodiversity Network","countryCoverage":[],"publishingCountry":"GB","publishingOrganizationKey":"1467829d-0779-43eb-9fab-0e27e48b6457","publishingOrganizationTitle":"Rotherham Biological Records Centre","license":"http://creativecommons.org/licenses/by-nc/4.0/legalcode","decades":[1700,1800,1810,1820,1830,1840,1850,1860,1870,1880,1890,1900,1910,1920,1930,1940,1950,1960,1970,1980,1990,2000,2010],"keywords":[],"recordCount":1604504},{"key":"9440b24c-cd99-48e1-9c1d-135a59267eb0","title":"Inventaire National du Patrimoine Naturel : Flore Franco-Belge","description":"L'objectif de cet inventaire est de rassembler un jeu exhaustif de données sur l'ensemble des espèces connues dans le tiers nord de la France et en Belgique. Le réseau est coordonné par l'Institut Floristique Franco-Belge (L. Delvosalle et V. Boullet). Au 01/01/2002, la base contient environ 2 350 000 données. Celles-ci couvrent une période allant de 1910 à 1998 mais l'essentiel concerne les années 1970-1989. Les données sont localisées sous la forme d'une présence absence par maille de 4 km x 4 km. Ce fichier ne contient pas d'informations autres que les données essentielles (espèce, lieu, date, observateur ou source bibliographique).","type":"OCCURRENCE","hostingOrganizationKey":"1928bdf0-f5d2-11dc-8c12-b8a03c50a862","hostingOrganizationTitle":"UMS PatriNat (AFB-CNRS-MNHN), Paris","countryCoverage":[],"publishingCountry":"FR","publishingOrganizationKey":"1928bdf0-f5d2-11dc-8c12-b8a03c50a862","publishingOrganizationTitle":"UMS PatriNat (AFB-CNRS-MNHN), Paris","license":"http://creativecommons.org/licenses/by/4.0/legalcode","decades":[],"keywords":[],"recordCount":1578995},{"key":"f9a70dab-004b-45ad-90cb-24d8ff645b44","title":"Centre for Biodiversity Genomics - Canadian Specimens","description":"The Centre for Biodiversity Genomics (CBG) at the University of Guelph is spearheading a novel approach to biodiversity research within Canada and internationally. Its three research units -- CBG Collections, CBG Genomics (or the Canadian Centre for DNA Barcoding, CCDB) and CBG Informatics -- are advancing 21st century biodiversity science by enabling species identification and discovery that is based on the analysis of sequence diversity in short, standardized gene regions, DNA barcodes. CBG Collections maintains a globally unique natural history collection of 3.3 million specimens. Every specimen is digitized, and the exact storage location of each specimen is tracked in a collection management information system for quick reference and retrieval. The databased information for every voucher is also archived in the Barcode of Life Data System (BOLD; www.boldsystems.org), permitting the permanent storage, validation and analysis of barcode sequence data and associated specimen metadata. Most (88.6%) of the specimens have been DNA barcoded, and a few representatives of every species have been digitally imaged. The CCDB holds high quality DNA extracts in a secure 2000 ft2 ultra-cold freezer bank. These DNA extracts reflect residual material following the barcode analysis of samples; it contains 5.3 million extracts from over 250,000 species derived from 231 countries, oceans and dependent territories, all connected to a voucher specimen on BOLD.\n\nThis resource represents the Canadian specimens held in the Specimen Archives of CBG Collections as of Dec 2017.  Please address inquiries to ccdbcol@uoguelph.ca","type":"OCCURRENCE","hostingOrganizationKey":"296fe5cf-ae43-4212-8f77-293e807d0d5a","hostingOrganizationTitle":"University of Guelph","countryCoverage":[],"publishingCountry":"CA","publishingOrganizationKey":"296fe5cf-ae43-4212-8f77-293e807d0d5a","publishingOrganizationTitle":"University of Guelph","license":"http://creativecommons.org/licenses/by-nc/4.0/legalcode","decades":[1980,1990,2000,2010],"keywords":["Specimen","Occurrence"],"recordCount":1500515},{"key":"b7cd5ad0-f65a-4de1-a1bb-318cf5ae12f8","title":"LERN Records","description":"Records held within the LERN database which have been marked as having been validated (within LERN procedures) and where LERN has the agreement of the data owner to publish them on the NBN Gateway.","type":"OCCURRENCE","hostingOrganizationKey":"07f617d0-c688-11d8-bf62-b8a03c50a862","hostingOrganizationTitle":"National Biodiversity Network","countryCoverage":[],"publishingCountry":"GB","publishingOrganizationKey":"0ccc789d-ca07-4bb9-a1e7-a1d1b8491287","publishingOrganizationTitle":"Lancashire Environment Record Network","license":"http://creativecommons.org/licenses/by-nc/4.0/legalcode","decades":[1500,1600,1700,1800,1810,1820,1830,1840,1850,1860,1870,1880,1890,1900,1910,1920,1930,1940,1950,1960,1970,1980,1990,2000,2010],"keywords":[],"recordCount":1417679},{"key":"20e3fcbb-c285-49ee-a93d-cc6ccd06ca9e","title":"FLORIVON","description":"Observations of vascular plants by botanists from the period 1901-1949. Data have been collected in 1.3 x 1 km grid squares. The entire country of the Netherlands was surveyed. Since records are currently being digitized, the FLORIVON dataset is still growing. We estimate the final number of records on 1,400,000. We digitize ~200,000 records per year and finish the digitizing project in 2018.","type":"OCCURRENCE","hostingOrganizationKey":"2d08e940-df21-45b4-9d17-1eff118907ff","hostingOrganizationTitle":"Dutch Foundation for Botanical Research (FLORON)","countryCoverage":[],"publishingCountry":"NL","publishingOrganizationKey":"2d08e940-df21-45b4-9d17-1eff118907ff","publishingOrganizationTitle":"Dutch Foundation for Botanical Research (FLORON)","license":"http://creativecommons.org/licenses/by-nc/4.0/legalcode","decades":[1860,1870,1880,1890,1900,1910,1920,1930,1940,1950],"keywords":["Observation","Occurrence"],"recordCount":1368448},{"key":"4ebe5835-851f-43fd-beed-afade357bfc7","title":"Observations floristiques floutées issues de la base de données flore du Conservatoire botanique national alpin","description":"Observations floristiques floutées à la maille de 10 km issues de la base de données flore du Conservatoire botanique national alpin (CBNA). Ces observations sont produites par les partenaires du CBNA ou proviennent de la bibliographie ou d'herbier. Le jeu contient des données sur la flore et la fonge.","type":"OCCURRENCE","hostingOrganizationKey":"1928bdf0-f5d2-11dc-8c12-b8a03c50a862","hostingOrganizationTitle":"UMS PatriNat (AFB-CNRS-MNHN), Paris","countryCoverage":[],"publishingCountry":"FR","publishingOrganizationKey":"1928bdf0-f5d2-11dc-8c12-b8a03c50a862","publishingOrganizationTitle":"UMS PatriNat (AFB-CNRS-MNHN), Paris","license":"http://creativecommons.org/licenses/by-nc/4.0/legalcode","decades":[],"keywords":["Observation","Occurrence"],"recordCount":1355944},{"key":"e5f16d86-e225-4822-97be-a64ce17079c7","title":"Relevés floristiques du protocole de l'Inventaire National Forestier de l'IGN","description":"Inventaire forestier décennal concernant la France métropolitaine mené par l’IGN depuis novembre 2004. Relevés floristiques et forestiers effectués sur placettes en forêt et peupleraie. Il s’agit de relevés protocolés, avec un plan d’échantillonnage basé sur une grille régulière de mailles carrées de 1 km de côté, couvrant l’ensemble du territoire. Les placettes sont de 15 m de rayon (7 ares) pour l’ensemble de la flore vasculaire et de 25 m de rayon (20 ares) pour les arbres. Les relevés sont associes à d’autres mesures dendrologiques et écologiques. Ils ne sont pas tous effectues à la même période. \nhttp://inventaire-forestier.ign.fr/spip/spip.php?rubrique205","type":"OCCURRENCE","hostingOrganizationKey":"1928bdf0-f5d2-11dc-8c12-b8a03c50a862","hostingOrganizationTitle":"UMS PatriNat (AFB-CNRS-MNHN), Paris","countryCoverage":[],"publishingCountry":"FR","publishingOrganizationKey":"1928bdf0-f5d2-11dc-8c12-b8a03c50a862","publishingOrganizationTitle":"UMS PatriNat (AFB-CNRS-MNHN), Paris","license":"http://creativecommons.org/licenses/by-nc/4.0/legalcode","decades":[],"keywords":["Observation","Occurrence"],"recordCount":1343014},{"key":"c779b049-28f3-4daf-bbf4-0a40830819b6","title":"EBCC Atlas of European Breeding Birds","description":"In 1997 the EBCC Atlas of European breeding birds, also referred to as European Ornithological Atlas or  'EOA', was published. This voluminous book was the result of more than 25 years of fieldwork, cooperation, data gathering, data processing, writing and editing. Next to a beautiful book the data in the maps provides countless possibilities fur further studies on the distribution of the European breeding birds.","type":"OCCURRENCE","hostingOrganizationKey":"1c51595e-f1e9-467f-94e5-e1b65d15b30f","hostingOrganizationTitle":"Dutch Centre for Field Ornithology (Sovon)","countryCoverage":[],"publishingCountry":"NL","publishingOrganizationKey":"d3f94e8a-bb06-4d2b-89a6-6cd66abfa66c","publishingOrganizationTitle":"European Bird Census Council (EBCC)","license":"http://creativecommons.org/licenses/by/4.0/legalcode","decades":[1970,1980,1990],"keywords":["Breeding Birds","Europe","Observation","Occurrence"],"recordCount":1339711},{"key":"bb5b30b4-827e-4d5e-a86a-825d65cb6583","title":"Paleobiology Database","description":"The Paleobiology Database (PBDB) is a non-governmental, non-profit public resource for paleontological data. It has been organized and operated by a multi-disciplinary, multi-institutional, international group of paleobiological researchers. Its purpose is to provide global, collection-based occurrence and taxonomic data for organisms of all geological ages, as well data services to allow easy access to data for independent development of analytical tools, visualization software, and applications of all types. The Database’s broader goal is to encourage and enable data-driven collaborative efforts that address large-scale paleobiological questions.","type":"OCCURRENCE","hostingOrganizationKey":"2053a639-84c3-4be5-b8bc-96b6d88a976c","hostingOrganizationTitle":"VertNet","countryCoverage":[],"publishingCountry":"US","publishingOrganizationKey":"b711353c-44d7-4e8b-90c5-16fea0d247e0","publishingOrganizationTitle":"Paleobiology Database","license":"http://creativecommons.org/licenses/by/4.0/legalcode","decades":[],"keywords":["Specimen","Occurrence"],"projectIdentifier":"PBDB","recordCount":1310925},{"key":"169fa761-2fb9-4022-93bd-e22b7a062efd","title":"PlutoF platform observations","description":"Observation records from Citizen Science and research projects hosted by PlutoF platform. All observations have been moderated and verified on PlutoF workbench by appointed persons.","type":"OCCURRENCE","hostingOrganizationKey":"0870a77b-587c-4369-a8ed-bc3d347b8e1c","hostingOrganizationTitle":"PlutoF","countryCoverage":[],"publishingCountry":"EE","publishingOrganizationKey":"0870a77b-587c-4369-a8ed-bc3d347b8e1c","publishingOrganizationTitle":"PlutoF","license":"http://creativecommons.org/licenses/by-nc/4.0/legalcode","decades":[],"keywords":["Observation","Occurrence"],"recordCount":1288808},{"key":"ca435754-9190-4a87-9b2c-c21563898294","title":"Données issues de Clicnat (Base de données naturaliste picarde gérée par Picardie Nature)","description":"Créé en 2009, Clicnat est un logiciel libre développé par Picardie Nature avec le soutien de l’Union européenne, de la DREAL Picardie, de la Région Picardie, du Conseil général de l’Aisne et du Conseil général de la Somme.\nIl permet à tous les Picards depuis internet :\n* de saisir et gérer leurs propres observations de faune sauvage (des mammifères aux mollusques, en passant par les oiseaux ou les papillons) ;\n* de consulter les informations actualisées au jour le jour comme les cartes de répartition des espèces.\nChaque citoyen picard, du débutant au scientifique, peut saisir des données dans un espace simple d’utilisation, joindre des photos à ses observations, bénéficier de cartographies régionales\net de restitutions communales lui permettant de mieux connaître notre riche faune picarde.\nClicnat permet, grâce à ses données, de rendre disponibles librement des atlas espèces, inventaires par commune, études et autres informations. Créé à des fins de connaissance et de protection de la nature, Clicnat est destiné aussi bien aux institutions publiques dans le cadre par exemple de la mise en place de stratégies de conservation ou de projets d’aménagements, qu’aux élèves ou étudiants ou aux passionnés de nature.\nClicnat permet également d’aider les naturalistes dans leurs recherches en faisant ressortir les groupes d’espèces peu connus, ou certaines zones peu inventoriées. Il s’agit donc d’un outil dynamique, qui va bien au delà d’une base de données naturalistes habituelle et tient compte de toutes les avancées technologiques et informatiques actuelles. \nCe projet est également ouvert aux structures récoltant et gérant des données sur la faune sauvage. Les structures impliquées disposent toutes d’un compte d’accès aux données en fonction de leur territoire d’agrément et/ou de leurs champs d’intervention propres.\nEnfin, un module spécifique de saisie bibliographique permet d'intégrer des données issues de publications dans la base de données.\nClicnat est donc un outil qui compile des données collectées de manière opportuniste, des données collectées dans le cadre d'enquêtes et suivis spécifiques et des données bibliographiques.","type":"OCCURRENCE","hostingOrganizationKey":"1928bdf0-f5d2-11dc-8c12-b8a03c50a862","hostingOrganizationTitle":"UMS PatriNat (AFB-CNRS-MNHN), Paris","countryCoverage":[],"publishingCountry":"FR","publishingOrganizationKey":"1928bdf0-f5d2-11dc-8c12-b8a03c50a862","publishingOrganizationTitle":"UMS PatriNat (AFB-CNRS-MNHN), Paris","license":"http://creativecommons.org/licenses/by-nc/4.0/legalcode","decades":[],"keywords":["Observation","Occurrence"],"recordCount":1285805},{"key":"40c0f670-ee87-4576-be9d-2725e0b47035","title":"SA Fauna (BDBSA)","description":"The flora and fauna data sets represent the spatial locations of flora and fauna species observation data maintained by DEWNR in the Biological Databases of South Australia.","type":"OCCURRENCE","hostingOrganizationKey":"3c5e4331-7f2f-4a8d-aa56-81ece7014fc8","hostingOrganizationTitle":"Atlas of Living Australia","countryCoverage":[],"publishingCountry":"AU","publishingOrganizationKey":"4c46f883-69c1-42ac-8a20-4cdba2afb9a6","publishingOrganizationTitle":"South Australia, Department of Environment, Water and Natural Resources","license":"http://creativecommons.org/licenses/by/4.0/legalcode","decades":[],"keywords":[],"recordCount":1272012},{"key":"a4d53b24-d61b-4ee5-addd-8b42d54a913f","title":"Finnish Winter Bird Census","description":"Finnish Winter Bird Census database contains occurrence data for birds and mammals in Finland since 1956/57.","type":"OCCURRENCE","hostingOrganizationKey":"04fd2e13-6881-4e5c-9dd1-8fdd9ab993c1","hostingOrganizationTitle":"Finnish Biodiversity Information Facility","countryCoverage":[],"publishingCountry":"FI","publishingOrganizationKey":"04fd2e13-6881-4e5c-9dd1-8fdd9ab993c1","publishingOrganizationTitle":"Finnish Biodiversity Information Facility","license":"http://creativecommons.org/licenses/by/4.0/legalcode","decades":[1940,1950,1960,1970,1980,1990,2000,2010],"keywords":["Observation","Occurrence"],"recordCount":1221953},{"key":"3f4d4bf1-5f9a-43f2-a0d8-ff6ed5952796","title":"IMOS - Animal Tracking Facility - Acoustic Tracking - Quality Controlled Detections (2007 -2017)","description":"<p>Over the last decade, the Integrated Marine Observing System’s Animal Tracking Facility (IMOS ATF) has established a permanent array of acoustic receivers around Australia to detect the movements of tagged marine animals in coastal waters. Simultaneously, IMOS ATF developed a centralised national database (https://animaltracking.aodn.org.au/) to encourage collaborative research across the user community and provide unprecedented opportunities to quantify individual behaviour across a broad range of taxa. Here we present the database and quality control procedures developed to collate 48.5 million valid detections from 1891 receiving stations. This dataset consists of detection data for 3523 tags deployed on 117 species (fish, sharks, rays, reptiles, and mammals), with distances travelled ranging from a few to thousands of kilometres. This dataset of acoustic detections constitutes a valuable resource facilitating meta-analysis of animal movement, distributions, and habitat use, and is important for relating species distribution shifts with environmental covariates.</p>\n<p>This copy of the IMOS ATF data is of the valid detections downloaded via the metadata record at https://catalogue-imos.aodn.org.au/geonetwork/srv/eng/metadata.show?uuid=0ede6b3d-8635-472f-b91c-56a758b4e091. This dataset has been summarized by reducing the detection records to the count of detections per animal per site per day (UTC). The DwC field eventId has been used to record the transmitter serial number. The initial deployment/release of the animal has also been added to the dataset using an occurenceId of transmitter tag with a postfix of '-release'.</p>\n<p>Details of the acoustic receiver sites is at https://catalogue-imos.aodn.org.au/geonetwork/srv/eng/metadata.show?uuid=4a97bd11-e821-4682-8b20-cb69201f3223.</p>","type":"OCCURRENCE","hostingOrganizationKey":"5fa89f68-9af0-4a0d-8998-ea39695c1db9","hostingOrganizationTitle":"CSIRO Oceans and Atmosphere","countryCoverage":[],"publishingCountry":"AU","publishingOrganizationKey":"5fa89f68-9af0-4a0d-8998-ea39695c1db9","publishingOrganizationTitle":"CSIRO Oceans and Atmosphere","license":"http://creativecommons.org/licenses/by/4.0/legalcode","decades":[2000,2010],"keywords":["Occurrence"],"recordCount":1161071},{"key":"ad0d1a24-e952-11e2-961f-00145eb45e9a","title":"VegetWeb - Repositorium von Vegetationsaufnahmen","description":"VegetWeb - Repositorium von Vegetationsaufnahmen aus Deutschland: Vorkommen von Pflanzenarten in den Aufnahmeflächen, zugeordnet zu MTB-Rasterfeldern - repository of vegetation plot data from germany, assigned to grid fields of TK25 map units (6 x 10 geographical minutes)","type":"OCCURRENCE","hostingOrganizationKey":"43cab2b0-0653-11d9-acb2-b8a03c50a862","hostingOrganizationTitle":"Bundesamt für Naturschutz / Netzwerk Phytodiversität Deutschland","countryCoverage":[],"publishingCountry":"DE","publishingOrganizationKey":"43cab2b0-0653-11d9-acb2-b8a03c50a862","publishingOrganizationTitle":"Bundesamt für Naturschutz / Netzwerk Phytodiversität Deutschland","license":"http://creativecommons.org/licenses/by-nc/4.0/legalcode","decades":[],"keywords":[],"recordCount":1142431},{"key":"1881d048-04f9-4bc2-b7c8-931d1659a354","title":"PRECIS","description":"PRECIS database from SANBI.","type":"OCCURRENCE","hostingOrganizationKey":"c5f7ef70-e233-11d9-a4d6-b8a03c50a862","hostingOrganizationTitle":"South African National Biodiversity Institute","countryCoverage":[],"publishingCountry":"ZA","publishingOrganizationKey":"c5f7ef70-e233-11d9-a4d6-b8a03c50a862","publishingOrganizationTitle":"South African National Biodiversity Institute","license":"http://creativecommons.org/licenses/by/4.0/legalcode","decades":[],"keywords":[],"recordCount":1124142},{"key":"2985efd1-45b1-46de-b6db-0465d2834a5a","title":"Tasmanian Natural Values Atlas","description":"ABOUT THE NATURAL VALUES ATLAS\nThe Natural Values Atlas provides an easy to use web interface allowing access to authoritative and comprehensive natural values information.  It draws together in one centralised location data on Tasmanian flora and fauna including Threatened species and weeds as well as the Tasmanian Geodiversity Database.  It also incorporates access to other essential data sets such as TASVEG, Threatened communities and Reserves.  The Natural Values Atlas is a supported information tool that ensures knowledge about Tasmania's valuable natural assets is readily available and quickly obtained.  This information informs planning and decision making processes across all levels of government, industry and the general public, assisting to improve conservation outcomes for natural values in the State.\n\nSPECIES\nThe Natural Values Atlas is comprised of a database and web based application that allows observations of plants and animals from various sources to be viewed, recorded and analysed.  It can be used to search for information on more than 20,000 plant and animal species from Tasmania, Australia and can display maps showing their location and extent.  There are currently over 1 million observations of plants and animals recorded in the Natural Values Atlas which have been collected by a variety of custodians.  This information has been generated through general species surveys and projects undertaken for scientific research, environmental assessments and other purposes throughout the State since the 1800's.\nThe application maintains species taxonomy, attributes and conservation values and provides access to images, related web sites and management documents such as listing statements and recovery plans.  Habitat Mapping for a number of high priority threatened fauna species is also available.  Information sourced from monitoring individual flora and fauna species is accessible as well as samples and analysis which allows information about samples that are associated with an observation to be recorded and tracked.\n\nGEODIVERSITY\nThe Natural Values Atlas can be used to find and download information about sites that are listed in the Tasmanian Geodiversty Database either for their geology, geomorphology or soil conservation values.  The database contains descriptions of the sites and the geodiverstiy values they encompass, their significance to conservation, sensitivity to disturbance, and advice as to appropriate site management.  The Natural Values Atlas can display maps showing the location and extent of sites.\n\nMANAGEMENT\nManagement locations and activities are another important area of the Natural Values Atlas which provide access to data about locations where activities are being undertaken to control, monitor, manage or maintain natural values.  Examples include 1080 baits, traps, nests, nest boxes and monitoring plots.\n\nPROJECTS\nAll data stored in the Natural Values Atlas is organised under a Project.  This component of the Natural Values Atlas contains information regarding the custodian responsible for the project, specific project details such as the people involved in the project or the methodology used to collect the data.  Associated reports, links and images can also be found in this area.  It provides metadata for each project data set.\n\nCONSEVATION INFORMATION SYSTEM\nThe Conservation Information System (CIS) contains data that assists with conservation planning at the landscape scale.  The CIS Conservation Analysis interface allows you to apply your own weightings for a particular conservation value to create a map of areas that have a high density of the natural values of interest.\n\nNATURAL VALUES REPORTS\nNatural Values Reports enables multiple data sets to be brought together in the one report providing a resource that can be used for desktop assessments of natural values for specific areas.  Some of the data sets available through the Natural Values Report facility include: threatened species, species of conservation significance, weeds, geodiversity, TASVEG, threatened communities and reserves.\n\nQUALITY ASSURANCE\nNew data is loaded into the Natural Values Atlas daily and existing data is regularly reviewed and updated as required.  All data in the Natural Values Atlas is carefully scrutinized by the NVA team who draw on the support of relevant experts to ensure that the data is of the highest quality possible.  This is an ongoing task for which the NVA team welcomes feedback and input from NVA users to continually improve the quality of the data.\nThe NVA is supported by Metadata and Business Rules.  These are available from within the NVA or on request.\nThe Natural Values Atlas undergoes constant review and improvement where existing functionality is streamlined and new functionality is added as required.  New versions are regularly released.  The Natural Values Atlas Message Board informs users of changes to the system.\n\nSUPPORT\nThere is online help embedded in the Natural Values Atlas which instructs users on how to operate the database and make use of the various functions available.  It you are interested in attending a training session then please contact the NVA team to find out what is available.  \n\nHOW TO ACCESS THE NATURAL VALUES ATLAS\nGo to www.naturalvaluesatlas.tas.gov.au and select the Register button.  Fill in and submit the form.  You will be informed via email when your user name and password has been activated.  Simplified data from the NVA is also available via the Land Information System Tasmania (LIST) at www.thelist.tas.gov.au.\n\nFURTHER INFORMATION\nFor enquiries please contact support(at)naturalvaluesatlas.tas.gov.au.","type":"OCCURRENCE","hostingOrganizationKey":"3c5e4331-7f2f-4a8d-aa56-81ece7014fc8","hostingOrganizationTitle":"Atlas of Living Australia","countryCoverage":[],"publishingCountry":"AU","publishingOrganizationKey":"e401baff-ed77-4484-9897-81209fa336d8","publishingOrganizationTitle":"Tasmanian Department of Primary Industries, Parks, Water and Environment","license":"http://creativecommons.org/licenses/by/4.0/legalcode","decades":[],"keywords":[],"recordCount":1122023},{"key":"e4473544-f4cd-4429-b791-39d6e1fdb0a4","title":"WildNet - Queensland Wildlife Data","description":"An initial trial of the Queensland wildlife data accessible via the Qld wildlife data API","type":"OCCURRENCE","hostingOrganizationKey":"3c5e4331-7f2f-4a8d-aa56-81ece7014fc8","hostingOrganizationTitle":"Atlas of Living Australia","countryCoverage":[],"publishingCountry":"AU","publishingOrganizationKey":"3c5e4331-7f2f-4a8d-aa56-81ece7014fc8","publishingOrganizationTitle":"Atlas of Living Australia","license":"http://creativecommons.org/licenses/by/4.0/legalcode","decades":[],"keywords":[],"recordCount":1116785},{"key":"d52d01f6-7472-4dbf-9ea8-a33c343255ac","title":"Vegetation data from protected areas in Denmark (§ 3 in the Danish Nature Protection Act)","description":"Vegetation data from protected areas in Denmark (§ 3 in the Danish Nature Protection Act)","type":"OCCURRENCE","hostingOrganizationKey":"299958e0-4c06-11d8-b290-b8a03c50a862","hostingOrganizationTitle":"Danish Biodiversity Information Facility","countryCoverage":[],"publishingCountry":"DK","publishingOrganizationKey":"8e1a7b73-e746-4d20-a0ba-e647ce0f9784","publishingOrganizationTitle":"Department of Bioscience, Aarhus University","license":"http://creativecommons.org/licenses/by/4.0/legalcode","decades":[2000,2010],"keywords":["Observation","Occurrence"],"recordCount":1116766},{"key":"3d2619bf-9cb3-4c0e-8f2c-84e8a0586aac","title":"Atlas of Finnish Macrolepidoptera","description":"Combined atlas of butterflies in Finland.","type":"OCCURRENCE","hostingOrganizationKey":"04fd2e13-6881-4e5c-9dd1-8fdd9ab993c1","hostingOrganizationTitle":"Finnish Biodiversity Information Facility","countryCoverage":[],"publishingCountry":"FI","publishingOrganizationKey":"04fd2e13-6881-4e5c-9dd1-8fdd9ab993c1","publishingOrganizationTitle":"Finnish Biodiversity Information Facility","license":"http://creativecommons.org/licenses/by/4.0/legalcode","decades":[1800,1810,1820,1830,1840,1850,1860,1870,1880,1890,1900,1910,1920,1930,1940,1950,1960,1970,1980,1990],"keywords":["Observation","Occurrence"],"recordCount":1088807},{"key":"b3604297-f438-4b5c-b654-7976a909f24e","title":"Fungal Records Database of Britain and Ireland","description":"fungi (true fungi [mushrooms, lichens, moulds, yeast], chromistan fungi [downy mildews, water moulds], protozoan fungi [slime moulds and their allies])","type":"OCCURRENCE","hostingOrganizationKey":"07f617d0-c688-11d8-bf62-b8a03c50a862","hostingOrganizationTitle":"National Biodiversity Network","countryCoverage":[],"publishingCountry":"GB","publishingOrganizationKey":"764dc23f-4a2f-4d81-93cb-3cf16077d191","publishingOrganizationTitle":"British Mycological Society","license":"http://creativecommons.org/licenses/by-nc/4.0/legalcode","decades":[1600,1700,1800,1810,1820,1830,1840,1850,1860,1870,1880,1890,1900,1910,1920,1930,1940,1950,1960,1970,1980,1990,2000],"keywords":[],"recordCount":1085628},{"key":"940821c0-3269-11df-855a-b8a03c50a862","title":"Belgian IFBL Flora Checklists (1939-1971)","description":"The data in IFBL 1, 2 & 3 covers all of the IFBL 1 km² flora checklists sampled between 1939 and 1971. About 10000 original lists corresponding with some 1 200 000 data representative of the former distribution of vascular plant species in Belgium, were digitised. The IFBL data is integrated in existing national and regional flora databases and will contribute to the realisation of regional Flora Atlases. The analysis of the digitised data will improve the possibilities to compare floral data over successive periods and will be of help in developing a strategy for reducing the costs and the length of new flora monitoring and mapping projects in the future.\nThe Atlas of the Flora (Pteridophytes – Spermatophytes) of Belgium and Luxemburg (Van Rompaey & Delvosalle 1972) was the result of the first national flora mapping project (1939- 1971). Unfortunately, the data used to build it were only digitised at a synthetic level (units of 16 km²). To be able to investigate the changes in the flora between the first mapping period and the second (1972 up to now) in all its aspects, especially in relation to environmental factors (climatic, pollution, land use…), the original data was digitized, i.e. the field records on the flora (flora checklists) made within 1km² IFBL squares.","type":"OCCURRENCE","hostingOrganizationKey":"37e82b90-1e21-11de-ab90-f72009d2669b","hostingOrganizationTitle":"Belgian Biodiversity Platform","countryCoverage":[],"publishingCountry":"BE","publishingOrganizationKey":"a344ee9f-f1b7-4761-be2c-58ee6d741395","publishingOrganizationTitle":"Botanic Garden Meise","license":"http://creativecommons.org/publicdomain/zero/1.0/legalcode","decades":[1930,1940,1950,1960,1970],"keywords":["Observation","Occurrence"],"recordCount":1045806},{"key":"7fd12114-9010-4c13-8f46-990fe04ca882","title":"NatureServe Network Species Occurrence Data","description":"This dataset consists of \"Element Occurrence\" (EO) records for rare and endangered species of the United States and Canada that are managed by the NatureServe Network of natural heritage programs and conservation data centers. Occurrences are documented by voucher specimens and other forms of ecological observations, and include spatially explicit data on the location and extent of populations, together with data on abundance and population condition. Due to the potential sensitivity of endangered species locations, only non-sensitive geographic data are provided in this dataset. Species-specific criteria used to define element occurrences, as well as standards for documenting and mapping element occurrences are available on the NatureServe web site at: http://www.natureserve.org/conservation-tools/standards-methods","type":"OCCURRENCE","hostingOrganizationKey":"aa40a1e0-818b-11d9-b6d0-b8a03c50a862","hostingOrganizationTitle":"NatureServe","countryCoverage":[],"publishingCountry":"US","publishingOrganizationKey":"aa40a1e0-818b-11d9-b6d0-b8a03c50a862","publishingOrganizationTitle":"NatureServe","license":"http://creativecommons.org/licenses/by-nc/4.0/legalcode","decades":[],"keywords":["conservation","environment","biodiversity","biota","species","rare","NatureServe","endangered","threatened","Occurrence","NatureServe Network"],"recordCount":1041361},{"key":"87b6acb8-4db2-4769-93ca-e086040dfe14","title":"Bugbase, Lepidopterological Society","description":"Database on the recordings of butterflies by the Lepidopterological Society of Denmark (http://www.lepidoptera.dk). Occurrences are based on observations and collecting by any means, trapping, photos etc. Society specialist groups check data for errors and unusual records, mostly by contacting the observer/recorder. To assure quality of data, only members of the society are given access to enter records in the database.","type":"OCCURRENCE","hostingOrganizationKey":"299958e0-4c06-11d8-b290-b8a03c50a862","hostingOrganizationTitle":"Danish Biodiversity Information Facility","countryCoverage":[],"publishingCountry":"DK","publishingOrganizationKey":"ab76e54b-a6cf-4024-9e29-30df1e2f6383","publishingOrganizationTitle":"Lepidopterological Society, Denmark","license":"http://creativecommons.org/licenses/by-nc/4.0/legalcode","decades":[1900,1910,1920,1930,1940,1950,1960,1970,1980,1990,2000,2010],"keywords":["butterflies","microlepidoptera","Lepidoptera","moths","macrolepidoptera","Occurrence"],"recordCount":1038437},{"key":"0943f690-fde5-11dd-83f4-b8a03c50a862","title":"Phanerogamic Botanical Collections (S)","description":"This database contains information on the specimens in the Phanerogamic Botanical Collections of the Swedish Museum of Natural History.","type":"OCCURRENCE","hostingOrganizationKey":"4c415e40-1e21-11de-9e40-a0d6ecebb8bf","hostingOrganizationTitle":"GBIF-Sweden","countryCoverage":[],"publishingCountry":"SE","publishingOrganizationKey":"4c415e40-1e21-11de-9e40-a0d6ecebb8bf","publishingOrganizationTitle":"GBIF-Sweden","license":"http://creativecommons.org/publicdomain/zero/1.0/legalcode","decades":[],"keywords":["Specimen","Occurrence"],"recordCount":1030627},{"key":"1270b3c8-ff55-4b63-a407-dcd7e08cd23f","title":"Dragonfly records from the British Dragonfly Society's Dragonfly Recording Network for the period up to 2014","description":"Dragonfly and damselfly records collected and collated by the Dragonfly Recording Network (DRN), a part of the British Dragonfly Society, for the period 1807-2014. This dataset incorporates the previous DRN and BRC dragonfly datasets on the Gateway.","type":"OCCURRENCE","hostingOrganizationKey":"07f617d0-c688-11d8-bf62-b8a03c50a862","hostingOrganizationTitle":"National Biodiversity Network","countryCoverage":[],"publishingCountry":"GB","publishingOrganizationKey":"980451bb-e9d8-4984-8d68-0d9772ea1582","publishingOrganizationTitle":"British Dragonfly Society Recording Scheme","license":"http://creativecommons.org/licenses/by/4.0/legalcode","decades":[1800,1810,1820,1830,1840,1850,1860,1870,1880,1890,1900,1910,1920,1930,1940,1950,1960,1970,1980,1990,2000,2010],"keywords":[],"recordCount":1030501},{"key":"8ef95309-811f-4c3b-a329-a85368e774c9","title":"Scottish SNH-funded BSBI records","type":"OCCURRENCE","hostingOrganizationKey":"07f617d0-c688-11d8-bf62-b8a03c50a862","hostingOrganizationTitle":"National Biodiversity Network","countryCoverage":[],"publishingCountry":"GB","publishingOrganizationKey":"aa569acf-991d-4467-b327-8442f30ddbd2","publishingOrganizationTitle":"Botanical Society of Britain & Ireland","license":"http://creativecommons.org/licenses/by-nc/4.0/legalcode","decades":[],"keywords":[],"recordCount":1016889},{"key":"d7cc19ba-7785-4131-ab63-3328a99ecfab","title":"Données d'observation flore du réseau des CBN issues du système d'information de la FCBN","description":"Dès la création de leur Fédération (FCBN - www.fcbn.fr) en 1999, les onze Conservatoires botaniques nationaux (CBN) ont exprimé la volonté collective de constituer un système d’information national pour mettre en commun leurs données, et celles de leurs partenaires, sur la flore, la fonge et les végétations-habitats. C’est réellement en 2010 avec le lancement de l’établissement du Format Standard de Données sur la flore (FSD Flore), conçu comme le « format commun de données de la Fédération des CBN », que la démarche a été initiée. Il s’en est suivi de nombreux échanges ayant permis de finaliser le format, de le tester sur les premiers jeux de données, d’établir une charte d’adhésion au projet et d’élaborer le cadrage final de l’exercice d’agrégation des données. Le projet s’est concrétisé au premier trimestre 2013 à travers la mise au format des données détenues par les CBN et leur intégration dans le Système d’Information de la FCBN (SI-FCBN). A l’horizon de l’année 2014, il résulte, de ce projet structurant, que la FCBN dispose d’un système d’information d’envergure nationale et fort de plus de 20 millions de données d��observation sur la flore de France. Le projet a ainsi permis de capitaliser la majeure partie des connaissances sur la distribution de la flore à l’échelle du territoire métropolitain et de La Réunion. Ce produit est le fruit d’un travail de longue haleine mené par les CBN et leurs partenaires, pour certains depuis plus de vingt ans. Il repose en grande partie sur des inventaires réalisés sur le terrain, mais aussi sur des dépouillements puis saisies de la bibliographie et de données d’herbiers. Il met également en jeu toute la richesse du travail poussé d’expertise scientifique et technique mené en continu par le réseau des CBN et qui est axé d’une part sur la validation taxonomique des données, et d’autre part sur leur gestion et administration au sein de bases de données régionales.\n\nCe jeux contient les données pour les taxons ayant subit des modifications du référentiel Taxref entre la V5 et la V8.","type":"OCCURRENCE","hostingOrganizationKey":"1928bdf0-f5d2-11dc-8c12-b8a03c50a862","hostingOrganizationTitle":"UMS PatriNat (AFB-CNRS-MNHN), Paris","countryCoverage":[],"publishingCountry":"FR","publishingOrganizationKey":"1928bdf0-f5d2-11dc-8c12-b8a03c50a862","publishingOrganizationTitle":"UMS PatriNat (AFB-CNRS-MNHN), Paris","license":"http://creativecommons.org/licenses/by-nc/4.0/legalcode","decades":[],"keywords":["Observation","Occurrence"],"recordCount":1016612},{"key":"9aa00786-772a-46d4-8fe1-ac6d8926a040","title":"flora & fauna(NIBR)","description":"Flora & Fauna Resources of National Institute of Biological Resources","type":"OCCURRENCE","hostingOrganizationKey":"657b7bf0-766b-11d9-9f77-b8a03c50a862","hostingOrganizationTitle":"Korea Institute of Science and Technology Information","countryCoverage":[],"publishingCountry":"KR","publishingOrganizationKey":"eb07eeb0-3db9-11d9-8439-b8a03c50a862","publishingOrganizationTitle":"National Science Museum of Korea","license":"http://creativecommons.org/licenses/by-nc/4.0/legalcode","decades":[],"keywords":["Occurrence"],"recordCount":999976},{"key":"f7fd7255-5be6-48cf-b76a-821cb84aa93f","title":"BRERC species records within last 15 years","description":"BRERC species records recorded within last 15 years within the unitary authority areas of North Somerset, South Gloucestershire, Bristol and Bath & North East Somerset","type":"OCCURRENCE","hostingOrganizationKey":"07f617d0-c688-11d8-bf62-b8a03c50a862","hostingOrganizationTitle":"National Biodiversity Network","countryCoverage":[],"publishingCountry":"GB","publishingOrganizationKey":"950cbfcc-1cb7-46c1-92ce-05ec232512d1","publishingOrganizationTitle":"Bristol Regional Environmental Records Centre","license":"http://creativecommons.org/licenses/by-nc/4.0/legalcode","decades":[2000,2010],"keywords":[],"recordCount":983757},{"key":"865df020-f762-11e1-a439-00145eb45e9a","title":"EURISCO, The European Genetic Resources Search Catalogue","description":"The EURISCO web catalogue automatically receives data from the National Inventories (NI). It effectively provides access to all ex situ PGR information in Europe and thus facilitates locating and accessing PGR.","type":"OCCURRENCE","hostingOrganizationKey":"a3c228d0-3110-11db-abb8-b8a03c50a862","hostingOrganizationTitle":"Bioversity International","countryCoverage":[],"publishingOrganizationKey":"a3c228d0-3110-11db-abb8-b8a03c50a862","publishingOrganizationTitle":"Bioversity International","license":"http://creativecommons.org/licenses/by/4.0/legalcode","decades":[],"keywords":[],"recordCount":976457},{"key":"7d17a2b2-8751-41b5-ac9b-48effc1ea236","title":"BRERC species records recorded over 15 years ago","description":"BRERC species records recorded over 15 years ago within the unitary authority areas of North Somerset, South Gloucestershire, Bristol and Bath & North East Somerset.","type":"OCCURRENCE","hostingOrganizationKey":"07f617d0-c688-11d8-bf62-b8a03c50a862","hostingOrganizationTitle":"National Biodiversity Network","countryCoverage":[],"publishingCountry":"GB","publishingOrganizationKey":"950cbfcc-1cb7-46c1-92ce-05ec232512d1","publishingOrganizationTitle":"Bristol Regional Environmental Records Centre","license":"http://creativecommons.org/licenses/by-nc/4.0/legalcode","decades":[1830,1840,1850,1860,1870,1880,1890,1900,1910,1920,1930,1940,1950,1960,1970,1980,1990,2000,2010],"keywords":[],"recordCount":943586},{"key":"8df9af24-1fbd-4699-a545-9a2867ff25fe","title":"Atlas Flora Danica","description":"Atlas Flora Danica maps the wild Danish flora. Data collection took place from 1992 through 2012, and the voluntary monitoring work was carried out by members of the Danish Botanical Society. For this project, Denmark was divided into 2228 squares of 5 × 5 km. In all investigated squares, all plant species were recorded, with exact location. About every other square were surveyed and thereby obtaining good coverage of the whole country. The project gratefully received sponsoring from the Aage V. Jensen Nature Foundation. Atlas Flora Danica's purpose is to: 1) Show the Danish plant species’ current distribution and regional frequency, including decline or spread of species. Causes of these changes are discussed. 2) Examine the current status of red-listed, protected and rare plant species. 3) Publicize the Danish flora and the importance of protecting the plants and their habitats. Resource homepage: http://atlasfloradanica.dk/","type":"OCCURRENCE","hostingOrganizationKey":"299958e0-4c06-11d8-b290-b8a03c50a862","hostingOrganizationTitle":"Danish Biodiversity Information Facility","countryCoverage":[],"publishingCountry":"DK","publishingOrganizationKey":"98255206-f0fe-4183-9845-77143274938c","publishingOrganizationTitle":"Botanical Society of Denmark","license":"http://creativecommons.org/licenses/by/4.0/legalcode","decades":[1990,2000,2010],"keywords":["Atlas","Flora","Denmark","Plants","Occurrence"],"recordCount":933208},{"key":"864c8736-f762-11e1-a439-00145eb45e9a","title":"Point Reyes Bird Observatory - Point Counts","type":"OCCURRENCE","hostingOrganizationKey":"95f1c5d0-8996-11d9-a962-b8a03c50a862","hostingOrganizationTitle":"Avian Knowledge Network","countryCoverage":[],"publishingCountry":"US","publishingOrganizationKey":"95f1c5d0-8996-11d9-a962-b8a03c50a862","publishingOrganizationTitle":"Avian Knowledge Network","license":"http://creativecommons.org/publicdomain/zero/1.0/legalcode","decades":[],"keywords":[],"recordCount":928561},{"key":"cd6e21c8-9e8a-493a-8a76-fbf7862069e5","title":"Royal Botanic Gardens, Kew - Herbarium Specimens","description":"The Herbarium at the Royal Botanic Gardens Kew houses approximately seven million plant specimens, collected from all around the world. Specimens are either pressed and dried or preserved in spirit. Kew is committed to making this important collection more accessible to botanists and others, wherever they may be, for use in their own projects: particularly in biodiversity, conservation, sustainable development and systematics. To this end Kew is building an electronic Herbarium Catalogue containing images of the specimens and information taken from their collection labels. Specimens represented in Kew’s digital collections have been collected over a period spanning three centuries, with examples dating back to the beginning of the 18th century. These include over 300,000 putative type and historically important specimens collected by plant hunters, explorers and scientists of great renown including Charles Darwin, Joseph Dalton Hooker and Nathaniel Wallich, to name just a few.","type":"OCCURRENCE","hostingOrganizationKey":"061b4f20-f241-11da-a328-b8a03c50a862","hostingOrganizationTitle":"Royal Botanic Gardens, Kew","countryCoverage":[],"publishingCountry":"GB","publishingOrganizationKey":"061b4f20-f241-11da-a328-b8a03c50a862","publishingOrganizationTitle":"Royal Botanic Gardens, Kew","license":"http://creativecommons.org/licenses/by/4.0/legalcode","decades":[],"keywords":[],"recordCount":924700},{"key":"3a0e9440-0a97-4a04-8089-7398c77da0be","title":"SEWBReC Birds (South East Wales)","description":"All bird records held by SEWBReC for the South East Wales region.","type":"OCCURRENCE","hostingOrganizationKey":"07f617d0-c688-11d8-bf62-b8a03c50a862","hostingOrganizationTitle":"National Biodiversity Network","countryCoverage":[],"publishingCountry":"GB","publishingOrganizationKey":"48f02f0c-5287-4b0a-bdf1-cee8f9665285","publishingOrganizationTitle":"South East Wales Biodiversity Records Centre","license":"http://creativecommons.org/licenses/by-nc/4.0/legalcode","decades":[1800,1810,1820,1830,1840,1850,1860,1870,1880,1890,1900,1910,1920,1930,1940,1950,1960,1970,1980,1990,2000,2010],"keywords":[],"recordCount":917519},{"key":"25d4f82b-b2bc-4197-bc11-27c8e9a25439","title":"Shropshire Ecological Data Network database","description":"All our records for Shropshire.","type":"OCCURRENCE","hostingOrganizationKey":"07f617d0-c688-11d8-bf62-b8a03c50a862","hostingOrganizationTitle":"National Biodiversity Network","countryCoverage":[],"publishingCountry":"GB","publishingOrganizationKey":"c5eac644-b0c4-48e2-87d0-dc9c33cbb8a4","publishingOrganizationTitle":"Shropshire Ecological Data Network","license":"http://creativecommons.org/licenses/by/4.0/legalcode","decades":[1500,1600,1700,1800,1810,1820,1830,1840,1850,1860,1870,1880,1890,1900,1910,1920,1930,1940,1950,1960,1970,1980,1990,2000,2010],"keywords":[],"recordCount":910512},{"key":"840ebec6-f762-11e1-a439-00145eb45e9a","title":"MICROBIS database","description":"MICROBIS is a database of marine microbial biota , most gained from genomic analysis used in support of ICOMM.","type":"OCCURRENCE","hostingOrganizationKey":"e3e307d0-1637-11da-a5ec-b8a03c50a862","hostingOrganizationTitle":"Marine Biology Laboratory","countryCoverage":[],"publishingOrganizationKey":"e3e307d0-1637-11da-a5ec-b8a03c50a862","publishingOrganizationTitle":"Marine Biology Laboratory","license":"http://creativecommons.org/licenses/by/4.0/legalcode","decades":[],"keywords":[],"recordCount":898985},{"key":"39905320-6c8a-11de-8226-b8a03c50a862","title":"Museums Victoria provider for OZCAM","description":"Museums Victoria provider for OZCAM","type":"OCCURRENCE","hostingOrganizationKey":"3c5e4331-7f2f-4a8d-aa56-81ece7014fc8","hostingOrganizationTitle":"Atlas of Living Australia","countryCoverage":[],"publishingCountry":"AU","publishingOrganizationKey":"4cff2aca-5ce5-4028-88e6-d79b6449173a","publishingOrganizationTitle":"Museums Victoria","license":"http://creativecommons.org/licenses/by/4.0/legalcode","decades":[],"keywords":[],"recordCount":885450},{"key":"847375df-8ac8-4189-a8d6-deaefb90355c","title":"New Zealand Virtual Herbarium","description":"Specimen data from participating members the New Zealand National Herbarium Network.","type":"OCCURRENCE","hostingOrganizationKey":"3c5e4331-7f2f-4a8d-aa56-81ece7014fc8","hostingOrganizationTitle":"Atlas of Living Australia","countryCoverage":[],"publishingCountry":"AU","publishingOrganizationKey":"3c5e4331-7f2f-4a8d-aa56-81ece7014fc8","publishingOrganizationTitle":"Atlas of Living Australia","license":"http://creativecommons.org/licenses/by/4.0/legalcode","decades":[],"keywords":[],"recordCount":847143},{"key":"b929f23d-290f-4e85-8f17-764c55b3b284","title":"Bernice P. Bishop Museum","description":"The Bernice Pauahi Bishop Museum, designated the Hawaiʻi State Museum of Natural and Cultural History, is a museum of history and science located in the Kalihi district of Honolulu on the Hawaiian island of O'ahu. Founded in 1889, it is the largest museum in Hawai'i and is home to one of the world's largest collections of natural history material from the Pacific region, with approximately 21 million specimens. The main collections include Entomology,  Malacology, Botany, Ichthyology, Vertebrate Zoology (Birds, Mammals, Amphibians and Reptiles) and Marine Invertebrates. Bishop Museum is in the process of dramatically improving its digital resources, and is actively involved in the development of biodiversity information standards and associated services (particularly the Global Names Architecture).","type":"OCCURRENCE","hostingOrganizationKey":"2053a639-84c3-4be5-b8bc-96b6d88a976c","hostingOrganizationTitle":"VertNet","countryCoverage":[],"publishingCountry":"US","publishingOrganizationKey":"90cc71b0-055b-11d8-b84e-b8a03c50a862","publishingOrganizationTitle":"Bernice Pauahi Bishop Museum","license":"http://creativecommons.org/publicdomain/zero/1.0/legalcode","decades":[],"keywords":["Specimen","Occurrence"],"recordCount":836971},{"key":"358fbd61-739f-4102-afc9-9d468f571e4d","title":"Fauna Atlas N.T.","description":"Record fauna observational summary data within the N.T. Taxonomic and collection data for observed mammals, birds, reptiles, frogs. Includes presence/absence info, date, time, and location of sighting. Data collected after 1995 may also include counts.","type":"OCCURRENCE","hostingOrganizationKey":"3c5e4331-7f2f-4a8d-aa56-81ece7014fc8","hostingOrganizationTitle":"Atlas of Living Australia","countryCoverage":[],"publishingCountry":"AU","publishingOrganizationKey":"3db29215-b8da-4f4e-875e-a5f03ab1c57c","publishingOrganizationTitle":"Northern Territory Department of Land Resource Management","license":"http://creativecommons.org/licenses/by/4.0/legalcode","decades":[],"keywords":[],"recordCount":836398},{"key":"1fec2829-4ac0-4329-b448-6f768b8d3427","title":"Liste des espèces de la faune sauvage (Amphibiens, Mammifères hors Chiroptères, Oiseaux, Orthoptères, Reptiles & Rhopalocères) observées selon le maillage communal français de la base de données naturalistes Faune-France .","description":"Les espèces concernées par le jeux de données regardent les taxons suivants : Amphibiens, Mammifères hors Chiroptères, Oiseaux, Orthoptères, Reptiles et Rhopalocères. Pour chaque taxon, le jeu de données a été crée à partir du tirage aléatoire d'une observation de ce taxon réalisée à l'intérieur d'une même commune. \nLa diffusion de la localisation de certaines espèces pouvant nuire à leur conservation, les observations à la maille ont été floutées à l'échelle du département (cas de la Cigogne noire, du Pélobate brun, de la Salamandre de Lanza, de la Vipère d'Orsini, du Fadet des tourbières, du Pygargue à queue blanche, du Gypaète barbu, du Grand Tétras, de la Grue cendrée, du Pic tridactyle, du Loup gris, du Lynx boréal, de l'Ours brun).","type":"OCCURRENCE","hostingOrganizationKey":"1928bdf0-f5d2-11dc-8c12-b8a03c50a862","hostingOrganizationTitle":"UMS PatriNat (AFB-CNRS-MNHN), Paris","countryCoverage":[],"publishingCountry":"FR","publishingOrganizationKey":"1928bdf0-f5d2-11dc-8c12-b8a03c50a862","publishingOrganizationTitle":"UMS PatriNat (AFB-CNRS-MNHN), Paris","license":"http://creativecommons.org/licenses/by-nc/4.0/legalcode","decades":[],"keywords":["Observation","Occurrence"],"recordCount":834588},{"key":"96c93a1e-f762-11e1-a439-00145eb45e9a","title":"AMNH Bird Collection","description":"The Department of Ornithology maintains one of the largest collections of bird specimens in the world. The research collections of the Department number nearly one million specimens; these include skins, skeletons, alcoholic preparations, eggs, nests, and tissue samples for molecular biochemical studies. A large number of type specimens and rare or extinct species are also found in its collections.","type":"OCCURRENCE","hostingOrganizationKey":"2053a639-84c3-4be5-b8bc-96b6d88a976c","hostingOrganizationTitle":"VertNet","countryCoverage":[],"publishingCountry":"US","publishingOrganizationKey":"ccd1ddc0-6c21-11de-8224-b8a03c50a862","publishingOrganizationTitle":"American Museum of Natural History","license":"http://creativecommons.org/publicdomain/zero/1.0/legalcode","decades":[],"keywords":["Specimen","Occurrence"],"recordCount":833709},{"key":"f946666e-67dc-4848-9fa8-2162f3559e33","title":"Données d'occurrences Espèces issues de l'inventaire des ZNIEFF","description":"Les données correspondent à des données de synthèse espèces présentes dans les ZNIEFF. Les données sont bancarisées à la zone.","type":"OCCURRENCE","hostingOrganizationKey":"1928bdf0-f5d2-11dc-8c12-b8a03c50a862","hostingOrganizationTitle":"UMS PatriNat (AFB-CNRS-MNHN), Paris","countryCoverage":[],"publishingCountry":"FR","publishingOrganizationKey":"1928bdf0-f5d2-11dc-8c12-b8a03c50a862","publishingOrganizationTitle":"UMS PatriNat (AFB-CNRS-MNHN), Paris","license":"http://creativecommons.org/licenses/by-nc/4.0/legalcode","decades":[],"keywords":["Observation","Occurrence"],"recordCount":822749},{"key":"6aa62933-35d4-4e74-af93-0fbc49655547","title":"SEWBReC Vascular Plants (South East Wales)","description":"All plant species records held by SEWBReC for the South East Wales region. This includes the taxonomic groups \"flowering plant\", \"fern\", \"ginkgo\", \"conifer\", \"clubmoss\", \"horsetail\" and \"quillwort\" (as defined by the Recoder 6 Species Dictionary).","type":"OCCURRENCE","hostingOrganizationKey":"07f617d0-c688-11d8-bf62-b8a03c50a862","hostingOrganizationTitle":"National Biodiversity Network","countryCoverage":[],"publishingCountry":"GB","publishingOrganizationKey":"48f02f0c-5287-4b0a-bdf1-cee8f9665285","publishingOrganizationTitle":"South East Wales Biodiversity Records Centre","license":"http://creativecommons.org/licenses/by-nc/4.0/legalcode","decades":[1000,1100,1200,1300,1400,1500,1600,1700,1800,1810,1820,1830,1840,1850,1860,1870,1880,1890,1900,1910,1920,1930,1940,1950,1960,1970,1980,1990,2000,2010],"keywords":[],"recordCount":821483},{"key":"52f2051b-c47e-403a-8e32-04b2f2273c20","title":"Aranzadi Ringing Scheme (bird ring-recovery data)","description":"This data base consists of bird ring-recovery data from the Aranzadi Ringing Scheme (Aranzadi Sciences Society, Spain). Data have been compiled since 1950. For each record, you will find the following information: species, locality (province, country, X and Y coordinates), catching method, and ring-recovery conditions and circumstances.","type":"OCCURRENCE","hostingOrganizationKey":"6c4a0bb0-2a4d-11d8-aa2d-b8a03c50a862","hostingOrganizationTitle":"GBIF-Spain","countryCoverage":[],"publishingCountry":"ES","publishingOrganizationKey":"823818f6-0696-4e29-bc4c-b6f3817535a7","publishingOrganizationTitle":"Aranzadi Science Society","license":"http://creativecommons.org/licenses/by/4.0/legalcode","decades":[1950,1960,1970,1980,1990,2000,2010],"keywords":["Birds; Europe; Ringing; Ring-recovery data; Aranzadi Sciences Society; Banding; Aves;","Observation"],"recordCount":787931},{"key":"bd8ee748-4ae8-4956-98d9-c1b8e8b2b9c9","title":"TAXA - Flore et habitats naturels de Franche-Comté","description":"Données floristiques et phytocénotiques (habitats naturels) : base informatisée visant à organiser la synthèse et la validation des données rassemblées par le CBNFC-ORI, la SBFC, le réseau de bénévoles régionaux et diverses structures ou organismes partenaires (CENFC, ONCFS, ONEMA, ONF, associations naturalistes, bureaux d'étude, etc ...). Les groupes floristiques abordés portent sur les trachéophytes, les bryophytes, les charophytes. Les champignons (y compris lichénisés) sont également traités.En lien avec l'amélioration générale de la connaissance, les objectifs visés portent sur la mise en place d'un réseau de veille permanente, permettant à terme une meilleure appréhension de l'évolution du statut des taxons régionaux et d'en assurer ainsi une meilleure conservation.","type":"OCCURRENCE","hostingOrganizationKey":"1928bdf0-f5d2-11dc-8c12-b8a03c50a862","hostingOrganizationTitle":"UMS PatriNat (AFB-CNRS-MNHN), Paris","countryCoverage":[],"publishingCountry":"FR","publishingOrganizationKey":"1928bdf0-f5d2-11dc-8c12-b8a03c50a862","publishingOrganizationTitle":"UMS PatriNat (AFB-CNRS-MNHN), Paris","license":"http://creativecommons.org/licenses/by-nc/4.0/legalcode","decades":[],"keywords":["Observation","Occurrence"],"recordCount":771546},{"key":"7888f666-f59e-4534-8478-3a10a3bfee45","title":"Vlinderdatabank - Butterflies in Flanders and the Brussels Capital Region, Belgium","description":"Vlinderdatabank - Butterflies in Flanders and the Brussels Capital Region, Belgium is a species occurrence dataset published by the Research Institute for Nature and Forest (INBO) and described in Maes et al. 2016 (https://doi.org/10.3897/zookeys.585.8019). The dataset contains over 761.000 butterfly occurrences of 70 species, compiled by the INBO in cooperation with the Butterfly working group of Natuurpunt (Vlinderwerkgroep). The occurrences are georeferenced using the centroid of their respective 5 x 5 km² Universal Transverse Mercator (UTM) grid cell and are derived from the database Vlinderdatabank at the INBO, which consists of (historical) collection and literature data (1830-2001), for which all butterfly specimens in institutional and available personal collections were digitized and all entomological and other relevant publications were checked for butterfly distribution data. It also contains observations and monitoring data for the period 1991-2014. The latter type were collected by a (small) butterfly monitoring network where butterflies were recorded using a standardized protocol. Together with the dataset Vanreusel et al. (2016, https://doi.org/10.15468/ezfbee), the dataset represents the most complete overview of butterflies in Flanders and the Brussels Capital Region (north Belgium).\nInformation withheld: in the original database, the observer’s name and the exact XY-coordinates are known.\nTo allow anyone to use this dataset, we have released the data to the public domain under a Creative Commons Zero waiver (http://creativecommons.org/publicdomain/zero/1.0/). We would appreciate however, if you read and follow these norms for data use (http://www.inbo.be/en/norms-for-data-use) and provide a link to the original dataset (https://doi.org/10.15468/njgbmh) whenever possible. If you use these data for a scientific paper, please cite the dataset following the applicable citation norms and/or consider us for co-authorship. We are always interested to know how you have used or visualized the data, or to provide more information, so please contact us via the contact information provided in the metadata, opendata@inbo.be or https://twitter.com/LifeWatchINBO.","type":"OCCURRENCE","hostingOrganizationKey":"1cd669d0-80ea-11de-a9d0-f1765f95f18b","hostingOrganizationTitle":"Research Institute for Nature and Forest (INBO)","countryCoverage":[],"publishingCountry":"BE","publishingOrganizationKey":"1cd669d0-80ea-11de-a9d0-f1765f95f18b","publishingOrganizationTitle":"Research Institute for Nature and Forest (INBO)","license":"http://creativecommons.org/publicdomain/zero/1.0/legalcode","decades":[1830,1840,1850,1860,1870,1880,1890,1900,1910,1920,1930,1940,1950,1960,1970,1980,1990,2000,2010],"keywords":["literature","butterflies","Lepidoptera","observations","citizen science","collection","distribution","monitoring","Occurrence"],"recordCount":769271}],"facets":[]}
  recorded_at: 2018-10-10 16:23:12 GMT
  recorded_with: vcr/0.1.0, webmockr/0.2.6, crul/0.6.0
