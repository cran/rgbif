http_interactions:
- request:
    method: get
    uri: https://api.gbif.org/v1/dataset/search?limit=100&type=OCCURRENCE
    body:
      encoding: ''
      string: ''
    headers:
      Accept-Encoding: gzip, deflate
      Accept: application/json, text/xml, application/xml, */*
      User-Agent: r-curl/3.3 crul/0.7.0 rOpenSci(rgbif/1.2.0)
      X-USER-AGENT: r-curl/3.3 crul/0.7.0 rOpenSci(rgbif/1.2.0)
  response:
    status:
      status_code: '200'
      message: OK
      explanation: Request fulfilled, document follows
    headers:
      status: HTTP/1.1 200 OK
      date: Tue, 26 Feb 2019 15:14:05 GMT
      content-type: application/json
      access-control-allow-origin: '*'
      access-control-allow-methods: HEAD, GET, POST, DELETE, PUT, OPTIONS
      server: Jetty(9.3.z-SNAPSHOT)
      cache-control: public, max-age=600
      x-varnish: 712904447 778043509
      age: '5'
      via: 1.1 varnish (Varnish/5.2)
      accept-ranges: bytes
      content-length: '121526'
      connection: keep-alive
    body:
      encoding: ASCII-8BIT
      string: {"offset":0,"limit":100,"endOfRecords":false,"count":16624,"results":[{"key":"4fa7b334-ce0d-4e88-aaae-2e0c138d049e","title":"EOD - eBird Observation Dataset","description":"eBird is a collective enterprise that takes a novel approach to citizen science by developing cooperative partnerships among experts in a wide range of fields: population ecologists, conservation biologists, quantitative ecologists, statisticians, computer scientists, GIS and informatics specialists, application developers, and data administrators. Managed by the Cornell Lab of Ornithology eBird’s goal is to increase data quantity through participant recruitment and engagement globally, but also to quantify and control for data quality issues such as observer variability, imperfect detection of species, and both spatial and temporal bias in data collection. eBird data are openly available and used by a broad spectrum of students, teachers, scientists, NGOs, government agencies, land managers, and policy makers. The result is that eBird has become a major source of biodiversity data, increasing our knowledge of the dynamics of species distributions, and having a direct impact on the conservation of birds and their habitats.","type":"OCCURRENCE","hostingOrganizationKey":"e2e717bf-551a-4917-bdc9-4fa0f342c530","hostingOrganizationTitle":"Cornell Lab of Ornithology","countryCoverage":[],"publishingCountry":"US","publishingOrganizationKey":"e2e717bf-551a-4917-bdc9-4fa0f342c530","publishingOrganizationTitle":"Cornell Lab of Ornithology","license":"http://creativecommons.org/publicdomain/zero/1.0/legalcode","decades":[1810,1820,1830,1840,1850,1860,1870,1880,1890,1900,1910,1920,1930,1940,1950,1960,1970,1980,1990,2000,2010],"keywords":["Observation","Occurrence"],"recordCount":361429888},{"key":"75956ee6-1a2b-4fa3-b3e8-ccda64ce6c2d","title":"INPN - Données flore des CBN agrégées par la FCBN","description":"Dès la création de leur Fédération (FCBN - www.fcbn.fr) en 1999, les onze Conservatoires botaniques nationaux (CBN) ont exprimé la volonté collective de constituer un système d’information national pour mettre en commun leurs données, et celles de leurs partenaires, sur la flore, la fonge et les végétations-habitats. C’est réellement en 2010 avec le lancement de l’établissement du Format Standard de Données sur la flore (FSD Flore), conçu comme le « format commun de données de la Fédération des CBN », que la démarche a été initiée. Il s’en est suivi de nombreux échanges ayant permis de finaliser le format, de le tester sur les premiers jeux de données, d’établir une charte d’adhésion au projet et d’élaborer le cadrage final de l’exercice d’agrégation des données. Le projet s’est concrétisé au premier trimestre 2013 à travers la mise au format des données détenues par les CBN et leur intégration dans le Système d’Information de la FCBN (SI-Flore). A l’horizon de l’année 2014, il résulte, de ce projet structurant, que la FCBN dispose d’un système d’information d’envergure nationale et fort de plus de 20 millions de données d’observation sur la flore de France. Les données centralisées ont été consolidées sur la base du référentiel TAXREF 5.0 et une mise à jour est prévue pour fin 2015.","type":"OCCURRENCE","hostingOrganizationKey":"5d5e5d82-076c-4e9a-b5b0-c88d1b691a6a","hostingOrganizationTitle":"GBIF France","countryCoverage":[],"publishingCountry":"FR","publishingOrganizationKey":"1928bdf0-f5d2-11dc-8c12-b8a03c50a862","publishingOrganizationTitle":"UMS PatriNat (AFB-CNRS-MNHN), Paris","license":"http://creativecommons.org/licenses/by/4.0/legalcode","decades":[1500,1600,1700,1800,1810,1820,1830,1840,1850,1860,1870,1880,1890,1900,1910,1920,1930,1940,1950,1960,1970,1980,1990,2000,2010],"keywords":["Occurrence","Flore, Flora, Conservatoire Botanique National, CBN, FCBN, observation"],"recordCount":20999334},{"key":"e6fab7b3-c733-40b9-8df3-2a03e49532c1","title":"Flora von Deutschland (Phanerogamen)","description":"Verbreitung der Farn- und Bluetenpflanzen in Deutschland, Vorkommensnachweise aggregiert auf Quadranten der Topographischen Karte 1 : 25000 (TK25 = MTB), sowie in Zeitperioden <vor 1950>, <1950 - 1980>, <nach 1980 >","type":"OCCURRENCE","hostingOrganizationKey":"43cab2b0-0653-11d9-acb2-b8a03c50a862","hostingOrganizationTitle":"Bundesamt für Naturschutz / Netzwerk Phytodiversität Deutschland","countryCoverage":[],"publishingCountry":"DE","publishingOrganizationKey":"43cab2b0-0653-11d9-acb2-b8a03c50a862","publishingOrganizationTitle":"Bundesamt für Naturschutz / Netzwerk Phytodiversität Deutschland","license":"http://creativecommons.org/licenses/by-nc/4.0/legalcode","decades":[],"keywords":[],"recordCount":9577887},{"key":"f06fef3c-6ea6-4345-b724-a1b8e490dc55","title":"Anillamiento SEO_Bird ringing","description":"Scientific bird ringing is a research method based on the individual marking of birds.\nBird Ringing involves the marking of individual birds by highly trained ornithologists to provide vitaldata on migration patterns, demography\nand ecological processes.","type":"OCCURRENCE","hostingOrganizationKey":"6c4a0bb0-2a4d-11d8-aa2d-b8a03c50a862","hostingOrganizationTitle":"GBIF-Spain","countryCoverage":[],"publishingCountry":"ES","publishingOrganizationKey":"2d1fabab-9504-4cd8-aa19-79627dd3b010","publishingOrganizationTitle":"Sociedad Española de Ornitología (SEO/BirdLife)","license":"http://creativecommons.org/licenses/by-nc/4.0/legalcode","decades":[1950,1960,1970,1980,1990,2000,2010],"keywords":["Specimen","anillamiento científico","España","Bird ringing","birds","aves","bird banding","Spain"],"recordCount":8957407},{"key":"6ac3f774-d9fb-4796-b3e9-92bf6c81c084","title":"naturgucker","description":"naturgucker.de / enjoynature.net is a rapidly growing social network with several millions of observations of wild plants and animals, thus naturgucker.de / enjoynature.net supports and promotes nature conservancy. naturgucker.de / enjoynature.net offers nature observers (mainly citizen scientists) a personal data center for their data in which they can pool and manage all their observations and nature photographs for the surrounding region, or even worldwide from their vacations. In addition, beginners can find a myriad of information, such as hundreds of thousands of photographs, up to date distribution maps, tenthousands observation areas with helpful hints, and a strong community in naturgucker.de /enjoaynature.net.","type":"OCCURRENCE","hostingOrganizationKey":"bb646dff-a905-4403-a49b-6d378c2cf0d9","hostingOrganizationTitle":"naturgucker.de","countryCoverage":[],"publishingCountry":"DE","publishingOrganizationKey":"bb646dff-a905-4403-a49b-6d378c2cf0d9","publishingOrganizationTitle":"naturgucker.de","license":"http://creativecommons.org/licenses/by/4.0/legalcode","decades":[],"keywords":[],"recordCount":8738236},{"key":"83e20573-f7dd-4852-9159-21566e1e691e","title":"Bird tracking - GPS tracking of Lesser Black-backed Gulls and Herring Gulls breeding at the southern North Sea coast","description":"Bird tracking - GPS tracking of Lesser Black-backed Gulls and Herring Gulls breeding at the southern North Sea coast is a species occurrence dataset published by the Research Institute for Nature and Forest (INBO) and described (v5.5) in Stienen et al. 2016 (https://doi.org/10.3897/zookeys.555.6173). The dataset contains close to 8.5 million occurrences (GPS fixes) recorded by GPS trackers mounted on 108 Lesser Black-backed Gulls and 37 Herring Gulls breeding at the Belgian and Dutch coast. The trackers are developed by the University of Amsterdam Bird Tracking System (UvA-BiTS, http://www.uva-bits.nl) and allow to study the gulls' habitat use and migration behaviour in great detail. Our bird tracking network is operational since 2013 and is maintained and used by the INBO, the Flanders Marine Institute (VLIZ), UvA-BiTS, Ghent University (UGent), and the University of Antwerp (UA). See the dataset metadata for contact information, scope, and methodology. Issues with the dataset can be reported at https://github.com/inbo/data-publication/tree/master/datasets/bird-tracking-gull-occurrences\nThe following information is not included in the dataset and available upon request: outliers, speed, temperature, barometric pressure, accelerometer data, GPS metadata (fix time, number of satellites used, vertical accuracy), bird biometrics data measured during tagging (bill length, bill depth, tarsus length, wing length, body mass), life history data (day of ringing, age, resightings by volunteers), as well as growth data of chicks.\nTo allow anyone to use this dataset, we have released the data to the public domain under a Creative Commons Zero waiver (http://creativecommons.org/publicdomain/zero/1.0/). We would appreciate however, if you read and follow these norms for data use (http://www.inbo.be/en/norms-for-data-use) and provide a link to the original dataset (https://doi.org/10.15468/02omly) whenever possible. If you use these data for a scientific paper, please cite the dataset following the applicable citation norms and/or consider us for co-authorship. We are always interested to know how you have used or visualized the data, or to provide more information, so please contact us via the contact information provided in the metadata, opendata@inbo.be or https://twitter.com/LifeWatchINBO.\nThe bird tracking network used to collect these data is set up and maintained by the INBO and VLIZ as part of the Flemish contribution to LifeWatch.","type":"OCCURRENCE","hostingOrganizationKey":"1cd669d0-80ea-11de-a9d0-f1765f95f18b","hostingOrganizationTitle":"Research Institute for Nature and Forest (INBO)","countryCoverage":[],"publishingCountry":"BE","publishingOrganizationKey":"1cd669d0-80ea-11de-a9d0-f1765f95f18b","publishingOrganizationTitle":"Research Institute for Nature and Forest (INBO)","license":"http://creativecommons.org/publicdomain/zero/1.0/legalcode","decades":[2010],"keywords":["","Larus fuscus","Herring Gull","animal movement","LifeWatch","bird tracking","Larus argentatus","UvA-BiTS","Lesser Black-backed Gull","Observation","habitat use","migration","GPS tracking","MachineObservation","Occurrence"],"recordCount":8474604},{"key":"821cc27a-e3bb-4bc5-ac34-89ada245069d","title":"NMNH Extant Specimen Records","description":"Public records of accessioned specimens and observations curated by the National Museum of Natural History, Smithsonian Institution. These data are from the Departments of Botany, Entomology, Invertebrate Zoology and Vertebrate Zoology (Amphibians & Reptiles, Birds, Fishes, and Mammals) and include more than 270,000 primary type specimen records.","type":"OCCURRENCE","hostingOrganizationKey":"bc092ff0-02e4-11dc-991f-b8a03c50a862","hostingOrganizationTitle":"National Museum of Natural History, Smithsonian Institution","countryCoverage":[],"publishingCountry":"US","publishingOrganizationKey":"bc092ff0-02e4-11dc-991f-b8a03c50a862","publishingOrganizationTitle":"National Museum of Natural History, Smithsonian Institution","license":"http://creativecommons.org/publicdomain/zero/1.0/legalcode","decades":[],"keywords":["Specimen","Occurrence"],"recordCount":7112112},{"key":"82cb293c-f762-11e1-a439-00145eb45e9a","title":"Great Backyard Bird Count","description":"The Great Backyard Bird Count (GBBC) is a late winter weekend survey of bird populations across the United States and Canada. Developed by the Cornell Lab of Ornithology and Audubon, the GBBC engages tens of thousands of participants. Data is collected with postal code or town geographical resolution. Started in 1998, the GBBC provides a place-based characterization of a given area through a checklist of birds observed at that location. Presently, GBBC collects approximately 50 thousand checklists annually during a 4-day period in mid-February.","type":"OCCURRENCE","hostingOrganizationKey":"95f1c5d0-8996-11d9-a962-b8a03c50a862","hostingOrganizationTitle":"Avian Knowledge Network","countryCoverage":[],"publishingCountry":"US","publishingOrganizationKey":"95f1c5d0-8996-11d9-a962-b8a03c50a862","publishingOrganizationTitle":"Avian Knowledge Network","license":"http://creativecommons.org/publicdomain/zero/1.0/legalcode","decades":[],"keywords":[],"recordCount":7076556},{"key":"4f70108a-dda7-4e8b-8298-babaee5182c3","title":"Bird Ringing Centre in Sweden (NRM)","description":"This database contains information about bird ringing in Sweden.","type":"OCCURRENCE","hostingOrganizationKey":"4c415e40-1e21-11de-9e40-a0d6ecebb8bf","hostingOrganizationTitle":"GBIF-Sweden","countryCoverage":[],"publishingCountry":"SE","publishingOrganizationKey":"4c415e40-1e21-11de-9e40-a0d6ecebb8bf","publishingOrganizationTitle":"GBIF-Sweden","license":"http://creativecommons.org/publicdomain/zero/1.0/legalcode","decades":[],"keywords":["Occurrence"],"recordCount":6706047},{"key":"a86201a4-fa20-44e5-ade2-68ea3563cfa8","title":"Macro-moth distribution records for the UK for the period pre 2000 from Butterfly Conservation","description":"Moth provisional distribution data for the period pre 2000 from the National Moth Recording Scheme led by Butterfly Conservation. The National Moth Recording Scheme provides a comprehensive network for recording the 2500+ species of moths in the UK, the Isle of Man and the Channel Islands, through which members of the public can contribute moth sightings to underpin conservation. The NMRS was launched in 2007 and was developed as part of the Moths Count project funded by the Heritage Lottery Fund with support from many other organisations and is now an ongoing recording scheme.","type":"OCCURRENCE","hostingOrganizationKey":"07f617d0-c688-11d8-bf62-b8a03c50a862","hostingOrganizationTitle":"National Biodiversity Network","countryCoverage":[],"publishingCountry":"GB","publishingOrganizationKey":"0d72dd7f-6f05-46af-85c2-8b6e77ce5534","publishingOrganizationTitle":"Butterfly Conservation","license":"http://creativecommons.org/licenses/by-nc/4.0/legalcode","decades":[1500,1600,1700,1800,1810,1820,1830,1840,1850,1860,1870,1880,1890,1900,1910,1920,1930,1940,1950,1960,1970,1980,1990,2000,2010],"keywords":[],"recordCount":6518294},{"key":"1e266c3d-92ef-4d5a-8e4a-c04742c772c3","title":"UK Butterfly Monitoring Scheme (UKBMS)","description":"The UKBMS is a standarised monitoring scheme for monitoring butteflies in the UK.  This dataset includes records from traditional fixed transect sites, often called 'Pollard Walks'; data from the Wider Countryside Butterfly Survey is excluded and available within a separate dataset.\n \n The UKBMS is run by Butterfly Conservation (BC), the Centre for Ecology and Hydrology (CEH), and the British Trust for Ornithology (BTO), in partnership with the Joint Nature Conservation Committee (JNCC), and supported and steered by Forestry Commission (FC), Natural England (NE), Natural Resources Wales (NRW), Northern Ireland Environment Agency (NIEA) and Scottish Natural Heritage (SNH).","type":"OCCURRENCE","hostingOrganizationKey":"07f617d0-c688-11d8-bf62-b8a03c50a862","hostingOrganizationTitle":"National Biodiversity Network","countryCoverage":[],"publishingCountry":"GB","publishingOrganizationKey":"0c392aa0-a452-4254-be5c-e49dd60e9b02","publishingOrganizationTitle":"Biological Records Centre","license":"http://creativecommons.org/licenses/by/4.0/legalcode","decades":[1970,1980,1990,2000,2010],"keywords":[],"recordCount":5638976},{"key":"282d0ccb-4fa0-40f9-8593-105c77e88417","title":"Southern African Bird Atlas Project","description":"The Southern African Bird Atlas Project started in July 2007, so it has been running for almost three and a half years. To date, over 800 SABAP2 atlasers have collected more than two million records of bird distribution from more than 75% of the quarter degree grid cells in the SABAP2 region. Most of the SABAP1 data were collected in the period 1987–1991, 20 years ago. The SABAP1 database contains seven million records. One of the SABAP2 objectives is to see how the distributions of the bird species occurring in South Africa, Lesotho and Swaziland have changed over the past two decades.","type":"OCCURRENCE","hostingOrganizationKey":"c5f7ef70-e233-11d9-a4d6-b8a03c50a862","hostingOrganizationTitle":"South African National Biodiversity Institute","countryCoverage":[],"publishingCountry":"ZA","publishingOrganizationKey":"c5f7ef70-e233-11d9-a4d6-b8a03c50a862","publishingOrganizationTitle":"South African National Biodiversity Institute","license":"http://creativecommons.org/licenses/by/4.0/legalcode","decades":[],"keywords":[],"recordCount":5053399},{"key":"857aa892-f762-11e1-a439-00145eb45e9a","title":"Observations du Conservatoire botanique national du Bassin parisien.","description":"Système d&#39;information sur la flore du Bassin parisien, Flora.","type":"OCCURRENCE","hostingOrganizationKey":"6bcc0290-6e76-11db-bcd5-b8a03c50a862","hostingOrganizationTitle":"Conservatoire botanique national du Bassin parisien","countryCoverage":[],"publishingCountry":"FR","publishingOrganizationKey":"6bcc0290-6e76-11db-bcd5-b8a03c50a862","publishingOrganizationTitle":"Conservatoire botanique national du Bassin parisien","license":"http://creativecommons.org/licenses/by/4.0/legalcode","decades":[],"keywords":[],"recordCount":4697245},{"key":"7bd65a7a-f762-11e1-a439-00145eb45e9a","title":"Tropicos Specimen Data","description":"The Missouri Botanical Garden’s Herbarium is one of the world’s outstanding research resources for specimens and information on bryophytes and vascular plants. The collection is limited to these two major groups of plants. As of 31 December 2015 the collection had 6.66 million specimens (6.1 million vascular plants and 563,000 bryophytes). This specimen dataset includes over 4.4 million records (4.0 million vascular plants and 300,000 bryophytes).","type":"OCCURRENCE","hostingOrganizationKey":"90fd6680-349f-11d8-aa2d-b8a03c50a862","hostingOrganizationTitle":"Missouri Botanical Garden","countryCoverage":[],"publishingCountry":"US","publishingOrganizationKey":"90fd6680-349f-11d8-aa2d-b8a03c50a862","publishingOrganizationTitle":"Missouri Botanical Garden","license":"http://creativecommons.org/licenses/by/4.0/legalcode","decades":[],"keywords":["Specimen","Occurrence"],"recordCount":4440020},{"key":"53f13c8f-413e-4537-bda6-98666cd7975f","title":"Other BSBI Scottish data up to 2012","type":"OCCURRENCE","hostingOrganizationKey":"07f617d0-c688-11d8-bf62-b8a03c50a862","hostingOrganizationTitle":"National Biodiversity Network","countryCoverage":[],"publishingCountry":"GB","publishingOrganizationKey":"aa569acf-991d-4467-b327-8442f30ddbd2","publishingOrganizationTitle":"Botanical Society of Britain & Ireland","license":"http://creativecommons.org/licenses/by-nc/4.0/legalcode","decades":[],"keywords":[],"recordCount":3953141},{"key":"37f48e00-1fe8-11dc-b461-b8a03c50a862","title":"Dutch Foundation for Applied Water Research (STOWA) - Limnodata Neerlandica","description":"The Limnodata Neerlandica data set contains the data of more than 30 years systematic and project based sampling of Dutch, mainly freshwater, waterbodies. Data originate from 37 data providers; 26 water boards, the provinces and the Ministry of Transport, Public Works and Water Management. Over 20,000 sample points were used. The main purpose of the dataset is monitoring the quality of Dutch surface waters. Next to the biological characteristics also a-biotic data were sampled and stored alongside the biotic data. Observations are available from phytoplankton, diatoms, aquatic and riparian plants, macro-invertebrates and fish. The data were collected on a yearly base. The taxonomy has been validated according to the Dutch standardised checklist of aquatic species.\n\nUpdate January 2015: Added data for 2011 and 2012. Enhanced taxonomic and locality data fields.","type":"OCCURRENCE","hostingOrganizationKey":"cace8d10-2646-11d8-a2da-b8a03c50a862","hostingOrganizationTitle":"Netherlands Biodiversity Information Facility (NLBIF)","countryCoverage":[],"publishingCountry":"NL","publishingOrganizationKey":"68a216ee-f721-40cd-932c-84153afd9451","publishingOrganizationTitle":"Dutch Foundation for Applied Water Research","license":"http://creativecommons.org/licenses/by/4.0/legalcode","decades":[1980,1990,2000,2010],"keywords":["macrofauna","zooplankton","monitoring","Netherlands","riparian","diatoms","plants","fish","phytoplankton","Observation","aquatic","Limnofauna","Occurrence"],"recordCount":3359932},{"key":"b05a19cf-dcf2-4ef9-bbbb-ad0ecbd2917c","title":"Eremaea","type":"OCCURRENCE","hostingOrganizationKey":"3c5e4331-7f2f-4a8d-aa56-81ece7014fc8","hostingOrganizationTitle":"Atlas of Living Australia","countryCoverage":[],"publishingCountry":"AU","publishingOrganizationKey":"633f217c-c007-48dc-86ed-f8fdae6fd0d8","publishingOrganizationTitle":"Eremaea","license":"http://creativecommons.org/licenses/by/4.0/legalcode","decades":[],"keywords":[],"recordCount":3291911},{"key":"3e9817c1-8302-4955-87e3-a408db0ea379","title":"Insecta of Costa Rica (INBio)","description":"Occurrence records of the Insecta class collected, identified, digitized, and published by the National Biodiversity Institute (INBio) of Costa Rica.","type":"OCCURRENCE","hostingOrganizationKey":"5c7a5c20-1bd0-11d8-a2da-b8a03c50a862","hostingOrganizationTitle":"Instituto Nacional de Biodiversidad (INBio), Costa Rica","countryCoverage":[],"publishingCountry":"CR","publishingOrganizationKey":"5c7a5c20-1bd0-11d8-a2da-b8a03c50a862","publishingOrganizationTitle":"Instituto Nacional de Biodiversidad (INBio), Costa Rica","license":"http://creativecommons.org/publicdomain/zero/1.0/legalcode","decades":[],"keywords":["Specimen","Occurrence"],"recordCount":3276500},{"key":"86306e4b-5ed8-4684-a626-d9b9f439dcce","title":"Observations floristiques issues de la base de données du Conservatoire botanique national alpin","description":"Observations floristiques issues de la base de données flore du Conservatoire botanique national alpin (CBNA). Ces observations sont produites par le CBNA dans le cadre de sa mission de connaissance, par ses partenaires ou proviennent de la bibliographie ou d'herbier. (CBN-Alpin-001)","type":"OCCURRENCE","hostingOrganizationKey":"1928bdf0-f5d2-11dc-8c12-b8a03c50a862","hostingOrganizationTitle":"UMS PatriNat (AFB-CNRS-MNHN), Paris","countryCoverage":[],"publishingCountry":"FR","publishingOrganizationKey":"1928bdf0-f5d2-11dc-8c12-b8a03c50a862","publishingOrganizationTitle":"UMS PatriNat (AFB-CNRS-MNHN), Paris","license":"http://creativecommons.org/licenses/by-nc/4.0/legalcode","decades":[],"keywords":["Observation","Occurrence"],"recordCount":2861028},{"key":"040c5662-da76-4782-a48e-cdea1892d14c","title":"International Barcode of Life project (iBOL)","description":"The International Barcode of Life Project (iBOL) was formally activated in October 2010. Its first phase (2010-2015) will lead to the acquisition of DNA barcode records for 5M specimens representing 500K species. iBOL will release each barcode record in two phases. The initial phase will release barcode sequence(s), trace files, high-level (ordinal) taxonomic assignment, GPS co-ordinates and the country of collection. This phase of data release will occur automatically on a quarterly basis in datafiles posted on this page as well as at GenBank. The second phase of data release will involve a more precise taxonomic assignment and ancillary data, such as images, for each specimen.The data released to date consists of records for 2,869,168 sequences analyzed at the Canadian Centre for DNA Barcoding at the University of Guelph and the Centre for Environmental &amp; Molecular Algal Research at the University of New Brunswick during the first year of iBOL ramp-up (July 1, 2009 - June 30, 2010) and the 66 months of the officially activated iBOL project (July 1, 2010 - Dec 31, 2015). These specimens are derived from many collaborators in many nations.","type":"OCCURRENCE","hostingOrganizationKey":"92f51af1-e917-49bc-a8ed-014ed3a77bec","hostingOrganizationTitle":"Institute of Biodiversity, Animal Health and Comparative Medicine, College of Medical, Veterinary and Life Sciences, University of Glasgow","countryCoverage":[],"publishingCountry":"GB","publishingOrganizationKey":"92f51af1-e917-49bc-a8ed-014ed3a77bec","publishingOrganizationTitle":"Institute of Biodiversity, Animal Health and Comparative Medicine, College of Medical, Veterinary and Life Sciences, University of Glasgow","license":"http://creativecommons.org/licenses/by/4.0/legalcode","decades":[],"keywords":[],"recordCount":2789906},{"key":"f1929b90-79f5-47aa-b983-51f108eb491f","title":"Bryophyte data for Great Britain from the British Bryological Society held by BRC: Atlas 2014","description":"Bryophyte records submitted to the Biological Records Centre for England, Ireland, Scotland, Wales, the Isle of Man and the Channel Islands. The dataset comprises records collected for the Bryophyte Recording Scheme, as well as those extracted from literature and museum sources. Details of all the surveys in this dataset can be obtained by clicking the 'Surveys' tab. This 'Atlas' dataset contains all of the records presented in Blockeel et al. (2014) Atlas of British and Irish Bryophytes, with the exception of two datasets (one from Cofnod [North Wales Environmental Information Centre] and one from CEDaR [Centre for Environmental Data and Recording, Northern Ireland]) which the BBS were not given permission to export to the NBN. These are datasets 883 and 881 in the BBS/BRC database. This new dataset contains records covering 109 vice-counties since the last NBN export, with over five hundred new records for each of the following counties: Cheshire, North Ebudes, East Sussex, West Ross, Caernarvonshire, Merionethshire, Shropshire (Salop), Carmarthenshire, Argyll Main, West Inverness-shire, South Lancashire, Surrey, East Norfolk, Outer Hebrides, South-west Yorkshire, East Inverness-shire (with Nairn), Breconshire, Cambridgeshire, West Lancashire, Dumfriesshire, West Norfolk, West Sussex, Huntingdonshire, North Essex, Durham, Cardiganshire, Buckinghamshire, North Northumberland (Cheviot), West Sutherland, and Derbyshire. This dataset will not be added to in future, but will only be subject to amendments. Data collected or collated by the BBS post-Atlas (i.e. from the 01/01/2014) will form a new dataset on the NBN.","type":"OCCURRENCE","hostingOrganizationKey":"07f617d0-c688-11d8-bf62-b8a03c50a862","hostingOrganizationTitle":"National Biodiversity Network","countryCoverage":[],"publishingCountry":"GB","publishingOrganizationKey":"32f1b389-5871-4da3-832f-9a89132520c5","publishingOrganizationTitle":"British Bryological Society","license":"http://creativecommons.org/licenses/by/4.0/legalcode","decades":[1600,1700,1800,1810,1820,1830,1840,1850,1860,1870,1880,1890,1900,1910,1920,1930,1940,1950,1960,1970,1980,1990,2000,2010],"keywords":[],"recordCount":2787427},{"key":"5f501df0-0c61-11dd-84ce-b8a03c50a862","title":"SLU Aqua Institute of Freshwater Research National register of survey test-fishing - NORS","description":"Standardized test-fishing with Nordic multi-mesh gillnets is a widely used method in Sweden to investigate the fish fauna in a lake. In 2005 the method became an European standard (EN 14757). Standardized test-fishing catch most of the Swedish species in a representative way, giving a good estimate of species abundance and size distribution. The results are generally used for purposes of environmental protection and fishery management.\n\nNORS consists of thousands of test-fishing occasions back to the 1950’s. The Department of Aquatic Resources (SLU Aqua) at the Swedish University of Agricultural Sciences is responsible of collecting and checking test-fishing data generated in national and regional environmental programs, on behalf of the Swedish Agency for Marine and Water Management. SLU Aqua also collect test-fishing data from several other types of investigations in order to create a database as representative as possible. The purpose is to facilitate obtaining data of high quality for research, national investigations and reports. The database also serves as a reference for local and regional investigations. All data is available for the public.","type":"OCCURRENCE","hostingOrganizationKey":"4c415e40-1e21-11de-9e40-a0d6ecebb8bf","hostingOrganizationTitle":"GBIF-Sweden","countryCoverage":[],"publishingCountry":"SE","publishingOrganizationKey":"4c415e40-1e21-11de-9e40-a0d6ecebb8bf","publishingOrganizationTitle":"GBIF-Sweden","license":"http://creativecommons.org/publicdomain/zero/1.0/legalcode","decades":[],"keywords":["Sweden","Pisces","Observation","Lakes","Fish","Occurrence","Freshwater"],"recordCount":2690206},{"key":"67c54f85-7910-4cbf-8de4-6f0b136a0e34","title":"Continuous Plankton Recorder Dataset (SAHFOS)","description":"SAHFOS is unique in having comparable data on the geographical distribution, seasonal cycles and year-to-year changes in abundance of plankton over a large spatial area. There is no other survey in the world with 80 years of marine plankton data.\n\nCPR Data are available in paper form back to 1931 and from January 1946 onwards in a computerised relational database. The database contains results  with 2,629,628 taxonomic abundance entries.","type":"OCCURRENCE","hostingOrganizationKey":"09b17aee-d3fb-48ca-a30b-303d671a8155","hostingOrganizationTitle":"Sir Alister Hardy Foundation for Ocean Science (SAHFOS)","countryCoverage":[],"publishingCountry":"GB","publishingOrganizationKey":"09b17aee-d3fb-48ca-a30b-303d671a8155","publishingOrganizationTitle":"Sir Alister Hardy Foundation for Ocean Science (SAHFOS)","license":"http://creativecommons.org/licenses/by/4.0/legalcode","decades":[],"keywords":[],"recordCount":2629628},{"key":"e707e6da-e143-445d-b41d-529c4a777e8b","title":"Suffolk Biodiversity Information Service (SBIS) Dataset","description":"All species records from the SBIS Recorder Database","type":"OCCURRENCE","hostingOrganizationKey":"07f617d0-c688-11d8-bf62-b8a03c50a862","hostingOrganizationTitle":"National Biodiversity Network","countryCoverage":[],"publishingCountry":"GB","publishingOrganizationKey":"f0edcf5c-2a34-4a6b-b9bb-44d52ed50f7a","publishingOrganizationTitle":"Suffolk Biodiversity Information Service","license":"http://creativecommons.org/licenses/by-nc/4.0/legalcode","decades":[1600,1700,1800,1810,1820,1830,1840,1850,1860,1870,1880,1890,1900,1910,1920,1930,1940,1950,1960,1970,1980,1990,2000,2010],"keywords":[],"recordCount":2573320},{"key":"857bce66-f762-11e1-a439-00145eb45e9a","title":"Biologiezentrum Linz","description":"ZOBODAT (Zoological Botanical Database)","type":"OCCURRENCE","hostingOrganizationKey":"2d6e0e40-2aee-11d8-aa2d-b8a03c50a862","hostingOrganizationTitle":"Biologiezentrum Linz Oberoesterreich","countryCoverage":[],"publishingCountry":"AT","publishingOrganizationKey":"2d6e0e40-2aee-11d8-aa2d-b8a03c50a862","publishingOrganizationTitle":"Biologiezentrum Linz Oberoesterreich","license":"http://creativecommons.org/publicdomain/zero/1.0/legalcode","decades":[],"keywords":[],"recordCount":2243034},{"key":"b4ae1720-1431-49ee-bfeb-8146fc42b1a3","title":"SAFRING: Historical Bird Ringing Records (2005-2009)","description":"Bird ringing started in 1948 in southern Africa and is thus the longest running bird monitoring project in the sub-region. Although the data are biased to areas where ringers operated, it is an invaluable record of bird occurrence and distribution changes, arrival and departure times of migrants, survival and mass data in historical times.The South African Bird Ringing Unit (SAFRING), which is an essential arm of the Animal Demography Unit, administers bird ringing in southern Africa.","type":"OCCURRENCE","hostingOrganizationKey":"c5f7ef70-e233-11d9-a4d6-b8a03c50a862","hostingOrganizationTitle":"South African National Biodiversity Institute","countryCoverage":[],"publishingCountry":"ZA","publishingOrganizationKey":"c5f7ef70-e233-11d9-a4d6-b8a03c50a862","publishingOrganizationTitle":"South African National Biodiversity Institute","license":"http://creativecommons.org/licenses/by/4.0/legalcode","decades":[1940,1950,1960,1970,1980,1990,2000],"keywords":["Observation","Birds","birds","Occurrence","bird ringing"],"recordCount":2162753},{"key":"912ac7b3-f473-435b-97d1-20b6ed0a6208","title":"RSPB Big Garden Birdwatch winter sightings in the UK in 2009","description":"The dataset contains the records from garden bird observations, made by the public during a one-hour period of their choice on the 24-25 January 2009. The survey has been conducted in the UK annually in the last weekend of January since 1979. This dataset contains data for 69 different species.\n <br /><br />\n The first Big Garden Birdwatch dataset to be uploaded onto the NBN, was the 2008 house sparrow, starling and blackbird dataset. These three species were the most commonly recorded during 2008. More data for other years will be included in annual datasets. This survey is funded by the RSPB.","type":"OCCURRENCE","hostingOrganizationKey":"07f617d0-c688-11d8-bf62-b8a03c50a862","hostingOrganizationTitle":"National Biodiversity Network","countryCoverage":[],"publishingCountry":"GB","publishingOrganizationKey":"c71f0513-c95a-4e98-abad-0c222b87ec66","publishingOrganizationTitle":"Royal Society for the Protection of Birds","license":"http://creativecommons.org/licenses/by/4.0/legalcode","decades":[2000],"keywords":[],"recordCount":2126593},{"key":"95e635d4-f762-11e1-a439-00145eb45e9a","title":"Banco de Datos de la Biodiversidad de la Comunitat Valenciana","description":"El Banco de Datos de Biodiversidad de la Comunitat Valenciana tiene como objetivo recoger toda la información de localización de especies en el territorio de la Comunitat Valenciana y su entorno marino. Los datos son provenientes de colecciones, bibliografía y trabajos de campo. Todas las citas están georreferenciadas. Se aportan, para algunas especies, imágenes y fichas con descripción y biología, distribución, hábitat, situación actual, amenazas y acciones de conservación, y las evoluciones poblaciones.","type":"OCCURRENCE","hostingOrganizationKey":"6c4a0bb0-2a4d-11d8-aa2d-b8a03c50a862","hostingOrganizationTitle":"GBIF-Spain","countryCoverage":[],"publishingCountry":"ES","publishingOrganizationKey":"ebda1cab-dda8-418b-8f25-df1e71ff5bc2","publishingOrganizationTitle":"Biodiversity data bank of Generalitat Valenciana","license":"http://creativecommons.org/licenses/by-nc/4.0/legalcode","decades":[1950,1960,1970,1980,1990,2000,2010],"keywords":["plantae","Banco de datos de biodiversidad","hongos","información sobre biodiversidad","distribución geográfica","fauna","comunidad valenciana","flora","taxon","taxonomia","Occurrence","animalia"],"recordCount":1954698},{"key":"02d1e772-54ee-4767-b4b8-c35f0c7270ba","title":"NBIS Records to December 2016","description":"Species records for the county of Norfolk","type":"OCCURRENCE","hostingOrganizationKey":"07f617d0-c688-11d8-bf62-b8a03c50a862","hostingOrganizationTitle":"National Biodiversity Network","countryCoverage":[],"publishingCountry":"GB","publishingOrganizationKey":"05c84e36-2006-4e3d-ad77-ebd529aa09c4","publishingOrganizationTitle":"Norfolk Biodiversity Information Service","license":"http://creativecommons.org/licenses/by-nc/4.0/legalcode","decades":[1000,1100,1200,1300,1400,1500,1600,1700,1800,1810,1820,1830,1840,1850,1860,1870,1880,1890,1900,1910,1920,1930,1940,1950,1960,1970,1980,1990,2000,2010],"keywords":[],"recordCount":1715185},{"key":"b84a3711-b4ca-4e4f-adac-80dfaea98d1c","title":"Hatikka Observation Database","description":"Hatikka Observation Database is a digital field journal for Finnish amateur naturalists. It contains occurrence data for all taxon groups from Finland and several other countries.","type":"OCCURRENCE","hostingOrganizationKey":"04fd2e13-6881-4e5c-9dd1-8fdd9ab993c1","hostingOrganizationTitle":"Finnish Biodiversity Information Facility","countryCoverage":[],"publishingCountry":"FI","publishingOrganizationKey":"04fd2e13-6881-4e5c-9dd1-8fdd9ab993c1","publishingOrganizationTitle":"Finnish Biodiversity Information Facility","license":"http://creativecommons.org/licenses/by/4.0/legalcode","decades":[1700,1800,1810,1820,1830,1840,1850,1860,1870,1880,1890,1900,1910,1920,1930,1940,1950,1960,1970,1980,1990,2000,2010],"keywords":["Occurrence"],"recordCount":1616778},{"key":"a99ca3c9-7448-4bf6-aba5-0ef61b01232c","title":"Rotherham Biological Records Centre - Non-sensitive Records from all taxonomic groups","description":"This dataset is part of a pilot project of Yorkshire and Humber Environmental Data Network (YHEDN) to mobilise LRC data and Naturalist data from our region more widely.\n \n The data has been collated into 2 datasets for NBN (Sensitive and non-sensitive species) with the original survey name as an attribute. More detailed meta-data can be obtained for individual surveys on request from the centre.\n \n Currently Sensitive species includes all bats, badgers and all birds of prey.\n \n Some data has been excluded altogether from these datasets until such time as we can clarify our authority to distribute it but this can be obtained directly from the LRC.","type":"OCCURRENCE","hostingOrganizationKey":"07f617d0-c688-11d8-bf62-b8a03c50a862","hostingOrganizationTitle":"National Biodiversity Network","countryCoverage":[],"publishingCountry":"GB","publishingOrganizationKey":"1467829d-0779-43eb-9fab-0e27e48b6457","publishingOrganizationTitle":"Rotherham Biological Records Centre","license":"http://creativecommons.org/licenses/by-nc/4.0/legalcode","decades":[1700,1800,1810,1820,1830,1840,1850,1860,1870,1880,1890,1900,1910,1920,1930,1940,1950,1960,1970,1980,1990,2000,2010],"keywords":[],"recordCount":1604504},{"key":"9440b24c-cd99-48e1-9c1d-135a59267eb0","title":"Inventaire National du Patrimoine Naturel : Flore Franco-Belge","description":"L'objectif de cet inventaire est de rassembler un jeu exhaustif de données sur l'ensemble des espèces connues dans le tiers nord de la France et en Belgique. Le réseau est coordonné par l'Institut Floristique Franco-Belge (L. Delvosalle et V. Boullet). Au 01/01/2002, la base contient environ 2 350 000 données. Celles-ci couvrent une période allant de 1910 à 1998 mais l'essentiel concerne les années 1970-1989. Les données sont localisées sous la forme d'une présence absence par maille de 4 km x 4 km. Ce fichier ne contient pas d'informations autres que les données essentielles (espèce, lieu, date, observateur ou source bibliographique).","type":"OCCURRENCE","hostingOrganizationKey":"1928bdf0-f5d2-11dc-8c12-b8a03c50a862","hostingOrganizationTitle":"UMS PatriNat (AFB-CNRS-MNHN), Paris","countryCoverage":[],"publishingCountry":"FR","publishingOrganizationKey":"1928bdf0-f5d2-11dc-8c12-b8a03c50a862","publishingOrganizationTitle":"UMS PatriNat (AFB-CNRS-MNHN), Paris","license":"http://creativecommons.org/licenses/by/4.0/legalcode","decades":[],"keywords":[],"recordCount":1578995},{"key":"f9a70dab-004b-45ad-90cb-24d8ff645b44","title":"Centre for Biodiversity Genomics - Canadian Specimens","description":"The Centre for Biodiversity Genomics (CBG) at the University of Guelph is spearheading a novel approach to biodiversity research within Canada and internationally. Its three research units -- CBG Collections, CBG Genomics (or the Canadian Centre for DNA Barcoding, CCDB) and CBG Informatics -- are advancing 21st century biodiversity science by enabling species identification and discovery that is based on the analysis of sequence diversity in short, standardized gene regions, DNA barcodes. CBG Collections maintains a globally unique natural history collection of 3.3 million specimens. Every specimen is digitized, and the exact storage location of each specimen is tracked in a collection management information system for quick reference and retrieval. The databased information for every voucher is also archived in the Barcode of Life Data System (BOLD; www.boldsystems.org), permitting the permanent storage, validation and analysis of barcode sequence data and associated specimen metadata. Most (88.6%) of the specimens have been DNA barcoded, and a few representatives of every species have been digitally imaged. The CCDB holds high quality DNA extracts in a secure 2000 ft2 ultra-cold freezer bank. These DNA extracts reflect residual material following the barcode analysis of samples; it contains 5.3 million extracts from over 250,000 species derived from 231 countries, oceans and dependent territories, all connected to a voucher specimen on BOLD.\n\nThis resource represents the Canadian specimens held in the Specimen Archives of CBG Collections as of Dec 2017.  Please address inquiries to ccdbcol@uoguelph.ca","type":"OCCURRENCE","hostingOrganizationKey":"296fe5cf-ae43-4212-8f77-293e807d0d5a","hostingOrganizationTitle":"University of Guelph","countryCoverage":[],"publishingCountry":"CA","publishingOrganizationKey":"296fe5cf-ae43-4212-8f77-293e807d0d5a","publishingOrganizationTitle":"University of Guelph","license":"http://creativecommons.org/licenses/by-nc/4.0/legalcode","decades":[1980,1990,2000,2010],"keywords":["Specimen","Occurrence"],"recordCount":1500515},{"key":"b7cd5ad0-f65a-4de1-a1bb-318cf5ae12f8","title":"LERN Records","description":"Records held within the LERN database which have been marked as having been validated (within LERN procedures) and where LERN has the agreement of the data owner to publish them on the NBN Gateway.","type":"OCCURRENCE","hostingOrganizationKey":"07f617d0-c688-11d8-bf62-b8a03c50a862","hostingOrganizationTitle":"National Biodiversity Network","countryCoverage":[],"publishingCountry":"GB","publishingOrganizationKey":"0ccc789d-ca07-4bb9-a1e7-a1d1b8491287","publishingOrganizationTitle":"Lancashire Environment Record Network","license":"http://creativecommons.org/licenses/by-nc/4.0/legalcode","decades":[1500,1600,1700,1800,1810,1820,1830,1840,1850,1860,1870,1880,1890,1900,1910,1920,1930,1940,1950,1960,1970,1980,1990,2000,2010],"keywords":[],"recordCount":1417679},{"key":"4ebe5835-851f-43fd-beed-afade357bfc7","title":"Observations floristiques floutées issues de la base de données flore du Conservatoire botanique national alpin","description":"Observations floristiques floutées à la maille de 10 km issues de la base de données flore du Conservatoire botanique national alpin (CBNA). Ces observations sont produites par les partenaires du CBNA ou proviennent de la bibliographie ou d'herbier. Le jeu contient des données sur la flore et la fonge.","type":"OCCURRENCE","hostingOrganizationKey":"1928bdf0-f5d2-11dc-8c12-b8a03c50a862","hostingOrganizationTitle":"UMS PatriNat (AFB-CNRS-MNHN), Paris","countryCoverage":[],"publishingCountry":"FR","publishingOrganizationKey":"1928bdf0-f5d2-11dc-8c12-b8a03c50a862","publishingOrganizationTitle":"UMS PatriNat (AFB-CNRS-MNHN), Paris","license":"http://creativecommons.org/licenses/by-nc/4.0/legalcode","decades":[],"keywords":["Observation","Occurrence"],"recordCount":1355944},{"key":"e5f16d86-e225-4822-97be-a64ce17079c7","title":"Relevés floristiques du protocole de l'Inventaire National Forestier de l'IGN","description":"Inventaire forestier décennal concernant la France métropolitaine mené par l’IGN depuis novembre 2004. Relevés floristiques et forestiers effectués sur placettes en forêt et peupleraie. Il s’agit de relevés protocolés, avec un plan d’échantillonnage basé sur une grille régulière de mailles carrées de 1 km de côté, couvrant l’ensemble du territoire. Les placettes sont de 15 m de rayon (7 ares) pour l’ensemble de la flore vasculaire et de 25 m de rayon (20 ares) pour les arbres. Les relevés sont associes à d’autres mesures dendrologiques et écologiques. Ils ne sont pas tous effectues à la même période. \nhttp://inventaire-forestier.ign.fr/spip/spip.php?rubrique205","type":"OCCURRENCE","hostingOrganizationKey":"1928bdf0-f5d2-11dc-8c12-b8a03c50a862","hostingOrganizationTitle":"UMS PatriNat (AFB-CNRS-MNHN), Paris","countryCoverage":[],"publishingCountry":"FR","publishingOrganizationKey":"1928bdf0-f5d2-11dc-8c12-b8a03c50a862","publishingOrganizationTitle":"UMS PatriNat (AFB-CNRS-MNHN), Paris","license":"http://creativecommons.org/licenses/by-nc/4.0/legalcode","decades":[],"keywords":["Observation","Occurrence"],"recordCount":1343014},{"key":"c779b049-28f3-4daf-bbf4-0a40830819b6","title":"EBCC Atlas of European Breeding Birds","description":"In 1997 the EBCC Atlas of European breeding birds, also referred to as European Ornithological Atlas or  'EOA', was published. This voluminous book was the result of more than 25 years of fieldwork, cooperation, data gathering, data processing, writing and editing. Next to a beautiful book the data in the maps provides countless possibilities fur further studies on the distribution of the European breeding birds.","type":"OCCURRENCE","hostingOrganizationKey":"1c51595e-f1e9-467f-94e5-e1b65d15b30f","hostingOrganizationTitle":"Dutch Centre for Field Ornithology (Sovon)","countryCoverage":[],"publishingCountry":"NL","publishingOrganizationKey":"d3f94e8a-bb06-4d2b-89a6-6cd66abfa66c","publishingOrganizationTitle":"European Bird Census Council (EBCC)","license":"http://creativecommons.org/licenses/by/4.0/legalcode","decades":[1970,1980,1990],"keywords":["Breeding Birds","Europe","Observation","Occurrence"],"recordCount":1339711},{"key":"bb5b30b4-827e-4d5e-a86a-825d65cb6583","title":"Paleobiology Database","description":"The Paleobiology Database (PBDB) is a non-governmental, non-profit public resource for paleontological data. It has been organized and operated by a multi-disciplinary, multi-institutional, international group of paleobiological researchers. Its purpose is to provide global, collection-based occurrence and taxonomic data for organisms of all geological ages, as well data services to allow easy access to data for independent development of analytical tools, visualization software, and applications of all types. The Database’s broader goal is to encourage and enable data-driven collaborative efforts that address large-scale paleobiological questions.","type":"OCCURRENCE","hostingOrganizationKey":"2053a639-84c3-4be5-b8bc-96b6d88a976c","hostingOrganizationTitle":"VertNet","countryCoverage":[],"publishingCountry":"US","publishingOrganizationKey":"b711353c-44d7-4e8b-90c5-16fea0d247e0","publishingOrganizationTitle":"Paleobiology Database","license":"http://creativecommons.org/licenses/by/4.0/legalcode","decades":[],"keywords":["Specimen","Occurrence"],"projectIdentifier":"PBDB","recordCount":1310925},{"key":"169fa761-2fb9-4022-93bd-e22b7a062efd","title":"PlutoF platform observations","description":"Observation records from Citizen Science and research projects hosted by PlutoF platform. All observations have been moderated and verified on PlutoF workbench by appointed persons.","type":"OCCURRENCE","hostingOrganizationKey":"0870a77b-587c-4369-a8ed-bc3d347b8e1c","hostingOrganizationTitle":"PlutoF","countryCoverage":[],"publishingCountry":"EE","publishingOrganizationKey":"0870a77b-587c-4369-a8ed-bc3d347b8e1c","publishingOrganizationTitle":"PlutoF","license":"http://creativecommons.org/licenses/by-nc/4.0/legalcode","decades":[],"keywords":["Observation","Occurrence"],"recordCount":1288808},{"key":"ca435754-9190-4a87-9b2c-c21563898294","title":"Données issues de Clicnat (Base de données naturaliste picarde gérée par Picardie Nature)","description":"Créé en 2009, Clicnat est un logiciel libre développé par Picardie Nature avec le soutien de l’Union européenne, de la DREAL Picardie, de la Région Picardie, du Conseil général de l’Aisne et du Conseil général de la Somme.\nIl permet à tous les Picards depuis internet :\n* de saisir et gérer leurs propres observations de faune sauvage (des mammifères aux mollusques, en passant par les oiseaux ou les papillons) ;\n* de consulter les informations actualisées au jour le jour comme les cartes de répartition des espèces.\nChaque citoyen picard, du débutant au scientifique, peut saisir des données dans un espace simple d’utilisation, joindre des photos à ses observations, bénéficier de cartographies régionales\net de restitutions communales lui permettant de mieux connaître notre riche faune picarde.\nClicnat permet, grâce à ses données, de rendre disponibles librement des atlas espèces, inventaires par commune, études et autres informations. Créé à des fins de connaissance et de protection de la nature, Clicnat est destiné aussi bien aux institutions publiques dans le cadre par exemple de la mise en place de stratégies de conservation ou de projets d’aménagements, qu’aux élèves ou étudiants ou aux passionnés de nature.\nClicnat permet également d’aider les naturalistes dans leurs recherches en faisant ressortir les groupes d’espèces peu connus, ou certaines zones peu inventoriées. Il s’agit donc d’un outil dynamique, qui va bien au delà d’une base de données naturalistes habituelle et tient compte de toutes les avancées technologiques et informatiques actuelles. \nCe projet est également ouvert aux structures récoltant et gérant des données sur la faune sauvage. Les structures impliquées disposent toutes d’un compte d’accès aux données en fonction de leur territoire d’agrément et/ou de leurs champs d’intervention propres.\nEnfin, un module spécifique de saisie bibliographique permet d'intégrer des données issues de publications dans la base de données.\nClicnat est donc un outil qui compile des données collectées de manière opportuniste, des données collectées dans le cadre d'enquêtes et suivis spécifiques et des données bibliographiques.","type":"OCCURRENCE","hostingOrganizationKey":"1928bdf0-f5d2-11dc-8c12-b8a03c50a862","hostingOrganizationTitle":"UMS PatriNat (AFB-CNRS-MNHN), Paris","countryCoverage":[],"publishingCountry":"FR","publishingOrganizationKey":"1928bdf0-f5d2-11dc-8c12-b8a03c50a862","publishingOrganizationTitle":"UMS PatriNat (AFB-CNRS-MNHN), Paris","license":"http://creativecommons.org/licenses/by-nc/4.0/legalcode","decades":[],"keywords":["Observation","Occurrence"],"recordCount":1285805},{"key":"3f4d4bf1-5f9a-43f2-a0d8-ff6ed5952796","title":"IMOS - Animal Tracking Facility - Acoustic Tracking - Quality Controlled Detections (2007 -2017)","description":"<p>Over the last decade, the Integrated Marine Observing System’s Animal Tracking Facility (IMOS ATF) has established a permanent array of acoustic receivers around Australia to detect the movements of tagged marine animals in coastal waters. Simultaneously, IMOS ATF developed a centralised national database (https://animaltracking.aodn.org.au/) to encourage collaborative research across the user community and provide unprecedented opportunities to quantify individual behaviour across a broad range of taxa. Here we present the database and quality control procedures developed to collate 48.5 million valid detections from 1891 receiving stations. This dataset consists of detection data for 3523 tags deployed on 117 species (fish, sharks, rays, reptiles, and mammals), with distances travelled ranging from a few to thousands of kilometres. This dataset of acoustic detections constitutes a valuable resource facilitating meta-analysis of animal movement, distributions, and habitat use, and is important for relating species distribution shifts with environmental covariates.</p>\n<p>This copy of the IMOS ATF data is of the valid detections downloaded via the metadata record at https://catalogue-imos.aodn.org.au/geonetwork/srv/eng/metadata.show?uuid=0ede6b3d-8635-472f-b91c-56a758b4e091. This dataset has been summarized by reducing the detection records to the count of detections per animal per site per day (UTC). The DwC field eventId has been used to record the transmitter serial number. The initial deployment/release of the animal has also been added to the dataset using an occurenceId of transmitter tag with a postfix of '-release'.</p>\n<p>Details of the acoustic receiver sites is at https://catalogue-imos.aodn.org.au/geonetwork/srv/eng/metadata.show?uuid=4a97bd11-e821-4682-8b20-cb69201f3223.</p>","type":"OCCURRENCE","hostingOrganizationKey":"5fa89f68-9af0-4a0d-8998-ea39695c1db9","hostingOrganizationTitle":"CSIRO Oceans and Atmosphere","countryCoverage":[],"publishingCountry":"AU","publishingOrganizationKey":"5fa89f68-9af0-4a0d-8998-ea39695c1db9","publishingOrganizationTitle":"CSIRO Oceans and Atmosphere","license":"http://creativecommons.org/licenses/by/4.0/legalcode","decades":[2000,2010],"keywords":["Occurrence"],"recordCount":1161071},{"key":"ad0d1a24-e952-11e2-961f-00145eb45e9a","title":"VegetWeb - Repositorium von Vegetationsaufnahmen","description":"VegetWeb - Repositorium von Vegetationsaufnahmen aus Deutschland: Vorkommen von Pflanzenarten in den Aufnahmeflächen, zugeordnet zu MTB-Rasterfeldern - repository of vegetation plot data from germany, assigned to grid fields of TK25 map units (6 x 10 geographical minutes)","type":"OCCURRENCE","hostingOrganizationKey":"43cab2b0-0653-11d9-acb2-b8a03c50a862","hostingOrganizationTitle":"Bundesamt für Naturschutz / Netzwerk Phytodiversität Deutschland","countryCoverage":[],"publishingCountry":"DE","publishingOrganizationKey":"43cab2b0-0653-11d9-acb2-b8a03c50a862","publishingOrganizationTitle":"Bundesamt für Naturschutz / Netzwerk Phytodiversität Deutschland","license":"http://creativecommons.org/licenses/by-nc/4.0/legalcode","decades":[],"keywords":[],"recordCount":1142431},{"key":"b3604297-f438-4b5c-b654-7976a909f24e","title":"Fungal Records Database of Britain and Ireland","description":"fungi (true fungi [mushrooms, lichens, moulds, yeast], chromistan fungi [downy mildews, water moulds], protozoan fungi [slime moulds and their allies])","type":"OCCURRENCE","hostingOrganizationKey":"07f617d0-c688-11d8-bf62-b8a03c50a862","hostingOrganizationTitle":"National Biodiversity Network","countryCoverage":[],"publishingCountry":"GB","publishingOrganizationKey":"764dc23f-4a2f-4d81-93cb-3cf16077d191","publishingOrganizationTitle":"British Mycological Society","license":"http://creativecommons.org/licenses/by-nc/4.0/legalcode","decades":[1600,1700,1800,1810,1820,1830,1840,1850,1860,1870,1880,1890,1900,1910,1920,1930,1940,1950,1960,1970,1980,1990,2000],"keywords":[],"recordCount":1085628},{"key":"940821c0-3269-11df-855a-b8a03c50a862","title":"Belgian IFBL Flora Checklists (1939-1971)","description":"The data in IFBL 1, 2 & 3 covers all of the IFBL 1 km² flora checklists sampled between 1939 and 1971. About 10000 original lists corresponding with some 1 200 000 data representative of the former distribution of vascular plant species in Belgium, were digitised. The IFBL data is integrated in existing national and regional flora databases and will contribute to the realisation of regional Flora Atlases. The analysis of the digitised data will improve the possibilities to compare floral data over successive periods and will be of help in developing a strategy for reducing the costs and the length of new flora monitoring and mapping projects in the future.\nThe Atlas of the Flora (Pteridophytes – Spermatophytes) of Belgium and Luxemburg (Van Rompaey & Delvosalle 1972) was the result of the first national flora mapping project (1939- 1971). Unfortunately, the data used to build it were only digitised at a synthetic level (units of 16 km²). To be able to investigate the changes in the flora between the first mapping period and the second (1972 up to now) in all its aspects, especially in relation to environmental factors (climatic, pollution, land use…), the original data was digitized, i.e. the field records on the flora (flora checklists) made within 1km² IFBL squares.","type":"OCCURRENCE","hostingOrganizationKey":"37e82b90-1e21-11de-ab90-f72009d2669b","hostingOrganizationTitle":"Belgian Biodiversity Platform","countryCoverage":[],"publishingCountry":"BE","publishingOrganizationKey":"a344ee9f-f1b7-4761-be2c-58ee6d741395","publishingOrganizationTitle":"Botanic Garden Meise","license":"http://creativecommons.org/publicdomain/zero/1.0/legalcode","decades":[1930,1940,1950,1960,1970],"keywords":["Observation","Occurrence"],"recordCount":1045806},{"key":"7fd12114-9010-4c13-8f46-990fe04ca882","title":"NatureServe Network Species Occurrence Data","description":"This dataset consists of \"Element Occurrence\" (EO) records for rare and endangered species of the United States and Canada that are managed by the NatureServe Network of natural heritage programs and conservation data centers. Occurrences are documented by voucher specimens and other forms of ecological observations, and include spatially explicit data on the location and extent of populations, together with data on abundance and population condition. Due to the potential sensitivity of endangered species locations, only non-sensitive geographic data are provided in this dataset. Species-specific criteria used to define element occurrences, as well as standards for documenting and mapping element occurrences are available on the NatureServe web site at: http://www.natureserve.org/conservation-tools/standards-methods","type":"OCCURRENCE","hostingOrganizationKey":"aa40a1e0-818b-11d9-b6d0-b8a03c50a862","hostingOrganizationTitle":"NatureServe","countryCoverage":[],"publishingCountry":"US","publishingOrganizationKey":"aa40a1e0-818b-11d9-b6d0-b8a03c50a862","publishingOrganizationTitle":"NatureServe","license":"http://creativecommons.org/licenses/by-nc/4.0/legalcode","decades":[],"keywords":["conservation","environment","biodiversity","biota","species","rare","NatureServe","endangered","threatened","Occurrence","NatureServe Network"],"recordCount":1041361},{"key":"0943f690-fde5-11dd-83f4-b8a03c50a862","title":"Phanerogamic Botanical Collections (S)","description":"This database contains information on the specimens in the Phanerogamic Botanical Collections of the Swedish Museum of Natural History.","type":"OCCURRENCE","hostingOrganizationKey":"4c415e40-1e21-11de-9e40-a0d6ecebb8bf","hostingOrganizationTitle":"GBIF-Sweden","countryCoverage":[],"publishingCountry":"SE","publishingOrganizationKey":"4c415e40-1e21-11de-9e40-a0d6ecebb8bf","publishingOrganizationTitle":"GBIF-Sweden","license":"http://creativecommons.org/publicdomain/zero/1.0/legalcode","decades":[],"keywords":["Specimen","Occurrence"],"recordCount":1030627},{"key":"1270b3c8-ff55-4b63-a407-dcd7e08cd23f","title":"Dragonfly records from the British Dragonfly Society's Dragonfly Recording Network for the period up to 2014","description":"Dragonfly and damselfly records collected and collated by the Dragonfly Recording Network (DRN), a part of the British Dragonfly Society, for the period 1807-2014. This dataset incorporates the previous DRN and BRC dragonfly datasets on the Gateway.","type":"OCCURRENCE","hostingOrganizationKey":"07f617d0-c688-11d8-bf62-b8a03c50a862","hostingOrganizationTitle":"National Biodiversity Network","countryCoverage":[],"publishingCountry":"GB","publishingOrganizationKey":"980451bb-e9d8-4984-8d68-0d9772ea1582","publishingOrganizationTitle":"British Dragonfly Society Recording Scheme","license":"http://creativecommons.org/licenses/by/4.0/legalcode","decades":[1800,1810,1820,1830,1840,1850,1860,1870,1880,1890,1900,1910,1920,1930,1940,1950,1960,1970,1980,1990,2000,2010],"keywords":[],"recordCount":1030501},{"key":"8ef95309-811f-4c3b-a329-a85368e774c9","title":"Scottish SNH-funded BSBI records","type":"OCCURRENCE","hostingOrganizationKey":"07f617d0-c688-11d8-bf62-b8a03c50a862","hostingOrganizationTitle":"National Biodiversity Network","countryCoverage":[],"publishingCountry":"GB","publishingOrganizationKey":"aa569acf-991d-4467-b327-8442f30ddbd2","publishingOrganizationTitle":"Botanical Society of Britain & Ireland","license":"http://creativecommons.org/licenses/by-nc/4.0/legalcode","decades":[],"keywords":[],"recordCount":1016889},{"key":"d7cc19ba-7785-4131-ab63-3328a99ecfab","title":"Données d'observation flore du réseau des CBN issues du système d'information de la FCBN","description":"Dès la création de leur Fédération (FCBN - www.fcbn.fr) en 1999, les onze Conservatoires botaniques nationaux (CBN) ont exprimé la volonté collective de constituer un système d’information national pour mettre en commun leurs données, et celles de leurs partenaires, sur la flore, la fonge et les végétations-habitats. C’est réellement en 2010 avec le lancement de l’établissement du Format Standard de Données sur la flore (FSD Flore), conçu comme le « format commun de données de la Fédération des CBN », que la démarche a été initiée. Il s’en est suivi de nombreux échanges ayant permis de finaliser le format, de le tester sur les premiers jeux de données, d’établir une charte d’adhésion au projet et d’élaborer le cadrage final de l’exercice d’agrégation des données. Le projet s’est concrétisé au premier trimestre 2013 à travers la mise au format des données détenues par les CBN et leur intégration dans le Système d’Information de la FCBN (SI-FCBN). A l’horizon de l’année 2014, il résulte, de ce projet structurant, que la FCBN dispose d’un système d’information d’envergure nationale et fort de plus de 20 millions de données d��observation sur la flore de France. Le projet a ainsi permis de capitaliser la majeure partie des connaissances sur la distribution de la flore à l’échelle du territoire métropolitain et de La Réunion. Ce produit est le fruit d’un travail de longue haleine mené par les CBN et leurs partenaires, pour certains depuis plus de vingt ans. Il repose en grande partie sur des inventaires réalisés sur le terrain, mais aussi sur des dépouillements puis saisies de la bibliographie et de données d’herbiers. Il met également en jeu toute la richesse du travail poussé d’expertise scientifique et technique mené en continu par le réseau des CBN et qui est axé d’une part sur la validation taxonomique des données, et d’autre part sur leur gestion et administration au sein de bases de données régionales.\n\nCe jeux contient les données pour les taxons ayant subit des modifications du référentiel Taxref entre la V5 et la V8.","type":"OCCURRENCE","hostingOrganizationKey":"1928bdf0-f5d2-11dc-8c12-b8a03c50a862","hostingOrganizationTitle":"UMS PatriNat (AFB-CNRS-MNHN), Paris","countryCoverage":[],"publishingCountry":"FR","publishingOrganizationKey":"1928bdf0-f5d2-11dc-8c12-b8a03c50a862","publishingOrganizationTitle":"UMS PatriNat (AFB-CNRS-MNHN), Paris","license":"http://creativecommons.org/licenses/by-nc/4.0/legalcode","decades":[],"keywords":["Observation","Occurrence"],"recordCount":1016612},{"key":"f7fd7255-5be6-48cf-b76a-821cb84aa93f","title":"BRERC species records within last 15 years","description":"BRERC species records recorded within last 15 years within the unitary authority areas of North Somerset, South Gloucestershire, Bristol and Bath & North East Somerset","type":"OCCURRENCE","hostingOrganizationKey":"07f617d0-c688-11d8-bf62-b8a03c50a862","hostingOrganizationTitle":"National Biodiversity Network","countryCoverage":[],"publishingCountry":"GB","publishingOrganizationKey":"950cbfcc-1cb7-46c1-92ce-05ec232512d1","publishingOrganizationTitle":"Bristol Regional Environmental Records Centre","license":"http://creativecommons.org/licenses/by-nc/4.0/legalcode","decades":[2000,2010],"keywords":[],"recordCount":983757},{"key":"865df020-f762-11e1-a439-00145eb45e9a","title":"EURISCO, The European Genetic Resources Search Catalogue","description":"The EURISCO web catalogue automatically receives data from the National Inventories (NI). It effectively provides access to all ex situ PGR information in Europe and thus facilitates locating and accessing PGR.","type":"OCCURRENCE","hostingOrganizationKey":"a3c228d0-3110-11db-abb8-b8a03c50a862","hostingOrganizationTitle":"Bioversity International","countryCoverage":[],"publishingOrganizationKey":"a3c228d0-3110-11db-abb8-b8a03c50a862","publishingOrganizationTitle":"Bioversity International","license":"http://creativecommons.org/licenses/by/4.0/legalcode","decades":[],"keywords":[],"recordCount":976457},{"key":"7d17a2b2-8751-41b5-ac9b-48effc1ea236","title":"BRERC species records recorded over 15 years ago","description":"BRERC species records recorded over 15 years ago within the unitary authority areas of North Somerset, South Gloucestershire, Bristol and Bath & North East Somerset.","type":"OCCURRENCE","hostingOrganizationKey":"07f617d0-c688-11d8-bf62-b8a03c50a862","hostingOrganizationTitle":"National Biodiversity Network","countryCoverage":[],"publishingCountry":"GB","publishingOrganizationKey":"950cbfcc-1cb7-46c1-92ce-05ec232512d1","publishingOrganizationTitle":"Bristol Regional Environmental Records Centre","license":"http://creativecommons.org/licenses/by-nc/4.0/legalcode","decades":[1830,1840,1850,1860,1870,1880,1890,1900,1910,1920,1930,1940,1950,1960,1970,1980,1990,2000,2010],"keywords":[],"recordCount":943586},{"key":"864c8736-f762-11e1-a439-00145eb45e9a","title":"Point Reyes Bird Observatory - Point Counts","type":"OCCURRENCE","hostingOrganizationKey":"95f1c5d0-8996-11d9-a962-b8a03c50a862","hostingOrganizationTitle":"Avian Knowledge Network","countryCoverage":[],"publishingCountry":"US","publishingOrganizationKey":"95f1c5d0-8996-11d9-a962-b8a03c50a862","publishingOrganizationTitle":"Avian Knowledge Network","license":"http://creativecommons.org/publicdomain/zero/1.0/legalcode","decades":[],"keywords":[],"recordCount":928561},{"key":"cd6e21c8-9e8a-493a-8a76-fbf7862069e5","title":"Royal Botanic Gardens, Kew - Herbarium Specimens","description":"The Herbarium at the Royal Botanic Gardens Kew houses approximately seven million plant specimens, collected from all around the world. Specimens are either pressed and dried or preserved in spirit. Kew is committed to making this important collection more accessible to botanists and others, wherever they may be, for use in their own projects: particularly in biodiversity, conservation, sustainable development and systematics. To this end Kew is building an electronic Herbarium Catalogue containing images of the specimens and information taken from their collection labels. Specimens represented in Kew’s digital collections have been collected over a period spanning three centuries, with examples dating back to the beginning of the 18th century. These include over 300,000 putative type and historically important specimens collected by plant hunters, explorers and scientists of great renown including Charles Darwin, Joseph Dalton Hooker and Nathaniel Wallich, to name just a few.","type":"OCCURRENCE","hostingOrganizationKey":"061b4f20-f241-11da-a328-b8a03c50a862","hostingOrganizationTitle":"Royal Botanic Gardens, Kew","countryCoverage":[],"publishingCountry":"GB","publishingOrganizationKey":"061b4f20-f241-11da-a328-b8a03c50a862","publishingOrganizationTitle":"Royal Botanic Gardens, Kew","license":"http://creativecommons.org/licenses/by/4.0/legalcode","decades":[],"keywords":[],"recordCount":924700},{"key":"25d4f82b-b2bc-4197-bc11-27c8e9a25439","title":"Shropshire Ecological Data Network database","description":"All our records for Shropshire.","type":"OCCURRENCE","hostingOrganizationKey":"07f617d0-c688-11d8-bf62-b8a03c50a862","hostingOrganizationTitle":"National Biodiversity Network","countryCoverage":[],"publishingCountry":"GB","publishingOrganizationKey":"c5eac644-b0c4-48e2-87d0-dc9c33cbb8a4","publishingOrganizationTitle":"Shropshire Ecological Data Network","license":"http://creativecommons.org/licenses/by/4.0/legalcode","decades":[1500,1600,1700,1800,1810,1820,1830,1840,1850,1860,1870,1880,1890,1900,1910,1920,1930,1940,1950,1960,1970,1980,1990,2000,2010],"keywords":[],"recordCount":910512},{"key":"840ebec6-f762-11e1-a439-00145eb45e9a","title":"MICROBIS database","description":"MICROBIS is a database of marine microbial biota , most gained from genomic analysis used in support of ICOMM.","type":"OCCURRENCE","hostingOrganizationKey":"e3e307d0-1637-11da-a5ec-b8a03c50a862","hostingOrganizationTitle":"Marine Biology Laboratory","countryCoverage":[],"publishingOrganizationKey":"e3e307d0-1637-11da-a5ec-b8a03c50a862","publishingOrganizationTitle":"Marine Biology Laboratory","license":"http://creativecommons.org/licenses/by/4.0/legalcode","decades":[],"keywords":[],"recordCount":898985},{"key":"b929f23d-290f-4e85-8f17-764c55b3b284","title":"Bernice P. Bishop Museum","description":"The Bernice Pauahi Bishop Museum, designated the Hawaiʻi State Museum of Natural and Cultural History, is a museum of history and science located in the Kalihi district of Honolulu on the Hawaiian island of O'ahu. Founded in 1889, it is the largest museum in Hawai'i and is home to one of the world's largest collections of natural history material from the Pacific region, with approximately 21 million specimens. The main collections include Entomology,  Malacology, Botany, Ichthyology, Vertebrate Zoology (Birds, Mammals, Amphibians and Reptiles) and Marine Invertebrates. Bishop Museum is in the process of dramatically improving its digital resources, and is actively involved in the development of biodiversity information standards and associated services (particularly the Global Names Architecture).","type":"OCCURRENCE","hostingOrganizationKey":"2053a639-84c3-4be5-b8bc-96b6d88a976c","hostingOrganizationTitle":"VertNet","countryCoverage":[],"publishingCountry":"US","publishingOrganizationKey":"90cc71b0-055b-11d8-b84e-b8a03c50a862","publishingOrganizationTitle":"Bernice Pauahi Bishop Museum","license":"http://creativecommons.org/publicdomain/zero/1.0/legalcode","decades":[],"keywords":["Specimen","Occurrence"],"recordCount":836971},{"key":"1fec2829-4ac0-4329-b448-6f768b8d3427","title":"Liste des espèces de la faune sauvage (Amphibiens, Mammifères hors Chiroptères, Oiseaux, Orthoptères, Reptiles & Rhopalocères) observées selon le maillage communal français de la base de données naturalistes Faune-France .","description":"Les espèces concernées par le jeux de données regardent les taxons suivants : Amphibiens, Mammifères hors Chiroptères, Oiseaux, Orthoptères, Reptiles et Rhopalocères. Pour chaque taxon, le jeu de données a été crée à partir du tirage aléatoire d'une observation de ce taxon réalisée à l'intérieur d'une même commune. \nLa diffusion de la localisation de certaines espèces pouvant nuire à leur conservation, les observations à la maille ont été floutées à l'échelle du département (cas de la Cigogne noire, du Pélobate brun, de la Salamandre de Lanza, de la Vipère d'Orsini, du Fadet des tourbières, du Pygargue à queue blanche, du Gypaète barbu, du Grand Tétras, de la Grue cendrée, du Pic tridactyle, du Loup gris, du Lynx boréal, de l'Ours brun).","type":"OCCURRENCE","hostingOrganizationKey":"1928bdf0-f5d2-11dc-8c12-b8a03c50a862","hostingOrganizationTitle":"UMS PatriNat (AFB-CNRS-MNHN), Paris","countryCoverage":[],"publishingCountry":"FR","publishingOrganizationKey":"1928bdf0-f5d2-11dc-8c12-b8a03c50a862","publishingOrganizationTitle":"UMS PatriNat (AFB-CNRS-MNHN), Paris","license":"http://creativecommons.org/licenses/by-nc/4.0/legalcode","decades":[],"keywords":["Observation","Occurrence"],"recordCount":834588},{"key":"96c93a1e-f762-11e1-a439-00145eb45e9a","title":"AMNH Bird Collection","description":"The Department of Ornithology maintains one of the largest collections of bird specimens in the world. The research collections of the Department number nearly one million specimens; these include skins, skeletons, alcoholic preparations, eggs, nests, and tissue samples for molecular biochemical studies. A large number of type specimens and rare or extinct species are also found in its collections.","type":"OCCURRENCE","hostingOrganizationKey":"2053a639-84c3-4be5-b8bc-96b6d88a976c","hostingOrganizationTitle":"VertNet","countryCoverage":[],"publishingCountry":"US","publishingOrganizationKey":"ccd1ddc0-6c21-11de-8224-b8a03c50a862","publishingOrganizationTitle":"American Museum of Natural History","license":"http://creativecommons.org/publicdomain/zero/1.0/legalcode","decades":[],"keywords":["Specimen","Occurrence"],"recordCount":833709},{"key":"f946666e-67dc-4848-9fa8-2162f3559e33","title":"Données d'occurrences Espèces issues de l'inventaire des ZNIEFF","description":"Les données correspondent à des données de synthèse espèces présentes dans les ZNIEFF. Les données sont bancarisées à la zone.","type":"OCCURRENCE","hostingOrganizationKey":"1928bdf0-f5d2-11dc-8c12-b8a03c50a862","hostingOrganizationTitle":"UMS PatriNat (AFB-CNRS-MNHN), Paris","countryCoverage":[],"publishingCountry":"FR","publishingOrganizationKey":"1928bdf0-f5d2-11dc-8c12-b8a03c50a862","publishingOrganizationTitle":"UMS PatriNat (AFB-CNRS-MNHN), Paris","license":"http://creativecommons.org/licenses/by-nc/4.0/legalcode","decades":[],"keywords":["Observation","Occurrence"],"recordCount":822749},{"key":"bd8ee748-4ae8-4956-98d9-c1b8e8b2b9c9","title":"TAXA - Flore et habitats naturels de Franche-Comté","description":"Données floristiques et phytocénotiques (habitats naturels) : base informatisée visant à organiser la synthèse et la validation des données rassemblées par le CBNFC-ORI, la SBFC, le réseau de bénévoles régionaux et diverses structures ou organismes partenaires (CENFC, ONCFS, ONEMA, ONF, associations naturalistes, bureaux d'étude, etc ...). Les groupes floristiques abordés portent sur les trachéophytes, les bryophytes, les charophytes. Les champignons (y compris lichénisés) sont également traités.En lien avec l'amélioration générale de la connaissance, les objectifs visés portent sur la mise en place d'un réseau de veille permanente, permettant à terme une meilleure appréhension de l'évolution du statut des taxons régionaux et d'en assurer ainsi une meilleure conservation.","type":"OCCURRENCE","hostingOrganizationKey":"1928bdf0-f5d2-11dc-8c12-b8a03c50a862","hostingOrganizationTitle":"UMS PatriNat (AFB-CNRS-MNHN), Paris","countryCoverage":[],"publishingCountry":"FR","publishingOrganizationKey":"1928bdf0-f5d2-11dc-8c12-b8a03c50a862","publishingOrganizationTitle":"UMS PatriNat (AFB-CNRS-MNHN), Paris","license":"http://creativecommons.org/licenses/by-nc/4.0/legalcode","decades":[],"keywords":["Observation","Occurrence"],"recordCount":771546},{"key":"7888f666-f59e-4534-8478-3a10a3bfee45","title":"Vlinderdatabank - Butterflies in Flanders and the Brussels Capital Region, Belgium","description":"Vlinderdatabank - Butterflies in Flanders and the Brussels Capital Region, Belgium is a species occurrence dataset published by the Research Institute for Nature and Forest (INBO) and described in Maes et al. 2016 (https://doi.org/10.3897/zookeys.585.8019). The dataset contains over 761.000 butterfly occurrences of 70 species, compiled by the INBO in cooperation with the Butterfly working group of Natuurpunt (Vlinderwerkgroep). The occurrences are georeferenced using the centroid of their respective 5 x 5 km² Universal Transverse Mercator (UTM) grid cell and are derived from the database Vlinderdatabank at the INBO, which consists of (historical) collection and literature data (1830-2001), for which all butterfly specimens in institutional and available personal collections were digitized and all entomological and other relevant publications were checked for butterfly distribution data. It also contains observations and monitoring data for the period 1991-2014. The latter type were collected by a (small) butterfly monitoring network where butterflies were recorded using a standardized protocol. Together with the dataset Vanreusel et al. (2016, https://doi.org/10.15468/ezfbee), the dataset represents the most complete overview of butterflies in Flanders and the Brussels Capital Region (north Belgium).\nInformation withheld: in the original database, the observer’s name and the exact XY-coordinates are known.\nTo allow anyone to use this dataset, we have released the data to the public domain under a Creative Commons Zero waiver (http://creativecommons.org/publicdomain/zero/1.0/). We would appreciate however, if you read and follow these norms for data use (http://www.inbo.be/en/norms-for-data-use) and provide a link to the original dataset (https://doi.org/10.15468/njgbmh) whenever possible. If you use these data for a scientific paper, please cite the dataset following the applicable citation norms and/or consider us for co-authorship. We are always interested to know how you have used or visualized the data, or to provide more information, so please contact us via the contact information provided in the metadata, opendata@inbo.be or https://twitter.com/LifeWatchINBO.","type":"OCCURRENCE","hostingOrganizationKey":"1cd669d0-80ea-11de-a9d0-f1765f95f18b","hostingOrganizationTitle":"Research Institute for Nature and Forest (INBO)","countryCoverage":[],"publishingCountry":"BE","publishingOrganizationKey":"1cd669d0-80ea-11de-a9d0-f1765f95f18b","publishingOrganizationTitle":"Research Institute for Nature and Forest (INBO)","license":"http://creativecommons.org/publicdomain/zero/1.0/legalcode","decades":[1830,1840,1850,1860,1870,1880,1890,1900,1910,1920,1930,1940,1950,1960,1970,1980,1990,2000,2010],"keywords":["literature","butterflies","Lepidoptera","observations","citizen science","collection","distribution","monitoring","Occurrence"],"recordCount":769271},{"key":"84806e86-f762-11e1-a439-00145eb45e9a","title":"Paleobiology Database","type":"OCCURRENCE","hostingOrganizationKey":"c96dd940-165d-11da-a5ec-b8a03c50a862","hostingOrganizationTitle":"Marine Science Institute, UCSB","countryCoverage":[],"publishingCountry":"US","publishingOrganizationKey":"c96dd940-165d-11da-a5ec-b8a03c50a862","publishingOrganizationTitle":"Marine Science Institute, UCSB","license":"http://creativecommons.org/licenses/by/4.0/legalcode","decades":[],"keywords":[],"recordCount":764816},{"key":"836149af-e7b0-4fc7-b6d9-4d56c28bad43","title":"Inventaire National du Patrimoine Naturel : Oiseaux hivernants de France","description":"L'objectif de cet inventaire est de rassembler un jeu exhaustif de données sur l'ensemble des espèces hivernant en France métropolitaine. Le réseau a été coordonné par Mme D. Yaetman-Berthelot et G. Jarry (Société d'Etude Ornithologique de France). Au 01/01/2002, la base contient environ 1 603 512 données. Celles-ci couvrent les 4 hivers de 1977-1978 à 1980-1981 à raison de 8 décades par hiver. Données essentielles (espèce, lieu, période), classes d'abondance. Le lieu\nest donné sous la forme d'une maille de 4 décigrades x 2 décigrades (découpage des cartes IGN 1/50 000e).","type":"OCCURRENCE","hostingOrganizationKey":"1928bdf0-f5d2-11dc-8c12-b8a03c50a862","hostingOrganizationTitle":"UMS PatriNat (AFB-CNRS-MNHN), Paris","countryCoverage":[],"publishingCountry":"FR","publishingOrganizationKey":"1928bdf0-f5d2-11dc-8c12-b8a03c50a862","publishingOrganizationTitle":"UMS PatriNat (AFB-CNRS-MNHN), Paris","license":"http://creativecommons.org/licenses/by/4.0/legalcode","decades":[],"keywords":[],"recordCount":755529},{"key":"c55cf28c-8ed3-43cd-914c-8a8b7b4b9df0","title":"Flora of Worcestershire","description":"Vascular plants throughout the county","type":"OCCURRENCE","hostingOrganizationKey":"07f617d0-c688-11d8-bf62-b8a03c50a862","hostingOrganizationTitle":"National Biodiversity Network","countryCoverage":[],"publishingCountry":"GB","publishingOrganizationKey":"aa569acf-991d-4467-b327-8442f30ddbd2","publishingOrganizationTitle":"Botanical Society of Britain & Ireland","license":"http://creativecommons.org/licenses/by/4.0/legalcode","decades":[1500,1600,1700,1800,1810,1820,1830,1840,1850,1860,1870,1880,1890,1900,1910,1920,1930,1940,1950,1960,1970,1980,1990,2000,2010],"keywords":[],"recordCount":743753},{"key":"197908d0-5565-11d8-b290-b8a03c50a862","title":"Fishbase","description":"Fishbase occurrences hosted by GBIF-Sweden","type":"OCCURRENCE","hostingOrganizationKey":"4c415e40-1e21-11de-9e40-a0d6ecebb8bf","hostingOrganizationTitle":"GBIF-Sweden","countryCoverage":[],"publishingCountry":"SE","publishingOrganizationKey":"192a9ab0-5565-11d8-b290-b8a03c50a862","publishingOrganizationTitle":"FishBase","license":"http://creativecommons.org/licenses/by-nc/4.0/legalcode","decades":[],"keywords":["Specimen","Occurrence"],"recordCount":731045},{"key":"c1a13bf0-0c71-11dd-84d4-b8a03c50a862","title":"Botany (UPS)","description":"Database of the botany collection of the Museum of Evolution in Uppsala.","type":"OCCURRENCE","hostingOrganizationKey":"4c415e40-1e21-11de-9e40-a0d6ecebb8bf","hostingOrganizationTitle":"GBIF-Sweden","countryCoverage":[],"publishingCountry":"SE","publishingOrganizationKey":"4c415e40-1e21-11de-9e40-a0d6ecebb8bf","publishingOrganizationTitle":"GBIF-Sweden","license":"http://creativecommons.org/publicdomain/zero/1.0/legalcode","decades":[],"keywords":["Occurrence"],"recordCount":706679},{"key":"dee8edc4-b19a-11e2-886d-00145eb45e9a","title":"Floristic Databases of Mecklenburg-Pomerania - Higher Plants","description":"Based on the floristic survey of Eastern Germany (Benkert et al. 1996) a distribution database of higher plants in Mecklenburg-Vorpommern has been managed in the Botanical Institute of Botany and Landscape Ecology at the University of Greifswald. On the occasion of the New critical Flora of Mecklenburg-Vorpommern (Henker & Berg 2005) a comprehensive edit has been done. User input is possible at the website http://www.flora-mv.de.","type":"OCCURRENCE","hostingOrganizationKey":"7ac19c7e-3e49-4672-ac94-76126d676f40","hostingOrganizationTitle":"Ernst-Moritz-Arndt-Universitaet","countryCoverage":[],"publishingCountry":"DE","publishingOrganizationKey":"7ac19c7e-3e49-4672-ac94-76126d676f40","publishingOrganizationTitle":"Ernst-Moritz-Arndt-Universitaet","license":"http://creativecommons.org/licenses/by/4.0/legalcode","decades":[],"keywords":[],"recordCount":702431},{"key":"f60e31a5-dc12-44c1-8358-098f131cd141","title":"Welsh BSBI data (ex-VPDB dataset) at hectad resolution","type":"OCCURRENCE","hostingOrganizationKey":"07f617d0-c688-11d8-bf62-b8a03c50a862","hostingOrganizationTitle":"National Biodiversity Network","countryCoverage":[],"publishingCountry":"GB","publishingOrganizationKey":"aa569acf-991d-4467-b327-8442f30ddbd2","publishingOrganizationTitle":"Botanical Society of Britain & Ireland","license":"http://creativecommons.org/licenses/by-nc/4.0/legalcode","decades":[],"keywords":[],"recordCount":692144},{"key":"cc885e78-0fae-49a3-9c6d-93ac90debd68","title":"Finnish Floristic Database (Literature Sources)","description":"Finnish floristic data from publications.","type":"OCCURRENCE","hostingOrganizationKey":"04fd2e13-6881-4e5c-9dd1-8fdd9ab993c1","hostingOrganizationTitle":"Finnish Biodiversity Information Facility","countryCoverage":[],"publishingCountry":"FI","publishingOrganizationKey":"04fd2e13-6881-4e5c-9dd1-8fdd9ab993c1","publishingOrganizationTitle":"Finnish Biodiversity Information Facility","license":"http://creativecommons.org/licenses/by/4.0/legalcode","decades":[1700,1800,1810,1820,1830,1840,1850,1860,1870,1880,1890,1900,1910,1920,1930,1940,1950,1960,1970,1980,1990,2000,2010],"keywords":["Occurrence"],"recordCount":690014},{"key":"85818aea-f762-11e1-a439-00145eb45e9a","title":"The System-wide Information Network for Genetic Resources (SINGER)","description":"The System-wide Information Network for Genetic Resources (SINGER) is an information exchange network of the Future Harvest Centres of the Consultative Group on International Agricultural Research (CGIAR) and associated partners.","type":"OCCURRENCE","hostingOrganizationKey":"a3c228d0-3110-11db-abb8-b8a03c50a862","hostingOrganizationTitle":"Bioversity International","countryCoverage":[],"publishingOrganizationKey":"a3c228d0-3110-11db-abb8-b8a03c50a862","publishingOrganizationTitle":"Bioversity International","license":"http://creativecommons.org/licenses/by/4.0/legalcode","decades":[],"keywords":[],"recordCount":683018},{"key":"7f9eb622-c036-44c6-8be9-5793eaa1fa1e","title":"Watervogels - Wintering waterbirds in Flanders, Belgium","description":"<p>Watervogels - Wintering waterbirds in Flanders, Belgium is a species occurrence dataset published by the Research Institute for Nature and Forest (INBO). The dataset contains more than 75,000 bird counts, covering over 600,000 observations and 35 million individuals for the period 1991-2013. It includes information on 170 species in nearly 1,200 wetland sites. The aim of these bird counts is to gather information on the size, distribution and long term trends of wintering waterbird populations in Flanders. These data are also used to assess the importance of individual sites for waterbirds, using quantitative criteria. Furthermore, the waterbird counts contribute to international monitoring programs, such as the International Waterbird Census (coordinated by Wetlands International) and fulfil some of the objectives of the European Bird Directive, the Ramsar Convention, and the Agreement on the Conservation of African-Eurasian Migratory Waterbirds (AEWA). The data are released in bulk as open data. See the dataset metadata or the publication for contact information, scope and methodology. Issues with the dataset can be reported at https://github.com/LifeWatchINBO/data-publication/tree/master/datasets/watervogels-occurrences</p>\n<p>The following information is not included in this dataset and available upon request: roost site counts, counts from historical (inactive) locations.</p>\n<p>To allow anyone to use this dataset, we have released the data to the public domain under a Creative Commons Zero waiver (http://creativecommons.org/publicdomain/zero/1.0/). We would appreciate however, if you read and follow these norms for data use (http://www.inbo.be/en/norms-for-data-use) and provide a link to the original dataset (https://doi.org/10.15468/lj0udq) whenever possible. If you use these data for a scientific paper, please cite the dataset following the applicable citation norms and/or consider us for co-authorship. We are always interested to know how you have used or visualized the data, or to provide more information, so please contact us via the contact information provided in the metadata, opendata@inbo.be or https://twitter.com/LifeWatchINBO.</p>","type":"OCCURRENCE","hostingOrganizationKey":"1cd669d0-80ea-11de-a9d0-f1765f95f18b","hostingOrganizationTitle":"Research Institute for Nature and Forest (INBO)","countryCoverage":[],"publishingCountry":"BE","publishingOrganizationKey":"1cd669d0-80ea-11de-a9d0-f1765f95f18b","publishingOrganizationTitle":"Research Institute for Nature and Forest (INBO)","license":"http://creativecommons.org/publicdomain/zero/1.0/legalcode","decades":[1990,2000,2010],"keywords":["wetlands","population trends","Observation","birds","monitoring","distribution","open data","Occurrence","waterbirds","Lifewatch"],"recordCount":681444},{"key":"8186b0c0-925e-11da-8900-b8a03c50a862","title":"Ringing Data from the Bird Migration Research Station, University of Gdańsk","description":"Ringing data (mainly passerines) has been collected at ringing stations in Northern Poland since 1961. The database is still under development.","type":"OCCURRENCE","hostingOrganizationKey":"04665d80-7e5f-11d8-a1a0-b8a03c50a862","hostingOrganizationTitle":"University of Warsaw, Dept. of Ecology","countryCoverage":[],"publishingCountry":"PL","publishingOrganizationKey":"814254c0-925e-11da-8900-b8a03c50a862","publishingOrganizationTitle":"University of Gdańsk, Bird Migration Research Station","license":"http://creativecommons.org/licenses/by-nc/4.0/legalcode","decades":[],"keywords":["Specimen","Occurrence"],"recordCount":668252},{"key":"c8681cc2-9d0a-4c5f-b620-5c753abfe2bc","title":"NMNH Paleobiology Specimen Records","description":"Public records from the Department of Paleobiology, National Museum of Natural History, Smithsonian Institution. These data cover accessioned specimens representing fossil invertebrates, vertebrates, and plants from all over the world and include more than 139,000 paleobiological type specimen records.","type":"OCCURRENCE","hostingOrganizationKey":"bc092ff0-02e4-11dc-991f-b8a03c50a862","hostingOrganizationTitle":"National Museum of Natural History, Smithsonian Institution","countryCoverage":[],"publishingCountry":"US","publishingOrganizationKey":"bc092ff0-02e4-11dc-991f-b8a03c50a862","publishingOrganizationTitle":"National Museum of Natural History, Smithsonian Institution","license":"http://creativecommons.org/publicdomain/zero/1.0/legalcode","decades":[],"keywords":["Specimen","Occurrence"],"recordCount":662353},{"key":"68513375-3aa5-4f6f-9975-d97d56c21d61","title":"Illinois Natural History Survey Insect Collection","description":"The insect collection at the Survey now houses over 6,000,000 curated specimens. The growth and wide-ranging scope of this collection can be credited to the diverse interests of the systematists who have spent all or part of their career at the Survey. Scientists such as Stephen A. Forbes, the first Director of the State Laboratory and Chief of the Natural History Survey; Theodore Frison, who succeeded Forbes; and H. H. Ross, who directed the intense systematics studies of the faunistic section for 40 years, placed considerable emphasis on enlarging the insect collection. These insects document the changing landscape and environmental conditions of the world.\n\nThe INHS insect collection is one of the largest in North America. The most recent size estimate was done in 1992. The heavy concentration of specimens from the last third of the 1800s also makes this one of North America's oldest insect and related arthropod collections. \n\nThe INHS Insect Collection includes more than 13,000 primary types (syntypes inclusive). Because of size, historical holdings, and wide breadth of coverage in certain groups, the collection is an important national and worldwide resource.","type":"OCCURRENCE","hostingOrganizationKey":"fd0038d0-3e7b-11d9-8439-b8a03c50a862","hostingOrganizationTitle":"Illinois Natural History Survey","countryCoverage":[],"publishingCountry":"US","publishingOrganizationKey":"fd0038d0-3e7b-11d9-8439-b8a03c50a862","publishingOrganizationTitle":"Illinois Natural History Survey","license":"http://creativecommons.org/licenses/by/4.0/legalcode","decades":[],"keywords":["Arthropoda","Insect"],"recordCount":656321},{"key":"3dc2a7f6-8d3a-4228-a69c-ec795028fe2f","title":"Miscellaneous records held on the Cofnod database","description":"This dataset includes all records held on the Cofnod database, with some exceptions. Records of INNS are supplied in a separate dataset. Only records where specific permissions have been obtained from the dataset supplier are included. We have also excluded the following records: any which we believe to be already held on the NBN Atlas; any submitted to us by Biological Records Centre or a National Scheme/Society/Conservation organisation; and any owned by Natural Resources Wales (some of which are submitted by Cofnod within three separate datasets). This dataset includes Sensitive species records (as described in our Data Sourcing, Management and Use policy available from the Cofnod website), however they are not sensitive at the resolution supplied and as their site names and any attached comments have been removed.","type":"OCCURRENCE","hostingOrganizationKey":"07f617d0-c688-11d8-bf62-b8a03c50a862","hostingOrganizationTitle":"National Biodiversity Network","countryCoverage":[],"publishingCountry":"GB","publishingOrganizationKey":"47eaaa43-47c7-4754-8e7a-bfaf616da4df","publishingOrganizationTitle":"Cofnod – North Wales Environmental Information Service","license":"http://creativecommons.org/licenses/by-nc/4.0/legalcode","decades":[1840,1850,1860,1870,1880,1890,1900,1910,1920,1930,1940,1950,1960,1970,1980,1990,2000,2010],"keywords":[],"recordCount":646196},{"key":"72b6bac4-3a93-491b-a931-cbd07bff5b39","title":"Données de la flore d’Alsace (SBA)","description":"Objectif:\nRassembler l'ensemble des données floristiques d'Alsace. Mise en place d'un Atlas et d'un inventaire permanent de la Flore\n\nRéseau de collecte:\nMembres de la Société Botanique d'Alsace, saisie des travaux, publications, rapports, plan de gestion, docob, analyse de toutes les publications floristiques régionales, etc.\n\nPublications:\nAtlas de la Flore d'Alsace : http://www.atlasflorealsace.com/\nNombreuses publications dans le Bulletin de Liaison de la Société Botanique d'Alsace : http://www.sbalsace.org/\n\nProtocole de collecte des données : Observations des membres de la SBA, sorties de terrain, bibliographie (revues, ouvrages, mémoires, études, manuscrits, etc.), saisie des spécimens d'herbier (e-ReColNat et recensement des herbiers d'Alsace), etc.","type":"OCCURRENCE","hostingOrganizationKey":"1928bdf0-f5d2-11dc-8c12-b8a03c50a862","hostingOrganizationTitle":"UMS PatriNat (AFB-CNRS-MNHN), Paris","countryCoverage":[],"publishingCountry":"FR","publishingOrganizationKey":"1928bdf0-f5d2-11dc-8c12-b8a03c50a862","publishingOrganizationTitle":"UMS PatriNat (AFB-CNRS-MNHN), Paris","license":"http://creativecommons.org/licenses/by-nc/4.0/legalcode","decades":[],"keywords":["Observation","Occurrence"],"recordCount":638313},{"key":"43027054-3812-4599-b7bc-a01f1df5b071","title":"Données ONF Faune-Flore-Fonge","description":"Données passées (reprise bibliographie et carnets de terrain; importations) et données actuelles depuis 2009 (BDN). A la fois données protocolées et données \"opportunistes\".\nAmélioration de la connaissance des taxons présents dans les forêts publiques Potentiellement tous les agents ONF, en particulier réseaux naturalistes de l'ONF (220 personnes) Espèce, date, observateur, commune / maille","type":"OCCURRENCE","hostingOrganizationKey":"5d5e5d82-076c-4e9a-b5b0-c88d1b691a6a","hostingOrganizationTitle":"GBIF France","countryCoverage":[],"publishingCountry":"FR","publishingOrganizationKey":"1928bdf0-f5d2-11dc-8c12-b8a03c50a862","publishingOrganizationTitle":"UMS PatriNat (AFB-CNRS-MNHN), Paris","license":"http://creativecommons.org/licenses/by/4.0/legalcode","decades":[1500,1600,1700,1800,1810,1820,1830,1840,1850,1860,1870,1880,1890,1900,1910,1920,1930,1940,1950,1960,1970,1980,1990,2000,2010],"keywords":["forêts domaniales; forêts communales; forêts publiques; RBI; RBD; réseaux naturalistes","Occurrence"],"recordCount":637398},{"key":"8648fdbe-f762-11e1-a439-00145eb45e9a","title":"Hawk Migration Association of North America - HawkCount","type":"OCCURRENCE","hostingOrganizationKey":"95f1c5d0-8996-11d9-a962-b8a03c50a862","hostingOrganizationTitle":"Avian Knowledge Network","countryCoverage":[],"publishingCountry":"US","publishingOrganizationKey":"95f1c5d0-8996-11d9-a962-b8a03c50a862","publishingOrganizationTitle":"Avian Knowledge Network","license":"http://creativecommons.org/publicdomain/zero/1.0/legalcode","decades":[],"keywords":[],"recordCount":634258},{"key":"961a5ce1-f843-4e75-86a6-51aa959fc12c","title":"Plant","description":"세계는 지금 생물 다양성 보전의 중요성에 대하여 새로운 인식과 변화를 맞고 있으며 인류생존을 위해서 식물의 세계를 온전하게 보전해야 한다는 절대적인 과제를 해결하기 위하여 노력하고 있습니다. 우리나라에서도 많은 수목원과 식물원에서 식물 종의 수집과 보전을 위한 활동과 연구를 지속적으로 수행하고 있으며, 식물자원의 보전을 위한 정책과 계획을 수립하고 있습니다. \n· 산림청에서는 국가적 식물자원의 보전을 위한 많은 과제들 중에서 식물 종의 서식처에 대한 보전실태를 모니터링 하기 위한 「국가 식물자원정보 관리시스템」을 구축하고 있습니다. \n· \"한국의 식물자원\"홈페이지는 「국가 식물자원정보 관리시스템」에서 구축되는 정보 중에서 일부를 일반인에게 제공하는 부분과 네트워크 구축을 위한 자료수집 체계(국가 식물자원정보 관리시스템 인트라넷) 부분으로 구분되어 국가적인 식물 보전실태 중심의 정보로 운영될 예정 입니다. \n \n 2010년까지 구축완료를 목표로 하고 있는「국가 식물자원정보 관리시스템」은 많은 자료를 제공하는 대학의 식물 표본관과 수목원, 식물원에서의 적극적인 협조에 의하여 단계별로 추진되고 있습니다. 시스템 구축이 완료되지 않은 상황이지만 전 국민이 함께 국가 식물자원 보전에 동참하고 함께 발전시키기 위하여 추진 과정과 구축내용에 대한 홈페이지를 공개 합니다. \n \n 지속적으로 구축될 정보를 이용하시면서 효율적 활용방안에 대한 의견을 기탄 없이 주시고 국립수목원 생물표본과 이병천 박사, 산림청 정보통계과 김찬회 서기관과 협의하여 주시면 성공적인 국가 식물자원정보 관리시스템이 구축될 수 있도록 최선을 다하겠습니다","type":"OCCURRENCE","hostingOrganizationKey":"ce3cfcc0-6d56-11db-a819-b8a03c50a862","hostingOrganizationTitle":"Korea National Arboretum (Korea Forest Service)","countryCoverage":[],"publishingCountry":"KR","publishingOrganizationKey":"ce3cfcc0-6d56-11db-a819-b8a03c50a862","publishingOrganizationTitle":"Korea National Arboretum (Korea Forest Service)","license":"http://creativecommons.org/licenses/by/4.0/legalcode","decades":[],"keywords":[],"recordCount":607514},{"key":"523590f0-f87d-4fed-acd2-6873bdce0a8c","title":"RECORD Aves Data","description":"All RECORD coverage area Aves data","type":"OCCURRENCE","hostingOrganizationKey":"07f617d0-c688-11d8-bf62-b8a03c50a862","hostingOrganizationTitle":"National Biodiversity Network","countryCoverage":[],"publishingCountry":"GB","publishingOrganizationKey":"25318ae9-d1de-456f-baa2-4515ff1f33b1","publishingOrganizationTitle":"Record","license":"http://creativecommons.org/licenses/by-nc/4.0/legalcode","decades":[1700,1800,1810,1820,1830,1840,1850,1860,1870,1880,1890,1900,1910,1920,1930,1940,1950,1960,1970,1980,1990,2000,2010],"keywords":[],"recordCount":600083},{"key":"82ad4e4e-f762-11e1-a439-00145eb45e9a","title":"Swiss National Butterflies Databank","description":"Database with records of various origins, assembling literature data, digitized collection data and recent observational records provided to the CSCF. Proportionally, this latter resource represents the most important one and is the result of the network activities of voluntary collaborators, internally operated projects (Biodiversity Monitoring Z3-Z4, Red List Project) and impact studies, but also includes data from PhD and master theses. The data cover a period from 1835 to our days. Records have been reviewed according to a standardized validation procedure (http://www.cscf.ch/page24164_en.html). Digitized collection data for specimens hosted in Swiss institutions have been excluded from this resource as already part of the corresponding institutional dataset. Nomenclature has been reviewed within the Swiss participation in the Pan-European Species Directory Infrastructure PESI (Fauna Europaea).","type":"OCCURRENCE","hostingOrganizationKey":"dc8aab12-94a0-47ce-b188-8fe30b91bb23","hostingOrganizationTitle":"Centre Suisse de Cartographie de la Faune - CSCF","countryCoverage":[],"publishingCountry":"CH","publishingOrganizationKey":"dc8aab12-94a0-47ce-b188-8fe30b91bb23","publishingOrganizationTitle":"Centre Suisse de Cartographie de la Faune - CSCF","license":"http://creativecommons.org/licenses/by-nc/4.0/legalcode","decades":[],"keywords":[],"recordCount":581051},{"key":"10e44c48-0839-4a20-86d5-f0e23ae2e366","title":"Bee Biology and Systematics Laboratory","description":"The Pollinating Insects -- Biology, Management and Systematics Research Unit (PIRU) was founded in the late 1940s as part of the alfalfa seed production unit.  We focus primarily on pollination research with bees.The mission of the Pollinating Insect - Biology, Management and Systematics Research Unit is the development of non-Apis bees, for example the alfalfa leafcutting bee and blue orchard bee, as crop pollinators.  Research emphasis areas include the development and improvement of management systems for bee populations, biological studies of bees, plant-pollination systems, and bee biosystematics.  Cross-pollinated crops not effectively pollinated by honey bees have been targeted for improved pollination management, and the candidacy of selected pollinator species continues to be evaluated.  Current research on established species, like the alfalfa leafcutting bee and blue orchard bee, is directed toward developing control programs for pests and diseases, improving management that will result in better bee health and demonstrating pollination efficacy and increased producer profitability on &#34;new&#34; crops.","type":"OCCURRENCE","hostingOrganizationKey":"1e26a630-7203-11dc-a0d8-b8a03c50a862","hostingOrganizationTitle":"USDA-ARS Bee Biology and Systematics Laboratory","countryCoverage":[],"publishingCountry":"US","publishingOrganizationKey":"1e26a630-7203-11dc-a0d8-b8a03c50a862","publishingOrganizationTitle":"USDA-ARS Bee Biology and Systematics Laboratory","license":"http://creativecommons.org/licenses/by/4.0/legalcode","decades":[],"keywords":[],"recordCount":561820},{"key":"91c4bb90-3608-47e6-9757-361a4a7728f5","title":"BLS Lichen Database: England 1650-2016","description":"A collation of the available lichen records for sites (excluding churches and graveyards) in England from 1650 to January 2017, for purposes of conservation, future monitoring and research. Habitat and substrate information is included where available.","type":"OCCURRENCE","hostingOrganizationKey":"07f617d0-c688-11d8-bf62-b8a03c50a862","hostingOrganizationTitle":"National Biodiversity Network","countryCoverage":[],"publishingCountry":"GB","publishingOrganizationKey":"90da406e-9e67-4830-a480-befef56beedb","publishingOrganizationTitle":"British Lichen Society","license":"http://creativecommons.org/licenses/by/4.0/legalcode","decades":[1600,1700,1800,1810,1820,1830,1840,1850,1860,1870,1880,1890,1900,1910,1920,1930,1940,1950,1960,1970,1980,1990,2000,2010],"keywords":[],"recordCount":554679},{"key":"a2aab040-0680-11df-823c-b8a03c50a862","title":"National Wetland Inventory (NV)","description":"The national wetland inventory (VMI) has for 25 years made inventories of Swedish wetlands that are situated below the mountain range. Wetlands have been defined in VMI as: \"Land where water, for a large part of the year, is close to, in or above the ground, as well as vegetation-covered water areas. At least 50% of the vegetation should be hydrophilic, i.e. moisture loving, in order for it to be called a wetland area. An exception is sometimes dry-laid bottom areas of lakes, seas and streams. They count as wetlands even though they lack vegetation. \" \n\nIn total, VMI has invented 35,000 sites with a total area of 4.3 million hectares, which corresponds to 10% of Sweden's total land area. The purpose of the inventories has been to create a knowledge bank over the country's wetlands, which can be used for environmental monitoring and natural resource planning. By examining how and in what range wetlands are affected by human activities and by identifying valuable wetlands, their values can be preserved for the future. Inventory data was also planned to provide a basis for the authorities' handling of e.g. land drainage and logging.\n\nFor practical reasons inventories has only been performed at larger wetlands below the mountain ranges. In northern Sweden inventories took place at all wetlands larger than 50 ha and in all wetlands in southern Sweden wetlands larger than 10 ha. All inventoried wetlands have been analyzed with aerial photos and remote sensing and has been classified according to the status of the nature values. A total of 12% of wetlands have also been visited in order to provide further knowledge. Based on the remote sensing, all wetlands were classified into one of the 47 different wetland types. Based on the spatial extent of wetland types, we have divided Sweden into five different marsh/bog-regions: Fell bog, Palsa bog, String bog, Raised bog and Pine bog/Beach wetland bog. \n\nThe results of the VMI are regularly used by county administrative boards and municipalities and have been an important tool for national protection of wetlands. The regional inventories have been made by the various county administrative boards and the Swedish Environmental Protection Agency has acted as coordinator for the project.\n\nThe digital data contains the delimitation of the VMI areas, a central coordinate and an ID (LOID). Via ID, you can extract data from access databases with information about species inventoried. More information on the project can be found at http://www.naturvardsverket.se/Om-Naturvardsverket/Publikationer/ISBN/5900/978-91-620-5925-5/.","type":"OCCURRENCE","hostingOrganizationKey":"4c415e40-1e21-11de-9e40-a0d6ecebb8bf","hostingOrganizationTitle":"GBIF-Sweden","countryCoverage":[],"publishingCountry":"SE","publishingOrganizationKey":"4c415e40-1e21-11de-9e40-a0d6ecebb8bf","publishingOrganizationTitle":"GBIF-Sweden","license":"http://creativecommons.org/publicdomain/zero/1.0/legalcode","decades":[],"keywords":["Observation","Occurrence"],"recordCount":531075},{"key":"cca13f2c-0d2c-4c2f-93b9-4446c0cc1629","title":"BugGuide - Identification, Images, & Information For Insects, Spiders & Their Kin For the United States & Canada","description":"BugGuide (http://bugguide.net) is an online community of naturalists who enjoy learning about and sharing observations of insects, spiders, and other related creatures. BugGuide collects photographs of insects and other arthropods from the United States and Canada for identification and research and summarizes findings in guide pages for each order, family, genus, and species. By capturing the place and time that submitted images were taken, BugGuide creates a virtual insect collection.","type":"OCCURRENCE","hostingOrganizationKey":"c3ad790a-d426-4ac1-8e32-da61f81f0117","hostingOrganizationTitle":"United States Geological Survey","countryCoverage":[],"publishingCountry":"US","publishingOrganizationKey":"c3ad790a-d426-4ac1-8e32-da61f81f0117","publishingOrganizationTitle":"United States Geological Survey","license":"http://creativecommons.org/publicdomain/zero/1.0/legalcode","decades":[2000,2010],"keywords":["aquatic insects","arachnids","terrestrial insects","arthropods","Metadata","Observation","insects"],"recordCount":527723},{"key":"289f4bfc-4460-43c4-bd43-5248e32f53be","title":"RECORD Vascular Plant Data","description":"All RECORD coverage area Vascular Plant data.","type":"OCCURRENCE","hostingOrganizationKey":"07f617d0-c688-11d8-bf62-b8a03c50a862","hostingOrganizationTitle":"National Biodiversity Network","countryCoverage":[],"publishingCountry":"GB","publishingOrganizationKey":"25318ae9-d1de-456f-baa2-4515ff1f33b1","publishingOrganizationTitle":"Record","license":"http://creativecommons.org/licenses/by-nc/4.0/legalcode","decades":[1700,1800,1810,1820,1830,1840,1850,1860,1870,1880,1890,1900,1910,1920,1930,1940,1950,1960,1970,1980,1990,2000,2010],"keywords":[],"recordCount":522265},{"key":"e110bdcf-81f6-4d3b-b7e8-fe12ed94e3e3","title":"Parc_National_de_Port_Cros_2017_12_18","description":"Parc National de Port Cros","type":"OCCURRENCE","hostingOrganizationKey":"1928bdf0-f5d2-11dc-8c12-b8a03c50a862","hostingOrganizationTitle":"UMS PatriNat (AFB-CNRS-MNHN), Paris","countryCoverage":[],"publishingCountry":"FR","publishingOrganizationKey":"1928bdf0-f5d2-11dc-8c12-b8a03c50a862","publishingOrganizationTitle":"UMS PatriNat (AFB-CNRS-MNHN), Paris","license":"http://creativecommons.org/licenses/by-nc/4.0/legalcode","decades":[],"keywords":["Observation","Occurrence"],"recordCount":522195},{"key":"8138eb72-f762-11e1-a439-00145eb45e9a","title":"RBINS DaRWIN","description":"The Royal Belgian Institute of Natural Sciences houses a precious collection of zoological, anthropological, paleontological, mineralogical and geological materials and data. The renowned Iguanodons from Bernissart, ambassadors of the Belgian science institute in Brussels, represent a natural history collection currently estimated to hold over 37 million specimens. The roots of the present day collection reach far back in history. It evolved from the Natural History collection of Karel of Lotharingen, governor of The Netherlands (1712-1780) and was part of didactic materials owned by the Central School of the City of Brussels. After the independence of Belgium, the City of Brussels donated the collection to the Belgian Government and became part of the autonomous Royal Natural History Museum in 1846, known as the Royal Belgian Institute of Natural Sciences since 1948. Fieldwork by researchers and collaborators, in Belgium and abroad, donations and purchases have been expanding the assets ever since. Data presented here are coming from the darwin database, the collection management tool of the RBINS. Today, the darwin database manages information on about 350.000 specimens stored in the institute's depositories. This number rises on a daily basis thanks to the continued efforts of curators and their adjuncts that are responsible for maintaining the stored specimens and information. Our online database provides information about the collections of the Vertebrates, Invertebrates, Entomology and Paleobotany. The application will soon be expanded with paleontozoological data. The Department of Geology and the Department of Marine Ecosystems provide information on different systems. More information on these departments can be found on www.sciencesnaturelles.be/institute/structure/geology/gsb_website and www.mumm.ac.be The corner stone of the darwin database is the specimen and the information about its origin and its status. Although the status of the specimens sollow the current regulations of the International Code on Zoological Nomenclature other status specifications not treated by the ICZN regulations (eg. topotype) have been maintained as supplementary information about the specimen(s) in question. Enjoy your virtual visit through our collections!","type":"OCCURRENCE","hostingOrganizationKey":"37e82b90-1e21-11de-ab90-f72009d2669b","hostingOrganizationTitle":"Belgian Biodiversity Platform","countryCoverage":[],"publishingCountry":"BE","publishingOrganizationKey":"e88c96a3-5884-4e51-a580-e417ca4c9eed","publishingOrganizationTitle":"Royal Belgian Institute of Natural Sciences","license":"http://creativecommons.org/licenses/by-nc/4.0/legalcode","decades":[],"keywords":["Specimen","Occurrence"],"recordCount":508197},{"key":"e1e16cf0-ada2-11e2-8fbc-00145eb45e9a","title":"Neptune Deep-Sea Microfossil Occurrence Database","description":"Micropaleontologic study of deep-sea sediments cored over several decades by the DSDP, ODP and IODP drilling programs has yielded a vast body of information on the occurrences of individual fossil marine plankton species over time. This information also has been combined with other types of geochronologic information by interdisciplinary teams of scientists to construct detailed age estimates - age models - for hundreds of deep-sea drilling sections. Together, this information provides a uniquely detailed history of of biologic evolution in the oceans, as well as an important source of geochronologic information for geologic studies of ocean and climate change.    The Neptune database provides integrated access to this global data-set. It contains over 500,000 records for the occurrences of species in individual, numerically age-dated samples, age models for hundreds of deep-sea sections, and extensive, annotated, quality-controlled taxonomic lists for thousands of fossil marine plankton species. Neptune, or analyses from it, have been used in over 30 research papers (median ISI 3.5), including 8 in Science, Nature or PNAS.    Neptune was originally created by a team led by me in the early 1990s at the ETH in Zürich, and re-cast in internet form, with the addition of more data, by the Chronos project of NSF in the early 2000s. In response to the lapse of Chronos and support for Neptune, I teamed up with Patrick Diver, the main Chronos database programmer, to create a new version of Neptune (Neptune Sandbox Berlin, or NSB) that is hosted at the Museum für Naturkunde. Extensive reprogramming has streamlined the system so that it is easier to maintain, and includes support for direct programmable access over the internet for advanced research purposes. This project was supported by CEES, Oslo. NSB currently does not have a web-interface but one is planned to be added by early 2013.    NSB has already been used in published research within my own group, and to provide data on request to external scientists. Broader collaborations and renewed general public access via the web interface are planned for the future.","type":"OCCURRENCE","hostingOrganizationKey":"10980920-6dad-11da-ad13-b8a03c50a862","hostingOrganizationTitle":"Museum für Naturkunde Berlin","countryCoverage":[],"publishingCountry":"DE","publishingOrganizationKey":"10980920-6dad-11da-ad13-b8a03c50a862","publishingOrganizationTitle":"Museum für Naturkunde Berlin","license":"http://creativecommons.org/licenses/by/4.0/legalcode","decades":[],"keywords":[],"recordCount":500808},{"key":"84ab7b76-f762-11e1-a439-00145eb45e9a","title":"C.A. Triplehorn Insect Collection (OSUC), Ohio State University","type":"OCCURRENCE","hostingOrganizationKey":"5ffa575c-fcd4-4583-9611-545f67b04316","hostingOrganizationTitle":"Museum of Biological Diversity, The Ohio State University","countryCoverage":[],"publishingCountry":"US","publishingOrganizationKey":"5ffa575c-fcd4-4583-9611-545f67b04316","publishingOrganizationTitle":"Museum of Biological Diversity, The Ohio State University","license":"http://creativecommons.org/licenses/by/4.0/legalcode","decades":[],"keywords":[],"recordCount":498736},{"key":"ab47c4a9-4b6a-4d59-b846-899d9420f7d3","title":"CRBPO : STOC, Baguage","description":"Suivi temporel des oiseaux communs / Vigie Nature\nhttp://vigienature.mnhn.fr/page/suivi-temporel-des-oiseaux-communs-stoc","type":"OCCURRENCE","hostingOrganizationKey":"1928bdf0-f5d2-11dc-8c12-b8a03c50a862","hostingOrganizationTitle":"UMS PatriNat (AFB-CNRS-MNHN), Paris","countryCoverage":[],"publishingCountry":"FR","publishingOrganizationKey":"1928bdf0-f5d2-11dc-8c12-b8a03c50a862","publishingOrganizationTitle":"UMS PatriNat (AFB-CNRS-MNHN), Paris","license":"http://creativecommons.org/licenses/by-nc/4.0/legalcode","decades":[],"keywords":["Observation","Occurrence"],"recordCount":497872},{"key":"2a636fd6-dc73-49c0-9e5b-26bd05532313","title":"New Zealand fish and squid distributions from research bottom trawls 1964-2008","description":"From 1997 to 2008, a research programme to determine if fish assemblages in the New Zealand region could be classified into clearly identifiable communities based on their associations with each other and with environmental features was undertaken. This dataset is taken from the resulting fish communities database. These data have been used to show geographical and depth distributions of species from all research tows within the New Zealand EEZ since 2008.","type":"OCCURRENCE","hostingOrganizationKey":"c58ac019-b413-4613-8772-39e57acbeb8e","hostingOrganizationTitle":"The National Institute of Water and Atmospheric Research (NIWA)","countryCoverage":[],"publishingCountry":"NZ","publishingOrganizationKey":"c58ac019-b413-4613-8772-39e57acbeb8e","publishingOrganizationTitle":"The National Institute of Water and Atmospheric Research (NIWA)","license":"http://creativecommons.org/licenses/by/4.0/legalcode","decades":[1960,1970,1980,1990,2000],"keywords":["Observation","Occurrence"],"recordCount":495704},{"key":"998ff7b4-0e07-40d0-ba1f-c5f249dbcd51","title":"BLS Mapping Scheme dataset, 1750-2009","description":"Lichen distribution data at 10km square level, distinguishing records from before and since 1960.","type":"OCCURRENCE","hostingOrganizationKey":"07f617d0-c688-11d8-bf62-b8a03c50a862","hostingOrganizationTitle":"National Biodiversity Network","countryCoverage":[],"publishingCountry":"GB","publishingOrganizationKey":"90da406e-9e67-4830-a480-befef56beedb","publishingOrganizationTitle":"British Lichen Society","license":"http://creativecommons.org/licenses/by/4.0/legalcode","decades":[1600,1700,1800,1810,1820,1830,1840,1850,1860,1870,1880,1890,1900,1910,1920,1930,1940,1950,1960,1970,1980,1990,2000],"keywords":[],"recordCount":494248},{"key":"9d7fc836-8588-408a-bcc0-c22360bf4a24","title":"Precis Plant Data","description":"PRECIS (National Herbarium Pretoria (PRE) Computerised Information System) is based at the National Herbarium in Pretoria. The mission of PRECIS is to develop, maintain, and expand an electronic database system on southern African plants (the region south of the Limpopo and Kunene Rivers) to provide an efficient customer-driven information service and to produce electronic and publishable products.","type":"OCCURRENCE","hostingOrganizationKey":"c5f7ef70-e233-11d9-a4d6-b8a03c50a862","hostingOrganizationTitle":"South African National Biodiversity Institute","countryCoverage":[],"publishingCountry":"ZA","publishingOrganizationKey":"c5f7ef70-e233-11d9-a4d6-b8a03c50a862","publishingOrganizationTitle":"South African National Biodiversity Institute","license":"http://creativecommons.org/licenses/by/4.0/legalcode","decades":[],"keywords":[],"recordCount":492869},{"key":"5d26c04c-d269-4e1a-9c54-0fc678fae56a","title":"Estonian University of Life Sciences","description":"Natural History Collections in Estonian University of Life Sciences.","type":"OCCURRENCE","hostingOrganizationKey":"0870a77b-587c-4369-a8ed-bc3d347b8e1c","hostingOrganizationTitle":"PlutoF","countryCoverage":[],"publishingCountry":"EE","publishingOrganizationKey":"0870a77b-587c-4369-a8ed-bc3d347b8e1c","publishingOrganizationTitle":"PlutoF","license":"http://creativecommons.org/licenses/by-nc/4.0/legalcode","decades":[],"keywords":["Specimen","Occurrence"],"recordCount":477365},{"key":"cc2031d1-395d-4052-8ce1-796a08c3dbf2","title":"DASSH Data Archive Centre - Statutory Surveys","description":"Datasets provided to the DASSH Data Archive Centre from Statutory Agencies. Data comply with MEDIN standards (www.oceannet.org) and further assets (images, video, bathymetry) may be available.","type":"OCCURRENCE","hostingOrganizationKey":"07f617d0-c688-11d8-bf62-b8a03c50a862","hostingOrganizationTitle":"National Biodiversity Network","countryCoverage":[],"publishingCountry":"GB","publishingOrganizationKey":"f6b48504-1651-4a49-a88d-c2bc6178694d","publishingOrganizationTitle":"Marine Biological Association","license":"http://creativecommons.org/licenses/by/4.0/legalcode","decades":[2000,2010],"keywords":[],"recordCount":471666},{"key":"bbee118c-a50e-4f7f-bca1-d5bfefc5360b","title":"SER Species-based Surveys","description":"This dataset covers records supplied to SER as part of organised Species-based surveys, either for single species or taxonomic groups. In most cases the data collection has been administered by the taxon-interest group within the County.","type":"OCCURRENCE","hostingOrganizationKey":"07f617d0-c688-11d8-bf62-b8a03c50a862","hostingOrganizationTitle":"National Biodiversity Network","countryCoverage":[],"publishingCountry":"GB","publishingOrganizationKey":"3b915c8a-ffa8-4e80-b270-f13beacd66ec","publishingOrganizationTitle":"Staffordshire Ecological Record","license":"http://creativecommons.org/licenses/by-nc/4.0/legalcode","decades":[1600,1700,1800,1810,1820,1830,1840,1850,1860,1870,1880,1890,1900,1910,1920,1930,1940,1950,1960,1970,1980,1990,2000,2010],"keywords":[],"recordCount":471508},{"key":"fae37d1f-5b7a-4fe2-8cfa-8948aefbcac2","title":"Natural England Marine Monitoring surveys","description":"Various, please see individual surveys.","type":"OCCURRENCE","hostingOrganizationKey":"07f617d0-c688-11d8-bf62-b8a03c50a862","hostingOrganizationTitle":"National Biodiversity Network","countryCoverage":[],"publishingCountry":"GB","publishingOrganizationKey":"598eb93d-a844-4289-8adb-0f8583dac91e","publishingOrganizationTitle":"Natural England","license":"http://creativecommons.org/licenses/by/4.0/legalcode","decades":[1980,1990,2000,2010],"keywords":[],"recordCount":469920},{"key":"045593aa-0ac2-4ffa-8d96-9d669b27f03c","title":"Royal Dutch Angling Association (SVN) - Piscaria","description":"This dataset is a selection of the Piscaria database of the Royal Dutch Angling Association. Piscaria is used as a nationwide standard in the Netherlands for the storage and analysis of fish data.","type":"OCCURRENCE","hostingOrganizationKey":"cace8d10-2646-11d8-a2da-b8a03c50a862","hostingOrganizationTitle":"Netherlands Biodiversity Information Facility (NLBIF)","countryCoverage":[],"publishingCountry":"NL","publishingOrganizationKey":"224c2985-c87e-4330-bc0d-da0c8067fac4","publishingOrganizationTitle":"Royal Dutch Angling Association","license":"http://creativecommons.org/licenses/by/4.0/legalcode","decades":[1990,2000,2010],"keywords":["The Netherlands","Fresh water","Observation","Fish","Occurrence"],"recordCount":468533}],"facets":[]}
  recorded_at: 2019-02-26 15:14:11 GMT
  recorded_with: vcr/0.2.6, webmockr/0.3.4
