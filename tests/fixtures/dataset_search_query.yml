http_interactions:
- request:
    method: get
    uri: https://api.gbif.org/v1/dataset/search?q=amsterdam&limit=100
    body:
      encoding: ''
      string: ''
    headers:
      Accept-Encoding: gzip, deflate
      Accept: application/json, text/xml, application/xml, */*
      User-Agent: r-curl/4.3 crul/1.0.0 rOpenSci(rgbif/3.4.0.95)
      X-USER-AGENT: r-curl/4.3 crul/1.0.0 rOpenSci(rgbif/3.4.0.95)
  response:
    status:
      status_code: '200'
      message: OK
      explanation: Request fulfilled, document follows
    headers:
      status: 'HTTP/2 200 '
      vary: Origin, Access-Control-Request-Method, Access-Control-Request-Headers
      x-content-type-options: nosniff
      x-xss-protection: 1; mode=block
      pragma: no-cache
      expires: '0'
      x-frame-options: DENY
      content-type: application/json
      date: Tue, 08 Dec 2020 23:53:35 GMT
      cache-control: public, max-age=600
      x-varnish: '482836521'
      age: '0'
      via: 1.1 varnish (Varnish/6.0)
      accept-ranges: bytes
    body:
      encoding: ASCII-8BIT
      file: no
      string: {"offset":0,"limit":100,"endOfRecords":false,"count":142,"results":[{"key":"f2836770-6166-11de-84bf-b8a03c50a862","title":"Zoological Museum Amsterdam, University of Amsterdam (NL) - Protozoa","doi":"10.15468/uohx7l","description":"The Protozoa collection of the Zoological Museum Amsterdam is modest in size (ca. 100 registered samples) and modest in importance (no nominal types). Its main contents are dry Foraminifera. Approximately half of the specimens are collected in Indonesia during the Siboga Expedition in 1899-1900.","type":"OCCURRENCE","hostingOrganizationKey":"cace8d10-2646-11d8-a2da-b8a03c50a862","hostingOrganizationTitle":"Netherlands Biodiversity Information Facility (NLBIF)","publishingCountry":"NL","publishingOrganizationKey":"396d5f30-dea9-11db-8ab4-b8a03c50a862","publishingOrganizationTitle":"Naturalis Biodiversity Center","license":"http://creativecommons.org/publicdomain/zero/1.0/legalcode","recordCount":94},{"key":"c1e51d70-6166-11de-84bf-b8a03c50a862","title":"Zoological Museum Amsterdam, University of Amsterdam (NL) - Platyhelminthes","doi":"10.15468/8l5w15","description":"The flatworm (Phylum Platyhelminthes) collection of the Zoological Museum Amsterdam contains a broad spectrum of species and specimens from all over the world. However, the major focus of the collections concerns the triclad flatworms or planarians (Order Tricladida). From this group many species and specimens are available of marine, freshwater, as well as terrestrial planarians, including 385 type specimens. The beginning of these collections of planarians can be traced back to J. C. C. Loman (1856 - 1929), who described 16 new species of bipaliid land planarians. The collections were considerably expanded with the incorporation of the collection of Prof. Dr. Masaharu Kawakatsu into the collections of the Zoological Museum Amsterdam during the period 2000-2008.","type":"OCCURRENCE","hostingOrganizationKey":"cace8d10-2646-11d8-a2da-b8a03c50a862","hostingOrganizationTitle":"Netherlands Biodiversity Information Facility (NLBIF)","publishingCountry":"NL","publishingOrganizationKey":"396d5f30-dea9-11db-8ab4-b8a03c50a862","publishingOrganizationTitle":"Naturalis Biodiversity Center","license":"http://creativecommons.org/publicdomain/zero/1.0/legalcode","recordCount":7769},{"key":"b6ca95b0-c066-11dd-a312-b8a03c50a862","title":"Zoological Museum Amsterdam, University of Amsterdam (NL) - Bryozoa","doi":"10.15468/pd3lrc","description":"The Bryozoa collection of the Zoological Museum of Amsterdam consists of ca. 3000 registered samples, including 210 nominal types. The collection is not currently studied by ZMA staff, but the Indonesian samples, collected by the Siboga Expedition in 1899-1900, are a valuable asset for the international taxonomic community.","type":"OCCURRENCE","hostingOrganizationKey":"cace8d10-2646-11d8-a2da-b8a03c50a862","hostingOrganizationTitle":"Netherlands Biodiversity Information Facility (NLBIF)","publishingCountry":"NL","publishingOrganizationKey":"396d5f30-dea9-11db-8ab4-b8a03c50a862","publishingOrganizationTitle":"Naturalis Biodiversity Center","license":"http://creativecommons.org/publicdomain/zero/1.0/legalcode","recordCount":3004},{"key":"1ed365f0-6167-11de-84c0-b8a03c50a862","title":"Zoological Museum Amsterdam, University of Amsterdam (NL) - Diptera_Tipulidae_NL","doi":"10.15468/wjrtf2","description":"The ZMAN collection of Tipulidae (craneflies) from the Netherlands is one of the most important collections in its kind, containing types of many species and voucher specimens. Together with the Tipulidae collections in Bonn (Germany) and Kiev (Ukraine), the ZMAN collection is indispensible for work on the systematics, biogeography and biodiversity of this family. Material from this collection has been and will be fundamental for biodiversity studies.","type":"OCCURRENCE","hostingOrganizationKey":"cace8d10-2646-11d8-a2da-b8a03c50a862","hostingOrganizationTitle":"Netherlands Biodiversity Information Facility (NLBIF)","publishingCountry":"NL","publishingOrganizationKey":"396d5f30-dea9-11db-8ab4-b8a03c50a862","publishingOrganizationTitle":"Naturalis Biodiversity Center","license":"http://creativecommons.org/licenses/by/4.0/legalcode","recordCount":9216},{"key":"562cf940-6166-11de-84bf-b8a03c50a862","title":"Zoological Museum Amsterdam, University of Amsterdam (NL) - Lepidoptera_Nymphalidae_Palearctic","doi":"10.15468/febofa","description":"The ZMAN holdings of Palaearctic Lepidoptera belong to the regalia of the collection. The size of the Lepidoptera collection, the quality of the material, and the fact that the greater majority of material has recently been expertly identified and arranged, provide this part of the collection with a high priority for digitization. Approximately 17% of this collection has now been digitised.","type":"OCCURRENCE","hostingOrganizationKey":"cace8d10-2646-11d8-a2da-b8a03c50a862","hostingOrganizationTitle":"Netherlands Biodiversity Information Facility (NLBIF)","publishingCountry":"NL","publishingOrganizationKey":"396d5f30-dea9-11db-8ab4-b8a03c50a862","publishingOrganizationTitle":"Naturalis Biodiversity Center","license":"http://creativecommons.org/publicdomain/zero/1.0/legalcode","recordCount":57928},{"key":"b3a5b200-6167-11de-84c0-b8a03c50a862","title":"Zoological Museum Amsterdam, University of Amsterdam (NL) - Diptera_Tipulidae_Palearctic","doi":"10.15468/kiuwfu","description":"The western Palaearctic collection of Tipulidae (craneflies) in ZMAN is one of the most important collections in its kind, containing types of many species and voucher specimens from a wide range of collection sites especially from the Mediterranean area. Together with the Tipulidae collections in Bonn (Germany) and Kiev (Ukraine), the ZMAN collection is indispensible for work on the systematics, biogeography and biodiversity of this family. Material from this collection has been and will be fundamental for biodiversity studies in the Mediterranean area.","type":"OCCURRENCE","hostingOrganizationKey":"cace8d10-2646-11d8-a2da-b8a03c50a862","hostingOrganizationTitle":"Netherlands Biodiversity Information Facility (NLBIF)","publishingCountry":"NL","publishingOrganizationKey":"396d5f30-dea9-11db-8ab4-b8a03c50a862","publishingOrganizationTitle":"Naturalis Biodiversity Center","license":"http://creativecommons.org/publicdomain/zero/1.0/legalcode","recordCount":8328},{"key":"ab0b73e0-c064-11dd-a311-b8a03c50a862","title":"Zoological Museum Amsterdam, University of Amsterdam (NL) - Diptera_Types","doi":"10.15468/5lafkb","description":"Diptera: types (non-De Meijere)\n\nZMAN contains important type material of Diptera, mainly originating from the Oriental and Australasian regions. Basically the types in the Diptera collection can be divided into those of species described by J. C. H. de Meijere and those that were described by other authors. The approximately 1.200 De Meijere species with circa 4.000 type specimens have been inventoried and their data have been digitised and made publicly available. The non-De Meijere types count approximately 5200 specimens (of which 60 non-types). Types constitute the unique building blocks in taxonomy and knowledge of this material is essential for an adequate reconstruction of the Tree of Life.","type":"OCCURRENCE","hostingOrganizationKey":"cace8d10-2646-11d8-a2da-b8a03c50a862","hostingOrganizationTitle":"Netherlands Biodiversity Information Facility (NLBIF)","publishingCountry":"NL","publishingOrganizationKey":"396d5f30-dea9-11db-8ab4-b8a03c50a862","publishingOrganizationTitle":"Naturalis Biodiversity Center","license":"http://creativecommons.org/publicdomain/zero/1.0/legalcode","recordCount":5194},{"key":"0cee5d00-6166-11de-84be-b8a03c50a862","title":"Zoological Museum Amsterdam, University of Amsterdam (NL) - Invasive Insecta","doi":"10.15468/lgcsut","description":"A first selection of insect species that according to various standards can be regarded as invasive in the Netherlands have been made in the ZMAN Collection. The full dataset eventually will allow \nthe tracking of various invasions through time.","type":"OCCURRENCE","hostingOrganizationKey":"cace8d10-2646-11d8-a2da-b8a03c50a862","hostingOrganizationTitle":"Netherlands Biodiversity Information Facility (NLBIF)","publishingCountry":"NL","publishingOrganizationKey":"396d5f30-dea9-11db-8ab4-b8a03c50a862","publishingOrganizationTitle":"Naturalis Biodiversity Center","license":"http://creativecommons.org/licenses/by/4.0/legalcode","recordCount":3592},{"key":"c8c52d9c-2080-4641-b370-6d425a03454a","title":"NDFF City of Amsterdam","doi":"10.15468/cwleyn","description":"<p>The city of Amsterdam is the capital of the Netherlands and has over 850,000 inhabitants. For a metropolitan city, it has a fairly small size of only 219 square kilometres, 50 of which are water. For such a small city, Amsterdam has a lot of green spaces, nearly a quarter of its total size.</p>\n<p>Positive observations without protocol</p>\n<p>Dataset available via https://www.ndff.nl/english / serviceteamndff@natuurloket.nl</p>\n<p>14,209 records (April 2018)</p>","type":"METADATA","hostingOrganizationKey":"6fbb8fe2-66e2-4a9e-bb39-b84665571f1c","hostingOrganizationTitle":"Dutch National Database of Flora and Fauna (NDFF)","publishingCountry":"NL","publishingOrganizationKey":"6fbb8fe2-66e2-4a9e-bb39-b84665571f1c","publishingOrganizationTitle":"Dutch National Database of Flora and Fauna (NDFF)","license":"http://creativecommons.org/licenses/by-nc/4.0/legalcode","keywords":["Metadata","Observation"],"recordCount":0},{"key":"ebbe25bd-c0ce-4c14-9608-3a55fed82620","title":"City of Amsterdam (NL) - Fyke Fishing Piet Ruiter","doi":"10.15468/udtoqy","description":"Piet Ruiter is a commercial fisherman in the Harbour of Amsterdam who is conducting fish monitoring commisioned by Waternet, Amsterdam Harbor and the City of Amsterdam. This monitoring project has started in 2012 and will continue in the future.","type":"OCCURRENCE","hostingOrganizationKey":"cace8d10-2646-11d8-a2da-b8a03c50a862","hostingOrganizationTitle":"Netherlands Biodiversity Information Facility (NLBIF)","publishingCountry":"NL","publishingOrganizationKey":"7f6110d7-d156-47a4-b2e4-c67c12a481ca","publishingOrganizationTitle":"City of Amsterdam","license":"http://creativecommons.org/licenses/by/4.0/legalcode","decades":[2010],"keywords":["Occurrence","Observation"],"recordCount":8928},{"key":"0d384803-0d1b-4409-ada1-22d8009ecfa9","title":"University of Amsterdam (NL) - Páramo vegetation research, Venezuela.","doi":"10.15468/fx2vum","description":"The Institute for Biodiversity and Ecosystem Dynamics (IBED) from University of Amsterdam (UvA) has been working on the Paramos of Colombia since 1970, collecting information on different aspects of plant ecology.\n\nThe data source is the field data from professor Antoine Cleef (collected in 1978 and 1984). The study provides information on the occurrence and location of 159 plant species from the Paramo in this area, collected in 17 releves. \n\nFor the purpose of the GBIF data-publishing, vegetation releve data were converted into species occurrence data.","type":"OCCURRENCE","hostingOrganizationKey":"1f55bd0a-6ebe-49a1-8a9c-9258702b6f46","hostingOrganizationTitle":"University of Amsterdam / IBED","publishingCountry":"NL","publishingOrganizationKey":"1f55bd0a-6ebe-49a1-8a9c-9258702b6f46","publishingOrganizationTitle":"University of Amsterdam / IBED","license":"http://creativecommons.org/licenses/by/4.0/legalcode","decades":[1970,1980],"keywords":["Venezuela\nAndean Paramos\nMerida\nPáramo vegetation \nAltitude\nRéleve method\nBraun-Blanquet method\nConservation","Occurrence","Observation"],"recordCount":159},{"key":"0d32a7f0-039c-4c8f-bea9-d7e55fd8e02b","title":"University of Amsterdam (NL) - Páramo vegetation research, Ecuador.","doi":"10.15468/6k0uzi","description":"The Institute for Biodiversity and Ecosystem Dynamics (IBED) from University of Amsterdam (UvA) has been working on Paramos ecosystems since 1970, collecting information on different aspects of plant ecology. \n\nThe dataset from the Ecuador paramo's is generated from two studies\n1. A study on Andean Paramo's ecology by H. Sturm and O. Rangel done in 1985. \n2. A phytosociological study of the paramo in the Carchi province by M. Moscol-Olivera and A. M. Cleef in 2009.\n\nBoth studies All studies provide information on the occurrence and location of 1867 plant species from the Paramo in this area sampled in 101 releves.  \n\nFor the purpose of the GBIF data-publishing, vegetation releve data were converted into species occurrence data.","type":"OCCURRENCE","hostingOrganizationKey":"1f55bd0a-6ebe-49a1-8a9c-9258702b6f46","hostingOrganizationTitle":"University of Amsterdam / IBED","publishingCountry":"NL","publishingOrganizationKey":"1f55bd0a-6ebe-49a1-8a9c-9258702b6f46","publishingOrganizationTitle":"University of Amsterdam / IBED","license":"http://creativecommons.org/licenses/by/4.0/legalcode","decades":[1980,1990,2000],"keywords":["Paramo\nSouth America\nEcuador\nPáramo vegetation \nAltitude\nAltitudinal zonation\nRéleve method\nBraun-Blanquet method\nConservation\nDiversity","Occurrence","Observation"],"recordCount":1808},{"key":"1edaeec2-9fdf-48d2-a459-2bb8635e9aba","title":"University of Amsterdam (NL) - Páramo pollen reference collection","doi":"10.15468/aa9jxr","description":"Pollen samples from Páramo plants collected by A.M. Cleef and from various herbaria. The collection is used as a reference collection for palynological research.","type":"OCCURRENCE","hostingOrganizationKey":"1f55bd0a-6ebe-49a1-8a9c-9258702b6f46","hostingOrganizationTitle":"University of Amsterdam / IBED","publishingCountry":"NL","publishingOrganizationKey":"1f55bd0a-6ebe-49a1-8a9c-9258702b6f46","publishingOrganizationTitle":"University of Amsterdam / IBED","license":"http://creativecommons.org/licenses/by/4.0/legalcode","decades":[1900,1910,1920,1930,1940,1950,1960,1970,1980,1990,2000,2010],"keywords":["South America","Colombia","Andes","Palynology","Páramo","Northern Andes","Pollen","Ecology","Paramo","Spores","Latin America","Occurrence","Specimen"],"recordCount":1706},{"key":"b5fcea14-86cc-4b97-a0d1-eb604d56ad84","title":"University of Amsterdam (NL) - Páramo Vegetation Research, Bordoncillo - Nariño, Colombia","doi":"10.15468/p8k2lm","description":"The Institute for Biodiversity and Ecosystem Dynamics (IBED) from University of Amsterdam (UvA) has been working on the Paramos of Colombia since 1970, collecting information on different aspects of plant ecology.\n\nThe Bordoncillo dataset is generated from a part of a study from Orlando Rangel, done in 1987 about the paramo vegetation of the volcanos of the Nariño province. The vegetation in Bordoncillo groups shrubs with plant rosettes (frailejonal) of the Ugno myricoides-Espeletetium hartwegianae association.\n\nThis is a small data set which provides information on the occurrence and location of 51 plant species from the Paramo in this area. \n\nFor the purpose of the GBIF data-publishing, vegetation releve data were converted into species occurrence data.","type":"OCCURRENCE","hostingOrganizationKey":"1f55bd0a-6ebe-49a1-8a9c-9258702b6f46","hostingOrganizationTitle":"University of Amsterdam / IBED","publishingCountry":"NL","publishingOrganizationKey":"1f55bd0a-6ebe-49a1-8a9c-9258702b6f46","publishingOrganizationTitle":"University of Amsterdam / IBED","license":"http://creativecommons.org/licenses/by/4.0/legalcode","decades":[1980],"keywords":["Colombia\nAndean Paramos\nBordoncillo Paramo\nVolcanos\nPáramo vegetation \nAltitude\nRéleve method\nBraun-Blanquet method\nConservation\nVegation alliances","Occurrence","Observation"],"recordCount":51},{"key":"39b07c5d-caa9-4118-b803-290d667cdd5e","title":"University of Amsterdam (NL) - Páramo vegetation research, Western Andean Cordillera","doi":"10.15468/i33313","description":"The Institute for Biodiversity and Ecosystem Dynamics (IBED) from University of Amsterdam (UvA) has been working on the Paramos of Colombia since 1970, collecting information on different aspects of plant ecology.\n\nThe Western Cordillera dataset is generated from 5 sources: \n1. A study about the paramo vegetation in the Nariño volcanoes, Orlando Rangel-Ch and Clara Ariza published in 2000.\n2. A study by Helmut Sturm and Orlando Rangel in 1985 about the ecology of andean paramos, in the volcanoes of Cumbal and Chiles.\n3 and 4. The field data from professor Antoine Cleef (1984) with Sonia Salamanca under the ECOANDES project (Tatama transect), collected in the upper part of Tatama massif. Also data collected (in 1983) under the same project by T. van der Hammen, O. Rangel and A. Cleef and published in a study of the paramo vegetation of the Tatama massif in 2005.\n5. A study about sinecology, diversity and conservation of Andean vegetation in Argelia, Cauca published in 1995 by M.L. Becking.\n\nAll studies provide information on the occurrence and location of 2983 plant species from the Paramo in this area collected in 139 releves. \n\nFor the purpose of the GBIF data-publishing, vegetation releve data were converted into species occurrence data.","type":"OCCURRENCE","hostingOrganizationKey":"1f55bd0a-6ebe-49a1-8a9c-9258702b6f46","hostingOrganizationTitle":"University of Amsterdam / IBED","publishingCountry":"NL","publishingOrganizationKey":"1f55bd0a-6ebe-49a1-8a9c-9258702b6f46","publishingOrganizationTitle":"University of Amsterdam / IBED","license":"http://creativecommons.org/licenses/by/4.0/legalcode","decades":[1970,1980,1990],"keywords":["Colombia\nAndean Paramos\nTatama\nFrontino\nGaleras","Cumbal volcanos\nPáramo vegetation \nAltitude\nRéleve method\nBraun-Blanquet method\nConservation\nDiversity","Chiles","Occurrence","Observation"],"recordCount":2983},{"key":"4a837446-cdcd-411b-8d51-5b8184890bcc","title":"University of Amsterdam (NL) - Páramo vegetation research, Talamanca Cordillera, Costa Rica","doi":"10.15468/efzboa","description":"Research was led by Dr. Antoine M. Cleef from University of Amsterdam and Dr. Adelaida Chaverri Polini from National University of Costa Rica. The authors studied the phytosociology and phytogeography at the National Park Chirripó, located in the Talamanca mountain range. The project aimed to know the páramo communities of Central America, as the first approach to protect this ecosystem in Costa Rica. \n\nThe study provide information on the occurrence and location of 724 plant species from the Paramo in this area collected in 45 releves. \n\nFor the purpose of the GBIF data-publishing, vegetation releve data were converted into species occurrence data.","type":"OCCURRENCE","hostingOrganizationKey":"1f55bd0a-6ebe-49a1-8a9c-9258702b6f46","hostingOrganizationTitle":"University of Amsterdam / IBED","publishingCountry":"NL","publishingOrganizationKey":"1f55bd0a-6ebe-49a1-8a9c-9258702b6f46","publishingOrganizationTitle":"University of Amsterdam / IBED","license":"http://creativecommons.org/licenses/by/4.0/legalcode","decades":[1980],"keywords":["Paramo\nCentral America\nCosta Rica\nTalamanca Cordillera \nChirripo National Park\nPáramo vegetation \nAltitude\nAltitudinal zonation\nRéleve method\nBraun-Blanquet method\nConservation\nDiversity","Occurrence","Observation"],"recordCount":724},{"key":"f5d17a6d-5b53-4bac-b952-d6503839aed7","title":"University of Amsterdam (NL) - Páramo Vegetation Research, Paramo \"El Almorzadero\", Colombia","doi":"10.15468/0uv5bv","description":"The Institute for Biodiversity and Ecosystem Dynamics (IBED) from University of Amsterdam (UvA) has been working on the Paramos of Colombia since 1970, collecting information on different aspects of plant ecology.\n\nThe data source is the field data from professor Antoine Cleef (collected in one field campaign in 1978) as part of his PhD thesis, finished in 1981. The study provides information on the occurrence and location of 314 plant species from the Paramo in this area. \n\nFor the purpose of the GBIF data-publishing, vegetation releve data were converted into species occurrence data.","type":"OCCURRENCE","hostingOrganizationKey":"1f55bd0a-6ebe-49a1-8a9c-9258702b6f46","hostingOrganizationTitle":"University of Amsterdam / IBED","publishingCountry":"NL","publishingOrganizationKey":"1f55bd0a-6ebe-49a1-8a9c-9258702b6f46","publishingOrganizationTitle":"University of Amsterdam / IBED","license":"http://creativecommons.org/licenses/by/4.0/legalcode","decades":[1970],"keywords":["Colombia\nAndean Paramos\nEastern cordillera\n\"El Almorzadero\" paramo complex\nPáramo vegetation \nAltitude\nRéleve method\nBraun-Blanquet method\nConservation","Occurrence","Observation"],"recordCount":314},{"key":"c8db36cf-6b3e-403f-b609-dc0b6ef0cc05","title":"University of Amsterdam (NL) - Páramo vegetation research, Central Andean Cordillera - Colombia","doi":"10.15468/io5yys","description":"The Institute for Biodiversity and Ecosystem Dynamics (IBED) from University of Amsterdam (UvA) has been working on the Paramos of Colombia since 1970, collecting information on different aspects of plant ecology in the paramo.\n\nThe Central Cordillera area include the National Natural Park Los Nevados, National Natural Park Purace and Nevado del Huila. This dataset is generated from 5 sources: \n1. A study by Helmut Sturm and Orlando Rangel in 1985 about the ecology of Andean paramos, in the National Natural Park Los Nevados and in the Nevado del Huila (Huila volcano).\n2. A study of monitoring and modelling of diverse and dynamic ecosystems in the paramos of los Nevados National Park by Bob Pels in 1990.\n3. A Ph.D. study about the vegetation of the paramo and its dynamics in the volcanic massif Ruiz-Tolima, done by Sonia Salamanca in 1991, this project was part of a bigger project called ECOANDES which cover different aspects of the ecology of the central cordillera in Colombia.\n4.A study on the phytosociology of plant communities of the National Natural Park Purace, done by Andres Duque in 1988.\nAll studies provided information on the occurrence and location of 6947 plant species from the Paramo in this area collected in 332 releves. \n\nFor the purpose of the GBIF data-publishing, vegetation releve data were converted into species occurrence data.","type":"OCCURRENCE","hostingOrganizationKey":"1f55bd0a-6ebe-49a1-8a9c-9258702b6f46","hostingOrganizationTitle":"University of Amsterdam / IBED","publishingCountry":"NL","publishingOrganizationKey":"1f55bd0a-6ebe-49a1-8a9c-9258702b6f46","publishingOrganizationTitle":"University of Amsterdam / IBED","license":"http://creativecommons.org/licenses/by/4.0/legalcode","decades":[1970,1980],"keywords":["Colombia\nAndean Paramos\nNational Natural Park Los Nevados\nNatiioanl Natural Park Nevado del Huila\nNational Natural Park Purace\nPáramo vegetation \nAltitude\nAltitudinal zonation\nRéleve method\nBraun-Blanquet method\nConservation\nDiversity\nZonal and azonal vegetation","Occurrence","Observation"],"recordCount":6947},{"key":"84881ef8-a565-4124-9102-253954c419f4","title":"University of Amsterdam (NL) - Páramo Vegetation Research, Paramos \"Guantiva -La Rusia\", Colombia","doi":"10.15468/gvuekw","description":"The Institute for Biodiversity and Ecosystem Dynamics (IBED) from University of Amsterdam (UvA) has been working on the Paramos of Colombia since 1970, collecting information on different aspects of plant ecology.\n\nThe dataset  Paramos  \"Guantiva -La Rusia\" is generated from the field data from professor Antoine Cleef (collected in one field campaign in 1973), as part of his PhD thesis (finished in 1981). The study provides information on the occurrence and location of 75 plant species from the Paramo in this area. \n\nFor the purpose of the GBIF data-publishing, vegetation releve data were converted into species occurrence data.","type":"OCCURRENCE","hostingOrganizationKey":"1f55bd0a-6ebe-49a1-8a9c-9258702b6f46","hostingOrganizationTitle":"University of Amsterdam / IBED","publishingCountry":"NL","publishingOrganizationKey":"1f55bd0a-6ebe-49a1-8a9c-9258702b6f46","publishingOrganizationTitle":"University of Amsterdam / IBED","license":"http://creativecommons.org/licenses/by/4.0/legalcode","decades":[1970],"keywords":["Colombia\nAndean Paramos\nParamo complex Guantiva - La Rusia\nPáramo vegetation \nAltitude\nRéleve method\nBraun-Blanquet method\nConservation","Occurrence","Observation"],"recordCount":75},{"key":"aa53b19b-ee49-4ff6-963d-2d9499808b72","title":"University of Amsterdam (NL) - Páramo vegetation research, Santa Marta and Perijá, Colombia","doi":"10.15468/xd4lzx","description":"The Institute for Biodiversity and Ecosystem Dynamics (IBED) from University of Amsterdam (UvA) has been working on the Paramos of Colombia since 1970, collecting information on different aspects of plant ecology.\n\nThe Santa Marta and Perijá paramo complex dataset is generated from five sources. \n1. A study on the vegetation of tropical ecosystems, in the Sierra Nevada de Santa Marta, particularly in the sector Buritaca - La Cumbre, by A. Cleef and O. Rangel in 1984 (in van der Hammen and Ruiz, 1984). \n2. A study on Andean Paramo's ecology by H. Sturm and O. Rangel done in 1985.\n3. Field data from professor Antoine Cleef derived from the ECOANDES project) in 1984\n4. A study about the paramo vegetation in the north of Colombia (Sierra nevada de Santa Marta and Serrania Perija) by J.H. Pinto-Zarate and O. Rangel-Ch in 2010.\n5. A study about the high mountain vegetation of Perija, done by O. Rangel-Ch and H. Arrellano-P in 2007.\nAll studies provide information on the occurrence and location of 1506 plant species from the Paramo in this area sampled in 91 releves.  \n\nFor the purpose of the GBIF data-publishing, vegetation releve data were converted into species occurrence data.","type":"OCCURRENCE","hostingOrganizationKey":"1f55bd0a-6ebe-49a1-8a9c-9258702b6f46","hostingOrganizationTitle":"University of Amsterdam / IBED","publishingCountry":"NL","publishingOrganizationKey":"1f55bd0a-6ebe-49a1-8a9c-9258702b6f46","publishingOrganizationTitle":"University of Amsterdam / IBED","license":"http://creativecommons.org/licenses/by/4.0/legalcode","decades":[1970,1980,1990,2000],"keywords":["Colombia\nAndean Paramos\nSierra Nevada de Santa Marta\nSerrania Perijá (massif)\nPáramo vegetation \nAltitude\nAltitudinal zonation\nRéleve method\nBraun-Blanquet method\nConservation\nDiversity","Occurrence","Observation"],"recordCount":1506},{"key":"0b328835-ea95-4ec3-a0f4-dd2dba993f1f","title":"University of Amsterdam (NL) - Páramo Vegetation Research, National Natural Park El Cocuy, Colombia","doi":"10.15468/ewje4c","description":"The Institute for Biodiversity and Ecosystem Dynamics (IBED) from University of Amsterdam (UvA) has been working on the Paramos of Colombia since 1970, collecting information on different aspects of plant ecology.\n\nThe Sierra Nevada del Cocuy data set is generated from two sources, one is the field data from professor Antoine Cleef (collected in different field campaigns between 1972 and 2012, derived from his PhD thesis (1981), the ECOANDES project and independent field trips) and the second is a study on paramo ecology by Helmut Sturm and Orlando Rangel in 1985. Both studies provide information on the occurrence and location of 2147 plant species from the Paramo in this area. \n\nFor the purpose of the GBIF data-publishing, vegetation releve data were converted into species occurrence data.","type":"OCCURRENCE","hostingOrganizationKey":"1f55bd0a-6ebe-49a1-8a9c-9258702b6f46","hostingOrganizationTitle":"University of Amsterdam / IBED","publishingCountry":"NL","publishingOrganizationKey":"1f55bd0a-6ebe-49a1-8a9c-9258702b6f46","publishingOrganizationTitle":"University of Amsterdam / IBED","license":"http://creativecommons.org/licenses/by/4.0/legalcode","decades":[1970,1980,1990,2000,2010],"keywords":["Colombia\nAndean Paramos\nNational Natural Park El Cocuy\nPáramo vegetation \nAltitude\nRéleve method\nBraun-Blanquet method\nConservation","Occurrence","Observation"],"recordCount":2147},{"key":"e567684d-9998-4604-9790-b0ac00e090c1","title":"University of Amsterdam (NL) - Páramo Vegetation Research, Sumapaz-Bocagrande-Chisaca paramo complex, Colombia","doi":"10.15468/lqmsih","description":"The Institute for Biodiversity and Ecosystem Dynamics (IBED) from University of Amsterdam (UvA) has been working on the Paramos of Colombia since 1970, in collaboration with Colombian researches and collecting information on different aspects of plant ecology.\nThe Sumapaz dataset is generated from five studies. One done by Helmut Sturm and Orlando Rangel in 1985 about the ecology of andean paramos. The second source is the field data from professor Antoine Cleef (collected in different field campaigns between in 1977, 1981 and 1984) some of those were part of his PhD thesis (1981). Also data was provided by the  ECOANDES project (vol. 7) which was dedicated only to the Sumapaz area. Another study from Sanchez and Rangel in 1990 provides vegetation information of paramo complexes located close by Bogota. Finally another study by Ernst and Seljee from 1988 provides information about the vegetation of the Bocagrande Paramo. \nThis is a dataset providing information on the occurrence and location of 4494 plant species from the Paramo in this area, collected in 212 releves. \nFor the purpose of the GBIF data-publishing, vegetation releve data were converted into species occurrence data.","type":"OCCURRENCE","hostingOrganizationKey":"1f55bd0a-6ebe-49a1-8a9c-9258702b6f46","hostingOrganizationTitle":"University of Amsterdam / IBED","publishingCountry":"NL","publishingOrganizationKey":"1f55bd0a-6ebe-49a1-8a9c-9258702b6f46","publishingOrganizationTitle":"University of Amsterdam / IBED","license":"http://creativecommons.org/licenses/by/4.0/legalcode","decades":[1970,1980],"keywords":["Colombia\nAndean Paramos\nNational Natural Park Sumapaz\nPáramo vegetation \nAltitude\nRéleve method\nBraun-Blanquet method\nDiversity\nConservation","Occurrence","Observation"],"recordCount":4494},{"key":"5e50896f-8bbd-43e7-9ba5-ef7ed7b3e865","title":"University of Amsterdam (NL) - Páramo Vegetation Research, Chingaza - Cruz Verde - Monserrate -Guasca, Colombia","doi":"10.15468/vvocl6","description":"The Institute for Biodiversity and Ecosystem Dynamics (IBED) from University of Amsterdam (UvA) has been working on the Paramos of Colombia since 1970, collecting information on different aspects of plant ecology.\n\nChingaza, Cruz Verde, Monserrate and Guasca dataset is generated from six sources. \n1. A study about the vegetation of the Natural National Park Chingaza by Rangel-Ch y Ariza published in 2000.\n2. A vegetation mapping study done also in the Natural National Park Chingaza by Dierrikx and Kaandorp done in 1986.\n3. A study on Andean Paramo's ecology by H. Sturm and O. Rangel done in 1985.\n4. A study on the phytosociological analysis of paramo vegetation by R. Sanchez and O. Rangel in 1990.\n5. A study of limit vegetation ecology done by M.L. Becking and J.J. Smeets in 1989 part of the ECOANDES project.\n6. A study on the description of paramo vegetation communities by O. Vargas and D. Rivera in 1991.\n\nAll studies provide information on the occurrence and location of 13949 plant species from the Paramo in this area collected in 631 releves. \n\nFor the purpose of the GBIF data-publishing, vegetation releve data were converted into species occurrence data.","type":"OCCURRENCE","hostingOrganizationKey":"1f55bd0a-6ebe-49a1-8a9c-9258702b6f46","hostingOrganizationTitle":"University of Amsterdam / IBED","publishingCountry":"NL","publishingOrganizationKey":"1f55bd0a-6ebe-49a1-8a9c-9258702b6f46","publishingOrganizationTitle":"University of Amsterdam / IBED","license":"http://creativecommons.org/licenses/by/4.0/legalcode","decades":[1970,1980],"keywords":["Colombia\nAndean Paramos\nPáramo vegetation\nNational Natural Park Chingaza\nCruz verde paramo \nMonserrate paramo\nGuasca paramo\nAltitude\nRéleve method\nBraun-Blanquet method\nConservation","Occurrence","Observation"],"recordCount":13949},{"key":"50361be0-d9cd-11de-b793-b8a03c50a862","title":"University of Amsterdam (NL) – Benthos monitoring of the North Sea research database","doi":"10.15468/smncop","description":"Benthos monitoring data from the North Sea between 1990 and 2002. The database was compiled from different sources, mainly under the “Biodiversity and Global Change” (BIGC) programme of the “Netherlands Organisation for Scientific Research” (NWO).","type":"OCCURRENCE","hostingOrganizationKey":"1f55bd0a-6ebe-49a1-8a9c-9258702b6f46","hostingOrganizationTitle":"University of Amsterdam / IBED","publishingCountry":"NL","publishingOrganizationKey":"1f55bd0a-6ebe-49a1-8a9c-9258702b6f46","publishingOrganizationTitle":"University of Amsterdam / IBED","license":"http://creativecommons.org/publicdomain/zero/1.0/legalcode","keywords":["Occurrence","Observation","Chaetognatha","benthos","Chordata","Phoronida","Echinodermata","Cephalorhyncha","North Sea","Echiura","Annelida","Sipuncula","Arthropoda","Cnidaria","observations","Mollusca"],"recordCount":29691},{"key":"3953ab4f-958f-4943-8608-ca5da345447c","title":"University of Amsterdam (NL) - Páramo Vegetation Research, paramo in the Sabana de Bogota area, Colombia","doi":"10.15468/6ccpt4","description":"The Institute for Biodiversity and Ecosystem Dynamics (IBED) from University of Amsterdam (UvA) has been working on the Paramos of Colombia since 1970, collecting information on different aspects of plant ecology.\n\nThe data source is the field data from professor Antoine Cleef (collected in one field campaign in 1978) as part of his PhD thesis, finished in 1981. The study provides information on the occurrence and location of 90 plant species from the Paramo in this area. \n\nFor the purpose of the GBIF data-publishing, vegetation releve data were converted into species occurrence data.","type":"OCCURRENCE","hostingOrganizationKey":"1f55bd0a-6ebe-49a1-8a9c-9258702b6f46","hostingOrganizationTitle":"University of Amsterdam / IBED","publishingCountry":"NL","publishingOrganizationKey":"1f55bd0a-6ebe-49a1-8a9c-9258702b6f46","publishingOrganizationTitle":"University of Amsterdam / IBED","license":"http://creativecommons.org/licenses/by/4.0/legalcode","decades":[1980],"keywords":["Colombia\nAndean Paramos\nEastern cordillera\nSabana de Bogotá\nPáramo vegetation \nAltitude\nRéleve method\nBraun-Blanquet method\nConservation","Occurrence","Observation"],"recordCount":90},{"key":"6fe8dde0-7ef1-41c0-ba0f-ecf41ac2d342","title":"University of Amsterdam (NL) - Páramo Vegetation Research, Rabanal, Guerrero and Villa de Leyva paramo complex, Colombia","doi":"10.15468/a3d8oq","description":"The Institute for Biodiversity and Ecosystem Dynamics (IBED) from University of Amsterdam (UvA) has been working on the Paramos of Colombia since 1970, collecting information on different aspects of plant ecology.\n\nThe Rabanal, Guerrero and Villa de Leyva paramo complex data set is generated from six sources. \n1. Field data from professor Antoine Cleef (derived from his PhD thesis on paramo vegetation in the eastern cordillera (1981), the ECOANDES project and independent field trips), the data wascollected in four field campaigns in 1977, 1983, 1984 and 1989. \n2.A study on Andean Paramo's ecology by H. Sturm and O. Rangel done in 1985.\n3.A study on the phytosociological analysis of paramo vegetation by R. Sanchez and O. Rangel in 1990.\n4. A study about the influence of potato cultivation in the paramo vegetatation by W. Ferwerda in 1987. \n5. A study of limit vegetation ecology done by M.L. Becking and J.j. Smeets in 1989 part of the ECOANDES project.\n6. A study on the description of paramo vegetation by R. Bekker and A. Cleef in 1985.\n\nAll studies provide information on the occurrence and location of 7868 plant species from the Paramo in this area.  \n\nFor the purpose of the GBIF data-publishing, vegetation releve data were converted into species occurrence data.","type":"OCCURRENCE","hostingOrganizationKey":"1f55bd0a-6ebe-49a1-8a9c-9258702b6f46","hostingOrganizationTitle":"University of Amsterdam / IBED","publishingCountry":"NL","publishingOrganizationKey":"1f55bd0a-6ebe-49a1-8a9c-9258702b6f46","publishingOrganizationTitle":"University of Amsterdam / IBED","license":"http://creativecommons.org/licenses/by/4.0/legalcode","decades":[1970,1980],"keywords":["Colombia\nAndean Paramos\nPáramo vegetation \nRabanal paramo\nGuerrero paramo complex\nAltitude\nRéleve method\nBraun-Blanquet method\nConservation","Occurrence","Observation"],"recordCount":7868},{"key":"a1666642-5202-4dcf-886f-25000798838e","title":"New records of West Palaearctic Limoniidae, Pediciidae and Cylindrotomidae (Diptera) from the collections of the Zoological Museum, Amsterdam","doi":"10.5281/zenodo.184739","description":"This dataset contains the digitized treatments in Plazi based on the original journal article Ÿ, Jaroslav Star, Oosterbroek, Pjotr (2008): New records of West Palaearctic Limoniidae, Pediciidae and Cylindrotomidae (Diptera) from the collections of the Zoological Museum, Amsterdam. Zootaxa 1922: 1-20, DOI: 10.5281/zenodo.184739","type":"CHECKLIST","hostingOrganizationKey":"7ce8aef0-9e92-11dc-8738-b8a03c50a862","hostingOrganizationTitle":"Plazi.org taxonomic treatments database","publishingCountry":"CH","publishingOrganizationKey":"7ce8aef0-9e92-11dc-8738-b8a03c50a862","publishingOrganizationTitle":"Plazi.org taxonomic treatments database","license":"http://creativecommons.org/publicdomain/zero/1.0/legalcode","recordCount":115},{"key":"24d2faef-3835-413e-a306-b1d39b801fd3","title":"Sagina hookeri Timaná, sp. nov. (Caryophyllaceae), a new endemic species for the flora of Île Amsterdam (French Southern and Antarctic Lands)","doi":"10.5252/adansonia2019v41a2","description":"This dataset contains the digitized treatments in Plazi based on the original journal article Timaná, M. E., Lebouvier, M., Rouhan, G. (2019): Sagina hookeri Timaná, sp. nov. (Caryophyllaceae), a new endemic species for the flora of Île Amsterdam (French Southern and Antarctic Lands). Adansonia 41 (2): 17-23, DOI: 10.5252/adansonia2019v41a2","type":"CHECKLIST","hostingOrganizationKey":"7ce8aef0-9e92-11dc-8738-b8a03c50a862","hostingOrganizationTitle":"Plazi.org taxonomic treatments database","publishingCountry":"CH","publishingOrganizationKey":"7ce8aef0-9e92-11dc-8738-b8a03c50a862","publishingOrganizationTitle":"Plazi.org taxonomic treatments database","license":"http://creativecommons.org/publicdomain/zero/1.0/legalcode","recordCount":7},{"key":"d65d51d3-dda3-4bad-9d80-8fcb46a782f7","title":"The genus Luticola (Bacillariophyta) on Ile Amsterdam and Ile Saint-Paul (Southern Indian Ocean) with the description of two new species","doi":"10.5852/ejt.2017.387","description":"This dataset contains the digitized treatments in Plazi based on the original journal article Chattová, Barbora, Lebouvier, Marc, Haan, Myriam De, Vijver, Bart Van De (2017): The genus Luticola (Bacillariophyta) on Ile Amsterdam and Ile Saint-Paul (Southern Indian Ocean) with the description of two new species. European Journal of Taxonomy 387: 1-17, DOI: https://doi.org/10.5852/ejt.2017.387","type":"CHECKLIST","hostingOrganizationKey":"7ce8aef0-9e92-11dc-8738-b8a03c50a862","hostingOrganizationTitle":"Plazi.org taxonomic treatments database","publishingCountry":"CH","publishingOrganizationKey":"7ce8aef0-9e92-11dc-8738-b8a03c50a862","publishingOrganizationTitle":"Plazi.org taxonomic treatments database","license":"http://creativecommons.org/publicdomain/zero/1.0/legalcode","recordCount":10},{"key":"8d5234fa-d3ed-4ae9-a16d-b34eab35a909","title":"A new parasitoid wasp, Aphaereta vondelparkensis sp. n. (Braconidae, Alysiinae), from a city park in the centre of Amsterdam","doi":"10.3897/bdj.8.e49017","type":"CHECKLIST","hostingOrganizationKey":"750a8724-fa66-4c27-b645-bd58ac5ee010","hostingOrganizationTitle":"Biodiversity Data Journal","publishingCountry":"BG","publishingOrganizationKey":"750a8724-fa66-4c27-b645-bd58ac5ee010","publishingOrganizationTitle":"Biodiversity Data Journal","license":"http://creativecommons.org/licenses/by/4.0/legalcode","recordCount":7},{"key":"d962a7dc-2183-4824-bb88-5e0ba14ec62d","title":"Naturalis Biodiversity Center (NL) - Mollusca","doi":"10.15468/yefvnk","description":"Database contains specimen records from the Mollusca collection of the Naturalis Biodiversity Center (Leiden, Netherlands). The zoological specimens come from the National Museum of Natural History (RMNH; Rijksmuseum voor Natuurlijke Historie), later National Museum of Natural History, Naturalis in Leiden and the Zoological Museum Amsterdam (ZMA) and new acquisitions. This database replaces the dataset &#34;Zoological Museum Amsterdam, University of Amsterdam (NL) – Mollusca_Conidae&#34;, &#34;Zoological Museum Amsterdam, University of Amsterdam (NL) – Mollusca_Netherlands&#34;, and &#34;Zoological Museum Amsterdam, University of Amsterdam (NL) – Mollusca_Pectinoidea&#34; which were hosted earlier on the GBIF dataportal and contains many new and updated records, especially from the RMNH collection. This dataset is an abstract of the Naturalis production database (BRD) of 2012-12-12. The datasets Zoological Museum Amsterdam, University of Amsterdam (NL) – Mollusca_Types, and Naturalis National Natural History Museum (NL) – Mollusca fossils, are still separately hosted at GBIF, and are not included in this dataset. The old registration numbers of the former institutions (RMNH, ZMA) are also mentioned in the dataset. The Naturalis BC collection contains over 42.000 species of Recent Mollusca. Locality data have only been added in part to this molluscan dataset. Many identifications are original and can be as old as over a century. Many species level names were recently (2011-2012) updated with the help of literature and web based taxonomic databases containing synonymies.","type":"OCCURRENCE","hostingOrganizationKey":"396d5f30-dea9-11db-8ab4-b8a03c50a862","hostingOrganizationTitle":"Naturalis Biodiversity Center","publishingCountry":"NL","publishingOrganizationKey":"396d5f30-dea9-11db-8ab4-b8a03c50a862","publishingOrganizationTitle":"Naturalis Biodiversity Center","license":"http://creativecommons.org/publicdomain/zero/1.0/legalcode","keywords":["Occurrence","Specimen"],"recordCount":729213},{"key":"fccafd83-a934-4021-a112-4ae5fd39c14b","title":"Naturalis Biodiversity Center (NL) - Amphibia and Reptilia","doi":"10.15468/ythnjq","description":"Database contains specimen records from the Amphibia and Reptilia collection of the Naturalis\n                Biodiversity Center (Leiden, Netherlands). These zoological specimens come from the National Museum of\n                Natural History (RMNH; Rijksmuseum voor Natuurlijke Historie), later National Museum of Natural History,\n                Naturalis in Leiden The Amphibia and Reptilia collection of the former Zoological Museum Amsterdam (ZMA)\n                is now also housed in Naturalis Biodiversity Center and the dataset was hosted earlier on the GBIF\n                dataportal as &#34;Zoological Museum Amsterdam, University of Amsterdam (NL) – Herpetology&#34;","type":"OCCURRENCE","hostingOrganizationKey":"396d5f30-dea9-11db-8ab4-b8a03c50a862","hostingOrganizationTitle":"Naturalis Biodiversity Center","publishingCountry":"NL","publishingOrganizationKey":"396d5f30-dea9-11db-8ab4-b8a03c50a862","publishingOrganizationTitle":"Naturalis Biodiversity Center","license":"http://creativecommons.org/publicdomain/zero/1.0/legalcode","keywords":["Occurrence","Specimen"],"recordCount":49323},{"key":"19828488-7ebf-43f8-88af-6461d8afef9e","title":"Naturalis Biodiversity Center (NL) - Pisces","doi":"10.15468/evijly","description":"Database contains specimen records from the Pisces collection of the Naturalis Biodiversity Center (Leiden, Netherlands). These specimens originate from the collections of the National Museum of Natural History (RMNH; Rijksmuseum voor Natuurlijke Historie), later National Museum of Natural History, Naturalis in Leiden and of the former Zoological Museum Amsterdam (ZMA). The earlier published dataset at GBIF: &#34;Zoological Museum Amsterdam, University of Amsterdam (NL) - Pisces_Types&#34;, doi.org/10.15468/ygch9c, with 1851 occurrences has been merged with this new dataset. On request more information can be provided.","type":"OCCURRENCE","hostingOrganizationKey":"396d5f30-dea9-11db-8ab4-b8a03c50a862","hostingOrganizationTitle":"Naturalis Biodiversity Center","publishingCountry":"NL","publishingOrganizationKey":"396d5f30-dea9-11db-8ab4-b8a03c50a862","publishingOrganizationTitle":"Naturalis Biodiversity Center","license":"http://creativecommons.org/publicdomain/zero/1.0/legalcode","keywords":["Occurrence","Specimen"],"recordCount":70774},{"key":"4c7c21a8-68d3-49c5-b090-6b26259a291b","title":"Naturalis Biodiversity Center (NL) - Cnidaria","doi":"10.15468/v6p9ba","description":"Database contains specimen records from the Cnidaria collection of the Naturalis Biodiversity Center (Leiden, Netherlands). These specimens originate from the collections of the National Museum of Natural History (RMNH; Rijksmuseum voor Natuurlijke Historie), later National Museum of Natural History, Naturalis in Leiden and of the former Zoological Museum Amsterdam (ZMA).This dataset replaces the dataset Naturalis National Natural History Museum (NL) – Coelenterata , and the dataset Zoological Museum Amsterdam, University of Amsterdam (NL) - Coelenterata, which were earlier published on GBIF portal. On request more information can be provided.","type":"OCCURRENCE","hostingOrganizationKey":"396d5f30-dea9-11db-8ab4-b8a03c50a862","hostingOrganizationTitle":"Naturalis Biodiversity Center","publishingCountry":"NL","publishingOrganizationKey":"396d5f30-dea9-11db-8ab4-b8a03c50a862","publishingOrganizationTitle":"Naturalis Biodiversity Center","license":"http://creativecommons.org/publicdomain/zero/1.0/legalcode","keywords":["Occurrence","Specimen"],"recordCount":58370},{"key":"889c91a3-614f-4355-8df8-b6d0260a118c","title":"Naturalis Biodiversity Center (NL) - Aves","doi":"10.15468/dxmzbz","description":"Database contains specimen records from the bird collection of the Naturalis Biodiversity Center\n                (Leiden, Netherlands). The specimens originate from the collection of the former Naturalis National\n                Museum of Natural History (RMNH; Rijksmuseum voor Natuurlijke Historie) in Leiden and of the Zoological\n                Museum Amsterdam (ZMA) and new acquisitions. This database replaces and enlarges the dataset Naturalis\n                National Natural History Museum (NL) – Aves Types and Zoological Museum Amsterdam, University of\n                Amsterdam (NL) - Aves which were hosted earlier on the GBIF dataportal. Furthermore the dataset contains\n                many new and updated records, also from the ZMA collection. On request more information can be provided.","type":"OCCURRENCE","hostingOrganizationKey":"396d5f30-dea9-11db-8ab4-b8a03c50a862","hostingOrganizationTitle":"Naturalis Biodiversity Center","publishingCountry":"NL","publishingOrganizationKey":"396d5f30-dea9-11db-8ab4-b8a03c50a862","publishingOrganizationTitle":"Naturalis Biodiversity Center","license":"http://creativecommons.org/publicdomain/zero/1.0/legalcode","keywords":["Occurrence","Specimen"],"recordCount":287671},{"key":"009a76f6-0960-4a56-a116-63991e6bb037","title":"Naturalis Biodiversity Center (NL) - Mammalia","doi":"10.15468/d7gugd","description":"Database contains specimen records from the Mammalia collection of the Naturalis Biodiversity Center (Leiden, Netherlands). The zoological specimens come from the National Museum of Natural History (RMNH; Rijksmuseum voor Natuurlijke Historie), later National Museum of Natural History, Naturalis in Leiden and the Zoological Museum Amsterdam (ZMA) and new acquisitions. This database replaces the dataset &#34;Zoological Museum Amsterdam, University of Amsterdam (NL) – Mammalia&#34; which was hosted earlier on the GBIF dataportal and contains many new and updated records, especially from the RMNH collection. The old registration numbers of the former institutions (RMNH, ZMA) are also mentioned in the dataset.","type":"OCCURRENCE","hostingOrganizationKey":"396d5f30-dea9-11db-8ab4-b8a03c50a862","hostingOrganizationTitle":"Naturalis Biodiversity Center","publishingCountry":"NL","publishingOrganizationKey":"396d5f30-dea9-11db-8ab4-b8a03c50a862","publishingOrganizationTitle":"Naturalis Biodiversity Center","license":"http://creativecommons.org/publicdomain/zero/1.0/legalcode","keywords":["Occurrence","Specimen"],"recordCount":63901},{"key":"03f2256a-e548-43d7-a731-253302f4aa34","title":"Naturalis Biodiversity Center (NL) - Hymenoptera","doi":"10.15468/jgywgc","description":"Database contains specimen records from the Hymenoptera collection of the Naturalis Biodiversity Center (Leiden, Netherlands). The zoological specimens come from the National Museum of Natural History (RMNH; Rijksmuseum voor Natuurlijke Historie), later National Museum of Natural History, Naturalis in Leiden and the Zoological Museum Amsterdam (ZMA) and new acquisitions. This database replaces the dataset &#34;Zoological Museum Amsterdam, University of Amsterdam (NL) – Hymenoptera_Bombidae_Types&#34; which was hosted earlier on GBIF dataportal and contains many new and updated records. The old registration numbers of the former institutions (RMNH, ZMA) are also mentioned in the dataset. This dataset is an abstract of the Naturalis production database (BRD) of 2012-12-12, with an update of 2014-03-25.","type":"OCCURRENCE","hostingOrganizationKey":"396d5f30-dea9-11db-8ab4-b8a03c50a862","hostingOrganizationTitle":"Naturalis Biodiversity Center","publishingCountry":"NL","publishingOrganizationKey":"396d5f30-dea9-11db-8ab4-b8a03c50a862","publishingOrganizationTitle":"Naturalis Biodiversity Center","license":"http://creativecommons.org/publicdomain/zero/1.0/legalcode","keywords":["","Collection Oskar Vogt","Hymenoptera","Occurrence","Specimen"],"recordCount":325677},{"key":"f3130a8a-4508-42b4-9737-fbda77748438","title":"Naturalis Biodiversity Center (NL) - Lepidoptera","doi":"10.15468/n4q0sa","description":"Database contains specimen records from the Lepidoptera collection of the Naturalis Biodiversity Center (Leiden, Netherlands). The zoological specimens come from the National Museum of Natural History (RMNH; Rijksmuseum voor Natuurlijke Historie), later National Museum of Natural History, Naturalis in Leiden and the Zoological Museum Amsterdam (ZMA) and new acquisitions. This dataset is an abstract of the Naturalis production database (BRD) of 2012-12-12, with an update of 26 March 2014. The datasets &#34;Zoological Museum Amsterdam, University of Amsterdam (NL) - Lepidoptera_Nymphalidae_Palearctic&#34; and &#34;Naturalis National Natural History Museum (NL) – Insecta_Lepidoptera_SE Asia and other regions&#34; are still separately hosted at GBIF, and not included in this dataset.The old registration numbers of the former institutions (RMNH, ZMA) are also mentioned in the dataset.","type":"OCCURRENCE","hostingOrganizationKey":"396d5f30-dea9-11db-8ab4-b8a03c50a862","hostingOrganizationTitle":"Naturalis Biodiversity Center","publishingCountry":"NL","publishingOrganizationKey":"396d5f30-dea9-11db-8ab4-b8a03c50a862","publishingOrganizationTitle":"Naturalis Biodiversity Center","license":"http://creativecommons.org/publicdomain/zero/1.0/legalcode","keywords":["Lepidoptera","Occurrence","Specimen"],"recordCount":423087},{"key":"843633a9-07cb-4918-a79f-6061b52c9dfd","title":"Naturalis Biodiversity Center (NL) - Coleoptera","doi":"10.15468/jrjojf","description":"Database contains specimen records from the Coleoptera collection of the Naturalis Biodiversity Center (Leiden, Netherlands). The specimens come from the National Museum of Natural History (RMNH; Rijksmuseum voor Natuurlijke Historie), later National Museum of Natural History, Naturalis in Leiden, Zoological Museum Amsterdam (ZMA) (mostly not digitised) and Wageningen University. The dataset &#34;Zoological Museum Amsterdam, University of Amsterdam (NL) - Coleoptera_Types_Orient&#34; former dataset:6e27e0c0-c065-11dd-a311-b8a03c50a862 at GBIF is fully incorporated in this dataset. The collection is largely arranged according to the Coleopterorum Catalogus but the family classification is currently updated to Bouchard e.a. 2011. Therefore classification can be inconsistent at the moment. The bulk of the data originate from a digitization project and need further clean up. Many taxa are not digitised below generic level. Important collections come from the Netherlands, the former Dutch East Indies (now Indonesia) and Surinam (formerly Dutch Guyana).","type":"OCCURRENCE","hostingOrganizationKey":"396d5f30-dea9-11db-8ab4-b8a03c50a862","hostingOrganizationTitle":"Naturalis Biodiversity Center","publishingCountry":"NL","publishingOrganizationKey":"396d5f30-dea9-11db-8ab4-b8a03c50a862","publishingOrganizationTitle":"Naturalis Biodiversity Center","license":"http://creativecommons.org/publicdomain/zero/1.0/legalcode","keywords":["Occurrence","Specimen"],"recordCount":249688},{"key":"172c03d8-0a83-4a08-a5af-9dd53ec851c7","title":"Sponge faunas of exposed and sheltered reef flats in eastern Indonesia in 1984","doi":"10.14284/280","description":"<p>List and counts of observed sponge fauna sampled on 4 locations in eastern Indonesia in September and October 1984. The data were digitized by VLIZ from the original report: Ichsan, A. (1989). A comparison of sponge faunas of exposed and sheltered reef flats in eastern Indonesia. MSc Thesis. Universiteit van Amsterdam: Amsterdam. 52 pp.</p>\n<p>The available specimens originated from the reef flat of four different localities of Eastern Indonesia: Maisel, east of Sumba, north of Sumbawa, and Bahuluang (south-west of the Salayar). A total of 61 species belonging to 28 Families and grouped into 11 Orders are observed.</p>","type":"SAMPLING_EVENT","hostingOrganizationKey":"2089ce96-4fb5-4a20-999c-3ccf45a27a4d","hostingOrganizationTitle":"Flanders Marine Institute","publishingCountry":"BE","publishingOrganizationKey":"2089ce96-4fb5-4a20-999c-3ccf45a27a4d","publishingOrganizationTitle":"Flanders Marine Institute","license":"http://creativecommons.org/licenses/by/4.0/legalcode","decades":[1980],"keywords":["Occurrence","Sponges","Reefs"],"recordCount":244},{"key":"3da4ec27-5b85-4ecd-9fe1-87d8a1ed49dc","title":"Base de données Pecheker. MNHN - DEPARTEMENT MILIEUX PEUPLEMENTS AQUATIQUES. Supplément","doi":"10.15468/36d2hp","description":"Observations de Cetacés dans les TAAF (Kerguelen, Crozet, Amsterdam, Saint Paul, Terre Adelie) à chaque ligne pendant le virage par le copec ainsi que des observations opportunistes du copec, et parfois du bord ou du capitaine","type":"OCCURRENCE","hostingOrganizationKey":"1928bdf0-f5d2-11dc-8c12-b8a03c50a862","hostingOrganizationTitle":"UMS PatriNat (OFB-CNRS-MNHN), Paris","publishingCountry":"FR","publishingOrganizationKey":"1928bdf0-f5d2-11dc-8c12-b8a03c50a862","publishingOrganizationTitle":"UMS PatriNat (OFB-CNRS-MNHN), Paris","license":"http://creativecommons.org/licenses/by-nc/4.0/legalcode","keywords":["Occurrence"],"recordCount":514},{"key":"50a71fb1-2da5-411b-b0f8-b49eb5e822cd","title":"Base de données Pecheker (modifiée). Museum National D'Histoire Naturelle - DEPARTEMENT MILIEUX PEUPLEMENTS AQUATIQUES","doi":"10.15468/krj0gz","description":"Observations de Cetacés dans les TAAF (Kerguelen, Crozet, Amsterdam, Saint Paul, Terre Adelie) à chaque ligne pendant le virage par le copec ainsi que des observations opportunistes du copec, et parfois du bord ou du capitaine.\n\nCe jeu a contribué à l'atlas des Mammifères marins publié en 2016.","type":"OCCURRENCE","hostingOrganizationKey":"1928bdf0-f5d2-11dc-8c12-b8a03c50a862","hostingOrganizationTitle":"UMS PatriNat (OFB-CNRS-MNHN), Paris","publishingCountry":"FR","publishingOrganizationKey":"1928bdf0-f5d2-11dc-8c12-b8a03c50a862","publishingOrganizationTitle":"UMS PatriNat (OFB-CNRS-MNHN), Paris","license":"http://creativecommons.org/licenses/by-nc/4.0/legalcode","keywords":["Occurrence"],"recordCount":7418},{"key":"01400d26-d164-473a-9a1c-818af8755a0c","title":"NDFF Province of Noord-Holland","doi":"10.15468/q16jdw","description":"The province of Noord-Holland lies in the northwest of the Netherlands. The province has over 2,775,000 inhabitants and covers 4,091 square kilometres. The provincial capital is Haarlem and its largest city is Amsterdam.\nPositive observations without protocol\nDataset available via https://www.ndff.nl/english / serviceteamndff@natuurloket.nl\n1,003,203 records (March 2018)","type":"METADATA","hostingOrganizationKey":"6fbb8fe2-66e2-4a9e-bb39-b84665571f1c","hostingOrganizationTitle":"Dutch National Database of Flora and Fauna (NDFF)","publishingCountry":"NL","publishingOrganizationKey":"6fbb8fe2-66e2-4a9e-bb39-b84665571f1c","publishingOrganizationTitle":"Dutch National Database of Flora and Fauna (NDFF)","license":"http://creativecommons.org/licenses/by-nc/4.0/legalcode","keywords":["Metadata","observation"],"recordCount":0},{"key":"9a025855-803d-4fa7-8417-ac7142544553","title":"Naturalis Biodiversity Center (NL) - Tunicata","doi":"10.15468/kavcqh","description":"Database contains specimen records from the Tunicata collection of the Naturalis Biodiversity Center\n                (Leiden, Netherlands). These specimens originate from the collections of the National Museum of Natural\n                History (RMNH; Rijksmuseum voor Natuurlijke Historie), later National Museum of Natural History,\n                Naturalis in Leiden and of the former Zoological Museum Amsterdam (ZMA). On request more information can\n                be provided.","type":"OCCURRENCE","hostingOrganizationKey":"396d5f30-dea9-11db-8ab4-b8a03c50a862","hostingOrganizationTitle":"Naturalis Biodiversity Center","publishingCountry":"NL","publishingOrganizationKey":"396d5f30-dea9-11db-8ab4-b8a03c50a862","publishingOrganizationTitle":"Naturalis Biodiversity Center","license":"http://creativecommons.org/publicdomain/zero/1.0/legalcode","keywords":["Occurrence","Specimen"],"recordCount":6005},{"key":"6a0a95c6-c07a-4c35-9e9f-f776e8730fd4","title":"Naturalis Biodiversity Center (NL) - Diptera","doi":"10.15468/cl6p3l","description":"Database contains specimen records from the Diptera collection of the Naturalis Biodiversity Center (Leiden, Netherlands). These specimens originate from collections of the National Museum of Natural History (RMNH; Rijksmuseum voor Natuurlijke Historie), later National Museum of Natural History, Naturalis in Leiden, and of the former Zoological Museum Amsterdam (ZMA). On request more information can be provided.","type":"OCCURRENCE","hostingOrganizationKey":"396d5f30-dea9-11db-8ab4-b8a03c50a862","hostingOrganizationTitle":"Naturalis Biodiversity Center","publishingCountry":"NL","publishingOrganizationKey":"396d5f30-dea9-11db-8ab4-b8a03c50a862","publishingOrganizationTitle":"Naturalis Biodiversity Center","license":"http://creativecommons.org/publicdomain/zero/1.0/legalcode","keywords":["Occurrence","Specimen"],"recordCount":53242},{"key":"f598ca19-7c37-47e4-9a64-bcfe526847c1","title":"Naturalis Biodiversity Center (NL) - Echinodermata","doi":"10.15468/z5z7w7","description":"Database contains specimen records from the Echinodermata collection of the Naturalis Biodiversity Center (Leiden, Netherlands). These specimens originate from the collections of the National Museum of Natural History (RMNH; Rijksmuseum voor Natuurlijke Historie), later National Museum of Natural History, Naturalis in Leiden and of the former Zoological Museum Amsterdam (ZMA). On request more information can be provided.","type":"OCCURRENCE","hostingOrganizationKey":"396d5f30-dea9-11db-8ab4-b8a03c50a862","hostingOrganizationTitle":"Naturalis Biodiversity Center","publishingCountry":"NL","publishingOrganizationKey":"396d5f30-dea9-11db-8ab4-b8a03c50a862","publishingOrganizationTitle":"Naturalis Biodiversity Center","license":"http://creativecommons.org/publicdomain/zero/1.0/legalcode","keywords":["Occurrence","Specimen"],"recordCount":15827},{"key":"8b42bbf1-b287-40a0-ab3a-88fb7928f8e2","title":"Naturalis Biodiversity Center (NL) - Hemiptera","doi":"10.15468/aw4q6q","description":"Database contains specimen records from the Hemiptera collection of the Naturalis Biodiversity Center (Leiden, Netherlands). These specimens originate from the collections of the National Museum of Natural History (RMNH; Rijksmuseum voor Natuurlijke Historie), later National Museum of Natural History, Naturalis in Leiden and of the former Zoological Museum Amsterdam (ZMA). On request more information can be provided.","type":"OCCURRENCE","hostingOrganizationKey":"396d5f30-dea9-11db-8ab4-b8a03c50a862","hostingOrganizationTitle":"Naturalis Biodiversity Center","publishingCountry":"NL","publishingOrganizationKey":"396d5f30-dea9-11db-8ab4-b8a03c50a862","publishingOrganizationTitle":"Naturalis Biodiversity Center","license":"http://creativecommons.org/publicdomain/zero/1.0/legalcode","keywords":["Occurrence","Specimen"],"recordCount":22949},{"key":"306f61f2-9ff0-404e-8aa6-a525a7fae369","title":"Naturalis Biodiversity Center (NL) - Odonata","doi":"10.15468/r2rwih","description":"Database contains specimen records from the Odonata collection of the Naturalis Biodiversity Center (Leiden, Netherlands). These specimens originate from the collections of the National Museum of Natural History (RMNH; Rijksmuseum voor Natuurlijke Historie), later National Museum of Natural History, Naturalis in Leiden and of the former Zoological Museum Amsterdam (ZMA). On request more information can be provided.","type":"OCCURRENCE","hostingOrganizationKey":"396d5f30-dea9-11db-8ab4-b8a03c50a862","hostingOrganizationTitle":"Naturalis Biodiversity Center","publishingCountry":"NL","publishingOrganizationKey":"396d5f30-dea9-11db-8ab4-b8a03c50a862","publishingOrganizationTitle":"Naturalis Biodiversity Center","license":"http://creativecommons.org/publicdomain/zero/1.0/legalcode","keywords":["Occurrence","Specimen"],"recordCount":37942},{"key":"1eb5e969-4412-4f08-81ec-3de057e559a1","title":"Naturalis Biodiversity Center (NL) - Foraminifera","doi":"10.15468/qux4dn","description":"Database contains specimen records from the Foraminifera collection of the Naturalis Biodiversity Center (Leiden, Netherlands). These specimens originate from the collections of the National Museum of Natural History (RMNH; Rijksmuseum voor Natuurlijke Historie), later National Museum of Natural History, Naturalis in Leiden and of the former Zoological Museum Amsterdam (ZMA). On request more information can be provided.","type":"OCCURRENCE","hostingOrganizationKey":"396d5f30-dea9-11db-8ab4-b8a03c50a862","hostingOrganizationTitle":"Naturalis Biodiversity Center","publishingCountry":"NL","publishingOrganizationKey":"396d5f30-dea9-11db-8ab4-b8a03c50a862","publishingOrganizationTitle":"Naturalis Biodiversity Center","license":"http://creativecommons.org/publicdomain/zero/1.0/legalcode","keywords":["Occurrence","Specimen"],"recordCount":544},{"key":"e66ff065-d823-4a4d-b129-569f649ba0eb","title":"Naturalis Biodiversity Center (NL) - Brachiopoda","doi":"10.15468/v6p9ba","description":"Database contains specimen records from the Brachiopoda collection of the Naturalis Biodiversity Center (Leiden, Netherlands). These specimens originate from the collections of the National Museum of Natural History (RMNH; Rijksmuseum voor Natuurlijke Historie), later National Museum of Natural History, Naturalis in Leiden and of the former Zoological Museum Amsterdam (ZMA). On request more information can be provided.","type":"OCCURRENCE","hostingOrganizationKey":"396d5f30-dea9-11db-8ab4-b8a03c50a862","hostingOrganizationTitle":"Naturalis Biodiversity Center","publishingCountry":"NL","publishingOrganizationKey":"396d5f30-dea9-11db-8ab4-b8a03c50a862","publishingOrganizationTitle":"Naturalis Biodiversity Center","license":"http://creativecommons.org/publicdomain/zero/1.0/legalcode","keywords":["Occurrence","Specimen"],"recordCount":1132},{"key":"a4be4c6d-5ce7-47ba-982d-1deb05719133","title":"Naturalis Biodiversity Center (NL) - Porifera","doi":"10.15468/2vuq5t","description":"Database contains specimen records from the Porifera collection of the Naturalis Biodiversity Center (Leiden, Netherlands). These specimens originate from the collections of the National Museum of Natural History (RMNH; Rijksmuseum voor Natuurlijke Historie), later National Museum of Natural History, Naturalis in Leiden and of the former Zoological Museum Amsterdam (ZMA). On request more information can be provided.","type":"OCCURRENCE","hostingOrganizationKey":"396d5f30-dea9-11db-8ab4-b8a03c50a862","hostingOrganizationTitle":"Naturalis Biodiversity Center","publishingCountry":"NL","publishingOrganizationKey":"396d5f30-dea9-11db-8ab4-b8a03c50a862","publishingOrganizationTitle":"Naturalis Biodiversity Center","license":"http://creativecommons.org/publicdomain/zero/1.0/legalcode","keywords":["Occurrence","Specimen"],"recordCount":47460},{"key":"5751c38c-078c-431a-be43-af27f5e38db2","title":"Naturalis Biodiversity Center (NL) - Orthopteroidea","doi":"10.15468/i4jjzm","description":"Database contains specimen records from the Orthopteroidea collection of the Naturalis Biodiversity\n                Center (Leiden, Netherlands). These specimens originate from the collections of the National Museum of\n                Natural History (RMNH; Rijksmuseum voor Natuurlijke Historie), later National Museum of Natural History,\n                Naturalis in Leiden and of the former Zoological Museum Amsterdam (ZMA). On request more information or\n                pictures (if available) can be provided.","type":"OCCURRENCE","hostingOrganizationKey":"396d5f30-dea9-11db-8ab4-b8a03c50a862","hostingOrganizationTitle":"Naturalis Biodiversity Center","publishingCountry":"NL","publishingOrganizationKey":"396d5f30-dea9-11db-8ab4-b8a03c50a862","publishingOrganizationTitle":"Naturalis Biodiversity Center","license":"http://creativecommons.org/publicdomain/zero/1.0/legalcode","keywords":["Occurrence","Specimen"],"recordCount":356},{"key":"4f8de55f-5967-46c4-b689-31de17090ed4","title":"Naturalis Biodiversity Center (NL) - Collembola","doi":"10.15468/kollha","description":"Database contains specimen records from the Collembola collection of the Naturalis Biodiversity Center (Leiden, Netherlands). The zoological specimens come from the National Museum of Natural History (RMNH; Rijksmuseum voor Natuurlijke Historie), later National Museum of Natural History, Naturalis in Leiden and the Zoological Museum Amsterdam (ZMA) and new acquisitions. The old registration numbers of the former institutions (RMNH, ZMA) are also mentioned in the dataset","type":"OCCURRENCE","hostingOrganizationKey":"396d5f30-dea9-11db-8ab4-b8a03c50a862","hostingOrganizationTitle":"Naturalis Biodiversity Center","publishingCountry":"NL","publishingOrganizationKey":"396d5f30-dea9-11db-8ab4-b8a03c50a862","publishingOrganizationTitle":"Naturalis Biodiversity Center","license":"http://creativecommons.org/publicdomain/zero/1.0/legalcode","keywords":["Occurrence","Specimen"],"recordCount":29171},{"key":"b4aad9c3-518b-4550-82de-c70a7ead1b64","title":"Naturalis Biodiversity Center (NL) - Chelicerata and Myriapoda","doi":"10.15468/63lozv","description":"Database contains specimen records from the Chelicerata and Myriapoda collection of the Naturalis Biodiversity Center (Leiden, Netherlands). The zoological specimens come from the National Museum of Natural History (RMNH; Rijksmuseum voor Natuurlijke Historie), later National Museum of Natural History, Naturalis in Leiden and the Zoological Museum Amsterdam (ZMA) and new acquisitions. The old registration numbers of the former institutions (RMNH, ZMA) are also mentioned in the datase","type":"OCCURRENCE","hostingOrganizationKey":"396d5f30-dea9-11db-8ab4-b8a03c50a862","hostingOrganizationTitle":"Naturalis Biodiversity Center","publishingCountry":"NL","publishingOrganizationKey":"396d5f30-dea9-11db-8ab4-b8a03c50a862","publishingOrganizationTitle":"Naturalis Biodiversity Center","license":"http://creativecommons.org/publicdomain/zero/1.0/legalcode","keywords":["Occurrence","Specimen"],"recordCount":88393},{"key":"f83746ee-4cf2-4e60-a720-dd508b559794","title":"NDFF Waternet","doi":"10.15468/nyzk8b","description":"<p>Waternet is the only water company in the Netherlands that covers the whole water cycle. We provide a safe, clean and sufficient supply of water. This includes water for nature areas and human consumption.</p>\n<p>We work in Amsterdam and surrounding area. Approximately 1,3 million people live in our service area.</p>\n<p>Positive observations without protocol</p>\n<p>Resolution of dataset available in 5 x 5 km. Higher resolution available via https://www.ndff.nl / serviceteamndff@natuurloket.nl</p>\n<p>8,414 records (May 2018)</p>","type":"METADATA","hostingOrganizationKey":"6fbb8fe2-66e2-4a9e-bb39-b84665571f1c","hostingOrganizationTitle":"Dutch National Database of Flora and Fauna (NDFF)","publishingCountry":"NL","publishingOrganizationKey":"6fbb8fe2-66e2-4a9e-bb39-b84665571f1c","publishingOrganizationTitle":"Dutch National Database of Flora and Fauna (NDFF)","license":"http://creativecommons.org/licenses/by-nc/4.0/legalcode","keywords":["Metadata","Observation"],"recordCount":0},{"key":"bd246610-0e2d-11de-b8e6-b8a03c50a862","title":"Seed collection – dead seeds for evaluation and observation purposes","doi":"10.15468/8kbpfk","description":"The collection includes seeds of weeds collected in agricultural fields, fallows, balks, etc., as well as crop seeds. These seeds were collected by Asst. Kulpa, the founder of this collection and also come from botanical gardens from different parts of the world, e.g. from Brussels (Belgium), Riga (Latvia), Coimbra (Portugal), Jasi and Bucharest (Romania), Strasbourg (France), Dresden, Gatersleben and Leipzig (Germany), Uppsala (Sweden), Vienna (Austria), Basil (Switzerland), Amsterdam (Netherlands), Brno (Czech Republic). Most of the material was received in the 1980's and 1990's.","type":"OCCURRENCE","hostingOrganizationKey":"04665d80-7e5f-11d8-a1a0-b8a03c50a862","hostingOrganizationTitle":"University of Warsaw, Dept. of Ecology","publishingCountry":"PL","publishingOrganizationKey":"24c3dc90-822b-11d8-b7ed-b8a03c50a862","publishingOrganizationTitle":"Plant Breeding and Acclimatization Institute (IHAR) - National Research Institute","license":"http://creativecommons.org/licenses/by-nc/4.0/legalcode","keywords":["Occurrence","Specimen"],"recordCount":10205},{"key":"ffae2921-22c7-41e4-a0d2-41a33f0aeb2a","title":"NDFF Rijnland Water Authority","doi":"10.15468/s6zljz","description":"<p>Rijnland is not the only district water board in the Netherlands. There are many water boards spread over the provinces. Rijnland works in two provinces: North Holland and South Holland. The Rijnland area stretches from Wassenaar up to IJmuiden and from Gouda to and including part of Amsterdam.. This area covers 1,100 square kilometres. 1.3 million people live, work, travel and enjoy leisure activities here.</p>\n<p>This area includes many lakes, rivers, canals and 200 polders. It is bordered on the north-westside by the North Sea.</p>\n<p>Dataset available via https://www.ndff.nl/english / serviceteamndff@natuurloket.nl</p>\n<p>Positive observations without protocol</p>\n<p>1,167 records (March 2018)</p>","type":"METADATA","hostingOrganizationKey":"6fbb8fe2-66e2-4a9e-bb39-b84665571f1c","hostingOrganizationTitle":"Dutch National Database of Flora and Fauna (NDFF)","publishingCountry":"NL","publishingOrganizationKey":"6fbb8fe2-66e2-4a9e-bb39-b84665571f1c","publishingOrganizationTitle":"Dutch National Database of Flora and Fauna (NDFF)","license":"http://creativecommons.org/licenses/by-nc/4.0/legalcode","keywords":["Metadata","Observation"],"recordCount":0},{"key":"15f819bd-6612-4447-854b-14d12ee1022d","title":"Naturalis Biodiversity Center (NL) - Botany","doi":"10.15468/ib5ypt","description":"This database contains specimen records from the former herbarium of the Leiden University within the botanical collection of the Naturalis Biodiversity Center (Leiden, Netherlands). The Department of Botany houses the National Herbarium of the Netherlands (NHN) which consists of herbarium collections of the universities of Leiden, Wageningen and Utrecht. In 2010 the collection of the University of Amsterdam also moved to Naturalis.The focal areas of the collection are Southeast Asia, tropical America, tropical Africa and the Netherlands. The former herbarium of the Leiden University (acronym: L) contains about 4 million specimens and has extensive collections from Southeast Asia, especially from Indonesia and New Guinea, but it also holds a large collection of palearctic plants, and is the principle herbarium for Dutch plants. As the oldest Dutch herbarium, it also contains several historic collections.","type":"OCCURRENCE","hostingOrganizationKey":"396d5f30-dea9-11db-8ab4-b8a03c50a862","hostingOrganizationTitle":"Naturalis Biodiversity Center","publishingCountry":"NL","publishingOrganizationKey":"396d5f30-dea9-11db-8ab4-b8a03c50a862","publishingOrganizationTitle":"Naturalis Biodiversity Center","license":"http://creativecommons.org/publicdomain/zero/1.0/legalcode","keywords":["Occurrence","Specimen"],"recordCount":4924185},{"key":"0a2003a1-fe01-4e47-acc6-ec338552dea8","title":"Lista de taxones asociados a Páramos de Colombia","doi":"10.15472/od8jpn","description":"El presente recurso contiene 8978 registros principalmente de especies y algunas, subespecies, variedades y géneros de Animales y Plantas asociados a páramos de Colombia. Los datos han sido recopilados principalmente de las Colecciones en línea del Instituto de Ciencias Naturales de la Universidad Nacional de Colombia, el IPT del Institute for Biodiversity and Ecosystem Dynamics de la Universidad de Amsterdam, el Instituto Alexander von Humboldt y de diferentes entidades que publican información a través del SiB Colombia. \r\n\r\nLa obtención de cada nombre científico se realizó principalmente buscando la palabra \"páramo\" tanto en los metadatos de cada recurso consultado como en el campo 'localidad' de cada registro biológico. Este recurso se encuentra en constante actualización y pretende ser una guía de consulta de las especies presentes en páramos en el país, una vez se logren acuerdos con los expertos de cada grupo biológico.","type":"CHECKLIST","hostingOrganizationKey":"c4f66525-4d36-4c18-82ac-98e088f54db4","hostingOrganizationTitle":"Sistema de Información sobre Biodiversidad de Colombia - SiB","publishingCountry":"CO","publishingOrganizationKey":"c4f66525-4d36-4c18-82ac-98e088f54db4","publishingOrganizationTitle":"Sistema de Información sobre Biodiversidad de Colombia - SiB","license":"http://creativecommons.org/licenses/by/4.0/legalcode","recordCount":0},{"key":"39043215-39ea-4396-bf2a-b5e5dd69e952","title":"Lista de taxones asociados a Humedales de Colombia","doi":"10.15472/6kpxyu","description":"El presente recurso contiene 2742 registros principalmente de especies y algunas, subespecies, variedades y géneros de Animales y Plantas asociados a humedales de Colombia. Los datos han sido recopilados principalmente de las Colecciones en línea del Instituto de Ciencias Naturales de la Universidad Nacional de Colombia, el IPT del Institute for Biodiversity and Ecosystem Dynamics de la Universidad de Amsterdam, el Instituto Alexander von Humboldt y de diferentes entidades que publican información a través del SiB Colombia. \r\n\r\nLa obtención de cada nombre científico se realizó principalmente buscando la palabra \"humedal\" tanto en los metadatos de cada recurso consultado como en el campo 'localidad' de cada registro biológico. Se amplió la recuperación de registros asociados a humedales a partir de los sinónimos “ciénagas”, “lagos”, “lagunas”, “sabanas estacionales”, “sabanas inundables”, “planos de inundación”, “represas” y “manglares”.  Este recurso se encuentra en constante actualización y pretende ser una guía de consulta de las especies presentes en humedales en el país, una vez se logren acuerdos con los expertos de cada grupo biológico.","type":"CHECKLIST","hostingOrganizationKey":"c4f66525-4d36-4c18-82ac-98e088f54db4","hostingOrganizationTitle":"Sistema de Información sobre Biodiversidad de Colombia - SiB","publishingCountry":"CO","publishingOrganizationKey":"c4f66525-4d36-4c18-82ac-98e088f54db4","publishingOrganizationTitle":"Sistema de Información sobre Biodiversidad de Colombia - SiB","license":"http://creativecommons.org/licenses/by/4.0/legalcode","recordCount":0},{"key":"65c9103f-2fbf-414b-9b0b-e47ca96c5df2","title":"Afromoths, online database of Afrotropical moth species (Lepidoptera)","doi":"10.15468/s1kwuw","description":"This dataset covers all relevant information on every Afrotropical moth species.\n\nThe zoogeographic area covered can be defined as the Africa continent south of the Sahara (i.e. excl. Morocco, Algeria, Tunisia, Libya and Egypt), the islands in the Atlantic Ocean: Amsterdam Island, Ascension, Cape Verde Archipelago, Inaccessible Island, St. Helena, São Tomé and Principe, Tristan da Cunha, and the islands in the Indian Ocean: Comores (Anjouan, Grande Comore, Mayotte, Mohéli), Madagascar, Mascarene Islands (La Réunion, Mauritius, Rodrigues), Seychelles (Félicité, Mahé, Praslin, Silhouette, a.o.).\n\nFurthermore, also those moth species occurring in the transition zone to the Palaearctic fauna have been included, namely most of the Arabia Peninsula (Kuwait, Oman, Saudi Arabia, United Arab Emirates, Yemen with Socotra) but not Iraq, Jordan and further north. Also, some Saharan species have been included (e. g. Hoggar Mts. in Algeria, Tibesti Mts. in South Libya).\n\nUtmost care was taken that the data incorporated in the database are correct. We decline any responsibility in case of damage to soft- or hardware based on information used in this website. Persons retrieving information from this website for their own research or for applied aspects such as pest control programmes, should acknowledge the usage of data from this website in the following format:\n\nDe Prins, J. & De Prins, W. 2011. Afromoths, online database of Afrotropical moth species (Lepidoptera). World Wide Web electronic publication (www.afromoths.net)","type":"CHECKLIST","hostingOrganizationKey":"37e82b90-1e21-11de-ab90-f72009d2669b","hostingOrganizationTitle":"Belgian Biodiversity Platform","publishingCountry":"BE","publishingOrganizationKey":"37e82b90-1e21-11de-ab90-f72009d2669b","publishingOrganizationTitle":"Belgian Biodiversity Platform","license":"http://creativecommons.org/licenses/by/4.0/legalcode","keywords":["africa","moths","Checklist"],"recordCount":47982},{"key":"faf313a1-9ae4-43f4-bfc9-974281feac0e","title":"RAVON (NL) - Network Ecological Monitoring Reptiles","doi":"10.15468/pq3ycj","description":"The Dutch reptile populations are being monitored intensively within the scope of the Dutch Network Ecological Monitoring (NEM). Since 1994 volunteers, coordinated by RAVON (Reptile, Amphibian and Fish Conservation Netherlands), monitor reptiles on an annual base. All seven indigenous species are monitored on transects that are examined seven times a year. The data are used to monitor population trends and patterns and to support legal reporting obligations, scientific research and policy and conservation related issues. Locality data for GBIF are provided on a 5 x 5 km scale.","type":"OCCURRENCE","hostingOrganizationKey":"8629d002-c1cf-4c61-9895-55ca7cd0e149","hostingOrganizationTitle":"Reptile, Amphibian and Fish Conservation Netherlands (RAVON)","publishingCountry":"NL","publishingOrganizationKey":"8629d002-c1cf-4c61-9895-55ca7cd0e149","publishingOrganizationTitle":"Reptile, Amphibian and Fish Conservation Netherlands (RAVON)","license":"http://creativecommons.org/licenses/by/4.0/legalcode","decades":[1990,2000,2010],"keywords":["Occurrence","Observation","The Netherlands","ecology","reptiles","monitoring","trends"],"recordCount":5625},{"key":"2fc1d8b5-9c99-4e03-8c3c-11a6e51a298f","title":"Bird tracking - GPS tracking of Western Marsh Harriers breeding near the Belgium-Netherlands border","doi":"10.15468/rbguhj","description":"Bird tracking - GPS tracking of Western Marsh Harriers breeding near the Belgium-Netherlands border is a species occurrence dataset published by the Research Institute for Nature and Forest (INBO). The dataset contains over 290.000 occurrences (GPS fixes) recorded between 2013 and 2017 by GPS trackers mounted on 6 Western Marsh Harriers breeding near the Belgium-Netherlands border. The trackers are developed by the University of Amsterdam Bird Tracking System (UvA-BiTS, http://www.uva-bits.nl) and allow to study the harriers' habitat use and migration behaviour in great detail. Our bird tracking network is operational since 2013 and is maintained and used by the INBO, the Flanders Marine Institute (VLIZ), UvA-BiTS, Ghent University (UGent), and the University of Antwerp (UA). See the dataset metadata for contact information, scope, and methodology. Issues with the dataset can be reported at https://github.com/inbo/data-publication/tree/master/datasets/bird-tracking-wmh-occurrences\nThe following information is not included in the dataset and available upon request: outliers, speed, temperature, barometric pressure, GPS metadata (fix time, number of satellites used, vertical accuracy), and bird weight measured during tagging.\nTo allow anyone to use this dataset, we have released the data to the public domain under a Creative Commons Zero waiver (http://creativecommons.org/publicdomain/zero/1.0/). We would appreciate however, if you read and follow these norms for data use (http://www.inbo.be/en/norms-for-data-use) and provide a link to the original dataset (https://doi.org/10.15468/rbguhj) whenever possible. If you use these data for a scientific paper, please cite the dataset following the applicable citation norms and/or consider us for co-authorship. We are always interested to know how you have used or visualized the data, or to provide more information, so please contact us via the contact information provided in the metadata, opendata@inbo.be or https://twitter.com/LifeWatchINBO.\nThe bird tracking network used to collect these data is set up and maintained by the INBO and VLIZ as part of the Flemish contribution to LifeWatch.","type":"OCCURRENCE","hostingOrganizationKey":"1cd669d0-80ea-11de-a9d0-f1765f95f18b","hostingOrganizationTitle":"Research Institute for Nature and Forest (INBO)","publishingCountry":"BE","publishingOrganizationKey":"1cd669d0-80ea-11de-a9d0-f1765f95f18b","publishingOrganizationTitle":"Research Institute for Nature and Forest (INBO)","license":"http://creativecommons.org/publicdomain/zero/1.0/legalcode","decades":[2010],"keywords":["Occurrence","Observation","Circus aeruginosus","Western Marsh Harrier","UvA-BiTS","animal movement","habitat use","migration","bruine kiekendief","GPS tracking","LifeWatch","bird tracking","MachineObservation"],"recordCount":293608},{"key":"62d82928-dc6f-40dc-85b3-f2be47e7b49a","title":"Naturalis Biodiversity Center (NL) - Museum collection digitized at storage unit level","doi":"10.15468/17e8en","description":"<p>Naturalis Biodiversity Center has carried out one of the largest projects for natural history collection digitization to date. At least 7 million specimens are digitized in detail (see our other occurrence datasets) from a total collection of 37 million. Information of the other 30 million specimen is now digitally available on a higher, less detailed level. These 30 million specimen were digitized at the storage unit level, a storage unit being a unit in (or on) which objects are stored, such as boxes, drawers, and shelves. These specimens are stored in approximately 150,000 of these units, which contain Zoological and Paleontological collections. For each storage unit, the species and quantities it contains and the gathering location were digitized. This information can be used for research and collection management, but also in deciding which taxonomic groups need further registration at the object level. The project was funded by the Dutch Economic Structure Enhancing Fund (FES).</p>\n<p>This database provides a current and comprehensive overview of the Zoological and Paleontological collection at Naturalis Biodiversity Center (Leiden, Netherlands), digitized at storage unit level. The data is presented as specimen occurrence data, in which each record represents one taxon from one geographic location from one storage unit. Generally a record contains more than one specimen. These specimens originate from the collections of the National Museum of Natural History (RMNH; Rijksmuseum voor Natuurlijke Historie), later National Museum of Natural History, Naturalis in Leiden, from the former Zoological Museum Amsterdam (ZMA), and from the former National Museum of Geology and Mineralogy (RGM; Rijksmuseum voor Geologie en Mineralogie).</p>\n<p>All zoological and paleontological records, with at least a family or genus name, are included. The number of specimens gives the count at the end of the FES project, in 2015.</p>\n<p>On request more information or pictures (if available) can be provided.</p>","type":"OCCURRENCE","hostingOrganizationKey":"396d5f30-dea9-11db-8ab4-b8a03c50a862","hostingOrganizationTitle":"Naturalis Biodiversity Center","publishingCountry":"NL","publishingOrganizationKey":"396d5f30-dea9-11db-8ab4-b8a03c50a862","publishingOrganizationTitle":"Naturalis Biodiversity Center","license":"http://creativecommons.org/publicdomain/zero/1.0/legalcode","keywords":["Occurrence","Specimen"],"recordCount":368853},{"key":"da2f43fd-ac8c-424b-bc98-273573b0b7e3","title":"Actualización de bases de datos de invertebrados (Rotifera, Cladocera y Copepoda) y peces","doi":"10.15468/nyg3hb","description":"<p>La presente propuesta plantea actualizar e incorporar nueva información a las bases de datos de dos colecciones científicas (Larvas de peces ECO-CH LP y Zooplancton ECO-CH Z) ambas, asociadas a la línea de Ecología y Taxonomía del Zooplancton Marino y de Aguas Continentales de ECOSUR unidad Chetumal. Para el caso de larvas de peces se pretende migrar al sistema Biótica y unificar las bases de datos. Se homogeneizarán las bases por lo que se corregirán varios campos de aproximadamente 1,500 registros. También, a partir de muestras recolectadas en aguas costeras del Caribe mexicano, se pretende enriquecer esta base de datos con nueva información, esto implica desde la separación de larvas de peces de la muestra original y su posterior determinación, esta parte estará bajo mi responsabilidad directa. Las determinaciones dudosas serán corroboradas por un taxónomo especialista en Miami, Fl. Las bases de datos de invertebrados se unificarán en una gran base la cual se plantea migrar al sistema Biótica. En esta base de datos de invertebrados se actualizará información sobre identificaciones de 2 familias, 5 géneros y 5 especies, además de incorporará nueva información correspondiente a nuevas áreas geográficas. Se estima la incorporación de 105 nuevos registros curatoriales, 10 localidades, 3 familias, 5 géneros y 10 especies. Las determinaciones sobre copépodos estarán bajo la responsabilidad de los Doctores Eduardo Suárez Morales y Manuel Elías Gutiérrez, en tanto que para cladóceros y rotíferos estarán a cargo del Dr. Manuel Elías Gutiérrez.</p>\n<p>Reino: 1\nFilo: 2\nClase: 3\nOrden: 6\nFamilia: 29\nGénero: 93\nSubgénero: 7\nEspecie: 232\nEpitetoinfraespecifico: 8</p>","type":"OCCURRENCE","hostingOrganizationKey":"ff90b050-c256-11db-b71b-b8a03c50a862","hostingOrganizationTitle":"Comisión nacional para el conocimiento y uso de la biodiversidad","publishingCountry":"MX","publishingOrganizationKey":"ff90b050-c256-11db-b71b-b8a03c50a862","publishingOrganizationTitle":"Comisión nacional para el conocimiento y uso de la biodiversidad","license":"http://creativecommons.org/licenses/by/4.0/legalcode","decades":[1930,1940,1950,1960,1970,1980,1990,2000],"keywords":["Occurrence","Specimen","Invertebrados"],"recordCount":1261},{"key":"83e20573-f7dd-4852-9159-21566e1e691e","title":"Bird tracking - GPS tracking of Lesser Black-backed Gulls and Herring Gulls breeding at the southern North Sea coast","doi":"10.15468/02omly","description":"Bird tracking - GPS tracking of Lesser Black-backed Gulls and Herring Gulls breeding at the southern North Sea coast is a species occurrence dataset published by the Research Institute for Nature and Forest (INBO) and described (v5.5) in Stienen et al. 2016 (https://doi.org/10.3897/zookeys.555.6173). The dataset contains close to 8.5 million occurrences (GPS fixes) recorded by GPS trackers mounted on 108 Lesser Black-backed Gulls and 37 Herring Gulls breeding at the Belgian and Dutch coast. The trackers are developed by the University of Amsterdam Bird Tracking System (UvA-BiTS, http://www.uva-bits.nl) and allow to study the gulls' habitat use and migration behaviour in great detail. Our bird tracking network is operational since 2013 and is maintained and used by the INBO, the Flanders Marine Institute (VLIZ), UvA-BiTS, Ghent University (UGent), and the University of Antwerp (UA). See the dataset metadata for contact information, scope, and methodology. Issues with the dataset can be reported at https://github.com/inbo/data-publication/tree/master/datasets/bird-tracking-gull-occurrences\nThe following information is not included in the dataset and available upon request: outliers, speed, temperature, barometric pressure, accelerometer data, GPS metadata (fix time, number of satellites used, vertical accuracy), bird biometrics data measured during tagging (bill length, bill depth, tarsus length, wing length, body mass), life history data (day of ringing, age, resightings by volunteers), as well as growth data of chicks.\nTo allow anyone to use this dataset, we have released the data to the public domain under a Creative Commons Zero waiver (http://creativecommons.org/publicdomain/zero/1.0/). We would appreciate however, if you read and follow these norms for data use (http://www.inbo.be/en/norms-for-data-use) and provide a link to the original dataset (https://doi.org/10.15468/02omly) whenever possible. If you use these data for a scientific paper, please cite the dataset following the applicable citation norms and/or consider us for co-authorship. We are always interested to know how you have used or visualized the data, or to provide more information, so please contact us via the contact information provided in the metadata, opendata@inbo.be or https://twitter.com/LifeWatchINBO.\nThe bird tracking network used to collect these data is set up and maintained by the INBO and VLIZ as part of the Flemish contribution to LifeWatch.","type":"OCCURRENCE","hostingOrganizationKey":"1cd669d0-80ea-11de-a9d0-f1765f95f18b","hostingOrganizationTitle":"Research Institute for Nature and Forest (INBO)","publishingCountry":"BE","publishingOrganizationKey":"1cd669d0-80ea-11de-a9d0-f1765f95f18b","publishingOrganizationTitle":"Research Institute for Nature and Forest (INBO)","license":"http://creativecommons.org/publicdomain/zero/1.0/legalcode","decades":[2010],"keywords":["Occurrence","Observation","","Larus fuscus","Herring Gull","animal movement","LifeWatch","bird tracking","Larus argentatus","UvA-BiTS","Lesser Black-backed Gull","habitat use","migration","GPS tracking","MachineObservation"],"recordCount":8474604},{"key":"82dc5194-f762-11e1-a439-00145eb45e9a","title":"Fungal Biodiversity Centre (CBS) - Fungi strains","doi":"10.15468/giuq7w","description":"Living collection of fungi of the Fungal Biodiversity Centre (CBS) of the Netherlands.","type":"OCCURRENCE","hostingOrganizationKey":"cace8d10-2646-11d8-a2da-b8a03c50a862","hostingOrganizationTitle":"Netherlands Biodiversity Information Facility (NLBIF)","publishingCountry":"NL","publishingOrganizationKey":"6a430540-7f09-11d8-a1a0-b8a03c50a862","publishingOrganizationTitle":"CBS Fungal Biodiversity Centre","license":"http://creativecommons.org/publicdomain/zero/1.0/legalcode","keywords":["Occurrence","Specimen","fungi","living specimen","collection"],"recordCount":49459},{"key":"b55058c4-d270-42b1-b849-332f734cfc33","title":"Springtales from lichen communities at Kollåsen in Norway","doi":"10.15468/a13mrw","description":"The data collections were conducted as part of a larger project called FuncFinse. We aimed to study if and how the (functional) diversity of lichen communities determines the species diversity and community composition of micro-arthropods (Collembola). We created experimental patches with mixtures of one, two, three, or four different lichen species and placed these in lichen mats in semi-open pine forest (Pinus sylvestris) in Kollåsen, Ski, Norway. The soil micro-arthropods were harvested from the lichen patches after one summer season of incubation.","type":"SAMPLING_EVENT","hostingOrganizationKey":"64795dcb-ad74-41b3-95e5-cc52ba754776","hostingOrganizationTitle":"GBIF.no","publishingCountry":"NO","publishingOrganizationKey":"8256e897-3a17-4a2d-8bf8-54cf22b624bd","publishingOrganizationTitle":"Norwegian University of Life Sciences (NMBU), Faculty of Environmental Sciences and Natural Resource Management","license":"http://creativecommons.org/licenses/by-nc/4.0/legalcode","keywords":["springtales","lichen","Samplingevent"],"recordCount":1170},{"key":"95e3042f-f48d-4a04-8251-f755bebeced6","title":"WIWO (NL) - Monitoring and breeding ecology of arctic birds at Medusa Bay","doi":"10.15468/b9yuth","description":"Bird numbers (number of nests or number of territories) of all species within fixed plots were monitored in a standardized way, in order to reveal temporal changes in breeding bird numbers at Medusa Bay. Additionally some important demographic variables were monitored to further explain these changes (i.e. arthropod abundance). Research activities also included research on breeding ecology of Brent Geese in relation to Snowy Owls.","type":"OCCURRENCE","hostingOrganizationKey":"cace8d10-2646-11d8-a2da-b8a03c50a862","hostingOrganizationTitle":"Netherlands Biodiversity Information Facility (NLBIF)","publishingCountry":"NL","publishingOrganizationKey":"4e11ef64-489e-42aa-a5cd-cbe45b5075d1","publishingOrganizationTitle":"Working Group International Waterbird and Wetland Research (WIWO) - The Netherlands","license":"http://creativecommons.org/publicdomain/zero/1.0/legalcode","decades":[2000],"keywords":["Occurrence","Observation","Breeding","Migration","Arthropods","Arctic birds"],"recordCount":653},{"key":"ab3272e4-2b89-487f-8619-e59adf5733cd","title":"European Invertebrate Survey (EIS-NL) - Orthoptera Specimen","doi":"10.15468/jeeqht","description":"Orthoptera (grasshoppers, groundhoppers, crickets, bushcrickets), earwigs (Dermaptera) and cockroaches (Blattaria) collected in the Netherlands in the years between 1800 and 2002. Occurrence information is provided on a 10x10 km scale. The original source is the database of the Dutch branch of European Invertebrate Survey (EIS-NL). At the time this dataset was generated for publication in GBIF (2004) the specimen were deposited in several separate collections. In the years thereafter most of these collections have been merged into the main natural history collection of Naturalis Biodiversity Center. In due time this dataset shall be checked for possible duplication of information.","type":"OCCURRENCE","hostingOrganizationKey":"cace8d10-2646-11d8-a2da-b8a03c50a862","hostingOrganizationTitle":"Netherlands Biodiversity Information Facility (NLBIF)","publishingCountry":"NL","publishingOrganizationKey":"a29a14ca-d257-4f31-acc0-d0b867ee723f","publishingOrganizationTitle":"European Invertebrate Survey (EIS) - The Netherlands","license":"http://creativecommons.org/publicdomain/zero/1.0/legalcode","decades":[1800,1810,1820,1830,1840,1850,1860,1870,1880,1890,1900,1910,1920,1930,1940,1950,1960,1970,1980,1990,2000],"keywords":["Occurrence","Specimen","Orthoptera"],"recordCount":17031},{"key":"733854db-11e2-472f-914f-461c06943090","title":"Natural History Museum Maastricht (NL) - Entomological Collection","doi":"10.15468/w0qebf","description":"The collection includes a large number of insects and spiders. The main collections are the Lepidoptera collection (among others Maassen, Lücker, Rootbeen, Baltus), Erich Wasmann’s collection of Formicidae, Isoptera, myrmecophiles and termitophiles, and the Coleoptera collection (for example Poot). Indigenous material was mostly collected in Limburg (Southern Netherlands), foreign material was either collected by collectors who left their collections to the NHMM or it was sent to them because of their recognised expertise in their field or as exchange material.\n\nMost of the material in the collection was collected in the twentieth century, though the Wasmann collection (not yet digitized) also contains a significant amount of 19th century material.","type":"OCCURRENCE","hostingOrganizationKey":"cace8d10-2646-11d8-a2da-b8a03c50a862","hostingOrganizationTitle":"Netherlands Biodiversity Information Facility (NLBIF)","publishingCountry":"NL","publishingOrganizationKey":"01d38e13-944c-4f4b-96a2-25ecf1751140","publishingOrganizationTitle":"Natural History Museum Maastricht","license":"http://creativecommons.org/publicdomain/zero/1.0/legalcode","decades":[1810,1820,1830,1840,1850,1860,1870,1880,1890,1900,1910,1920,1930,1940,1950,1960,1970,1980,1990],"keywords":["Occurrence","Specimen"],"recordCount":22852},{"key":"6ec63232-a552-4c8d-9932-5caecefdace4","title":"Waarneming.nl (NL) - Great Grey Shrike Count 2007-2008","doi":"10.15468/n5gtjy","description":"Since 2007 every winter a count is organised by Waarneming.nl in order to monitor the dynamics of the Great Grey Shrike populations in The Netherlands in a number of dedicated areas. Volunteer bird watchers select their own area and every winter they count twice, in December and in late January / early February. Also the absence of Great Grey Shrikes was noted (0 counts). The results of these yearly counts are captured in maps that show the presence / absence of these birds (http://waarneming.nl/tel_project_new/gmap/225). For this dataset, covering the winter of 2007 / 2008, in total 223 individual birds were monitored in 183 areas. The dataset contains multiple counts per individual.","type":"OCCURRENCE","hostingOrganizationKey":"cace8d10-2646-11d8-a2da-b8a03c50a862","hostingOrganizationTitle":"Netherlands Biodiversity Information Facility (NLBIF)","publishingCountry":"NL","publishingOrganizationKey":"1730bad5-7c8d-4524-9a74-ad8667b6061f","publishingOrganizationTitle":"Waarneming.nl","license":"http://creativecommons.org/licenses/by-nc/4.0/legalcode","decades":[2000],"keywords":["Occurence","Lanius Excubitor\nGreat Grey Shrike\nKlapekster\nWaarneming.nl","Observation"],"recordCount":2157},{"key":"7fa0eb8e-f762-11e1-a439-00145eb45e9a","title":"Base de datos y colección de distintos grupos del zooplancton de regiones marinas prioritarias de Jalisco y Colima en el Pacífico mexicano (Larvas de peces)","doi":"10.15468/4sgwtb","description":"<p>Nuestro conocimiento de la fauna zooplanctónica, en toda la costa mexicana, es aún escaso, y los pocos estudios que existen son aislados y no secuenciales. Es por eso que en este proyecto se pretende estudiar y difundir los datos de varios grupos del zooplancton   que fueron recolectados desde el año 1988 (medusas),  1990 (copépodos,  eufáusidos)  y otros colectados de manera sistemática durante 1995-1998  (larvas de peces y quetognatos), conforman cerca de 70 sitios georeferenciados, ubicadas en tres Áreas Marinas Prioritarias del Jalisco y Colima.   Se creará una base de datos en versión BIOTICA con la información de los organismos encontrados y los datos de los sitios de recolección.   Se creará una colección de referencia con por lo menos un ejemplar de cada una de las distintas especies identificadas. Se calcula obtener un mínimo de 100 especies de larvas de peces, 20 especies de medusas, 40 especies de  copépodos,  5 especies de eufaúsidos y 11 especies de quetognatos, más de 10, 000 registros curatoriales y 6100  ejemplares a partir de 50 localidades georreferenciadas y más de 300  muestras analizadas.\nPalabras clave: colección, larvas de peces, copépodos, medusas, quetognatos, eufáusidos</p>\n<p>Reino: 1\nFilo: 1\nClase: 1\nOrden: 32\nFamilia: 59\nGénero: 83\nEspecie: 81\nEpitetoinfraespecifico: 2</p>","type":"OCCURRENCE","hostingOrganizationKey":"ff90b050-c256-11db-b71b-b8a03c50a862","hostingOrganizationTitle":"Comisión nacional para el conocimiento y uso de la biodiversidad","publishingCountry":"MX","publishingOrganizationKey":"ff90b050-c256-11db-b71b-b8a03c50a862","publishingOrganizationTitle":"Comisión nacional para el conocimiento y uso de la biodiversidad","license":"http://creativecommons.org/licenses/by/4.0/legalcode","decades":[1990],"keywords":["Occurrence","Specimen","Peces"],"recordCount":2427},{"key":"1dcc7df9-e92d-4c6a-a4d8-547138ba6f5d","title":"WIWO (NL) - Migration of Pacific Golden Plovers through North-Eastern Mongolia","doi":"10.15468/tc7vq2","description":"During a 16-day expedition in may 2005 the migration of Pacific Golden Plovers through the Mongol-Daguur Strictly Protected Area in North-Eastern Mongolia was monitored. Pacific Golden Plovers were caught using a Wilsternet. Additionally, passing flocks were counted, and casualties during catching were dissected.","type":"OCCURRENCE","hostingOrganizationKey":"cace8d10-2646-11d8-a2da-b8a03c50a862","hostingOrganizationTitle":"Netherlands Biodiversity Information Facility (NLBIF)","publishingCountry":"NL","publishingOrganizationKey":"4e11ef64-489e-42aa-a5cd-cbe45b5075d1","publishingOrganizationTitle":"Working Group International Waterbird and Wetland Research (WIWO) - The Netherlands","license":"http://creativecommons.org/publicdomain/zero/1.0/legalcode","decades":[2000],"keywords":["Occurrence","Observation","Migration","North-Eastern Mongolia","Birds"],"recordCount":12808},{"key":"0df70865-6344-453d-91be-fcef53f4554c","title":"Computarización de la Colección nacional del phylum Porifera Gerardo Green","doi":"10.15468/y0klox","description":"<p>Debido a su gran biodiversidad, es indudable la importancia del estudio del Phylum Porifera para nuestro país. Aunque aún son pocos los investigadores dedicados al estudio de poríferos y sus numerosos compuestos naturales, los estudios en este sentido se están multiplicando. En contraste, hasta donde se sabe existen solamente dos taxónomos en el país, y no se cuenta con una colección de referencia de este phylum que esté organizada para su uso por la comunidad científica nacional e internacional.\nEn este sentido, en el Instituto de Ciencias del Mar y Limnología de la UNAM se cuenta con la colección de poríferos más grande e importante del país, la cual contiene por lo menos: 250 especies y es la más completa en registros curatoriales contenidos (1,050). Esta colección se ha integrado tanto a partir de las múltiples expediciones oceanográficas de la UNAM, como de las donaciones por parte de las diversas instituciones y grupos de trabajo que han acudido a lo largo de los últimos 22 años en busca de asesoría y determinación de los ejemplares por ellos colectados a lo largo de Pacífico y el Atlántico Mexicanos.\nSi bien el material disponible es abundante y representativo, es necesario 1) computarizar la colección para que ésta pueda ser consultada y mantenida con eficiencia. 2) georreferenciar aproximadamente el 35% de aquellos que no fueron colectados desde los buques oceanográficos de la UNAM, estos últimos siempre georreferencian las estaciones de muestreo (en el caso de las esponjas son aproximádamente el 50%) y 3) determinar aún cerca del 15% de los ejemplares.\nCon la realización de este proyecto se obtendrá un recuento total de los registros, ejemplares, localidades y especies, quedará establecida una colección de referencia del Phylum Porifera en el país; se proveerá de un inventario completo relacionado con la distribución de las especies y de los diferentes ambientes que habitan y se terminará con la identificación taxonómica de las especies. Además, se elaborará un catálogo de autoridades del Phylum Porifera, según definición de la CONABIO.</p>\n<p>Reino: 1\nFilo: 1\nClase: 4\nOrden: 18\nFamilia: 51\nGénero: 110\nSubgénero: 24\nEspecie: 264</p>","type":"OCCURRENCE","hostingOrganizationKey":"ff90b050-c256-11db-b71b-b8a03c50a862","hostingOrganizationTitle":"Comisión nacional para el conocimiento y uso de la biodiversidad","publishingCountry":"MX","publishingOrganizationKey":"ff90b050-c256-11db-b71b-b8a03c50a862","publishingOrganizationTitle":"Comisión nacional para el conocimiento y uso de la biodiversidad","license":"http://creativecommons.org/licenses/by/4.0/legalcode","decades":[1930,1940,1950,1960,1970,1980,1990,2000],"keywords":["Occurrence","Specimen","Invertebrados"],"recordCount":957},{"key":"03493d8b-d05e-4f4b-9bd8-8b48abe81924","title":"Phytoplankton and zooplankton diversity of 18 lakes of the lacustrine system of the Middle Rio Doce","doi":"10.15468/udwets","description":"This resource contains data from the phytoplankton and zooplankton community structure, as well as the physical and chemical variables of eighteen ponds sampled in the Brazilian Long-Term Ecological Research project site 4 \"Biological Dynamics and Biodiversity Conservation in the Atlantic Forest of the Rio Doce-MG\". Sampling occurred quarterly for one year.","type":"METADATA","hostingOrganizationKey":"f5fd374b-89cb-4ab6-b3eb-794c65f232c3","hostingOrganizationTitle":"Sistema de Informação sobre a Biodiversidade Brasileira - SiBBr","publishingCountry":"BR","publishingOrganizationKey":"f5fd374b-89cb-4ab6-b3eb-794c65f232c3","publishingOrganizationTitle":"Sistema de Informação sobre a Biodiversidade Brasileira - SiBBr","license":"http://creativecommons.org/licenses/by-nc/4.0/legalcode","decades":[2000],"keywords":["Biodiversity.","Brazil","Natural lakes","Rio Doce","plankton","Tropical"],"recordCount":9079},{"key":"21934821-38c4-496f-a17b-e8dafd29eabf","title":"Iberian Peninsula and Balearic Island Bathynellacea (Crustacea, Syncarida) database","doi":"10.15468/appzdr","description":"This is the first published database of Bathynellacea. It includes data of bathynellids (Crustacea, Bathynellacea) from the Iberian Peninsula and Balearic Island collected along 64 years (1949 to 2013). The samples come from groundwater (caves, springs, wells and hyporrheic habitat associated rivers) from both sampling campaigns and occasional sampling conducted throughout the Iberian Peninsula and Balearic Islands. The dataset lists ocurrence data of bathynellids distribution, sampling sites (with localities, county and geographic coordinates), taxonomic information (from family to species level) and sampling sources (collector and sampling dates) for all records. The data were compiled by A.I. Camacho (AIC) and come from own samples, literature and samples donated by several Spanish and foreign researchers which were studied by AIC. The descriptions of new species and species identifications have been carried out by an expert taxonomist (AIC) with 25 years experience in the bathynellids studies. Many of the sampling sites are type localities of endemic species from Iberian Peninsula. The data set includes 409 samples record corresponding to two families, 12 genera and 60 species, 42 of them formally described plus 18 taxa unpublished. This represents everything known for the study area, and nearly a quarter of all known species of Bathynellacea in the world. The main collectors are J. Notenboom & I. Meijers, R. Rouch et coll., A.I. Camacho et coll. (C. Puch, F. Molinero, A.G. Valdecasas, J. Rodriguez, members of G.E. Edelweiss and G. E. Bathynellidae).","type":"OCCURRENCE","hostingOrganizationKey":"6c4a0bb0-2a4d-11d8-aa2d-b8a03c50a862","hostingOrganizationTitle":"GBIF-Spain","publishingCountry":"ES","publishingOrganizationKey":"3059a14b-7b43-41ce-beef-873999911dfe","publishingOrganizationTitle":"Spanish National Museum of Natural Sciences (CSIC)","license":"http://creativecommons.org/licenses/by-nc/4.0/legalcode","decades":[1940,1950,1960,1970,1980,1990,2000,2010],"keywords":["Crustacea","Iberian Peninsula","Bathynellacea","Bathynellidae","Parabathynellidae","Balearic Islands","groundwater fauna","Syncarida","Malacostraca","Invertebrates collections"],"recordCount":409},{"key":"f4ecc84b-b746-48b2-81d7-119c35fa7cda","title":"Fortalecimiento de las colecciones de ECOSUR. Primera fase (Corales Chetumal)","doi":"10.15468/ydstlj","description":"<p>En este proyecto se trabajará con 21 colecciones de ECOSUR las cuales se encuentran distribuidas en tres sedes. En Chetumal se tienen 11 colecciones (Zooplancton, Ictioplancton, Poliquetos, Nemátodos, Corales, Hormigas, Mariposas, Peces, Anfibios y reptiles, Aves y Mamíferos marinos), en San Cristóbal de las Casas 6 (Insectos, Abejas, Peces, Anfibios y reptiles, Mamíferos y un Herbario) y en Tapachula 4 (Insectos, Arañas, Herbario y Hongos). Para un mejor mantenimiento y uso de las colecciones, se hará trabajo curatorial en cada una de ellas y se actualizarán sus bases de datos, las cuales serán administradas por una Unidad de Bioinformática. Todas las especies registradas en las 21 colecciones de ECOSUR que participan en este proyecto, contarán con fotografías de alta calidad para su uso en identificaciones taxonómicas. Para lograr esta meta, se contará con la participación de 16 investigadores y 7 técnicos contratados por ECOSUR, además de 9 capturistas y 14 técnicos externos y una responsable de la Unidad de Bioinformática que se contratarán con recursos de este financiamiento. También se tendrá la participación de 13 taxónomos invitados y se comprará equipo necesario para el trabajo curatorial en estas 21 colecciones. Al término del proyecto se espera tener más de 98 145 registros en bases de datos administradas por la Unidad de Bioinformática, con datos de más de 5,000 especies de más de 1,000 localidades.</p>\n<p>Reino: 1\nFilo: 1\nClase: 2\nOrden: 2\nFamilia: 14\nGénero: 30\nEspecie: 48\nEpitetoinfraespecifico: 7</p>","type":"OCCURRENCE","hostingOrganizationKey":"ff90b050-c256-11db-b71b-b8a03c50a862","hostingOrganizationTitle":"Comisión nacional para el conocimiento y uso de la biodiversidad","publishingCountry":"MX","publishingOrganizationKey":"ff90b050-c256-11db-b71b-b8a03c50a862","publishingOrganizationTitle":"Comisión nacional para el conocimiento y uso de la biodiversidad","license":"http://creativecommons.org/licenses/by/4.0/legalcode","decades":[1900,1910,1920,1930,1940,1950,1960,1970,1980,1990,2000],"keywords":["Occurrence","Specimen","Invertebrados"],"recordCount":310},{"key":"b68784d8-cb51-495a-8a21-a07cc369d5cd","title":"Kalahari woody vegetation Transect by Ringrose and Matheson (1995 - 2009)","doi":"10.15468/wwmzaa","description":"Database represents a reconstruction of woody cover which were mostly collected in   Botswana from 1995 to 2009. This was done in response to a request by the Government of Botswana and other agencies.","type":"SAMPLING_EVENT","hostingOrganizationKey":"02b89818-33ab-4bf7-984d-f88a8e0b0b0f","hostingOrganizationTitle":"Okavango Research Institute","publishingCountry":"BW","publishingOrganizationKey":"02b89818-33ab-4bf7-984d-f88a8e0b0b0f","publishingOrganizationTitle":"Okavango Research Institute","license":"http://creativecommons.org/publicdomain/zero/1.0/legalcode","keywords":["Sampling event","Khama Rhino sunctuary","Woody vegetation cover. Toteng","Sehitwa","Woody species","Botswana","Canopy cover","Vegetation","Gumare Kalahari woodland","Database","Trees of Botswana","Okavango Delta"],"recordCount":4256},{"key":"f17d68da-83d0-4306-b555-cc7e6589d718","title":"Fortalecimiento de las colecciones de ECOSUR. Primera fase (Poliquetos Chetumal)","doi":"10.15468/phmoj5","description":"<p>En este proyecto se trabajará con 21 colecciones de ECOSUR las cuales se encuentran distribuidas en tres sedes. En Chetumal se tienen 11 colecciones (Zooplancton, Ictioplancton, Poliquetos, Nemátodos, Corales, Hormigas, Mariposas, Peces, Anfibios y reptiles, Aves y Mamíferos marinos), en San Cristóbal de las Casas 6 (Insectos, Abejas, Peces, Anfibios y reptiles, Mamíferos y un Herbario) y en Tapachula 4 (Insectos, Arañas, Herbario y Hongos). Para un mejor mantenimiento y uso de las colecciones, se hará trabajo curatorial en cada una de ellas y se actualizarán sus bases de datos, las cuales serán administradas por una Unidad de Bioinformática. Todas las especies registradas en las 21 colecciones de ECOSUR que participan en este proyecto, contarán con fotografías de alta calidad para su uso en identificaciones taxonómicas. Para lograr esta meta, se contará con la participación de 16 investigadores y 7 técnicos contratados por ECOSUR, además de 9 capturistas y 14 técnicos externos y una responsable de la Unidad de Bioinformática que se contratarán con recursos de este financiamiento. También se tendrá la participación de 13 taxónomos invitados y se comprará equipo necesario para el trabajo curatorial en estas 21 colecciones. Al término del proyecto se espera tener más de 98 145 registros en bases de datos administradas por la Unidad de Bioinformática, con datos de más de 5,000 especies de más de 1,000 localidades.</p>\n<p>Reino: 1\nFilo: 1\nClase: 1\nOrden: 16\nFamilia: 38\nGénero: 190\nSubgénero: 4\nEspecie: 397\nEpitetoinfraespecifico: 3</p>","type":"OCCURRENCE","hostingOrganizationKey":"ff90b050-c256-11db-b71b-b8a03c50a862","hostingOrganizationTitle":"Comisión nacional para el conocimiento y uso de la biodiversidad","publishingCountry":"MX","publishingOrganizationKey":"ff90b050-c256-11db-b71b-b8a03c50a862","publishingOrganizationTitle":"Comisión nacional para el conocimiento y uso de la biodiversidad","license":"http://creativecommons.org/licenses/by/4.0/legalcode","decades":[1950,1960,1970,1980,1990,2000,2010],"keywords":["Occurrence","Specimen","Invertebrados"],"recordCount":2123},{"key":"74065585-3d70-4a56-ab96-39d664933cac","title":"Computarización de la colección de moluscos holoplanctónicos del Golfo de California y Golfo de Tehuantepec","doi":"10.15468/spelgc","description":"<p>Este proyecto propone la computarización de la base de datos de Moluscos Holoplanctónicos\ndel Golfo de California (701 registros de 47 especies y 25, 265 ejemplares) y del Golfo de\nTehuantepec (200 registros de 40 especies y 735 ejemplares, aproximadamente), con el que se\ndará de alta la \"Colección Científica de Moluscos Holoplanctónicos del Golfo de California\"\n(con el acrónimo HOLOPLANCTON). En este momento se están realizando los trámites ante\nla SEMARNAT para el registró de la colección que contiene a la fecha 14 Familias, 24\nGéneros y 47 especies para el Golfo de California. Los especimenes que conformarán la\ncolección HOLOPLANCTON provienen de 137 muestras de zooplancton, 77 del Golfo de\nCalifornia obtenidas en noviembre de 2005, Enero y Julio 2007; y 60 del Golfo de\nTehuantepec obtenidas en junio 2007 y mayo 2008. Las muestras de los cruceros del Golfo de\nCalifornia se obtuvieron con financiamiento de CONACYT en el proyecto \"Monitoreo de la\nproducción secundaria, dinámica poblacional y parasitismo de especies clave del zooplancton\nmediante incubación in situ y métodos hidroacústicos en el Golfo de California\" mientras que\nlas muestras del Golfo de Tehuantepec se obtuvieron con financiamiento del Instituto\nPolitécnico Nacional a través de los proyectos SIP 20070401 \"Biodiversidad de Moluscos\nHoloplanctónicos del Golfo de California\" y SIP 20080918 \"Análisis del zooplancton del\nGolfo de Tehuantepec, Golfo de California y Bahía de La Paz\".\nActualmente los principales esfuerzos para la computarización de nuestras bases de datos se\nhan realizado con las larvas de peces del Golfo de California, pero la incorporación de\npersonal especializado en la taxonomía del grupo de moluscos holoplanctónicos nos permite\nhacer esta propuesta con información que ya ha sido revisada por pares como resultado del\ntrabajo de tesis doctoral de uno de los participantes y como resultado de la publicación de la\ndescripción de nuevas especies de moluscos holoplactónicos que esta en revisión en la revista\nVeliger.</p>\n<p>Reino: 1\nFilo: 1\nClase: 1\nOrden: 6\nFamilia: 14\nGénero: 26\nEspecie: 43\nEpitetoinfraespecifico: 9</p>","type":"OCCURRENCE","hostingOrganizationKey":"ff90b050-c256-11db-b71b-b8a03c50a862","hostingOrganizationTitle":"Comisión nacional para el conocimiento y uso de la biodiversidad","publishingCountry":"MX","publishingOrganizationKey":"ff90b050-c256-11db-b71b-b8a03c50a862","publishingOrganizationTitle":"Comisión nacional para el conocimiento y uso de la biodiversidad","license":"http://creativecommons.org/licenses/by/4.0/legalcode","decades":[2000,2010],"keywords":["Occurrence","Specimen","Invertebrados"],"recordCount":1405},{"key":"115927c2-12e1-49df-b162-d55ea28eefaf","title":"Base de datos de las cicadas mexicanas","doi":"10.15468/fkj8it","description":"<p>El principal objetivo de este proyecto es sistematizar la información ecológica, geográfica y taxonómica de las Cícadas Mexicanas publicadas hasta la fecha, las cuales suman un total de 48 especies, con la finalidad de elaborar una propuesta para incluir, excluir o reclasificar los taxa considerados por la Norma Oficial Mexicana 059-SEMARNAT-2001.</p>\n<p>Reino: 1\nFilo: 1\nClase: 1\nOrden: 1\nFamilia: 1\nGénero: 3\nEspecie: 47</p>","type":"OCCURRENCE","hostingOrganizationKey":"ff90b050-c256-11db-b71b-b8a03c50a862","hostingOrganizationTitle":"Comisión nacional para el conocimiento y uso de la biodiversidad","publishingCountry":"MX","publishingOrganizationKey":"ff90b050-c256-11db-b71b-b8a03c50a862","publishingOrganizationTitle":"Comisión nacional para el conocimiento y uso de la biodiversidad","license":"http://creativecommons.org/licenses/by/4.0/legalcode","decades":[1930,1940,1950,1960,1970,1980,1990,2000],"keywords":["Occurrence","Specimen","Plantas"],"recordCount":359},{"key":"7ffbedb8-f762-11e1-a439-00145eb45e9a","title":"Distribución y aspectos taxonómicos de los corales pétreos (Anthozoa: Scleractinia) del Pacífico mexicano","doi":"10.15468/nqnxft","description":"<p>Los corales pétreos (Scleractinia) del Pacífico americano han sido investigados desde 1864, y uno de los aspectos que más ha llamado la atención ha sido su distribución geográfica. Durante la primera mitad del siglo XX, una serie de expediciones permitió delinear de manera general el inventario de las especies y sus ámbitos de distribución en la región. Sin embargo, modificaciones taxonómicas propuestas en la década de los 1980s hicieron necesario un ajuste sobre el conocimiento del tema. Para ese tiempo ya se aceptaba que la mayoría de las especies de agua somera (zooxanteladas o arrecifales) eran, en su mayoría, colonizadoras provenientes del Pacífico occidental. También se encontraron las primeras especies endémicas del oeste de América, y se hicieron nuevos registros de taxa, especialmente en islas oceánicas. La década de los 1990s fue fundamental para el conocimiento de la biogeografía de los escleractinios en el Pacífico mexicano ya que comenzaron a aparecer artículos donde el tema era abordado desde la perspectiva numérica y estadística. Al mismo tiempo, nuevas modificaciones taxonómicas, descubrimientos de especies nuevas (p.ej., Pocillopora effusus, endémica de Oaxaca y descrita en 2000), y de otras recién descubiertas en México (Leptoseris papyracea, cuyo reporte se publicó en 2001) hacen necesaria una reevaluación de la distribución del grupo en el país.\nEl objetivo principal de este estudio es el de inventariar a las especies de corales pétreos presentes en la costa occidental de México (incluyendo las Islas Revillagigedo), con base en revisiones taxonómicas y nomenclaturales recientes, y posteriormente compilar en una base de datos todos los registros disponibles sobre el grupo en la región. El trabajo es interinstitucional y colabora el Centro de Investigación Científica y de Educación Superior de Ensenada, la Universidad Autónoma de Baja California (Ensenada), la Universidad Autónoma de Baja California Sur (La Paz), la Universidad de Guadalajara (Puerto Vallarta), y la Universidad del Mar (Puerto Ángel). La información para la base de datos provendrá de varias fuentes: revisiones bibliográficas, revisión de material de colecciones científicas, trabajo de campo y comunicaciones personales.\nAS007</p>\n<p>Reino: 1\nFilo: 1\nClase: 1\nOrden: 1\nFamilia: 14\nGénero: 35\nSubgénero: 2\nEspecie: 105\nEpitetoinfraespecifico: 3</p>","type":"OCCURRENCE","hostingOrganizationKey":"ff90b050-c256-11db-b71b-b8a03c50a862","hostingOrganizationTitle":"Comisión nacional para el conocimiento y uso de la biodiversidad","publishingCountry":"MX","publishingOrganizationKey":"ff90b050-c256-11db-b71b-b8a03c50a862","publishingOrganizationTitle":"Comisión nacional para el conocimiento y uso de la biodiversidad","license":"http://creativecommons.org/licenses/by/4.0/legalcode","decades":[1880,1890,1900,1910,1920,1930,1940,1950,1960,1970,1980,1990,2000],"keywords":["Occurrence","Specimen","Invertebrados"],"recordCount":3406},{"key":"addf4056-698b-4d66-881f-525e51342359","title":"Land and freshwater molluscs of Gran Canaria (Spain)","doi":"10.15468/ny1f9n","description":"The Canary Islands (Spain) are an archipelago of the coast of northwest Africa. Gran Canaria is the third-largest island and located in the centre (Carracedo & Troll, 2016). The island contains a number endemic land snail species (e.g. Brito & Fraga, 2010). Freshwater molluscs are of smaller significance, but are also present. The research of land and freshwater molluscs of the Canaries mainly goes back to the 19th century with the famous works of Webb & Berthelot (1833), Shuttleworth (1852a, 1852b), Mousson (1872), Wollaston (1878), Mabille (1884), Odhner (1931), and others. Recent checklists are available (Groh, 1985; Bank et al., 2002; Brito & Fraga, 2010; Helixebas, 2019) and some more recent papers are cited further in this article. Nevertheless, taxonomic research is still largely based on these old works and many species were never found again since their description or the ecology or proper range is not known. This, together with the threats of global warming (Luque et al., 2013) and the increase of demographic and touristic pressure (Ibáñez et al., 1997)  could (and probably already has) detrimental consequences for the survival of these species (see also the assessments on https://www.iucnredlist.org/). Therefore, there is an urgent need for information on ecology, distribution and taxonomy. “Land and freshwater molluscs of Gran Canaria (Spain)” is an occurrence dataset containing 389 observations of 62 different taxa of land and freshwater molluscs encountered on Gran Canaria, an island central in the Canarian archipelago (Spain). Various sites were inspected in a period between 1988 to 2020. The aim is to contribute to the knowledge on the ecology and distribution of these species on the island such that it may aid conservation and research of these organisms in the future. The dataset is published as a standardized Darwin Core Archive and includes for each observation a stable occurrenceID, scientific name, date, and location of the observation, as well as info on lifeStage and organismQuantity, and supplementary remarks on the determination and the observation itself. We have released this dataset to the public domain under a CC0 1.0 Universal (CC0 1.0) Public Domain Dedication (https://creativecommons.org/publicdomain/zero/1.0/).","type":"OCCURRENCE","hostingOrganizationKey":"37e82b90-1e21-11de-ab90-f72009d2669b","hostingOrganizationTitle":"Belgian Biodiversity Platform","publishingCountry":"BE","publishingOrganizationKey":"05c249d0-dfa0-11d8-b22e-b8a03c50a862","publishingOrganizationTitle":"Ghent University","license":"http://creativecommons.org/publicdomain/zero/1.0/legalcode","decades":[1980,1990,2000,2010,2020],"keywords":["Gran Canaria","data paper","snails","terrestrial","observation","freshwater","occurrence","Mollusca","open data","Spain","Occurrence"],"recordCount":389},{"key":"36a96c9f-7f75-49df-abd8-c07d8262f91f","title":"Inventario y catálogo de ostrácodos recientes de los mares mexicanos","doi":"10.15468/lihjgf","description":"<p>La ostracofauna en el Sur del Golfo de México muestra cinco claras asociaciones relacionadas principalmente en las masas de agua y en el tipo de sustrato. La primera asociación comprende la fauna central del Golfo de México, corresponde al agua profunda del Atlántico del Norte a profundidades mayores de 1000m. La segunda asociación se desarrolla en las aguas superficiales con influencia fluvial, en la porción occidental de la plataforma interna entre 10 y 60m de profundidad. La tercera asociación está representada por los ostrácodos que habitan en la plataforma media, sin influencia fluvial, profundidades entre los 60 y 110m. La asociación de plataforma externa considerada como la cuarta asociación talud continental está influenciada por el agua subtropical entre los 110 y 800m de profundidad. En la parte interna y media de la plataforma Oeste de Yucatán, considerada como el quinto grupo, las asociaciones no se encuentran tan bien delineadas como en la parte terrígena.\nLos objetivos del trabajo son: \n·\tRealizar por medio de recopilación y del análisis del material ya colectado el inventario de los ostrácodos recientes del Sur del Golfo de México en la Zona  Económica Exclusiva.\n·\tElaborar un base de datos siguiendo los lineamientos establecidos por el Sistema Nacional de Información sobre Biodiversidad de las especies de ostrácodos, incluyendo su relación con los principales parámetros oceanográficos (profundidad, temperatura, salinidad), su distribución espacial y temporal, así como su abundancia absoluta y relativa en cada muestra.\n·\tDocumentar la distribución biogeográfica de las especies y/o asociaciones de manera que se puedan distinguir los diferentes ambientes y factores que afectan su distribución.\n·\tContinuar con la formación de recursos humanos en este grupo, el microbentos, que permita el contar con especialistas en el trabajo taxonómico y del análisis del comportamiento poblacional.\n·\tOrganizar y sistematizar la colección de ostrácodos del ICMyL, incorporando los ejemplares de este estudio.</p>\n<p>Reino: 1\nFilo: 1\nClase: 1\nOrden: 2\nFamilia: 20\nGénero: 67\nEspecie: 102\nEpitetoinfraespecifico: 1</p>","type":"OCCURRENCE","hostingOrganizationKey":"ff90b050-c256-11db-b71b-b8a03c50a862","hostingOrganizationTitle":"Comisión nacional para el conocimiento y uso de la biodiversidad","publishingCountry":"MX","publishingOrganizationKey":"ff90b050-c256-11db-b71b-b8a03c50a862","publishingOrganizationTitle":"Comisión nacional para el conocimiento y uso de la biodiversidad","license":"http://creativecommons.org/licenses/by/4.0/legalcode","decades":[1980,1990],"keywords":["Occurrence","Specimen","Invertebrados"],"recordCount":3927},{"key":"2838b79f-bd50-46cd-ac42-2bef5771a646","title":"Fortalecimiento de las colecciones de ECOSUR. Primera fase (Mamíferos marinos Chetumal)","doi":"10.15468/slwbhy","description":"<p>En este proyecto se trabajará con 21 colecciones de ECOSUR las cuales se encuentran distribuidas en tres sedes. En Chetumal se tienen 11 colecciones (Zooplancton, Ictioplancton, Poliquetos, Nemátodos, Corales, Hormigas, Mariposas, Peces, Anfibios y reptiles, Aves y Mamíferos marinos), en San Cristóbal de las Casas 6 (Insectos, Abejas, Peces, Anfibios y reptiles, Mamíferos y un Herbario) y en Tapachula 4 (Insectos, Arañas, Herbario y Hongos). Para un mejor mantenimiento y uso de las colecciones, se hará trabajo curatorial en cada una de ellas y se actualizarán sus bases de datos, las cuales serán administradas por una Unidad de Bioinformática. Todas las especies registradas en las 21 colecciones de ECOSUR que participan en este proyecto, contarán con fotografías de alta calidad para su uso en identificaciones taxonómicas. Para lograr esta meta, se contará con la participación de 16 investigadores y 7 técnicos contratados por ECOSUR, además de 9 capturistas y 14 técnicos externos y una responsable de la Unidad de Bioinformática que se contratarán con recursos de este financiamiento. También se tendrá la participación de 13 taxónomos invitados y se comprará equipo necesario para el trabajo curatorial en estas 21 colecciones. Al término del proyecto se espera tener más de 98 145 registros en bases de datos administradas por la Unidad de Bioinformática, con datos de más de 5,000 especies de más de 1,000 localidades.</p>\n<p>Reino: 1\nFilo: 1\nClase: 1\nOrden: 2\nFamilia: 5\nGénero: 8\nEspecie: 8</p>","type":"OCCURRENCE","hostingOrganizationKey":"ff90b050-c256-11db-b71b-b8a03c50a862","hostingOrganizationTitle":"Comisión nacional para el conocimiento y uso de la biodiversidad","publishingCountry":"MX","publishingOrganizationKey":"ff90b050-c256-11db-b71b-b8a03c50a862","publishingOrganizationTitle":"Comisión nacional para el conocimiento y uso de la biodiversidad","license":"http://creativecommons.org/licenses/by/4.0/legalcode","decades":[1980,1990,2000,2010],"keywords":["Occurrence","Specimen","Mamíferos"],"recordCount":90},{"key":"e8bfbb07-a739-49e9-952f-cd4e9a06603c","title":"Fortalecimiento de las colecciones de ECOSUR. Primera fase (Zooplancton Chetumal)","doi":"10.15468/evh3kd","description":"<p>En este proyecto se trabajará con 21 colecciones de ECOSUR las cuales se encuentran distribuidas en tres sedes. En Chetumal se tienen 11 colecciones (Zooplancton, Ictioplancton, Poliquetos, Nemátodos, Corales, Hormigas, Mariposas, Peces, Anfibios y reptiles, Aves y Mamíferos marinos), en San Cristóbal de las Casas 6 (Insectos, Abejas, Peces, Anfibios y reptiles, Mamíferos y un Herbario) y en Tapachula 4 (Insectos, Arañas, Herbario y Hongos). Para un mejor mantenimiento y uso de las colecciones, se hará trabajo curatorial en cada una de ellas y se actualizarán sus bases de datos, las cuales serán administradas por una Unidad de Bioinformática. Todas las especies registradas en las 21 colecciones de ECOSUR que participan en este proyecto, contarán con fotografías de alta calidad para su uso en identificaciones taxonómicas. Para lograr esta meta, se contará con la participación de 16 investigadores y 7 técnicos contratados por ECOSUR, además de 9 capturistas y 14 técnicos externos y una responsable de la Unidad de Bioinformática que se contratarán con recursos de este financiamiento. También se tendrá la participación de 13 taxónomos invitados y se comprará equipo necesario para el trabajo curatorial en estas 21 colecciones. Al término del proyecto se espera tener más de 98 145 registros en bases de datos administradas por la Unidad de Bioinformática, con datos de más de 5,000 especies de más de 1,000 localidades.</p>\n<p>Reino: 1\nFilo: 7\nClase: 14\nOrden: 38\nFamilia: 159\nGénero: 329\nSubgénero: 9\nEspecie: 654\nEpitetoinfraespecifico: 29</p>","type":"OCCURRENCE","hostingOrganizationKey":"ff90b050-c256-11db-b71b-b8a03c50a862","hostingOrganizationTitle":"Comisión nacional para el conocimiento y uso de la biodiversidad","publishingCountry":"MX","publishingOrganizationKey":"ff90b050-c256-11db-b71b-b8a03c50a862","publishingOrganizationTitle":"Comisión nacional para el conocimiento y uso de la biodiversidad","license":"http://creativecommons.org/licenses/by/4.0/legalcode","decades":[1960,1970,1980,1990,2000,2010],"keywords":["Occurrence","Specimen","NO DISPONIBLE","Invertebrados"],"recordCount":11594},{"key":"3ce834a6-f29f-40ed-9d41-bc85d42cd35b","title":"Modelos de distribución actual y futura de los crácidos presentes en México","doi":"10.15468/z3y374","description":"<p>Los crácidos son el grupo de aves más vulnerable en el Neotrópico; cerca de la mitad de las especies que conforman esta familia se encuentran dentro de alguna categoría de riesgo. En México, existen 13 taxones de crácidos de los cuales seis se encuentran listados dentro de alguna categoría de riesgo en la NOM-059-SEMARNAT-2010 y de estos, dos se encuentran en un estado de conservación delicado a nivel global. En este contexto, resulta imprescindible contar con información de calidad y espacialmente explícita sobre la distribución geográfica actual y futura de estas especies, si se pretende definir estrategias adecuadas de manejo, así como el planteamiento de políticas para su conservación. En este proyecto, se plantea la elaboración de una base de datos actualizada, validada y depurada de los registros geográficos de los crácidos que se distribuyen en México, así como la construcción de modelos de distribución geográfica actual y futura con base en la estimación de tasas de cambio de cobertura del terreno. Adicionalmente, derivado de este proyecto, se elaborarán al menos dos manuscritos para ser publicados en revistas indizadas.\nCracidae, nicho, GARP, MaxEnt, cambio en la cobertura del terreno, NOM-059-SEMARNAT-2010</p>\n<p>Reino: 1\nFilo: 1\nClase: 1\nOrden: 1\nFamilia: 1\nGénero: 5\nEspecie: 8\nEpitetoinfraespecifico: 13</p>","type":"OCCURRENCE","hostingOrganizationKey":"ff90b050-c256-11db-b71b-b8a03c50a862","hostingOrganizationTitle":"Comisión nacional para el conocimiento y uso de la biodiversidad","publishingCountry":"MX","publishingOrganizationKey":"ff90b050-c256-11db-b71b-b8a03c50a862","publishingOrganizationTitle":"Comisión nacional para el conocimiento y uso de la biodiversidad","license":"http://creativecommons.org/licenses/by/4.0/legalcode","decades":[1880,1890,1900,1910,1920,1930,1940,1950,1960,1970,1980,1990,2000,2010],"keywords":["Occurrence","Specimen","Aves"],"recordCount":583},{"key":"e731aee1-da7b-4c30-97bf-f7c27581a71d","title":"Inventario de corales pétreos, asteroideos, equinoideos y peces óseos de arrecifes de la costa de Jalisco, Colima y Michoacán","doi":"10.15468/47m666","description":"<p>A través de la recopilación bibliográfica, revisión de ejemplares en museos y colecciones y recolecta de ejemplares en campo, se propone la elaboración de un inventario de especies de corales escleractinios, equinodermos y peces teleósteos asociados a arrecifes coralinos y rocosos de la costa de Jalisco, Colima y Michoacán. Este inventario se presentará en una base de datos en formato BIOTICA y contendrá por lo menos 1,000 registros sobre la distribución geográfica de 15 especies de corales pétreos (200 registros), 30 especies de equinodermos (400 registros) y 200 especies de peces óseos (400 registros) de la costa de Jalisco, Colima y Michoacán. Asimismo, se presentará un elenco sistemático de las especies de corales pétreos (Anthozoa: Scleractinia), de equinodermos (Echinodermata: Asteroidea y Echinoidea), y peces óseos (Teleostei) de la costa de Jalisco, Colima y Michoacán, incluyendo un catálogo de sus sinonimias. También se generará un catálogo fotográfico (75 fotos aproximadamente) de las especies de corales pétreos, equinodermos y peces más comunes de la costa de Jalisco, Colima y Michoacán y un documento que incluya el análisis de riqueza y distribución de especies (biogeografía) de los grupos taxonómicos de la costa de Jalisco, Colima y Michoacán.</p>\n<p>Reino: 1\nFilo: 3\nClase: 6\nOrden: 31\nFamilia: 62\nGénero: 104\nEspecie: 161\nEpitetoinfraespecifico: 1</p>","type":"OCCURRENCE","hostingOrganizationKey":"ff90b050-c256-11db-b71b-b8a03c50a862","hostingOrganizationTitle":"Comisión nacional para el conocimiento y uso de la biodiversidad","publishingCountry":"MX","publishingOrganizationKey":"ff90b050-c256-11db-b71b-b8a03c50a862","publishingOrganizationTitle":"Comisión nacional para el conocimiento y uso de la biodiversidad","license":"http://creativecommons.org/licenses/by/4.0/legalcode","decades":[1970,1980,1990,2000,2010],"keywords":["Occurrence","Specimen","Invertebrados","Peces"],"recordCount":3682},{"key":"29579dca-e296-4724-8f4f-ae39b3f6da14","title":"Zooplancton de sistemas acuáticos artificiales y naturales de Colombia","doi":"10.15472/wpmnfn","description":"ResumenSe identificaron 691 individuos pertenecientes a sesenta y tres especies que hacen parte del zooplancton dulce acuícola de cinco sistemas acuáticos entre artificiales y naturales de Colombia; embalses Betania, Tominé y La Esmeralda los cuales son utilizados principalmente por su potencial hidroeléctrico, y los Lagos de Tota y Sochagota los cuales son aprovechados en sus aguas para el riego de cultivos y recreación turística. De las especies registradas en la comunidad zooplanctónica, diez son de copépodos, nueve de cladóceros, cuarenta y tres de rotíferos y una especie de protozoo. En los sistemas embalsados se encontraron especies típicas de sistemas acuáticos forzados. T. decipiens así como las especies de Keratella y Polyarthra, presentan amplia distribución en ambientes del Neotrópico (Pinto-Coelho 1987, Sendacz et al. 2006, Pavodesi et al. 2002). El número de especies de copépodos y cladóceros encontrados es bajo respecto al número de especies de rotíferos debido a que éstos últimos presentan una amplia diversificación en las aguas continentales (Armengol 1982), especialmente en los ecosistemas tropicales (Lewis 1996).AbstractWe identified 691 individuals belonging to sixty-three species of zooplankton that are part five sweet aquaculture systems between artificial and natural water of Colombia; reservoirs Betania, Tominé and La Esmeralda which are mainly used by its hydroelectric potential, and Tota Lakes and Sochagota which are exploited in its waters for irrigation of crops and tourist recreation. Of the species recorded in the zooplankton community, ten are of copepods, cladocerans nine, forty-three species of rotifers and protozoa. In systems dammed typical species found forced water systems. T. decipiens and Keratella species and Polyarthra, environments have wide distribution in the Neotropics (Pinto-Coelho 1987 Sendacz et al. 2006 Pavodesi et al. 2002). The number of species of copepods and cladocerans found is low compared to the number of rotifer species because the latter have a wide diversification in inland waters (Armengol 1982), especially in tropical ecosystems (Lewis 1996).","type":"OCCURRENCE","hostingOrganizationKey":"c4f66525-4d36-4c18-82ac-98e088f54db4","hostingOrganizationTitle":"Sistema de Información sobre Biodiversidad de Colombia - SiB","publishingCountry":"CO","publishingOrganizationKey":"77c64839-4c99-4a40-beb3-cd16afc23540","publishingOrganizationTitle":"Universidad de los Andes","license":"http://creativecommons.org/licenses/by/4.0/legalcode","decades":[2000],"keywords":["embalse.KeywordsLa Esmeralda","Betania","rotifera","reservoir.","Tominé","cladocera","copepoda","Palabras ClaveLa Esmeralda","Tota","Sochagota","Occurrence","Specimen"],"recordCount":91},{"key":"26d72d3b-4544-4645-aa56-27aa8a669c6f","title":"A Distribution and Taxonomic Reference Dataset of Geranium (Geraniaceae) in the New World","doi":"10.15470/ibqzdo","description":"<p>The dataset includes 8937 records that  covers  genus Geranium  the New World, providing an updated, taxonomically consistent and a sound geographical  distribution of the 137 species of Geranium in America. These are the studied specimens on which following monograph was based:\n\nAedo, Carlos (2012). Revision of Geranium (Geraniaceae) in the New World. Systematic Botany Monographs 95: 550p.</p>\n<p>Besides the exhaustive taxonomic work done, and reflected in the dataset, a detailed revision of the locality of the specimens was performed, and geographic coordinates could be assigned with a 1 minute accuracy in c. 6500 records. Duplicate specimens kept in different collections have been aggregated into single records. Specimens from 128 herbaria were reviewed. These were supplemented by others collected during nine field trips, which allowed to know better the variability of characters within populations, and refine species distribution ranges. These expeditions took place in Argentina, Bolivia, Chile, Costa Rica, Ecuador, Peru, United States and Venezuela, and yielded 235 herbarium specimens of Geranium belonging to 46 species.</p>\n<p>The potential for this dataset to be widely reused is very high, given the level of taxonomic and geographic scrutiny this dataset encompasses, its completeness, and the fact that Geranium is a well-known genus, widely used in horticulture and for pharmaceutical products.</p>","type":"OCCURRENCE","hostingOrganizationKey":"6c4a0bb0-2a4d-11d8-aa2d-b8a03c50a862","hostingOrganizationTitle":"GBIF-Spain","publishingCountry":"ES","publishingOrganizationKey":"0363cbd4-f666-455e-8e86-0bbddcf51950","publishingOrganizationTitle":"CSIC-Real Jardín Botánico","license":"http://creativecommons.org/licenses/by/4.0/legalcode","decades":[1700,1800,1810,1820,1830,1840,1850,1860,1870,1880,1890,1900,1910,1920,1930,1940,1950,1960,1970,1980,1990,2000,2010],"keywords":["Occurrence","Specimen","Taxonomy","Botany","America","Species distribution","Plant Sciences","inventoryRegional","taxonomicAuthority"],"recordCount":8937},{"key":"7898cf5f-11e4-404c-87d2-1d5e3b3e0a18","title":"Global diversity and distributions of symbiotic copepod crustaceans living on scleractinians","doi":"10.15468/heu2gx","description":"<p>This dataset is the first and complete source of information about diversity, hosts and distribution of symbiotic copepods (Copepoda, Crustacea) reported living on stone corals (Hexacorallia: Scleractinia) of the World.</p>\n<p>The dataset unites data on all (1195) records of 384 species of copepods representing 117 genera, 29 families and 3 order discovered worldwide associated with 172 species of scleractinians representing 67 genera and 16 families. It includes information about taxonomy of hosts and symbionts, the names and coordinates of all known (195) sampling sites, the depth and date of all sampling events with such notes in original sources (1039 and 1101, correspondingly), as well as references to all (124) publications.</p>\n<p>The number of currently known scleractinian hosts of copepod crustaceans is just over 10.5% of all known species of hard corals, considering by us as poorly explored potential hosts of copepods.</p>","type":"OCCURRENCE","hostingOrganizationKey":"f5fc4e61-b7a0-414b-ab68-b41cb23e7fdc","hostingOrganizationTitle":"Lomonosov Moscow State University","publishingCountry":"RU","publishingOrganizationKey":"f5fc4e61-b7a0-414b-ab68-b41cb23e7fdc","publishingOrganizationTitle":"Lomonosov Moscow State University","license":"http://creativecommons.org/licenses/by/4.0/legalcode","decades":[1940,1950,1960,1970,1980,1990,2000,2010,2020],"keywords":["Occurrence","diversity – symbiosis – parasitism","Crustacea – Cnidaria – reefs"],"recordCount":3227},{"key":"e45d425d-2404-40a5-b784-3634adc76d08","title":"Arañas de Colombia (Arachnida: Araneae)","doi":"10.15472/vgvll2","description":"Este listado contiene 914 especies de arañas citadas en localidades colombianas. Información recogida y compilada de 273 documentos científicos, que aportan el nombre válido de la especie, su distribución en América y en Colombia, así como el rango altitudinal en el cual han sido colectados, el museo en el que se encuentran depositados. Este listado pretende ser una herramienta de consulta rápida y eficaz para aquellos interesados en la aracnofauna existente en Colombia.\n\nAbstract:\n\nThe present list reviews 914 species of spiders with occurrence in Colombia. The source information was obtained and compiled from two hundred seventy-three scientific documents which provided the valid name of the species, distribution in the Americas and Colombia, elevation range of specimens, and the collections where specimens were deposited. The aim of this list is to be a quick reference tool for those interested in the existing arachnofauna of Colombia.","type":"CHECKLIST","hostingOrganizationKey":"2a7e3080-28a9-11dd-97cd-b8a03c50a862","hostingOrganizationTitle":"Instituto de Investigación de Recursos Biológicos Alexander von Humboldt","publishingCountry":"CO","publishingOrganizationKey":"2a7e3080-28a9-11dd-97cd-b8a03c50a862","publishingOrganizationTitle":"Instituto de Investigación de Recursos Biológicos Alexander von Humboldt","license":"http://creativecommons.org/licenses/by-nc/4.0/legalcode","decades":[2010],"keywords":["taxonomía","Colombia","sistemática","ecología","Araneae","biogeografía","Colombia","ecology","biogeography.","Key words: Spiders","taxonomy","systematic","Araneae","Checklist","Inventorythematic"],"recordCount":1274},{"key":"9cffad6e-51b7-45ca-8679-32374a07f884","title":"Plantas Acuáticas de la Orinoquía Colombiana","doi":"10.15472/tlqst0","description":"Las extensas llanuras inundables de la cuenca del Orinoco constan de las condiciones adecuadas para la proliferación de vegetación acuática. Sin embargo la información sobre la riqueza y los patrones de distribución de estas especies, junto con sus comunidades, es muy reducida a pesar de su importancia ecológica en los Llanos Orientales de Colombia. Irónicamente esta región, que es una de los lugares más sobreexplotados del país, también es uno de los lugares con menos investigación y conocimiento en cuanto a su flora. Con el fin de tener una primera aproximación a la riqueza de especies de macrófitas presentes en esta vasta región, se colectaron, identificaron y fotografiaron todas las especies de plantas que se encontraron asociadas a cuerpos de agua. Durante un año y medio se cubrieron 101 localidades diferentes distribuidas en 6 departamentos (Arauca, Casanare, Guainía, Guaviare, Meta y Vichada) y 19 municipios. Se tomaron muestras estándar de herbario, de plantas  hidrófitas y helófitas, en ambientes lóticos y lénticos, de las especies encontradas en cada localidad. Los 1167 especímenes colectados fueron depositados en el herbario ANDES (Universidad de los Andes, Bogotá). 95 familias de plantas vasculares, representadas por 221 géneros diferentes y 341 especies fueron encontradas asociadas al agua. De estas especies únicamente se encontraron registradas, para la zona de estudio, 151 especies con 1374 ocurrencias históricas en el Herbario nacional Colombiano (COL). Se divulgan nuevas contribuciones sobre la riqueza y patrones de distribución de las macrófitas en la Orinoquía Colombiana. Se debe tener en cuenta la riqueza de macrófitas en los cuerpos de agua de la Orinoquía con el fin de entender, proteger y proponer localidades prioritarias de conservación para estos ecosistemas de agua dulce, tan importantes como amenazados.[abstract]The vast floodplains of the Orinoco basin have the conditions for the proliferation of aquatic flora. However, information about the distribution patterns of these species and their communities composition is scarce in spite of their ecological importance for the “Llanos Orientales” in Colombia. While is one of the more recently overexploited places, this region has one of the less known floras of the country. Aquatic plants from lentic and lotic environments, as well as hydrophytes and helophytes species were collected through all the floodplains of the Orinoco basin in Colombia in 101 localities; an area that comprises more than 19 municipalities, in 6 different departments. Standard herbarium samples, of the total of aquatic species found over the place, were collected in each locality. In the ANDES herbarium (Universidad de los Andes, Bogotá) were deposited the 1167 collected vouchers; distributed into 95 families, represented by 221 different genera and 341 water-associated species. Of these species, only 151 were found reported (for the area of study) with 1374 historic occurrences on the “Herbario Nacional Colombiano” (COL) database. New contributions about the richness and distribution patterns of macrophytes in the Orinoquia Colombiana are divulgated. The distribution patterns of macrophytes richness in the water bodies of the region should be considered in order to understand, protect and propose conservation priorities for these important and threatened freshwater ecosystems.","type":"OCCURRENCE","hostingOrganizationKey":"c4f66525-4d36-4c18-82ac-98e088f54db4","hostingOrganizationTitle":"Sistema de Información sobre Biodiversidad de Colombia - SiB","publishingCountry":"CO","publishingOrganizationKey":"77c64839-4c99-4a40-beb3-cd16afc23540","publishingOrganizationTitle":"Universidad de los Andes","license":"http://creativecommons.org/licenses/by/4.0/legalcode","decades":[2010],"keywords":["Helófitas","Hidrófitas","Orinoquía.","Llanos Orientales","Macrófitas","Lóticos","Lénticos","Macrophytes","Lotic","Orinoquía.","Llanos Orientales","Lentic","[keywords]Helophytes","Hydrophytes","Occurrence","Specimen"],"recordCount":1137},{"key":"2beeb895-b24c-4136-9037-b05ba4d09fd3","title":"Diversidad y dinámica del fitoplancton marino en la bahía de Acapulco, Guerrero","doi":"10.15468/uv9r4x","description":"<p>Frecuentemente el PM es sectorizado en distintas regiones biogeográficas; existe cierto consenso en que el Pacífico tropical mexicano (PTM) abarca una extensión de aprox. 4,054 Km y que en el habita un gran diversidad de especies fitoplanctónicas, principalmente diatomeas y dinoflagelados. Este proyecto se enfocará al estudio de la flora planctónica de la bahía de Acapulco (incluyendo la bahía de Puerto Marqués), ubicada en la porción central del PTM, correspondiente a la región Marina Prioritaria CONABIO Coyuca-Tres Palos. Acapulco, es una bahía relativamente pequeña y somera con una ficoflora planctónica rica y diversa. A pesar de ser uno de los sitos turísticos más concurridos del PM, existen muy pocos estudios de su fitoplancton. Uno de los proyectos antecesores a este (CONABIO H176), registró 190 taxones de microalgas planctónicas para las costas de Guerrero, de los 303 registrados para todo el PTM. De esta manera el estado de Guerrero pareciera ser el de mayor riqueza biológica de los 6 correspondientes a porción tropical del PM, posiblemente como resultado de la confluencia de las corrientes Norecuatorial y de California. Otro proyecto antecesor inmediato (DJ022) registró 364 taxa para Acapulco (165 diatomeas y 198 dinoflagelados), con 8 exclusivos de esta localidad, y varios con potencialidad tóxica. Este nuevo proyecto pretende entonces sistematizar y registrar adecuadamente toda la información contenida en las aprox. 200 muestras colectadas previamente en esta localidad, así como desarrollar un estudio anual, continuado e intensivo de la flora planctónica de la bahía de Acapulco, para conocer cabalmente a sus especies (tanto las de paredes rígidas como las desnudas y frágiles), al mismo tiempo que se evaluarán los nutrientes, la biomasa y la densidad fitoplanctónica, con objeto de ir entendiendo la dinámica de las compleja comunidades planctónicas que se suceden a lo largo del año. Además en el transcurso del estudio se espera poder registrar y evaluar florecimientos algales nocivos (FAN) de especies tóxicas o nocivas, principalmente de dinoflagelados, cuya extensión del evento de marea roja, será analizada en forma más completa con imágenes de satélite. De manera particular se pondrá énfasis en el estudio de una especie hasta el momento conocida como Cochlodinium polykrikoides, dinoflagelado desnudo que puede llegar a ser ictiotóxico, que se presume como invasora en le Pacífico Oriental, proveniente de las costas de Japón e Indonesia. Al término de un periodo de 18 meses se pretende entregar una base de datos 13,400 registros de la menos 400 taxa, correspondientes a unas 700 muestras colectadas en al menos 32 sitios, la mayoría geo-refereciados, y un reconocimiento cabal de las especies más importantes que conforman la flora planctónica en la bahía de Acapulco.</p>\n<p>Reino: 2\nFilo: 7\nClase: 10\nOrden: 47\nFamilia: 100\nGénero: 231\nEspecie: 1204\nEpitetoinfraespecifico: 164</p>","type":"OCCURRENCE","hostingOrganizationKey":"ff90b050-c256-11db-b71b-b8a03c50a862","hostingOrganizationTitle":"Comisión nacional para el conocimiento y uso de la biodiversidad","publishingCountry":"MX","publishingOrganizationKey":"ff90b050-c256-11db-b71b-b8a03c50a862","publishingOrganizationTitle":"Comisión nacional para el conocimiento y uso de la biodiversidad","license":"http://creativecommons.org/licenses/by/4.0/legalcode","decades":[1930,1940,1950,1960,1970,1980,1990,2000,2010],"keywords":["Occurrence","Specimen","Protoctistas","Bacterias"],"recordCount":66116},{"key":"5ebe1081-cd38-479c-9cdd-4af21989891b","title":"Estudios bióticos: Plantas, artropofauna edáfica, anfibios y aves  del Complejo de Páramos Iguaque Merchán","doi":"10.15472/hzr6by","description":"Se realizó la caracterización de la flora, artropofauna edáfica, aves y anfibios del Complejo de Páramos Iguaque Merchán. Se presentan 8052 registros biológicos correspondientes a 4963  registros de plantas,  2072 de artropofauna edáfica, 974 para avifauna y 30 de anfibios presentes en la franja altitudinal entre los 2881 - 3540 m,  en cinco localidades, en los municipios de Arcabuco y Sotaquirá y Cómbita,  en el departamento de Boyacá, y  Gámbita, en el departamento de Santander,  en áreas pertenecientes  al complejo de Páramos Iguaque- Merchán. Los métodos para la toma de datos, registro y análisis de la información en cada uno de los componentes bióticos se realizaron de acuerdo con el protocolo suministrado por el IAvH (Marín et al., 2014). Los ejemplares colectados en este estudio fueron depositados en las colecciones del Instituto de Investigaciones Biológicas Alexander von Humboldt. A partir de los resultados de estas caracterizaciones, se establecerán los criterios biológicos para la delimitación de la franja de transición páramo bosque en el complejo de Páramos Iguaque- Merchán.","type":"OCCURRENCE","hostingOrganizationKey":"2a7e3080-28a9-11dd-97cd-b8a03c50a862","hostingOrganizationTitle":"Instituto de Investigación de Recursos Biológicos Alexander von Humboldt","publishingCountry":"CO","publishingOrganizationKey":"2a7e3080-28a9-11dd-97cd-b8a03c50a862","publishingOrganizationTitle":"Instituto de Investigación de Recursos Biológicos Alexander von Humboldt","license":"http://creativecommons.org/licenses/by-nc/4.0/legalcode","decades":[2010],"keywords":["municipio de Sotaquirá","artropofauna edáfica","vereda Rupavita","municipio de Gámbita","avifauna","complejo de páramos Iguaque Merchán","departamento de Boyacá","departamento de Santander","anfibios","vereda Chinatá","vereda Avendaños","vegetación","vereda Carrizal Bajo","municipio de Arcabuco","vereda Santa Bárbara","municipio de Cómbita","vereda Guaguaní","Specimen","Occurrence"],"recordCount":8052},{"key":"8036e65c-f762-11e1-a439-00145eb45e9a","title":"Estudio comparativo del zooplancton en dos regiones de México","doi":"10.15468/4n3jym","description":"<p>Este trabajo incluye el análisis taxonómico detallado del zooplancton limnético y litoral de 50 sistemas del Estado de Morelos que comprende desde la región de Zempoala a la cuenca del río Amacuzac, así como la región sureste de México, con 200 muestras que representan parte de los Altos De Chiapas, una fracción de la cuenca del río Lacantún, sur de Tabasco, en particular la región de los Petenes, Sur de Campeche (Calackmul) y Centro-Sur de Quintana Roo. Se analizará la microfauna zooplanctónica de los tres grupos principales (Copepoda, Cladocera y Rotifera) y se establecerán similitudes y diferencias entre ambas faunas. Los resultados se integrarán en un catálogo para el Estado de Morelos y otro para el sureste del país, además de las publicaciones individuales que se generen. Finalmente todos los datos generados se incorporarán en una base de datos (Biótica, vers 4.0), y una serie de mapas distribucionales de las especies con mayor importancia, debido a su distribución y/o abundancia en los sistemas estudiados.</p>\n<p>Reino: 1\nFilo: 2\nClase: 3\nOrden: 8\nFamilia: 28\nGénero: 77\nSubgénero: 4\nEspecie: 166\nEpitetoinfraespecifico: 13</p>","type":"OCCURRENCE","hostingOrganizationKey":"ff90b050-c256-11db-b71b-b8a03c50a862","hostingOrganizationTitle":"Comisión nacional para el conocimiento y uso de la biodiversidad","publishingCountry":"MX","publishingOrganizationKey":"ff90b050-c256-11db-b71b-b8a03c50a862","publishingOrganizationTitle":"Comisión nacional para el conocimiento y uso de la biodiversidad","license":"http://creativecommons.org/licenses/by/4.0/legalcode","decades":[1980,1990,2000],"keywords":["Occurrence","Specimen","Invertebrados"],"recordCount":840},{"key":"7b4ddcab-3bb1-4c28-a805-b166a550410c","title":"Computarización sistemática de los bivalvos y gasterópodos de la sección húmeda de la Colección Malacológica Dr Antonio García-Cubas","doi":"10.15468/25w7sn","description":"<p>La \"Colección Malacológica Dr. Antonio García-Cubas\" (COMA) actualmente está integrada aproximadamente por 31,024 ejemplares de 5 clases de moluscos. En la COMA existen alrededor de 3,000 ejemplares de bivalvos y gasterópodos en la sección húmeda que aún no se han procesado adecuadamente para su ingreso tanto a la COMA como a su Base de datos.\nGracias a la anatomía de los moluscos, es posible conservarlos de dos maneras, la concha en seco y la parte blanda del animal en húmedo. Es importante que una colección Malacológica contenga ejemplares con las dos formas de conservación para contar con información taxonómica, ecológica y molecular más completa. \nDe ahí el interés por la curación, reposición de datos de recolección, actualización sistemática y computarización de una base de datos de los bivalvos y gasterópodos de la sección húmeda de la COMA.\nLos ejemplares contenidos en la COMA son, en su mayoría, producto de recolecciones de científicos mexicanos realizadas dentro del territorio nacional, aunque también cuenta con algunos ejemplares de otros países, generalmente obtenidos por donaciones o adquiridos como material de intercambio. Los ejemplares recolectados contemplan los años de 1930 a 2007.\nLa mayor parte de los ejemplares son de hábitos marinos y representan aproximadamente al 75% de las entidades federativas costeras y al menos 2 entidades sin costa.</p>\n<p>Reino: 1\nFilo: 1\nClase: 2\nOrden: 23\nFamilia: 106\nGénero: 254\nSubgénero: 123\nEspecie: 531\nEpitetoinfraespecifico: 26</p>","type":"OCCURRENCE","hostingOrganizationKey":"ff90b050-c256-11db-b71b-b8a03c50a862","hostingOrganizationTitle":"Comisión nacional para el conocimiento y uso de la biodiversidad","publishingCountry":"MX","publishingOrganizationKey":"ff90b050-c256-11db-b71b-b8a03c50a862","publishingOrganizationTitle":"Comisión nacional para el conocimiento y uso de la biodiversidad","license":"http://creativecommons.org/licenses/by/4.0/legalcode","decades":[1940,1950,1960,1970,1980,1990,2000],"keywords":["Occurrence","Specimen","Invertebrados"],"recordCount":1289},{"key":"6b44b322-e9b8-4a1b-ba7e-7ef7f84e44b1","title":"Diagnóstico del estado actual de la invasión biológica por Aedes (Stegomyia) albopictus (Skuse) (Díptera: Culícidae) en las principales áreas naturales protegidas de la Península de Yucatán, México","doi":"10.15468/g3jtnd","description":"<p>Aedes albopictus (Skuse), es considerada como la especie de mosquito más invasiva y de más rápida propagación en el mundo. Este mosquito es nativo del Sureste de Asia, donde habita principalmente zonas boscosas y se cría en huecos de árboles, bambú y otros contenedores naturales de agua, pero tiene una alta capacidad para adaptarse a los ambientes urbanos. Debido a su habilidad de colonizar nuevos ambientes, en los últimos 25 años se ha introducido en una gran variedad de hábitats alrededor del mundo, abarcando grandes regiones en todos los continentes. En México su introducción se reportó por primera vez en 1988 en los estados del norte (Tamaulipas, Nuevo león, Coahuila) y en los últimos años se ha introducido a los estados del centro, golfo, sur y sureste de la república, incluyendo Quintana Roo en el 2012. En base al potencial de las especies invasoras de producir impactos bióticos sobre las especies y ecosistemas nativos, además de los impactos económicos, sociales y a la salud humana, que conlleva su introducción a nuevos ecosistemas, en el presente estudio se plantea realizar un diagnóstico del estado actual de la invasión biológica de Aedes albopictus en las principales áreas naturales protegidas (ANP) de la península de Yucatán, encaminado a proponer estrategias de manejo para la implementación de acciones de prevención y control de esta especie, dado que dichos ecosistemas representan regiones prioritarias para la conservación de la biodiversidad terrestre (y en donde confluyen numerosas especies del Corredor Biológico Mesoamericano), además de ser áreas ecoturísticas de gran importancia a nivel nacional e internacional y que se pueden ver afectadas a nivel económico y a la salud humana</p>\n<p>Reino: 1\nFilo: 1\nClase: 1\nOrden: 6\nFamilia: 42\nGénero: 141\nSubgénero: 29\nEspecie: 133\nEpitetoinfraespecifico: 1</p>","type":"OCCURRENCE","hostingOrganizationKey":"ff90b050-c256-11db-b71b-b8a03c50a862","hostingOrganizationTitle":"Comisión nacional para el conocimiento y uso de la biodiversidad","publishingCountry":"MX","publishingOrganizationKey":"ff90b050-c256-11db-b71b-b8a03c50a862","publishingOrganizationTitle":"Comisión nacional para el conocimiento y uso de la biodiversidad","license":"http://creativecommons.org/licenses/by/4.0/legalcode","decades":[1980,1990,2000,2010],"keywords":["Occurrence","Specimen","Invertebrados"],"recordCount":3399},{"key":"ff470f29-2838-43fe-9c92-64ac1f9373ea","title":"Flora marina (Clorophyta, Phaeophyta, Rodophyta) y fauna conspicua (Echinodermata, Mollusca, Polychaeta) del Complejo Insular Espíritu Santo-Cerralvo-San José en BCS, México","doi":"10.15468/p0ekvb","description":"<p>El Área Natural Protegida Islas del Golfo de California comprende cerca de 100 islas, que representan una zona económica importante debido a las actividades turísticas y de pesca que en ellas se desarrollan. Al sur del Golfo de California se encuentra el complejo Insular formado por Cerralvo, Espíritu Santo y San José, cuya fauna y flora submarinas son poco conocidas. El objetivo del presente proyecto es elaborar un listado taxonómico de algunas especies de macroalgas (Chlorophyta, Rhodophyta, Phaeophyta) e invertebrados conspicuos (Echinodermata; Mollusca, Annelida) del complejo insular. Durante 18 meses de trabajo se obtendrá información de salidas de campo (observación y colecta de organismos), de revisión de literatura y de ejemplares de colecciones nacionales. La información generada se capturará en una base de datos, incluyendo una pequeña diagnosis de cada especie, literatura relacionada y su posición geográfica. El trabajo de campo consistirá en 7 salidas totales, 4 durante la temporada fría (noviembre a mayo) y 3 durante la temporada cálida (junio a septiembre). Se utilizarán transectos de banda de 25 x 2 m (referenciados geográfica y batimétricamente), para tener un total de 20 transectos por isla y que equivalen a 60 unidades de muestreo para cada temporada. Se contarán los organismos a lo largo del transecto, y se colectarán macroalgas y poliquetos, que necesitan ser identificados en laboratorio. En el caso de los equinodermos y moluscos, solamente se colectarán aquellos que no puedan ser identificados en campo. Una vez reconocidas las 50 especies más importantes del complejo insular, se les tomarán fotografías in situ (ya que muchos especímenes pierden su forma original y color al ser colectados) y también después de preservados con fines comparativos. Las imágenes digitales serán compiladas en un catálogo con información relevante de cada especie.</p>\n<p>Reino: 2\nFilo: 6\nClase: 11\nOrden: 72\nFamilia: 186\nGénero: 330\nSubgénero: 15\nEspecie: 486\nEpitetoinfraespecifico: 13</p>","type":"OCCURRENCE","hostingOrganizationKey":"ff90b050-c256-11db-b71b-b8a03c50a862","hostingOrganizationTitle":"Comisión nacional para el conocimiento y uso de la biodiversidad","publishingCountry":"MX","publishingOrganizationKey":"ff90b050-c256-11db-b71b-b8a03c50a862","publishingOrganizationTitle":"Comisión nacional para el conocimiento y uso de la biodiversidad","license":"http://creativecommons.org/licenses/by/4.0/legalcode","decades":[1930,1940,1950,1960,1970,1980,1990,2000],"keywords":["Occurrence","Specimen","Protoctistas","Invertebrados"],"recordCount":3283}],"facets":[]}
  recorded_at: 2020-12-08 23:53:37 GMT
  recorded_with: vcr/0.5.4, webmockr/0.7.0
