http_interactions:
- request:
    method: get
    uri: https://api.gbif.org/v1/dataset/suggest?limit=100&type=metadata&type=checklist
    body:
      encoding: ''
      string: ''
    headers:
      Accept-Encoding: gzip, deflate
      Accept: application/json, text/xml, application/xml, */*
      User-Agent: r-curl/4.3 crul/1.0.0 rOpenSci(rgbif/3.4.0.95)
      X-USER-AGENT: r-curl/4.3 crul/1.0.0 rOpenSci(rgbif/3.4.0.95)
  response:
    status:
      status_code: '200'
      message: OK
      explanation: Request fulfilled, document follows
    headers:
      status: 'HTTP/2 200 '
      vary: Origin, Access-Control-Request-Method, Access-Control-Request-Headers
      x-content-type-options: nosniff
      x-xss-protection: 1; mode=block
      pragma: no-cache
      expires: '0'
      x-frame-options: DENY
      content-type: application/json
      date: Tue, 08 Dec 2020 23:53:43 GMT
      cache-control: public, max-age=3601
      x-varnish: '482836530'
      age: '0'
      via: 1.1 varnish (Varnish/6.0)
      accept-ranges: bytes
    body:
      encoding: ASCII-8BIT
      file: no
      string: [{"key":"5c0b1470-8884-4914-ae76-70a7c81d6d08","title":"Catálogo de Plantas y Líquenes de Colombia","description":"<p>Colombia es uno de los países con mayor diversidad de plantas en todo el planeta. Esa enorme riqueza vegetal, que fue la base sobre la que florecieron en esta parte del mundo centenares de civilizaciones indígenas a través de los siglos, constituye un patrimonio de valor incalculable, al cual nuestro país debe volver ahora la mirada para planear su futuro. La conservación y el adecuado aprovechamiento de nuestra flora deberán hacer parte de nuestra agenda en las próximas décadas. De no hacerlo, el país estaría desaprovechando una excelente oportunidad para su desarrollo sostenible.</p>\n<p>El primer paso para la conservación y el uso sostenible de nuestros recursos es su conocimiento cabal. En el caso de las plantas, un inventario básico de la flora nacional constituye la base fundamental sobre la que habrá de planearse su futuro manejo. Pero un inventario de esta naturaleza no existía hasta ahora en Colombia, a pesar de la larga historia botánica de nuestro país, que se remonta a la Real Expedición Botánica que inició José Celestino Mutis a finales del siglo XVIII.</p>\n<p>Y ninguna institución más idónea para producir dicho inventario que la Universidad Nacional de Colombia, pionera en el estudio de nuestra flora y depositaria de la mayor colección de especímenes de plantas colombianas existente en el mundo. Por esta razón es una gran satisfacción para la Universidad Nacional entregar al país y al mundo entero, como parte de nuestro compromiso con la nación, el presente Catálogo de plantas y líquenes de Colombia. Esta obra, quizás la empresa botánica más ambiciosa que se haya culminado en el país, recopila, por primera vez en nuestra historia, las 28.000 especies de plantas y líquenes que se han identificado hasta ahora en Colombia, suministrando para cada una de ellas información sobre el tamaño de la planta, las regiones ecológicas en las que se encuentra, el rango de elevación en el que crece, los departamentos en los que ha sido hallada, su actual estado de conservación y la distribución global de la especie.</p>\n<p>Este Catálogo, en cuya compilación trabajaron 180 investigadores de 20 países a lo largo de 13 años, no es, de ninguna manera, el final de la investigación botánica en Colombia. Como bien lo señalan los editores, el conocimiento de nuestra flora es todavía incompleto y existen vastas regiones del país que han sido escasamente exploradas. Cada año se descubren varias decenas de especies nuevas para la ciencia y se amplía el área de distribución conocida para muchas otras, a la vez que los investigadores descubren día tras día nuevas aplicaciones para nuestras plantas. El camino a recorrer es todavía largo. Pero la información que se presenta aquí constituye una valiosa herramienta sobre la cual podremos planear el futuro de nuestra flora: su conocimiento y su protección; su aprovechamiento racional y su incorporación a nuestra identidad nacional.</p>\n<p>El libro del catálogo publicado en 2016 y su primera versión digital comprendieron 28.000 especies de plantas y líquenes. Desde entonces el catálogo ha estado en constante actualización, la presente lista comprende más de 47.000 nombres científicos, entre ellos casi 30.000 nombres aceptados entre especies, subespecies, híbridos, variedades y formas.\n\nLa disposición de esta lista a través del SiB Colombia busca mejorar la interoperabilidad y promover su uso al poder hacer una descarga detallada de todo el catálogo. La presente lista se irá actualizando de forma paralela a la versión digital del catálogo.</p>","type":"CHECKLIST"},{"key":"0b1735ff-6a66-454b-8686-cae1cbc732a2","title":"Checklist of Vermont Species","description":"<p>The aim of the Checklist of Vermont Species (VTspecies) is to provide a comprehensive list of names of organisms, including information on synonymy, that have been recorded in the State of Vermont, United States. Like all science, VTspecies is a work in progress. Many taxonomic groups remain deficient and little studies in the state, and users will notice that many species are still missing from the database. Your contributions and feedback are essential to further improve the quality and taxonomic coverage of VTspecies.</p>\n<p>While the highest priority is to provide valid names, other names in use are included so that this register can serve as a guide to interpret taxonomic literature and explore biodiversity data from the state. Completing a checklist of all species and keeping it up-to-date is a continuous process. New information is continually discovered and added. Often data also come in from contributions of large datasets, such as global or regional species lists. Please contact us with errors, omissions, or questions to help us make this resource as complete as possible.</p>\n<p>VTspecies contains animals, plants, and fungi. For each species we provide scientific name(s), authors and year, vernacular name(s), classification hierarchy, citation proving that particular species has occurred in Vermont, and more. Further information of each species can be obtained at the Vermont Atlas of Life (VAL) at http://val.vtecostudies.org.</p>\n<p>VTspecies uses a set of generally accepted references, augmented by recent scientific literature and expert opinion, to establish a standard scientific name for every species and their hierarchical classification. Generally, VTspecies follows the Integrated Taxonomic Information System (ITIS; https://www.itis.gov/\n) for authoritative taxonomic information on plants, animals, and fungi of North America, as well as the GBIF backbone taxonomy (https://www.gbif.org/dataset/d7dddbf4-2cf0-4f39-9b2a-bb099caae36c).</p>","type":"CHECKLIST"},{"key":"39f36f10-559b-427f-8c86-2d28afff68ca","title":"DAISIE - Inventory of alien invasive species in Europe","description":"<p>The DAISIE - inventory of alien invasive species in Europe is a species checklist dataset published by the Research Institute for Nature and Forest (INBO) and the Centre for Ecology and Hydrology (CEH). It contains information on 12,104 taxa (mostly species and mostly introduced) occurring in the wild in Europe since 1500. It covers a broad taxonomic spectrum of terrestrial and aquatic free living and parasitic organisms. The collation of the alien species list is the result of the efforts of the DAISIE (http://www.europe-aliens.org/) project partners and more than 300 collaborators from Europe and neighbouring countries, involved in different fields of expertise and organisations. Here the DAISIE checklist is published as a standardized Darwin Core Archive and includes for each species: the scientific name, higher classification, and stable taxon identifier (in the taxon core), the vernacular names (in the vernacular names extension), the presence in a specific region, the year of the first introduction (first collection) and/or last assessment/observation in that region, as well as extra information (in the distribution extension), and the habitat, native range, and ecofunctional group (in the description extension). The DAISIE dataset is no longer maintained, but can be used as a historical archive for researching and managing alien plants or compiling regional and national registries of alien species. Issues with the dataset can be reported at https://github.com/trias-project/daisie-checklist</p>\n<p>We have released this dataset under a Creative Commons Attribution license (CC-BY 4.0). We would appreciate it if you follow the GBIF citation guidelines (https://www.gbif.org/citation-guidelines) when using the data. If you have any questions regarding this dataset, don’t hesitate to contact us via the contact information provided in the metadata or via https://twitter.com/trias_project.</p>\n<p>The publication of the checklist to GBIF was supported by the European Cooperation in Science and Technology (COST) action Alien CSI “CA17122 - Increasing understanding of alien species through citizen science” as a Short Term Scientific Mission “Publishing alien species checklist data for Europe through repeatable, open workflows”,  with technical support provided by the Research Institute for Nature and Forest (INBO).</p>","type":"CHECKLIST"},{"key":"384120be-ef7c-4787-9ff0-cb1b3f588b26","title":"Línea base de las especies de fauna, flora y hongos para el departamento de Boyacá - Proyecto Boyacá Bio","description":"<p>El departamento de Boyacá presenta una variada y diversa flora, lo cual desemboca en una alta variedad de ecosistemas con zonas de páramo bosque húmedo tropical, piedemonte llanero y bosque andino y altoandino; en los cuales se presume haya una alta diversidad de especies. Es así como la construcción de la línea base para el departamento de Boyacá tuvo como objeto identificar y analizar el estado de conocimiento existente de la Biodiversidad en algunos grupos biológicos, encaminada a llenar vacíos de información a través de las expediciones Boyacá Bio. La lista presentada contiene 6713 registros de especies, pertenecientes a 26 clases, de las cuales corresponden a plantas vasculares: Cycadopsida (1), Equisetopsida (2), Liliopsida (868), Lycopodiopsida (59), Magnoliopsida (3131), Marattiopsida (2), Pinopsida (7), Polypodiopsida (343), Psilotopsida (2). Plantas no vasculares: Andreaeopsida (2), Bryopsida (353), Jungermanniopsida (180), Marchantiopsida (7), Polytrichopsida (12), Sphagnopsida (14). Invertebrados: Insecta (60). Vertebrados: Mammalia (105), Actinopterygii (114), Reptilia (111), Amphibia (91), Aves (1163). Hongos: Agaricomycetes (46), Dothideomycetes (1), Geoglossomycetes (2), Leotiomycetes (17), Sordariomycetes (20).</p>\n<p>El recurso fue construido a partir de la verificación de registros biológicos (peces, anfibios, reptiles, aves, mamíferos, insectos, plantas vasculares, plantas no vasculares y hongos) provenientes de tres fuentes: insumo SiB Colombia y GBIF para la consolidación de la línea base del departamento de Boyacá elaborado por EC-SiB (SIB 2018), de la revisión e identificación de ejemplares de la colección de peces e insectos de la Universidad Pedagógica y Tecnológica de Colombia UPTC, y de la revisión de información secundaria (literatura-documentación). Esta recopilación taxonómica, se desarrolló bajo el convenio No 17-17-170-195CE, suscrito entre UPTC-IAvH, con el objeto fundamental de aunar esfuerzos entre las partes para generar la línea base de información de biodiversidad para el departamento de Boyacá, así como desarrollar procesos de investigación con miras a complementar vacíos de información y contribuir a la consolidación de redes de investigación del departamento de Boyacá en el marco del Convenio.</p>","type":"CHECKLIST"},{"key":"6863b877-72b3-41cc-b757-481f14f18c0d","title":"Insecta of the Berezinsky Biosphere Reserve (Belarus)","description":"Biodiversity of the Berezinsky Biosphere Reserve of Collembola and Insecta registered on the territory of the Berezinsky Biosphere Reserve (Belarus) until 2016","type":"CHECKLIST"},{"key":"57ea6fdb-2533-44e5-b60b-736758a88d19","title":"Systema Naturae per regna tria naturae: secundum classes, ordines, genera, species, cum characteribus, differentiis, synonymis, locis","description":"This dataset contains the digitized treatments in Plazi based on the original book / thesis / monograph Linnaeus, Carolus (1758): Systema Naturae per regna tria naturae: secundum classes, ordines, genera, species, cum characteribus, differentiis, synonymis, locis. Stockholm: Laurentius Salvius, DOI: https://doi.org/10.5962/bhl.title.542, URL: https://archive.org/download/mobot31753000798865/mobot31753000798865.pdf","type":"CHECKLIST"},{"key":"751112f9-dacb-4aa7-b6dd-94b531bd95b7","title":"Species plantarum: exhibentes plantas rite cognitas, ad genera relatas, cum differentiis specificis, nominibus trivialibus, synonymis selectis, locis natalibus, secundum systema sexuale digestas","description":"This dataset contains the digitized treatments in Plazi based on the original book / thesis / monograph Linnaeus, Carolus (1753): Species plantarum: exhibentes plantas rite cognitas, ad genera relatas, cum differentiis specificis, nominibus trivialibus, synonymis selectis, locis natalibus, secundum systema sexuale digestas. Stockholm: Laurentius Salvius, DOI: 10.5281/zenodo.3931989, URL: https://doi.org/10.5962/bhl.title.669","type":"CHECKLIST"},{"key":"69a62746-42bd-4497-853d-653c157dc608","title":"Benin animal checklist","description":"This checklist was achieved from the animal occurrence data of Benin published on GBIF site","type":"CHECKLIST"},{"key":"15147db1-27c3-49b5-9c69-c78d55a4b8ff","title":"Global Register of Introduced and Invasive Species - Australia","description":"The Global Register of Introduced and Invasive Species (GRIIS) presents validated and verified national checklists of introduced (alien) and invasive alien species at the country, territory, and associated island level. \n\nChecklists are living entities, especially for biological invasions given the growing nature of the problem. GRIIS checklists are based on a published methodology and supported by the Integrated Publishing Tool that jointly enable ongoing improvements and updates to expand their taxonomic coverage and completeness. \n\nPhase 1 of the project focused on developing validated and verified checklists of countries that are Party to the Convention on Biological Diversity (CBD). Phase 2 aimed to achieve global coverage including non-party countries and all overseas territories of countries, e.g. those of the Netherlands, France, and the United Kingdom. \n\nAll kingdoms of organisms occurring in all environments and systems are covered.\n\nChecklists are reviewed and verified by networks of country or species experts. Verified checklists/ species records, as well as those under review, are presented on the online GRIIS website (www.griis.org) in addition to being published through the GBIF Integrated Publishing Tool.","type":"CHECKLIST"},{"key":"5c5a6e45-d510-45ed-b7bf-6d0624fac056","title":"Global Register of Introduced and Invasive Species- Japan","description":"The Global Register of Introduced and Invasive Species (GRIIS) presents validated and verified checklists of introduced (alien) and invasive alien species at the country, territory, and associated island level. \n\nThe primary intention of GRIIS is to provide checklists for countries, islands and soon also for protected areas. Checklists are living entities, especially for biological invasions given the growing nature of the problem. GRIIS Checklists are based on a published methodology and supported by the Integrated Publishing Tool that jointly enable ongoing improvements and updates to expand their taxonomic coverage and completeness. \n\nPhase 1 of the project focused on developing validated and verified checklists of countries that are Party to the Convention on Biological Diversity (CBD). Phase 2 which is on-going, aims to achieve global coverage including non-party countries and all overseas territories of countries e.g. Netherlands, France and United Kingdom. Species belonging to all Kingdoms are covered as well as occurring in all Environment/systems. \n\nCountry/ Territory/ Island checklists are reviewed and verified by networks of country or species experts. Verified checklists/ species records as well as those under review are presented on the online GRIIS website (www.griis.org). Individual species records are flagged with a ‘yes’ for verification.  \n\nThis annotated checklist is of introduced (alien) and invasive alien species known to occur in Japan","type":"CHECKLIST"},{"key":"1858994c-378e-4e6e-bec9-ee565e3b3be1","title":"Family-group names in Coleoptera (Insecta)","description":"This dataset contains the digitized treatments in Plazi based on the original journal article Bouchard, Patrice, Bousquet, Yves, Davies, Anthony E., Alonso-Zarazaga, Miguel A., Lawrence, John F., Lyal, Chris H. C., Newton, Alfred F., Reid, Chris A. M., Schmitt, Michael, Ślipinski, S. Adam, Smith, Andrew B. T. (2011): Family-group names in Coleoptera (Insecta). ZooKeys 88: 1-972, DOI: http://dx.doi.org/10.3897/zookeys.88.807, URL: http://dx.doi.org/10.3897/zookeys.88.807","type":"CHECKLIST"},{"key":"e709ec24-0962-4760-aa2d-fb4ae546d7e1","title":"Lista sistemática actualizada de los Moluscos de Chile","description":"Los moluscos corresponden al segundo filo de importancia en el mundo, ya que su biodiversidad (entendida como número de especies) es solamente superada por los artrópodos. Particularmente en sistemas marinos, se puede afirmar que moluscos y artrópodos representan aproximadamente un 50% de la biodiversidad (~25% cada uno), superando ampliamente en número de especies a otros importantes grupos, como peces, equinodermos y poliquetos. Hasta antes de la fecha de este informe, en Chile se había registrado una diversidad de moluscos de aproximadamente 1300 especies, la cual es creciente hacia latitudes meridionales. Por consiguiente, en el contexto de tópicos tan importantes, como el establecimiento de estrategias de conservación y su biodiversidad, de planes de manejo de especies y servicios ecosistémicos, entre otros, es de vital importancia determinar la diversidad real y actualizada de moluscos. También es importante considerar esta información como línea base ante eventos naturales o antrópicos imprevistos.\nEn este contexto, el objetivo de este este informe, es actualizar, corregir y completar la lista sistemática de moluscos de Chile, que incluya información sobre su taxonomía y distribución. Los objetivos específicos son: 1) Recopilar y actualizar la información del listado de especies de moluscos de Chile. 2) Estandarizar la información en el formato Darwin Core, acorde a los estándares del Sistema de Información Global de Biodiversidad (Global Biodiversity Information Facility, GBIF). 3) Publicar la lista de especies y su metadato en la plataforma de GBIF.\nEl resultado final presentado en este informe consiste en una actualización del conocimiento detallado de la biodiversidad de moluscos de Chile, a través de un listado de especies con información sobre su taxonomía, y la consiguiente publicación de una base de datos bajo los estándares GBIF. El área de estudio del proyecto abarcó todo el territorio nacional e insular de Chile, incluyendo el territorio de reclamación Antártica.\nSe ingresaron más de 10500 registros de ocurrencia, correspondientes a 1812 especies válidas. Esta cifra representa un incremento del 42% sobre la lista de moluscos chilenos anteriormente conocida. Del total de especies válidas registradas, 50 presentan observaciones taxonómicas (nomen dubium, taxon inquerendum, temporary name y nomen nudum). En relación a su clasificación, la mayoría corresponde a la clase Gastropoda (1216 especies), seguido por Bivalvia (406), Cephalopoda (95) y Polyplacophora (65); las restantes cuatro clases suman 30 especies. En relación al ambiente que habitan, se registraron 1529 especies marinas, 107 dulceacuícolas y 176 terrestres. Adicionalmente, se registraron un total de 123 identidades taxonómicas mayores (e.g. \"sp.\", \"indet.\") que aún no han sido descritas como especies, pero que podrían representar nuevas especies o especies ya conocidas.\nToda esta información está contemplada para ser incorporada en futuros resultados (i.e. publicaciones) e investigaciones (e.g. proyectos de investigación, consultorías, monitoreos y tesis).","type":"CHECKLIST"},{"key":"2fdc1fd7-9051-4efe-933c-f8f8c3c56680","title":"Lista sistemática de los hongos liquenizados y liquenícolas presentes en Chile","description":"<p>Lista sistemática actualizada de los líquenes y hongos liquenícolas presentes en Chile.</p>\n<p>El listado de especies de líquenes y hongos liquenícolas de Galloway & Quilhot (1998), que incluye el territorio continental, insular y antártico, considera un total de 1.416 taxa en 305 géneros, desagregados en 1.386 hongos liquenizados en 282 géneros, y 30 taxa de hongos liquenícolas, que corresponden a un grupo de organismos presentes exclusivamente en líquenes, generalmente como parásitos específicos, pero también como patógenos de amplio espectro, saprótrofos o comensales. Junto con esto, en este trabajo no se presentan, en la mayoría de los casos, referencias directas a la presencia de las especies (sean hongos liquenizados o liquenícolas) en el territorio nacional, por lo que cada registro debe ser revisado individualmente y confirmar su mención dentro del territorio nacional.</p>\n<p>Basado en la revisión de literatura pertinente, partiendo por el listado de especies publicado por Galloway & Quilhot (1998), sumado a una revisión bibliográfica, en este estudio se indica un total de 2.144 taxa de hongos liquenizados y liquenícolas en 464 géneros. Estos 2.144 taxa corresponden a 2.036 especies, 14 subespecies, 74 variedades y 20 formas. Del total de taxa, 156 corresponden a hongos liquenícolas.</p>\n<p>Del listado total, 1.471 especies han sido revisadas a mayor profundidad y se ha confirmado su presencia. Esta informacion se presenta en \"dynamicproperties\" con los valores de presencia en Chile validada o no de acuerdo a la revisión bibliográfica o a la revisión de especímenes de herbario.</p>\n<p>En 150 casos se han entregado notas taxonómicas \"taxonRemarks\", 1.318 especies poseen datos de \"Distribución y geográfia\", 904 con datos desagregados de su distribución en regiones administrativas, 918 con información de su \"Sustrato\" y 1.007 sobre \"Origen de la especie\" (nativa o endémica), donde de estas 1.007, 251 son endémicas.</p>","type":"CHECKLIST"},{"key":"67dae5e4-dee7-43d6-a9b8-8b2e3245acb5","title":"Lista sistemática actualizada de los peces de Chile","description":"Lista sistemática actualizada de los peces que cuenta con 1.307 especies, 5 clases, 248 familias y 633 géneros. La base sobre la que se realizó esta revisión y actualización corresponde al trabajo de German Pequeño 2013.\nEsta actualización contiene información taxonómica, de distribución, comentarios de la ubicación, estado según UICN,  hábitat, talla máxima, rango de profundidad, comentarios del taxón y citas bibliográficas.","type":"CHECKLIST"},{"key":"0bb2f033-2b79-4d87-803f-91694067c3f3","title":"Chapter 7: Linnaean Plant Names and their Types (part C)","description":"This dataset contains the digitized treatments in Plazi based on the original book chapter Jarvis, Charlie (2007): Chapter 7: Linnaean Plant Names and their Types (part C). In: Order out of Chaos. Linnaean Plant Types and their Types. London: Linnaean Society of London in association with the Natural History Museum: 370-473, ISBN: 978-0-9506207-7-0, DOI: https://doi.org/10.5281/zenodo.291971","type":"CHECKLIST"},{"key":"552a09b1-98d1-42a3-b8d7-f406759493fd","title":"Protected Areas - Global Register of Introduced and Invasive Species - Galápagos Islands, Ecuador","description":"The Protected Areas -Global Register of Introduced and Invasive Species (PA-GRIIS) presents validated checklists of introduced (alien) and invasive alien species at a site level. The primary intention of PA-GRIIS is to provide checklists of introduced (alien) and invasive species present on designated protected areas (such as National Parks, Ramsar sites- Wetlands of International importance, World Heritage Sites (natural and mixed), Marine protected areas etc.) and other areas of biodiversity significance (such as Important Plant Areas (IPA), Important Bird Areas (IBA) etc.), as well as buffer zones around these areas. Areas surrounding protected areas and other areas of high biodiversity significance can serve as an invasion source of alien and invasive species propagules. The establishment of buffer zones and the management of alien and invasive species within these areas is a key management strategy in the prevention of introduction and control/management of biological invasions. In the case of islands buffer zones.\n\nChecklists are living entities, especially for biological invasions given the growing nature of the problem. PA -GRIIS checklists are based on the GRIIS published methodology (Pagad et al 2018) and supported by the Integrated Publishing Tool of the Global Biodiversity Information Infrastructure (GBIF) that jointly enable ongoing improvements and updates to expand their taxonomic coverage and completeness. \n\nPhase 1 of the PA -GRIIS project will present close to 100 exemplar checklists of introduced (alien) and invasive species in a selection of protected areas and other areas of biodiversity significance\n\nThis annotated checklist is of introduced (alien) and invasive alien species known to occur in \nThe Galápagos Islands, Ecuador, a World Heritage Site and a nationally designated National Park","type":"CHECKLIST"},{"key":"271be4de-d788-4b18-bde2-4ef4cd80a165","title":"Checklist of extant species recorded in Keo Seima Wildlife Sanctuary, Cambodia","description":"A checklist of all extant species recorded in Keo Seima Wildlife Sanctuary (previously Seima Protection Forest, Seima Biodiversity Conservation Area), Mondulkiri and Kratie Provinces, Cambodia.\n\nThe dataset includes Khmer and Bunong vernacular names.","type":"CHECKLIST"},{"key":"1f09f3bc-ada6-4a65-956d-4d91108c928f","title":"Diversity of Colombian macrofungi (Ascomycota - Basidiomycota)","description":"A checklist of the species of Colombian macrofungi cited in the literature is presented base on 130 articles published  until 2010. A total of 1258 taxa of macrofungi belonging to 32 orders and 105 familias of Ascomycota and Basidiomycota were reported in Vasco-Palacios AM & Franco-Molano AE. 2013.  Diversity of Colombian macrofungi. (Ascomycota – Basidiomycota), Mycotaxon: 121, 1–58.  Lichens were not included.  \n\nSe presenta una  lista de macrohongos (Ascomycota y Basidiomycota) de Colombia, basada en la revisión 130 artículos publicados hasta el 2010. Un total de  1258 taxa pertenecientes a 32 órdenes y 105 familias fueron registrados en Vasco-Palacios AM & Franco-Molano AE (2013) Diversity of Colombian macrofungi (Ascomycota – Basidiomycota), Mycotaxon: 121, 1–5. Los líquenes no se incluyeron.","type":"CHECKLIST"},{"key":"1416a8a0-adc9-486b-b88d-52328522c85b","title":"A survey of the weevils of Ukraine (Coleoptera: Curculionoidea)","description":"This dataset contains the digitized treatments in Plazi based on the original journal article Yunakov, Nikolai, Nazarenko, Vitalij, Filimonov, Rostislav, Volovnik, Semyon (2018): A survey of the weevils of Ukraine (Coleoptera: Curculionoidea). Zootaxa 4404 (1): 1-494, DOI: https://doi.org/10.11646/zootaxa.4404.1.1","type":"CHECKLIST"},{"key":"05c52030-f2c2-414d-bc08-76e006bea9e1","title":"Chapter 7: Linnaean Plant Names and their Types (part A)","description":"This dataset contains the digitized treatments in Plazi based on the original book chapter Jarvis, Charlie (2007): Chapter 7: Linnaean Plant Names and their Types (part A). In: Order out of Chaos. Linnaean Plant Types and their Types. London: Linnaean Society of London in association with the Natural History Museum: 252-342, ISBN: 978-0-9506207-7-0, DOI: https://doi.org/10.5281/zenodo.291971","type":"CHECKLIST"},{"key":"841c4ae6-c6eb-458a-bf6a-c42d0f7445ca","title":"Vascular plants of Voronezhsky Biosphere Reserve","description":"The dataset includes a list of vascular plant species registered on the territory of the Voronezh State Nature Reserve (Russian Federation, Lipetsk and Voronezh Regions) from 1929 to 2019. Various researchers studied the Reserve flora. In 1938, Maria V. Nikolaevskaya published a list of 537 vascular plants species. By 1946, she had noted about 730 species in the protected area. In 1946-1947, special floristic studies were carried out by Sergey V. Golitsyn; he identified 973 species for the Reserve and the area along the railway crossing the protected area (Голицын, 1961). Since 1988, Elena Starodubtseva has been studying the Reserve flora. The annotated flora list (Стародубцева, 1999) published in 1999 included 969 species directly on the Reserve territory and 69 species in the zone along the railway crossing the Reserve (this territory is not included in the protected area). Over the next 20 years, a large number of new species were identified as a result of annual monitoring of the species composition of vascular plants. According to the data for 2019, the list of flora includes 1,051 species registered directly on the territory of the Reserve.","type":"CHECKLIST"},{"key":"17640146-2643-4f00-9e5d-52b5302c238c","title":"Aves del departamento del Valle del Cauca, Colombia, Suramérica.","description":"La avifauna del departamento del Valle del Cauca ha sido uno de los grupos biológicos mejor estudiados en Colombia desde finales de 1800. Producto de estos ejercicios de compilación de información, los estimados de la riqueza de especies varían ampliamente, entre 818 y 1025 especies. Este trabajo pretende contribuir al conocimiento ornitológico del departamento, resaltar los vacíos de información existente y servir de guía para dirigir esfuerzos de investigación y conservación para la avifauna en el departamento. Recopilamos información de registros de aves de diferentes fuentes y obtuvimos un listado de 989 especies de aves confirmadas para el departamento y 13 especies que fueron catalogadas como potencialmente presentes. Encontramos registros de ocho especies introducidas que no tienen registros publicados o son anecdóticos en Colombia. Futuras expediciones o investigaciones deberían enfocarse en llenar los vacíos de información de aves que se concentran en el cañón del río Garrapatas, al sur de Buenaventura y en la cordillera Central.","type":"CHECKLIST"},{"key":"b91775a1-1123-41b5-9430-8a87164f966f","title":"Chapter 7: Linnaean Plant Names and their Types (part S)","description":"This dataset contains the digitized treatments in Plazi based on the original book chapter Jarvis, Charlie (2007): Chapter 7: Linnaean Plant Names and their Types (part S). In: Order out of Chaos. Linnaean Plant Types and their Types. London: Linnaean Society of London in association with the Natural History Museum: 806-877, ISBN: 978-0-9506207-7-0, DOI: https://doi.org/10.5281/zenodo.291971","type":"CHECKLIST"},{"key":"6d11211b-caa0-4e63-b99c-e944099d5017","title":"Global Register of Introduced and Invasive Species - China","description":"The Global Register of Introduced and Invasive Species (GRIIS) presents validated and verified national checklists of introduced (alien) and invasive alien species at the country, territory, and associated island level. \n\nChecklists are living entities, especially for biological invasions given the growing nature of the problem. GRIIS checklists are based on a published methodology and supported by the Integrated Publishing Tool that jointly enable ongoing improvements and updates to expand their taxonomic coverage and completeness. \n\nPhase 1 of the project focused on developing validated and verified checklists of countries that are Party to the Convention on Biological Diversity (CBD). Phase 2 aimed to achieve global coverage including non-party countries and all overseas territories of countries, e.g. those of the Netherlands, France, and the United Kingdom. \n\nAll kingdoms of organisms occurring in all environments and systems are covered.\n\nChecklists are reviewed and verified by networks of country or species experts. Verified checklists/ species records, as well as those under review, are presented on the online GRIIS website (www.griis.org) in addition to being published through the GBIF Integrated Publishing Tool.","type":"CHECKLIST"},{"key":"91ad2b95-a4d1-4b55-bcf8-0ebc2f5d2f64","title":"Chapter 7: Linnaean Plant Names and their Types (part P)","description":"This dataset contains the digitized treatments in Plazi based on the original book chapter Jarvis, Charlie (2007): Chapter 7: Linnaean Plant Names and their Types (part P). In: Order out of Chaos. Linnaean Plant Types and their Types. London: Linnaean Society of London in association with the Natural History Museum: 718-782, ISBN: 978-0-9506207-7-0, DOI: https://doi.org/10.5281/zenodo.291971","type":"CHECKLIST"},{"key":"8e18452b-1d9d-462e-bac8-8c86eeb4ddc3","title":"An annotated checklist of the Scarabaeoidea (Insecta: Coleoptera) of the Guianas","description":"This dataset contains the digitized treatments in Plazi based on the original journal article Hielkema, Auke J., Hielkema, Meindert A. (2019): An annotated checklist of the Scarabaeoidea (Insecta: Coleoptera) of the Guianas. Insecta Mundi 732 (732): 1-306, DOI: http://doi.org/10.5281/zenodo.3678492","type":"CHECKLIST"},{"key":"395c4e1f-95a6-451a-9b81-c73b811819ce","title":"Aves de Risaralda","description":"La información de línea base sobre la composición faunística de una región permite la implementación de prácticas de manejo y conservación efectivas. El departamento de Risaralda está localizado en el centro-occidente del país, limita al norte con el departamento de Antioquia, al noroccidente con Chocó, al nororiente con Caldas, al sur con Quindío y Valle del Cauca y al oriente con Tolima. Tiene una extensión de 4140 km2 y está conformado por 14 municipios: Pueblo Rico, Mistrató, Guática y Quinchía en el Norte; Belén de Umbría, Apía, Santuario, La Celia y Balboa en la zona Central y Virginia, Marsella, Pereira, Dosquebradas y Santa Rosa de Cabal en el Sur. La Cordillera Central y Occidental rodean las zonas bajas cuyas alturas son inferiores a 2000 msnm.; Por otra parte, la zonas de mayor altura en la Cordillera Central son el nevado de Santa Isabel y el nevado del Quindío, y en la cordillera Occidental el cerro Tamaná (ACNUR, 2006). La información consignada en este recurso proviene de los muestreos realizados para el establecimiento de los planes de manejo e inventarios de fauna de las Áreas Protegidas y Reservas Naturales de la Sociedad Civil del departamento entre el año 1985 y 2014, realizados por la CARDER con el apoyo del INDERENA, Parques Nacionales Naturales, Unidad de Investigaciones Federico Medem, Federación Comunitaria para el Ordenamiento y Manejo de las Áreas Protegidas, Instituto de Ciencias Naturales de la Universidad Nacional de Colombia, Asociación Palo Verde, Fundación Ecoandina de Risaralda y Wildlife Conservation Society.","type":"CHECKLIST"},{"key":"bbac2606-c8cc-4c03-94a4-39a73c2f31f6","title":"Aves del Área  de Manejo Especial de La Macarena - AMEM, con enfasis en los ríos Guayabero medio (Sector Raudal de Angosturas I), bajo Losada y bajo Duda, sierra de La Macarena, Meta, Colombia","description":"Lista de las especies de aves silvestres que se distribuyen naturalmente en el Parque Nacional Natural Sierra de La Macarena del municipio La Macarena del departamento del Meta. Lista asociada al libro 'V. BIODIVERSIDAD DE LA SIERRA DE LA MACARENA, META, COLOMBIA. Parte I. Ríos Guayabero medio, bajo Losada y bajo Duda' realizado en cooperación del Instituto de Investigación de Recursos Biológicos Alexander von Humboldt y la  Corporación para el Desarrollo Sostenible del Área de Manejo Especial La Macarena-Cormacarena","type":"CHECKLIST"},{"key":"65a2fba2-be98-44b7-be8a-9bab6bf590b9","title":"Vascular Plant Red List for Iceland","description":"In Iceland, the first red list of vascular plants was compiled in 1996 (Náttúrufræðistofnun 1996), and then updated in 2008. The present edition of the Vascular Plant Red List for Iceland constitutes the second update of the list from 1996 and it is based on refined data on species distribution, new information on species biology and ecology as well as new observations made during  monitoring activities by the Icelandic Institute of Natural History. The Vascular Plant Red List for Iceland reviews the status of plant species according to IUCN red listing guidelines. It was compiled in order to identify species that are threatened with extinction in Iceland and thus facilitate conservation efforts that should be undertaken to improve their status and prevent further decline. As a result of the present assessment one species was considered regionally extinct (RE), eight were classified as critically endangered (CR), seven as endangered(EN) and 31 as vulnerable (VU). According to our assessment ten species can be treated as near threatened (NT). Due to the lack of sufficient data ten species were classified in data deficient category (DD).","type":"CHECKLIST"},{"key":"a762b932-2791-40cb-891e-e11aab6b4efe","title":"Annotated Checklist of Vascular Plants of Iceland","description":"The annotated checklist of vascular plant of Iceland is a comprehensive catalogue of all vascular plant taxa: native and alien that occur in Iceland. Apart from the updated list of native taxa, a complete and revised list of non-native plants (both naturalized and casual) as well as a number of more important cultivated species. The checklist is almost entirely based on a thorough herbarium revision of the main public Icelandic herbaria (Wasowicz 2020).","type":"CHECKLIST"},{"key":"0e12a7af-d728-4b0d-9ff0-97c5e4508a65","title":"Checklist de briófitos de Cataluña","description":"<p>El catálogo o checklist de briófitos de Cataluña está constituido por la relación de nombres de taxones de este grupo taxonómico presentes en Cataluña, según la información actualmente disponible. Inicialmente deriva de un encargo realizado a la Universidad Autónoma de Barcelona por la Dirección General de Políticas Ambientales y Medio Natural de la Generalitat de Catalunya en el año 2016 (contrato PTOP-2016-734), que dio como resultado el documento “Catálogo, Lista Roja de los Briófitos de Cataluña” (autores: L.Saéz, E.Ruiz & M.Brugués). Posteriormente ha sido revisado (2019, L.Sáez) y se prevé su actualización periódica (sin periodicidad definida).</p>\n<p>El ámbito geográfico considerado es el territorio administrado por la Generalitat de Catalunya, que incluye una superficie de 32.108 km2.</p>\n<p>El grupo de organismos considerado es el de los briófitos en sentido amplio, es decir: antocerotas, hepáticas y musgos. Las obras usadas como primera referencia taxonómica han sido Söderström & al. (2016) para las antocerotas y las hepáticas y Ros & al.(2013) para los musgos (con algunas excepciones relativas a actualizaciones taxonómicas posteriores). En algunos casos se han adoptado los tratamientos resultantes de revisiones taxonómicas más recientes.</p>\n<p>Para la elaboración del catálogo se ha revisado de forma crítica la información bibliográfica y de herbario disponible, tanto en relación a la identidad de los taxones, como en relación a la localización de sus poblaciones (para confirmar o descartar su presencia dentro del ámbito territorial considerado). Así mismo, en las sucesivas revisiones se ha incorporado información obtenida de nuevas publicaciones o citas confirmadas por expertos.</p>\n<p>Söderström, L. & al. [38 autores] 2016. World checklist of hornworts and liverworts. Phytokeys 59: 1-828.\nRos R.M. & al. [33 autores] 2013. Mosses of the Mediterranean, an annotated checklist. Cryptog., Bryol. 34(2): 99-283.</p>","type":"CHECKLIST"},{"key":"dba21dbc-ea38-4bbf-b50f-ba3d256e1f73","title":"Checklist derived from occurrence data published on agroforestry and medicinal plant species on GBIF site","description":"Checklist of agroforestry and medicinal plant species from Benin (West Africa)","type":"CHECKLIST"},{"key":"2f7ea7d1-a73f-46f6-b790-7339126a999f","title":"Global Register of Introduced and Invasive Species - Cyprus","description":"The Global Register of Introduced and Invasive Species (GRIIS) presents validated and verified national checklists of introduced (alien) and invasive alien species at the country, territory, and associated island level. \n\nChecklists are living entities, especially for biological invasions given the growing nature of the problem. GRIIS checklists are based on a published methodology and supported by the Integrated Publishing Tool that jointly enable ongoing improvements and updates to expand their taxonomic coverage and completeness. \n\nPhase 1 of the project focused on developing validated and verified checklists of countries that are Party to the Convention on Biological Diversity (CBD). Phase 2 aimed to achieve global coverage including non-party countries and all overseas territories of countries, e.g. those of the Netherlands, France, and the United Kingdom. \n\nAll kingdoms of organisms occurring in all environments and systems are covered.\n\nChecklists are reviewed and verified by networks of country or species experts. Verified checklists/ species records, as well as those under review, are presented on the online GRIIS website (www.griis.org) in addition to being published through the GBIF Integrated Publishing Tool.","type":"CHECKLIST"},{"key":"da3542b4-9a73-4054-b9a3-2d762e172199","title":"Global database of alien macrofungi","description":"This dataset contains comprehensive information about the global alien spread and distribution of macrofungi species during the last centuries (1753-2018)","type":"CHECKLIST"},{"key":"dc71df48-f5b0-4eb1-9be2-c632ebcb1bee","title":"Rasgos funcionales de aves presentes en ecosistemas de páramos de Colombia derivados de información secundaria","description":"La presente base de datos tiene por objeto, presentar los rasgos funcionales (Historia de vida) de la Avifauna asociada a los ecosistemas de páramo de Colombia, se incluye información de 590 especies de Aves (siguiendo la taxonomía propuesta por Remsen et al. 2014), para la obtención de dichos rasgos se consultaron fuentes de información secundaria (publicaciones científicas nacionales e internacionales, bases de datos, entre otras). Adicionalmente, este producto hace parte de los insumos para la Delimitación de Ecosistemas Estratégicos: Páramos y Humedales de Colombia  y del contrato 14-13-014-089PS.","type":"CHECKLIST"},{"key":"e85115a0-ecc8-4c1f-9908-821d5a18f80b","title":"Chapter 7: Linnaean Plant Names and their Types (part L)","description":"This dataset contains the digitized treatments in Plazi based on the original book chapter Jarvis, Charlie (2007): Chapter 7: Linnaean Plant Names and their Types (part L). In: Order out of Chaos. Linnaean Plant Types and their Types. London: Linnaean Society of London in association with the Natural History Museum: 610-650, ISBN: 978-0-9506207-7-0, DOI: https://doi.org/10.5281/zenodo.291971","type":"CHECKLIST"},{"key":"a603f9be-24f2-40f6-a3b3-88e70c103e74","title":"Biodiversidad de San Antonio de Chamí","description":"El conocimiento de la biodiversidad de una región permite valorar la importancia de los ecosistemas presentes en el área, así como promover la protección de los mismos. El corregimiento de San Antonio de Chamí se localiza a media hora del casco urbano del municipio de Mistrató y dos horas de Pereira. Se encuentra a 1500 msnm. La información sobre aves consignada en este recurso procede de observaciones realizadas por el Biólogo Gary Stiles del Instituto de Ciencias Naturales de la Universidad Nacional de Colombia durante el año 1992 en convenio con la CARDER, y por la Bióloga Sandra Arango para la CARDER en el año 1995. La información sobre anfibios y reptiles es resultado del convenio entre el Instituto de Ciencias Naturales de la Universidad Nacional de Colombia y la CARDER durante el año 1991. La información sobre mariposas proviene de la Tesis de grado realizada por el biólogo Francisco Serrano Romero del Instituto de Ciencias Naturales de la Universidad Nacional de Colombia, en convenio con la CARDER durante el año 1991; por su parte la colecta de información sobre plantas vasculares fue realizada por el Instituto de Ciencias Naturales de la Universidad Nacional de Colombia en Convenio con CARDER durante el año 1991.","type":"CHECKLIST"},{"key":"d11bedcf-0da7-4048-96dd-d074afdfa9ce","title":"Chapter 7: Linnaean Plant Names and their Types (part M)","description":"This dataset contains the digitized treatments in Plazi based on the original book chapter Jarvis, Charlie (2007): Chapter 7: Linnaean Plant Names and their Types (part M). In: Order out of Chaos. Linnaean Plant Types and their Types. London: Linnaean Society of London in association with the Natural History Museum: 651-689, ISBN: 978-0-9506207-7-0, DOI: https://doi.org/10.5281/zenodo.291971","type":"CHECKLIST"},{"key":"e7250318-b8ac-4780-b2c8-da946f4792da","title":"Caracterización de plantas y vertebrados en la Reserva Forestal Protectora de la Cuenca Alta del Río Mocoa-RFPCARM, Putumayo, Colombia.","description":"La Reserva Forestal Protectora de la Cuenca Alta del Río Mocoa (RFPCARM) creada bajo el Acuerdo 014 de 1984 del INDERENA, es un área protegida de carácter nacional, sirve como corredor para las especies de fauna entre la Amazonía y la\nregión Andina.\n\nEn el año 2016 se realizó una caracterización de fauna y flora, esta fue llevada acabo por WCS-Colombia con la consultoria número 0717, evaluando los principales grupos de vertebrados terrestres (Mamíferos, Aves, anfíbios y Reptiles) y las plantas relacionadas a estas.\nEl objetivo de esta caracterización es ofrecer información novedosa tanto geográfica como taxonómicamente, para fortalecer el conocimiento de la reserva y la gestión efectiva de su conservación.","type":"CHECKLIST"},{"key":"d5a07901-27f3-4100-99fb-e393097f6233","title":"Bryophyte Checklist of SYKO Herbarium","description":"The checklist is based on occurrence dataset SYKO Herbarium Moss Collection (https://doi.org/10.15468/yjdjs4)","type":"CHECKLIST"},{"key":"678aa986-0481-4e46-b17f-c371195c7c74","title":"Red List of Altai Mountain Country (plants)","description":"Dataset provides the most complete list of rare and some endemic plant species of transboundary territory of the Altai Mountainous Country (AMC) within Russia, Kazakhstan, China and Mongolia.\nThe AMC's borders are defined according to 19 botanical and geographical areas revealed by R. V. Kamelin in the first volume of “Flora Altaica” (Flora Altaica, V. 1, 2005. The team of authors (Ed.) R.V. Kamelyn, Barnaul, 340 p.). The AMC polygon (GeoJSON) for the required taxon research is available in the section “AMC Map” of the project “Flora Altaica\" on the website (http://altaiflora.asu.ru > AMC Map). GeoJSON polygon can be implemented in \"Location\" item of \"Occurrence\" section of GBIF.","type":"CHECKLIST"},{"key":"ca4acdcc-4b59-435e-acf3-3ff3580e823c","title":"Biodiversidad del Municipio de Mistrató","description":"El conocimiento de la biodiversidad de una región permite valorar la importancia de los ecosistemas presentes en el área, así como promover la protección de los mismos. El Municipio de Mistrató se localiza a 86 kilómetros de Pereira, al noroccidente sobre la cordillera Occidental. Posee una superficie de 483 Km2, y una temperatura promedio de 20°C (Gobernación de Risaralda, 2016). La información  sobre aves consignada en este recurso procede de observaciones realizadas por el Biólogo Gary Stiles del Instituto de Ciencias Naturales de la Universidad Nacional de Colombia durante el año 1992 en convenio con la CARDER, y por la Bióloga Sandra Arango para la CARDER en el año 1995. La información sobre anfibios y reptiles es resultado del convenio entre el Instituto de Ciencias Naturales de la Universidad Nacional de Colombia y la CARDER durante el año 1991. La información sobre mamíferos proviene de observaciones realizadas por la Bióloga Marcela Goméz Laverde del Instituto de Ciencias Naturales de la Universidad Nacional de Colombia en convenio con la CARDER durante el año 1991. La información sobre mariposas proviene de la tesis de grado realizada por el biólogo Francisco Serrano Romero del Instituto de Ciencias Naturales de la Universidad Nacional de Colombia, en convenio con la CARDER durante el año 1991; por su parte la colecta de información sobre plantas vasculares fue realizada por el Instituto de Ciencias Naturales de la Universidad Nacional de Colombia en Convenio con CARDER durante el año 1991.","type":"CHECKLIST"},{"key":"3d4ac01a-51a9-4ec9-8599-230a27e58758","title":"Checklist derived from occurrence data published on threatened plant species on GBIF site","description":"This project to mobilize biodiversity data and identify conservation priorities will be implemented by a consortium of eight African countries – Senegal, Côte-d’Ivoire, Mali, Guinea, DRC, Niger, Madagascar, and Benin.\nTraining workshops organized by the University of Kansas will help build the data publishing capacity of project partners. The consortium will identify priority invasive alien species and threatened species for data mobilization, and publish relevant data from collections in France, Netherlands and Belgium. More than 200,000 records of biodiversity data will be made available through GBIF.org and national portals.\nBased on published data, the consortium will develop distribution maps of priority species, suggest actions to monitor and control the spread of invasive alien species and provide recommendations for the conservation of threatened species.","type":"CHECKLIST"},{"key":"c1da0e35-063c-48c5-8e21-e18a7424fa47","title":"Catalogue of Tortricidae Latreille, 1802 (Lepidoptera: Tortricoidea) of India","description":"This dataset contains the digitized treatments in Plazi based on the original journal article Pathania, Prakash C., Das, Apurva, Chandra, Kailash (2020): Catalogue of Tortricidae Latreille, 1802 (Lepidoptera: Tortricoidea) of India. Zootaxa 4757 (1): 1-95, DOI: 10.11646/zootaxa.4757.1.1","type":"CHECKLIST"},{"key":"cbf356f0-f2a3-48ef-9217-5410654bf2d2","title":"Global Register of Introduced and Invasive Species - Georgia","description":"The Global Register of Introduced and Invasive Species (GRIIS) presents validated and verified national checklists of introduced (alien) and invasive alien species at the country, territory, and associated island level. \n\nChecklists are living entities, especially for biological invasions given the growing nature of the problem. GRIIS checklists are based on a published methodology and supported by the Integrated Publishing Tool that jointly enable ongoing improvements and updates to expand their taxonomic coverage and completeness. \n\nPhase 1 of the project focused on developing validated and verified checklists of countries that are Party to the Convention on Biological Diversity (CBD). Phase 2 aimed to achieve global coverage including non-party countries and all overseas territories of countries, e.g. those of the Netherlands, France, and the United Kingdom. \n\nAll kingdoms of organisms occurring in all environments and systems are covered.\n\nChecklists are reviewed and verified by networks of country or species experts. Verified checklists/ species records, as well as those under review, are presented on the online GRIIS website (www.griis.org) in addition to being published through the GBIF Integrated Publishing Tool.","type":"CHECKLIST"},{"key":"4a5c1429-3f25-4b2e-8ab6-d281c2c3df49","title":"Global Register of Introduced and Invasive Species - Algeria","description":"The Global Register of Introduced and Invasive Species (GRIIS) presents validated and verified national checklists of introduced (alien) and invasive alien species at the country, territory, and associated island level. \n\nChecklists are living entities, especially for biological invasions given the growing nature of the problem. GRIIS checklists are based on a published methodology and supported by the Integrated Publishing Tool that jointly enable ongoing improvements and updates to expand their taxonomic coverage and completeness. \n\nPhase 1 of the project focused on developing validated and verified checklists of countries that are Party to the Convention on Biological Diversity (CBD). Phase 2 aimed to achieve global coverage including non-party countries and all overseas territories of countries, e.g. those of the Netherlands, France, and the United Kingdom. \n\nAll kingdoms of organisms occurring in all environments and systems are covered.\n\nChecklists are reviewed and verified by networks of country or species experts. Verified checklists/ species records, as well as those under review, are presented on the online GRIIS website (www.griis.org) in addition to being published through the GBIF Integrated Publishing Tool.","type":"CHECKLIST"},{"key":"0f0caa27-e7e0-4d18-b8db-71dda024e1d8","title":"Listado de aves en el plan de manejo de la Reserva Forestal Protectora Regional Serranía El Pinche (Argelia-Cauca-Colombia)","description":"Se presenta un listado de aves para el Plan de Manejo de la Reserva Forestal Protectora Regional Serranía El Pinche (Argelia-Cauca-Colombia). Informe de Proyecto “Planificación del manejo y recuperación de especies, en la Serranía del Pinche, área clave de biodiversidad para Colombia”. Acuerdo de Donación Conservación Internacional-Fundación Ecohabitats-Fondo de Alianzas para Ecosistemas Críticos (CEPF). Agosto 2017- Agosto 2018.","type":"CHECKLIST"},{"key":"267b8d33-02ac-4fa7-9fb3-13fdcd330015","title":"The checklist of fungi of the Natural park «Kondinskie lakes»","description":"The dataset includes a list of fungi species registered on the territory of the Natural park «Kondinskie lakes» (Russian Federation, Khanty-Mansi Autonomous Okrug) from 1949 to 2019. Various researchers studied the funga of the park area: Iraida V. Stavishenko worked in the area studying wood-decay fungi (2003-2008, 2017), Konstantin A. Fefelov visited the area to reveal diversity of myxomycetes (2006-2008), Nina V. Filippova revealed communities of larger fungi of bogged habitats (2006-2007), and Elena A. Butunina have been working on permament position in the park since 2016.\nАccording to the data for 2019, the list of funga includes 379 species registered on the territory of the Park. \nThe collections of specimens collected in the area are stored in different organizations where the visiting researchers work (mainly in Ekaterinburg - Institute of plant and animal ecology and Khanty-Mansiysk - Yugra State University). The collection of specimens of the Natural Park includes about 500 dried specimens of fungi (curated by Elena A. Butunina).","type":"CHECKLIST"},{"key":"471fa55a-3d00-4bde-acb1-3b118248f50d","title":"Global Register of Introduced and Invasive Species - Costa Rica","description":"The Global Register of Introduced and Invasive Species (GRIIS) presents validated and verified national checklists of introduced (alien) and invasive alien species at the country, territory, and associated island level. \n\nChecklists are living entities, especially for biological invasions given the growing nature of the problem. GRIIS checklists are based on a published methodology and supported by the Integrated Publishing Tool that jointly enable ongoing improvements and updates to expand their taxonomic coverage and completeness. \n\nPhase 1 of the project focused on developing validated and verified checklists of countries that are Party to the Convention on Biological Diversity (CBD). Phase 2 aimed to achieve global coverage including non-party countries and all overseas territories of countries, e.g. those of the Netherlands, France, and the United Kingdom. \n\nAll kingdoms of organisms occurring in all environments and systems are covered.\n\nChecklists are reviewed and verified by networks of country or species experts. Verified checklists/ species records, as well as those under review, are presented on the online GRIIS website (www.griis.org) in addition to being published through the GBIF Integrated Publishing Tool.","type":"CHECKLIST"},{"key":"09285b88-9206-42d0-baee-3bd0ed827034","title":"Catálogo florístico de la cantera de Yepes-Ciruelos (LafargeHolcim España)","description":"La cantera de Yepes-Ciruelos se encuentra en el sector Manchego bajo bioclima mesomediterráneo superior y ombroclima seco inferior. Se trata de una cantera a cielo abierto para la extracción de caliza perteneciente al grupo LafargeHolcim. La Universidad de Castilla-La Mancha se ha encargado del seguimiento de las labores de restauración en el contexto de un convenio de colaboración con la empresa desde el año 2003. Los objetivos a alcanzar se establecieron tras el estudio previo de la flora y vegetación de la cantera y del entorno de la Mesa de Ocaña y la priorización de especies y hábitats a restaurar. A partir de estos datos se pueden identificar los 'cuellos de botella' para actuar sobre ellos y acelerar el proceso de sucesión secundaria. En ecosistemas áridos el proceso de sucesión secundaria es lento, esto es debido a que la germinación y sobre todo el reclutamiento de nuevos individuos dependen de los fenómenos de precipitación, a este factor se le debe sumar la ocurrencia de heladas y la herbivoría. Los factores mencionados son extrapolables al éxito de las labores de restauración, por lo tanto, cometer errores puede significar una pérdida alta de recursos y tiempo; para garantizar el éxito de la restauración es fundamental la aplicación de las técnicas adecuadas. La intervención en las zonas objetivo mediante acciones de restauración fundamentadas en Soluciones Basadas en la Naturaleza, permite la asistencia a la recuperación de ecosistemas así como la promoción y apoyo de los procesos de sucesión secundaria en la cantera. El éxito se alcanza cuando se puede observar que los individuos introducidos cierran su ciclo biológico, dando lugar a nuevos individuos que se integran en los procesos de sucesión vegetal.","type":"CHECKLIST"},{"key":"61fb216d-1216-4287-8b78-fdfef45e8e18","title":"Global Register of Introduced and Invasive Species- Indonesia","description":"The Global Register of Introduced and Invasive Species (GRIIS) presents validated and verified checklists of introduced (alien) and invasive alien species at the country, territory, and associated island level. \n\nThe primary intention of GRIIS is to provide checklists for countries, islands and soon also for protected areas. Checklists are living entities, especially for biological invasions given the growing nature of the problem. GRIIS Checklists are based on a published methodology and supported by the Integrated Publishing Tool that jointly enable ongoing improvements and updates to expand their taxonomic coverage and completeness. \n\nPhase 1 of the project focused on developing validated and verified checklists of countries that are Party to the Convention on Biological Diversity (CBD). Phase 2 which is on-going, aims to achieve global coverage including non-party countries and all overseas territories of countries e.g. Netherlands, France and United Kingdom. Species belonging to all Kingdoms are covered as well as occurring in all Environment/systems. \n\nCountry/ Territory/ Island checklists are reviewed and verified by networks of country or species experts. Verified checklists/ species records as well as those under review are presented on the online GRIIS website (www.griis.org). Individual species records are flagged with a ‘yes’ for verification.  \n\nThis annotated checklist is of introduced (alien) and invasive alien species known to occur in Indonesia","type":"CHECKLIST"},{"key":"f104b001-83c7-467b-89b1-91ff76779234","title":"Chapter 7: Linnaean Plant Names and their Types (part T)","description":"This dataset contains the digitized treatments in Plazi based on the original book chapter Jarvis, Charlie (2007): Chapter 7: Linnaean Plant Names and their Types (part T). In: Order out of Chaos. Linnaean Plant Types and their Types. London: Linnaean Society of London in association with the Natural History Museum: 878-905, ISBN: 978-0-9506207-7-0, DOI: https://doi.org/10.5281/zenodo.291971","type":"CHECKLIST"},{"key":"81656d78-6689-4555-9a97-f8503ee08776","title":"Chapter 7: Linnaean Plant Names and their Types (part B)","description":"This dataset contains the digitized treatments in Plazi based on the original book chapter Jarvis, Charlie (2007): Chapter 7: Linnaean Plant Names and their Types (part B). In: Order out of Chaos. Linnaean Plant Types and their Types. London: Linnaean Society of London in association with the Natural History Museum: 343-369, ISBN: 978-0-9506207-7-0, DOI: https://doi.org/10.5281/zenodo.291971","type":"CHECKLIST"},{"key":"22ec14b4-267f-49d1-817a-48cef762eec7","title":"Chapter 7: Linnaean Plant Names and their Types (part H)","description":"This dataset contains the digitized treatments in Plazi based on the original book chapter Jarvis, Charlie (2007): Chapter 7: Linnaean Plant Names and their Types (part H). In: Order out of Chaos. Linnaean Plant Types and their Types. London: Linnaean Society of London in association with the Natural History Museum: 557-585, ISBN: 978-0-9506207-7-0, DOI: https://doi.org/10.5281/zenodo.291971","type":"CHECKLIST"},{"key":"eda40bf7-67be-42b7-8ff6-e30dc94c4236","title":"Protected Areas - Global Register of Introduced and Invasive Species - Kruger National Park, South Africa","description":"The Protected Areas -Global Register of Introduced and Invasive Species (PA-GRIIS) presents validated checklists of introduced (alien) and invasive alien species at a site level. The primary intention of PA-GRIIS is to provide checklists of introduced (alien) and invasive species present on designated protected areas (such as National Parks, Ramsar sites- Wetlands of International importance, World Heritage Sites (natural and mixed), Marine protected areas etc.) and other areas of biodiversity significance (such as Important Plant Areas (IPA), Important Bird Areas (IBA) etc.), as well as buffer zones around these areas. Areas surrounding protected areas and other areas of high biodiversity significance can serve as an invasion source of alien and invasive species propagules. The establishment of buffer zones and the management of alien and invasive species within these areas is a key management strategy in the prevention of introduction and control/management of biological invasions. In the case of islands buffer zones.\n\nChecklists are living entities, especially for biological invasions given the growing nature of the problem. PA -GRIIS checklists are based on the GRIIS published methodology (Pagad et al 2018) and supported by the Integrated Publishing Tool of the Global Biodiversity Information Infrastructure (GBIF) that jointly enable ongoing improvements and updates to expand their taxonomic coverage and completeness. \n\nPhase 1 of the PA -GRIIS project will present close to 100 exemplar checklists of introduced (alien) and invasive species in a selection of protected areas and other areas of biodiversity significance\n\nThis annotated checklist is of introduced (alien) and invasive alien species known to occur in the nationally designated Kruger National Park, South Africa","type":"CHECKLIST"},{"key":"a943a869-9a79-4350-98f6-33cb77439aac","title":"GRIIS Checklist of Introduced and Invasive Species - Zimbabwe","description":"The Global Register of Introduced and Invasive Species (GRIIS) presents validated and verified national checklists of introduced (alien) and invasive alien species at the country, territory, and associated island level. \n\nChecklists are living entities, especially for biological invasions given the growing nature of the problem. GRIIS checklists are based on a published methodology and supported by the Integrated Publishing Tool that jointly enable ongoing improvements and updates to expand their taxonomic coverage and completeness. \n\nPhase 1 of the project focused on developing validated and verified checklists of countries that are Party to the Convention on Biological Diversity (CBD). Phase 2 aimed to achieve global coverage including non-party countries and all overseas territories of countries, e.g. those of the Netherlands, France, and the United Kingdom. \n\nAll kingdoms of organisms occurring in all environments and systems are covered.\n\nChecklists are reviewed and verified by networks of country or species experts. Verified checklists/ species records, as well as those under review, are presented on the online GRIIS website (www.griis.org) in addition to being published through the GBIF Integrated Publishing Tool.","type":"CHECKLIST"},{"key":"f9af6ffd-febc-4626-b2e8-809b1c60fa01","title":"National checklists and red lists for European butterflies","description":"<p>The National checklists and red lists for European butterflies is a species checklist dataset published by the Research Institute of Nature and Forest (INBO). It is described in Maes et al. (2019, https://doi.org/10.1007/s10841-019-00127-z) and compiled from national species lists and red lists from nearly all European countries to prioritize butterfly conservation actions. It covers all 496 butterfly species recognized by Wiemers et al. (2018) to occur in Europe, and includes the occurrence status for 42 countries, including the Macaronesian archipelagos (Azores, Madeira and Canary Islands), and the red list status for 33 of these. Here it is published as a standardized Darwin Core Archive and includes for each species: the scientific name, higher classification and taxon identifier (in the taxon core), the occurrence status, red list status and sources this is based on per country or Macaronesian island(group) (in the distribution extension), and the English vernacular name (in the vernacular name extension). Issues with the dataset can be reported at https://github.com/inbo/eurobutt-checklist/issues</p>\n<p>We have released this dataset to the public domain under a Creative Commons Zero waiver. We would appreciate it if you follow the INBO norms for data use (https://www.inbo.be/en/norms-data-use) when using the data. If you have any questions regarding this dataset, don't hesitate to contact us via the contact information provided in the metadata or via opendata@inbo.be.</p>","type":"CHECKLIST"},{"key":"2b21ecb8-4ffd-4219-a2ed-8314d700d6a5","title":"The checklist of vascular plants of the Natural park «Kondinskie lakes»","description":"The dataset includes a list of vascular plant species registered on the territory of the Natural park «Kondinskie lakes» (Russian Federation, Khanty-Mansi Autonomous Okrug) from 1949 to 2019. Various researchers studied the flora. The first checklist of vascular plants for the area was created in 1949 by a researcher of the Malaya Sos'va State nature reserve Eugenia V. Dorogostaiskaya. Other researchers working in the park to reveal flora and add additional species were Aleksandra L. Vasina (participated in inventories in 1992), Tatiana L. Bespalova (working in the park since 1998) and Natalia N. Korotkih (working in the park since 2008). Other botanists from the Yugra region and other regions were visiting the area as well with inventory and monitoring work. The collection is stored in the Herbarium of the Nature Park and currently includes several thousand of specimens as well as in other collections of visiting researchers. Аccording to the data for 2019, the list of flora includes 335 species registered on the territory of the Park.","type":"CHECKLIST"},{"key":"e4d748d4-3d0a-4863-837e-c7e499728793","title":"Listado de plantas en el plan de manejo de la Reserva Forestal Protectora Regional Serranía El Pinche (Argelia-Cauca-Colombia)","description":"Se presenta un listado de plantas para el Plan de Manejo de la Reserva Forestal Protectora Regional Serranía El Pinche (Argelia-Cauca-Colombia). Informe de Proyecto “Planificación del manejo y recuperación de especies, en la Serranía del Pinche, área clave de biodiversidad para Colombia”. Acuerdo de Donación Conservación Internacional-Fundación Ecohabitats-Fondo de Alianzas para Ecosistemas Críticos (CEPF). Agosto 2017- Agosto 2018.","type":"CHECKLIST"},{"key":"f150e77b-824f-4f14-b994-75fbd3d5f150","title":"Global Register of Introduced and Invasive Species - Papua New Guinea","description":"The Global Register of Introduced and Invasive Species (GRIIS) presents validated and verified checklists of introduced (alien) and invasive alien species at the country, territory, and associated island level. \n\nThe primary intention of GRIIS is to provide checklists for countries, islands and soon also for protected areas. Checklists are living entities, especially for biological invasions given the growing nature of the problem. GRIIS Checklists are based on a published methodology and supported by the Integrated Publishing Tool that jointly enable ongoing improvements and updates to expand their taxonomic coverage and completeness. \n\nPhase 1 of the project focused on developing validated and verified checklists of countries that are Party to the Convention on Biological Diversity (CBD). Phase 2 which is on-going, aims to achieve global coverage including non-party countries and all overseas territories of countries e.g. Netherlands, France and United Kingdom. Species belonging to all Kingdoms are covered as well as occurring in all Environment/systems. \n\nCountry/ Territory/ Island checklists are reviewed and verified by networks of country or species experts. Verified checklists/ species records as well as those under review are presented on the online GRIIS website (www.griis.org). Individual species records are flagged with a ‘yes’ for verification.  \n\nThis annotated checklist is of introduced (alien) and invasive alien species known to occur in Papua New Guinea","type":"CHECKLIST"},{"key":"6dc163b3-79fb-4090-9dc9-0730d630bc91","title":"Global Register of Introduced and Invasive Species – Saint Helena, Saint Helena, Ascension and Tristan da Cunha","description":"The Global Register of Introduced and Invasive Species (GRIIS) presents validated and verified checklists of introduced (alien) and invasive alien species at the country, territory, and associated island level. \n\nThe primary intention of GRIIS is to provide checklists for countries, islands and soon also for protected areas. Checklists are living entities, especially for biological invasions given the growing nature of the problem. GRIIS checklists are based on a published methodology and supported by the Integrated Publishing Tool that jointly enable ongoing improvements and updates to expand their taxonomic coverage and completeness. \n\nPhase 1 of the project focused on developing validated and verified checklists of countries that are Party to the Convention on Biological Diversity (CBD). Phase 2 which is on-going, aims to achieve global coverage including non-party countries and all overseas territories of countries e.g. Netherlands, France and United Kingdom. Species belonging to all Kingdoms are covered as well as occurring in all environment/systems. \n\nCountry/ Territory/ Island checklists are reviewed and verified by networks of country or species experts. Verified checklists/ species records as well as those under review are presented on the online GRIIS website (www.griis.org) in addition to being published through the GBIF IPT\n\nThis annotated checklist is of introduced (alien) and invasive alien species known to occur in Saint Helena, an Overseas territory of the United Kingdom.","type":"CHECKLIST"},{"key":"90c3329b-7e4e-4694-bdea-23402de47459","title":"Common bird names Luxembourg","description":"Liste der luxemburgischen Vogelnamen\nhttps://www.luxnatur.lu/publi/wb29073079.pdf","type":"CHECKLIST"},{"key":"72e7aab4-aa85-4fcf-b95e-3d835d3e408a","title":"Global Register of Introduced and Invasive Species - Armenia","description":"The Global Register of Introduced and Invasive Species (GRIIS) presents validated and verified national checklists of introduced (alien) and invasive alien species at the country, territory, and associated island level. \n\nChecklists are living entities, especially for biological invasions given the growing nature of the problem. GRIIS checklists are based on a published methodology and supported by the Integrated Publishing Tool that jointly enable ongoing improvements and updates to expand their taxonomic coverage and completeness. \n\nPhase 1 of the project focused on developing validated and verified checklists of countries that are Party to the Convention on Biological Diversity (CBD). Phase 2 aimed to achieve global coverage including non-party countries and all overseas territories of countries, e.g. those of the Netherlands, France, and the United Kingdom. \n\nAll kingdoms of organisms occurring in all environments and systems are covered.\n\nChecklists are reviewed and verified by networks of country or species experts. Verified checklists/ species records, as well as those under review, are presented on the online GRIIS website (www.griis.org) in addition to being published through the GBIF Integrated Publishing Tool.","type":"CHECKLIST"},{"key":"94ff507e-8f96-48b3-b3a5-77595fc9be40","title":"Chapter 7: Linnaean Plant Names and their Types (part G)","description":"This dataset contains the digitized treatments in Plazi based on the original book chapter Jarvis, Charlie (2007): Chapter 7: Linnaean Plant Names and their Types (part G). In: Order out of Chaos. Linnaean Plant Types and their Types. London: Linnaean Society of London in association with the Natural History Museum: 529-556, ISBN: 978-0-9506207-7-0, DOI: https://doi.org/10.5281/zenodo.291971","type":"CHECKLIST"},{"key":"46d612a6-90b3-4f50-8b9a-a290d1780b76","title":"Global Register of Introduced and Invasive Species - Timor-Leste","description":"The Global Register of Introduced and Invasive Species (GRIIS) presents validated and verified national checklists of introduced (alien) and invasive alien species at the country, territory, and associated island level. \n\nChecklists are living entities, especially for biological invasions given the growing nature of the problem. GRIIS checklists are based on a published methodology and supported by the Integrated Publishing Tool that jointly enable ongoing improvements and updates to expand their taxonomic coverage and completeness. \n\nPhase 1 of the project focused on developing validated and verified checklists of countries that are Party to the Convention on Biological Diversity (CBD). Phase 2 aimed to achieve global coverage including non-party countries and all overseas territories of countries, e.g. those of the Netherlands, France, and the United Kingdom. \n\nAll kingdoms of organisms occurring in all environments and systems are covered.\n\nChecklists are reviewed and verified by networks of country or species experts. Verified checklists/ species records, as well as those under review, are presented on the online GRIIS website (www.griis.org) in addition to being published through the GBIF Integrated Publishing Tool.","type":"CHECKLIST"},{"key":"e69281bf-debf-4443-812f-3fb130673273","title":"Global Register of Introduced and Invasive Species - Azores, Portugal","description":"The Global Register of Introduced and Invasive Species (GRIIS) presents validated and verified checklists of introduced (alien) and invasive alien species at the country, territory, and associated island level. \n\nPhase 1 of the project focused on developing validated and verified checklists of countries that are Party to the Convention on Biological Diversity (CBD). Phase 2 which is on-going, aims to achieve global coverage including non-party countries and all overseas territories of countries e.g. Netherlands, France and United Kingdom. Species belonging to all Kingdoms are covered as well as occurring in all Environment/systems. \n\nCountry/ Territory/ Island checklists are reviewed and verified by networks of country or species experts. Verified checklists/ species records as well as those under review are presented on the online GRIIS website (www.griis.org). Individual species records are flagged with a ‘yes’ for verification.  Only verified checklists/ species records are presented on the GBIF Portal.  \n\nThis annotated checklist is of introduced (alien) and invasive alien species known to occur in the Azores, an autonomous region of Portugal.","type":"CHECKLIST"},{"key":"d15ba707-bee0-4d4d-a76d-52e5d488763c","title":"Chapter 7: Linnaean Plant Names and their Types (part E)","description":"This dataset contains the digitized treatments in Plazi based on the original book chapter Jarvis, Charlie (2007): Chapter 7: Linnaean Plant Names and their Types (part E). In: Order out of Chaos. Linnaean Plant Types and their Types. London: Linnaean Society of London in association with the Natural History Museum: 490-515, ISBN: 978-0-9506207-7-0, DOI: https://doi.org/10.5281/zenodo.291971","type":"CHECKLIST"},{"key":"0196d958-c097-4cf4-a39a-00b3bbd5d486","title":"Global Register of Introduced and Invasive Species- Sao Tome and Principe","description":"The Global Register of Introduced and Invasive Species (GRIIS) presents validated and verified checklists of introduced (alien) and invasive alien species at the country, territory, and associated island level. \n\nThe primary intention of GRIIS is to provide checklists for countries, islands and soon also for protected areas. Checklists are living entities, especially for biological invasions given the growing nature of the problem. GRIIS Checklists are based on a published methodology and supported by the Integrated Publishing Tool that jointly enable ongoing improvements and updates to expand their taxonomic coverage and completeness. \n\nPhase 1 of the project focused on developing validated and verified checklists of countries that are Party to the Convention on Biological Diversity (CBD). Phase 2 which is on-going, aims to achieve global coverage including non-party countries and all overseas territories of countries e.g. Netherlands, France and United Kingdom. Species belonging to all Kingdoms are covered as well as occurring in all Environment/systems. \n\nCountry/ Territory/ Island checklists are reviewed and verified by networks of country or species experts. Verified checklists/ species records as well as those under review are presented on the online GRIIS website (www.griis.org). Individual species records are flagged with a ‘yes’ for verification.  \n\nThis annotated checklist is of introduced (alien) and invasive alien species known to occur in Sao Tome and Principe","type":"CHECKLIST"},{"key":"0a254aee-fb7c-4c29-87bb-b0a6aac111d7","title":"Protected Areas - Global Register of Introduced and Invasive Species - Garden Route National Park, South Africa","description":"The Protected Areas -Global Register of Introduced and Invasive Species (PA-GRIIS) presents validated checklists of introduced (alien) and invasive alien species at a site level. The primary intention of PA-GRIIS is to provide checklists of introduced (alien) and invasive species present on designated protected areas (such as National Parks, Ramsar sites- Wetlands of International importance, World Heritage Sites (natural and mixed), Marine protected areas etc.) and other areas of biodiversity significance (such as Important Plant Areas (IPA), Important Bird Areas (IBA) etc.), as well as buffer zones around these areas. Areas surrounding protected areas and other areas of high biodiversity significance can serve as an invasion source of alien and invasive species propagules. The establishment of buffer zones and the management of alien and invasive species within these areas is a key management strategy in the prevention of introduction and control/management of biological invasions. In the case of islands buffer zones.\n\nChecklists are living entities, especially for biological invasions given the growing nature of the problem. PA -GRIIS checklists are based on the GRIIS published methodology (Pagad et al 2018) and supported by the Integrated Publishing Tool of the Global Biodiversity Information Infrastructure (GBIF) that jointly enable ongoing improvements and updates to expand their taxonomic coverage and completeness. \n\nPhase 1 of the PA -GRIIS project will present close to 100 exemplar checklists of introduced (alien) and invasive species in a selection of protected areas and other areas of biodiversity significance\n\nThis annotated checklist is of introduced (alien) and invasive alien species known to occur in the nationally designated Garden Route National Park, South Africa","type":"CHECKLIST"},{"key":"8ed237a6-0b9f-4522-88d1-1dbae4b75336","title":"Global Register of Introduced and Invasive Species – Falkland Islands (Islas Malvinas)","description":"The Global Register of Introduced and Invasive Species (GRIIS) presents validated and verified checklists of introduced (alien) and invasive alien species at the country, territory, and associated island level. \n\nThe primary intention of GRIIS is to provide checklists for countries, islands and soon also for protected areas. Checklists are living entities, especially for biological invasions given the growing nature of the problem. GRIIS checklists are based on a published methodology and supported by the Integrated Publishing Tool that jointly enable ongoing improvements and updates to expand their taxonomic coverage and completeness. \n\nPhase 1 of the project focused on developing validated and verified checklists of countries that are Party to the Convention on Biological Diversity (CBD). Phase 2 which is on-going, aims to achieve global coverage including non-party countries and all overseas territories of countries e.g. Netherlands, France and United Kingdom. Species belonging to all Kingdoms are covered as well as occurring in all environment/systems. \n\nCountry/ Territory/ Island checklists are reviewed and verified by networks of country or species experts. Verified checklists/ species records as well as those under review are presented on the online GRIIS website (www.griis.org) in addition to being published through the GBIF IPT\n\nThis annotated checklist is of introduced (alien) and invasive alien species known to occur in The Global Register of Introduced and Invasive Species (GRIIS) presents validated and verified checklists of introduced (alien) and invasive alien species at the country, territory, and associated island level. \n\nThe primary intention of GRIIS is to provide checklists for countries, islands and soon also for protected areas. Checklists are living entities, especially for biological invasions given the growing nature of the problem. GRIIS checklists are based on a published methodology and supported by the Integrated Publishing Tool that jointly enable ongoing improvements and updates to expand their taxonomic coverage and completeness. \n\nPhase 1 of the project focused on developing validated and verified checklists of countries that are Party to the Convention on Biological Diversity (CBD). Phase 2 which is on-going, aims to achieve global coverage including non-party countries and all overseas territories of countries e.g. Netherlands, France and United Kingdom. Species belonging to all Kingdoms are covered as well as occurring in all environment/systems. \n\nCountry/ Territory/ Island checklists are reviewed and verified by networks of country or species experts. Verified checklists/ species records as well as those under review are presented on the online GRIIS website (www.griis.org) in addition to being published through the GBIF IPT\n\nThis annotated checklist is of introduced (alien) and invasive alien species known to occur in The Global Register of Introduced and Invasive Species (GRIIS) presents validated and verified checklists of introduced (alien) and invasive alien species at the country, territory, and associated island level. \n\nThe primary intention of GRIIS is to provide checklists for countries, islands and soon also for protected areas. Checklists are living entities, especially for biological invasions given the growing nature of the problem. GRIIS checklists are based on a published methodology and supported by the Integrated Publishing Tool that jointly enable ongoing improvements and updates to expand their taxonomic coverage and completeness. \n\nPhase 1 of the project focused on developing validated and verified checklists of countries that are Party to the Convention on Biological Diversity (CBD). Phase 2 which is on-going, aims to achieve global coverage including non-party countries and all overseas territories of countries e.g. Netherlands, France and United Kingdom. Species belonging to all Kingdoms are covered as well as occurring in all environment/systems. \n\nCountry/ Territory/ Island checklists are reviewed and verified by networks of country or species experts. Verified checklists/ species records as well as those under review are presented on the online GRIIS website (www.griis.org) in addition to being published through the GBIF IPT\n\nThis annotated checklist is of introduced (alien) and invasive alien species known to occur in Falkland Islands (Islas Malvinas)","type":"CHECKLIST"},{"key":"c1cc9753-6670-4dd5-a8c4-e2a10e4212de","title":"Lista de plantas de la Reserva Natural La Disculpa","description":"El inventario de plantas de la Reserva Natural La Disculpa fue documentado por Mateo Hernández en 2011. Esta reserva se ubica en la vereda San Juan de la Vega (municipio La vega), en Cundinamarca, a 1.5000 metros de altitud. Con 10 ha de extensión, esta reserva cuenta con 85% de su área en conservación. Son bosques en proceso de regeneración intermedia que no se tocan hacen más de 15 años. No obstante, debido a los fuertes procesos de reforestación, la regeneración es lenta. En algunas partes de la reserva se han enriquecido zonas seleccionando entre las 171 especies nativas registradas en el inventario","type":"CHECKLIST"},{"key":"a0239020-359f-47fa-a883-71b2ab64bba6","title":"Protected Areas - Global Register of Introduced and Invasive Species - Table Mountain National Park, South Africa","description":"The Protected Areas -Global Register of Introduced and Invasive Species (PA-GRIIS) presents validated checklists of introduced (alien) and invasive alien species at a site level. The primary intention of PA-GRIIS is to provide checklists of introduced (alien) and invasive species present on designated protected areas (such as National Parks, Ramsar sites- Wetlands of International importance, World Heritage Sites (natural and mixed), Marine protected areas etc.) and other areas of biodiversity significance (such as Important Plant Areas (IPA), Important Bird Areas (IBA) etc.), as well as buffer zones around these areas. Areas surrounding protected areas and other areas of high biodiversity significance can serve as an invasion source of alien and invasive species propagules. The establishment of buffer zones and the management of alien and invasive species within these areas is a key management strategy in the prevention of introduction and control/management of biological invasions. In the case of islands buffer zones.\n\nChecklists are living entities, especially for biological invasions given the growing nature of the problem. PA -GRIIS checklists are based on the GRIIS published methodology (Pagad et al 2018) and supported by the Integrated Publishing Tool of the Global Biodiversity Information Infrastructure (GBIF) that jointly enable ongoing improvements and updates to expand their taxonomic coverage and completeness. \n\nPhase 1 of the PA -GRIIS project will present close to 100 exemplar checklists of introduced (alien) and invasive species in a selection of protected areas and other areas of biodiversity significance\n\nThis annotated checklist is of introduced (alien) and invasive alien species known to occur in \nthe nationally designated Table Mountain National Park, South Africa","type":"CHECKLIST"},{"key":"701da598-f9f0-4fc5-876a-5a23da88a131","title":"Rasgos funcionales de aves presentes en ecosistemas de humedales de Colombia derivados de información secundaria","description":"La presente base de datos tiene por objeto presentar los rasgos funcionales (Historia de vida) de la Avifauna asociada a los ecosistemas de humedales de Colombia, se incluye información de 283 especies (siguiendo la taxonomía propuesta por Remsen et al. 2014), para la obtención de dichos rasgos se consultaron fuentes de información secundaria (publicaciones científicas nacionales e internacionales, bases de datos, entre otras). Adicionalmente, este producto hace parte de los insumos para la Delimitación de Ecosistemas Estratégicos: Páramos y Humedales de Colombia y del contrato 14-13-014-089PS.","type":"CHECKLIST"},{"key":"2e4c0876-1ef1-4368-b03d-0e81026c8ac9","title":"Lista de taxones de flora vascular y no vascular: expedición Serranía de Las Quinchas - Proyecto Boyacá BIO UPTC","description":"Se muestran los resultados de la expedición realizada a la Serranía de las Quinchas, en donde se realizaron muestreos de flora vascular y no vascular presente en áreas de vegetación de bosque húmedo tropical en diferentes estados de regeneración y en bosques maduros con características relictuales, entre los municipios de Otanche y Puerto Boyacá. La lista de taxones generada contiene 250 taxones pertenecientes a cinco phyllum (Magnoliophyta, Lycopodiophyta, Monilophyta, Bryophyta y Marchantiophyta), de los cuales 210 taxones corresponden a plantas vasculares agrupadas en cuatro clases, 168 especies, 138 géneros (37 taxones identificados a esta categoría) y 75 familias (cinco taxones identificados a esta categoría). El phyllum Magnoliophyta con 190 ejemplares es el más diverso con 155 especies,124 géneros y 63 familias; la clase Magnoliopsida es la más representativa con 29 órdenes; el orden Myrtales presenta cuatro familias, donde la familia más diversa es Melastomataceae con diez géneros y 36 especies, el orden Gentiales con la familia Rubiaceae presentó la segunda mayor diversidad representada en 17 géneros y 20 especies. Por otro lado, la clase Liliopsida presentó cinco órdenes, siete familias y 16 géneros. Las familias Orchidaceae y Bromeliaceae presentaron la mayor diversidad con cuatro géneros. A plantas no vasculares corresponden 40 taxones agrupados en seis clases, 21 géneros, 32 familias (un taxón identificado a esta categoría).  El phyllum con mayor número de registros (25) correspondió a Bryophyta integrada por dos clases; a la clase Bryopsida, la agrupan siete órdenes, donde el orden Hypnales está representado por nueve familias. Mientras, que al phyllum Marchantiophyta pertenecen dos clases, de las cuales Jungermanniopsida fue la más importante con cinco órdenes y 10 familias. Este inventario se desarrolló bajo el Convenio de cooperación No 17-17-170-195CE, suscrito entre UPTC-IAvH, Análisis de la biodiversidad y servicios ecosistémicos para su aplicación en la toma de decisiones en el departamento de Boyacá/Boyacá Bio.","type":"CHECKLIST"},{"key":"09d0256f-a986-4fee-9252-819ff12069e1","title":"Global Register of Introduced and Invasive Species - Pohnpei, Federated States of Micronesia","description":"The Global Register of Introduced and Invasive Species (GRIIS) presents validated and verified checklists of introduced (alien) and invasive alien species at the country, territory, and associated island level. \n\nPhase 1 of the project focused on developing validated and verified checklists of countries that are Party to the Convention on Biological Diversity (CBD). Phase 2 which is on-going, aims to achieve global coverage including non-party countries and all overseas territories of countries e.g. Netherlands, France and United Kingdom. Species belonging to all Kingdoms are covered as well as occurring in all Environment/systems. \n\nCountry/ Territory/ Island checklists are reviewed and verified by networks of country or species experts. Verified checklists/ species records as well as those under review are presented on the online GRIIS website (www.griis.org). Individual species records are flagged with a ‘yes’ for verification.  Only verified checklists/ species records are presented on the GBIF Portal.  \n\nThis annotated checklist is of introduced (alien) and invasive alien species known to occur in State of Pohnpei in the Federated States of Micronesia.","type":"CHECKLIST"},{"key":"9fd43cf4-d96f-4f78-be0d-496ec81059b4","title":"Global Register of Introduced and Invasive Species - French Polynesia","description":"The Global Register of Introduced and Invasive Species (GRIIS) presents validated and verified checklists of introduced (alien) and invasive alien species at the country, territory, and associated island level. \n\nThe primary intention of GRIIS is to provide checklists for countries, islands and soon also for protected areas. Checklists are living entities, especially for biological invasions given the growing nature of the problem. GRIIS checklists are based on a published methodology and supported by the Integrated Publishing Tool that jointly enable ongoing improvements and updates to expand their taxonomic coverage and completeness. \n\nPhase 1 of the project focused on developing validated and verified checklists of countries that are Party to the Convention on Biological Diversity (CBD). Phase 2 which is on-going, aims to achieve global coverage including non-party countries and all overseas territories of countries e.g. Netherlands, France and United Kingdom. Species belonging to all Kingdoms are covered as well as occurring in all environment/systems. \n\nCountry/ Territory/ Island checklists are reviewed and verified by networks of country or species experts. Verified checklists/ species records as well as those under review are presented on the online GRIIS website (www.griis.org) in addition to being published through the GBIF IPT\n\nThis annotated checklist is of introduced (alien) and invasive alien species known to occur in French Polynesia, an overseas territorial collectivity of France","type":"CHECKLIST"},{"key":"9f2ed2b6-1fcc-4b03-a1b8-8f615a1a5755","title":"Protected Areas - Global Register of Introduced and Invasive Species - Tankwa-Karoo National Park, South Africa","description":"The Protected Areas -Global Register of Introduced and Invasive Species (PA-GRIIS) presents validated checklists of introduced (alien) and invasive alien species at a site level. The primary intention of PA-GRIIS is to provide checklists of introduced (alien) and invasive species present on designated protected areas (such as National Parks, Ramsar sites- Wetlands of International importance, World Heritage Sites (natural and mixed), Marine protected areas etc.) and other areas of biodiversity significance (such as Important Plant Areas (IPA), Important Bird Areas (IBA) etc.), as well as buffer zones around these areas. Areas surrounding protected areas and other areas of high biodiversity significance can serve as an invasion source of alien and invasive species propagules. The establishment of buffer zones and the management of alien and invasive species within these areas is a key management strategy in the prevention of introduction and control/management of biological invasions. In the case of islands buffer zones.\n\nChecklists are living entities, especially for biological invasions given the growing nature of the problem. PA -GRIIS checklists are based on the GRIIS published methodology (Pagad et al 2018) and supported by the Integrated Publishing Tool of the Global Biodiversity Information Infrastructure (GBIF) that jointly enable ongoing improvements and updates to expand their taxonomic coverage and completeness. \n\nPhase 1 of the PA -GRIIS project will present close to 100 exemplar checklists of introduced (alien) and invasive species in a selection of protected areas and other areas of biodiversity significance\n\nThis annotated checklist is of introduced (alien) and invasive alien species known to occur in \nthe nationally designated Tankwa-Karoo National Park, South Africa","type":"CHECKLIST"},{"key":"dc6c4702-4e61-4efc-976d-1192bbd293a7","title":"Biodiversity of the aculeate wasps (Hymenoptera: Aculeata) of the Arabian Peninsula: Apoidea (Spheciformes), Crabronidae","description":"This dataset contains the digitized treatments in Plazi based on the original journal article Gadallah, Neveen S. (2020): Biodiversity of the aculeate wasps (Hymenoptera: Aculeata) of the Arabian Peninsula: Apoidea (Spheciformes), Crabronidae. Zootaxa 4754 (1): 20-73, DOI: https://doi.org/10.11646/zootaxa.4754.1.6","type":"CHECKLIST"},{"key":"e8508e67-3e63-4a77-94b1-47c3fb1d07b7","title":"GRIIS Checklist of Introduced and Invasive Species - Bosnia and Herzegovina","description":"The Global Register of Introduced and Invasive Species (GRIIS) presents validated and verified national checklists of introduced (alien) and invasive alien species at the country, territory, and associated island level. \n\nChecklists are living entities, especially for biological invasions given the growing nature of the problem. GRIIS checklists are based on a published methodology and supported by the Integrated Publishing Tool that jointly enable ongoing improvements and updates to expand their taxonomic coverage and completeness. \n\nPhase 1 of the project focused on developing validated and verified checklists of countries that are Party to the Convention on Biological Diversity (CBD). Phase 2 aimed to achieve global coverage including non-party countries and all overseas territories of countries, e.g. those of the Netherlands, France, and the United Kingdom. \n\nAll kingdoms of organisms occurring in all environments and systems are covered.\n\nChecklists are reviewed and verified by networks of country or species experts. Verified checklists/ species records, as well as those under review, are presented on the online GRIIS website (www.griis.org) in addition to being published through the GBIF Integrated Publishing Tool.","type":"CHECKLIST"},{"key":"81a257d9-9522-410e-b921-8c9283dbb939","title":"Checklist derived from occurrence data published on agroforestry plant species on GBIF site","description":"Checklist of agroforestry plant species from Benin (West Africa)","type":"CHECKLIST"},{"key":"f2e19fe8-b7b0-4ad6-ac34-64c242f8b50b","title":"Lista de taxones de flora vascular y no vascular: expedición Monte y Pinal - Proyecto Boyacá BIO UPTC","description":"Se muestran los resultados de la expedición Monte y Pinal, durante la cual se realizaron muestreos de flora vascular y no vascular presente en los ecosistemas de bosque andino y bosque altoandino, ubicados en el municipio de Pauna (vereda Monte y Pinal y vereda Manote). En la lista presentada se reportan 225 taxones pertenecientes a cinco phyllum (Magnoliophyta, Lycopodiophyta, Monilophyta, Bryophyta y Marchantiophyta), de los cuales 182 taxones corresponden a plantas vasculares agrupadas en 150 especies, 128 géneros (31 taxones identificados esta categoría) y 70 familias (un taxón identificado a esta categoría). El phyllum Magnoliophyta está representado en tres clases, siendo Magnoliopsida la mejor representada en 21 órdenes, 47 familias, 88 géneros y 102 especies. El orden mejor representado fue Gentianales con la familia Rubiaceae (diez géneros y once especies); mientras que para el orden Myrtales, la familia Melastomataceae fue la más representativa con tres géneros y diez especies. Al phyllum Monilophyta lo representó una clase, con tres órdenes; el orden Polipodiales registró la mayor diversidad con siete familias, once géneros y 15 especies. En plantas no vasculares, se reportaron 43 taxones pertenecientes a dos phyllum (Bryophyta y Machantiophyta), 38 familias (23 taxones identificados solo a esta categoría), 20 géneros (18 taxones identificados hasta esta categoría) y dos especies Hypopterygium tamarisci y Racopilum tomentosum. El phyllum Bryophyta (musgos), lo representaron dos clases, siendo la más relevante Bryopsida con nueve órdenes, el orden Hypnales el más diverso con diez familias, entre las que se encuentran Thuidiaceae (un género), Meterioraceae (un género) y Brachytheciaceae. Al phyllum Marchantiophyta (hepáticas), lo agruparon dos clases, donde la clase Jungermanniopsida presentó cuatro órdenes, de los cuales el orden Jungermanniales registró seis familias entra las que se encuentraron Lepidoziaceae (un género), Plagiochilaceae (un género) y Herbertaceae (un género). Este inventario se desarrolló bajo el Convenio de cooperación No 17-17-170-195CE, suscrito entre UPTC-IAvH, Análisis de la biodiversidad y servicios ecosistémicos para su aplicación en la toma de decisiones en el departamento de Boyacá/Boyacá Bio.","type":"CHECKLIST"},{"key":"30a30384-6c1c-4942-8396-9aad30ad290b","title":"Chapter 7: Linnaean Plant Names and their Types (part R)","description":"This dataset contains the digitized treatments in Plazi based on the original book chapter Jarvis, Charlie (2007): Chapter 7: Linnaean Plant Names and their Types (part R). In: Order out of Chaos. Linnaean Plant Types and their Types. London: Linnaean Society of London in association with the Natural History Museum: 785-805, ISBN: 978-0-9506207-7-0, DOI: https://doi.org/10.5281/zenodo.291971","type":"CHECKLIST"},{"key":"414a9fa5-0e04-4b8f-88e6-0b0888a0edef","title":"Chapter 7: Linnaean Plant Names and their Types (part O)","description":"This dataset contains the digitized treatments in Plazi based on the original book chapter Jarvis, Charlie (2007): Chapter 7: Linnaean Plant Names and their Types (part O). In: Order out of Chaos. Linnaean Plant Types and their Types. London: Linnaean Society of London in association with the Natural History Museum: 696-717, ISBN: 978-0-9506207-7-0, DOI: https://doi.org/10.5281/zenodo.291971","type":"CHECKLIST"},{"key":"f5acbf65-b285-40bf-b242-a167ca1f8003","title":"A foundation monograph of Ipomoea (Convolvulaceae) in the New World","description":"This dataset contains the digitized treatments in Plazi based on the original journal article Wood, John R. I., Munoz-Rodriguez, Pablo, Williams, Bethany R. M., Scotland, Robert W. (2020): A foundation monograph of Ipomoea (Convolvulaceae) in the New World. PhytoKeys 143: 1-823, DOI: http://dx.doi.org/10.3897/phytokeys.143.32821, URL: http://dx.doi.org/10.3897/phytokeys.143.32821","type":"CHECKLIST"},{"key":"e1c3be64-2799-4342-8312-49d076993132","title":"Checklist of alien birds of Belgium","description":"<p>The Checklist of alien birds of Belgium is a species checklist dataset published by the Research Institute for Nature and Forest (INBO). It contains information on 244 alien birds species occurring or ever observed in the wild in Belgium since 1800 and is is a compilation of different sources: literature (e.g. scientific papers, reports), citizen science portals (e.g. observations.be, waarnemingen.be, the Belgian Rare Birds Committee http://www.belgianrbc.be) and online databases such as DAISIE (DAISIE 2000) or the Global Avian Invasions Atlas (Dyer et al. 2017). Here, the checklist is published as a standardized Darwin Core Archive and includes for each species: the scientific name, higher classification and stable taxon identifier (in the taxon core), the presence in Flanders, Wallonia and the Brussels-Capital Region, as well as the year of the first introduction (first collection) and/or last assessment/observation in Belgium (given as a year range in the event date in the distribution extension), coarse habitat information (in the species profile extension), and the pathway(s) of introduction, native range(s) and degree of establishment in Belgium (in the description extension). The checklist can be used for research, to inform horizon-scanning exercises, to perform risk assessments of alien species, to compile regional and national registries of alien species, to feed biodiversity indicators etc. Issues with the dataset can be reported at https://github.com/trias-project/alien-birds-checklist</p>\n<p>We have released this dataset to the public domain under a Creative Commons Zero waiver. We would appreciate it if you follow the GBIF citation guidelines (https://www.gbif.org/citation-guidelines) when using the data. If you have any questions regarding this dataset, don’t hesitate to contact us via the contact information provided in the metadata or via opendata@inbo.be.</p>\n<p>This dataset was published as open data for the TrIAS project (Tracking Invasive Alien Species http://trias-project.be, Vanderhoeven et al. 2017), with technical support provided by the Research Institute for Nature and Forest (INBO). It is selected as one of the authoritative sources for the compilation of a unified and reproducible checklist of alien species in Belgium (Desmet et al. https://doi.org/10.15468/xoidmd).</p>\n<p>The compilation of the checklist was supported by the Short Term Scientific Mission Improving data flows for alien birds in Belgium and drafting a roadmap for alien species citizen science in Romania funded by the European Cooperation in Science and Technology (COST) Alien CSI CA17122 - Increasing understanding of alien species through citizen science (https://alien-csi.eu/).</p>","type":"CHECKLIST"},{"key":"506e844e-5d60-4be5-a5a0-59e822a5f477","title":"Global Register of Introduced and Invasive Species - Albania","description":"The Global Register of Introduced and Invasive Species (GRIIS) presents validated and verified national checklists of introduced (alien) and invasive alien species at the country, territory, and associated island level. \n\nChecklists are living entities, especially for biological invasions given the growing nature of the problem. GRIIS checklists are based on a published methodology and supported by the Integrated Publishing Tool that jointly enable ongoing improvements and updates to expand their taxonomic coverage and completeness. \n\nPhase 1 of the project focused on developing validated and verified checklists of countries that are Party to the Convention on Biological Diversity (CBD). Phase 2 aimed to achieve global coverage including non-party countries and all overseas territories of countries, e.g. those of the Netherlands, France, and the United Kingdom. \n\nAll kingdoms of organisms occurring in all environments and systems are covered.\n\nChecklists are reviewed and verified by networks of country or species experts. Verified checklists/ species records, as well as those under review, are presented on the online GRIIS website (www.griis.org) in addition to being published through the GBIF Integrated Publishing Tool.","type":"CHECKLIST"},{"key":"7a3be85e-9a8f-4749-9984-1e60c69e67d0","title":"Nomenclatural changes in Coleus and Plectranthus (Lamiaceae): a tale of more than two genera","description":"This dataset contains the digitized treatments in Plazi based on the original journal article Paton, Alan J., Mwanyambo, Montfort, Govaerts, Rafael H. A., Smitha, Kokkaraniyil, Suddee, Somran, Phillipson, Peter B., Wilson, Trevor C., Forster, Paul I., Culham, Alastair (2019): Nomenclatural changes in Coleus and Plectranthus (Lamiaceae): a tale of more than two genera. PhytoKeys 129: 1-158, DOI: http://dx.doi.org/10.3897/phytokeys.129.34988, URL: http://dx.doi.org/10.3897/phytokeys.129.34988","type":"CHECKLIST"},{"key":"8e77944c-d207-49ae-8f9d-d674853a09fc","title":"Global Register of Introduced and Invasive Species - Angola","description":"The Global Register of Introduced and Invasive Species (GRIIS) presents validated and verified national checklists of introduced (alien) and invasive alien species at the country, territory, and associated island level. \n\nChecklists are living entities, especially for biological invasions given the growing nature of the problem. GRIIS checklists are based on a published methodology and supported by the Integrated Publishing Tool that jointly enable ongoing improvements and updates to expand their taxonomic coverage and completeness. \n\nPhase 1 of the project focused on developing validated and verified checklists of countries that are Party to the Convention on Biological Diversity (CBD). Phase 2 aimed to achieve global coverage including non-party countries and all overseas territories of countries, e.g. those of the Netherlands, France, and the United Kingdom. \n\nAll kingdoms of organisms occurring in all environments and systems are covered.\n\nChecklists are reviewed and verified by networks of country or species experts. Verified checklists/ species records, as well as those under review, are presented on the online GRIIS website (www.griis.org) in addition to being published through the GBIF Integrated Publishing Tool.","type":"CHECKLIST"},{"key":"4d93f591-1785-4eea-9b96-49b782137498","title":"An annotated distributional checklist of Vespidae (Hymenoptera: Vespoidea) of India","description":"This dataset contains the digitized treatments in Plazi based on the original journal article Gawas, Sandesh M., Kumar, Girish, Pannure, Arati, Gupta, Ankita, Carpenter, James M. (2020): An annotated distributional checklist of Vespidae (Hymenoptera: Vespoidea) of India. Zootaxa 4784 (1): 1-87, DOI: https://doi.org/10.11646/zootaxa.4784.1.1","type":"CHECKLIST"},{"key":"d0cd9036-dabd-4b2c-a7f8-7bb8a92bce75","title":"The checklist of vertebrates of the Natural park «Kondinskie lakes»","description":"The dataset includes a list of vertebrate species registered on the territory of the Natural park «Kondinskie lakes» (Russian Federation, Khanty-Mansi Autonomous Okrug) from 1949 to 2019. Various researchers studied the park vertebrate animals: A.M. Vasin (1992), V.P. Lykhvar (1992), V.N. Vorobyev (1992), F.S. Buydalina (1992), E.G. Larin (from 2002 to present), S.N. Gashev (2004-2011), V.P. Starikov (2017), K.A. Bernikov (2017), A.V. Morozkina (2017), E.S. Sarapultseva (2017). According to the data for 2019, the list of vertebrates includes 196 species registered on the territory of the Park.","type":"CHECKLIST"},{"key":"b18767ad-2b44-40f6-b1e7-4199cbbc7a4f","title":"Global Register of Introduced and Invasive Species - Montserrat","description":"The Global Register of Introduced and Invasive Species (GRIIS) presents validated and verified checklists of introduced (alien) and invasive alien species at the country, territory, and associated island level. \n\nThe primary intention of GRIIS is to provide checklists for countries, islands and soon also for protected areas. Checklists are living entities, especially for biological invasions given the growing nature of the problem. GRIIS checklists are based on a published methodology and supported by the Integrated Publishing Tool that jointly enable ongoing improvements and updates to expand their taxonomic coverage and completeness. \n\nPhase 1 of the project focused on developing validated and verified checklists of countries that are Party to the Convention on Biological Diversity (CBD). Phase 2 which is on-going, aims to achieve global coverage including non-party countries and all overseas territories of countries e.g. Netherlands, France and United Kingdom. Species belonging to all Kingdoms are covered as well as occurring in all environment/systems. \n\nCountry/ Territory/ Island checklists are reviewed and verified by networks of country or species experts. Verified checklists/ species records as well as those under review are presented on the online GRIIS website (www.griis.org) in addition to being published through the GBIF IPT\n\nThis annotated checklist is of introduced (alien) and invasive alien species known to occur in Montserrat and overseas territory of the United Kingdom","type":"CHECKLIST"},{"key":"ea406606-dfbd-4121-9d8c-108041a032b4","title":"The bats of the Congo and of Rwanda and Burundi revisited (Mammalia: Chiroptera)","description":"This dataset contains the digitized treatments in Plazi based on the original journal article Cakenberghe, Victor Van, Tungaluna, Guy-Crispin Gembu, Akawa, Prescott Musaba, Seamark, Ernest, Verheyen, Erik (2017): The bats of the Congo and of Rwanda and Burundi revisited (Mammalia: Chiroptera). European Journal of Taxonomy 382: 1-327, DOI: https://doi.org/10.5852/ejt.2017.382","type":"CHECKLIST"},{"key":"f68fe85c-2a4c-4625-b684-74f61398d6c2","title":"Peixes da planície de inundação do alto rio Paraná e áreas adjacentes: revised, annotated and updated","description":"This dataset contains the digitized treatments in Plazi based on the original journal article Ota, Renata Rúbia, Deprá, Gabriel de Carvalho, Graça, Weferson Júnio da, Pavanelli, Carla Simone (2018): Peixes da planície de inundação do alto rio Paraná e áreas adjacentes: revised, annotated and updated. Neotropical Ichthyology 16 (2): 1-111, DOI: 10.1590/1982-0224-20170094","type":"CHECKLIST"},{"key":"04cf0bdc-6ec4-45d9-9364-ad1e918cce95","title":"Protected Areas - Global Register of Introduced and Invasive Species - Serengeti - Mara Ecosystem (Kenya, Tanzania)","description":"The Protected Areas -Global Register of Introduced and Invasive Species (PA-GRIIS) presents validated checklists of introduced (alien) and invasive alien species at a site level. The primary intention of PA-GRIIS is to provide checklists of introduced (alien) and invasive species present on designated protected areas (such as National Parks, Ramsar sites- Wetlands of International importance, World Heritage Sites (natural and mixed), Marine protected areas etc.) and other areas of biodiversity significance (such as Important Plant Areas (IPA), Important Bird Areas (IBA) etc.), as well as buffer zones around these areas. Areas surrounding protected areas and other areas of high biodiversity significance can serve as an invasion source of alien and invasive species propagules. The establishment of buffer zones and the management of alien and invasive species within these areas is a key management strategy in the prevention of introduction and control/management of biological invasions. In the case of islands buffer zones.\n\nChecklists are living entities, especially for biological invasions given the growing nature of the problem. PA -GRIIS checklists are based on the GRIIS published methodology (Pagad et al 2018) and supported by the Integrated Publishing Tool of the Global Biodiversity Information Infrastructure (GBIF) that jointly enable ongoing improvements and updates to expand their taxonomic coverage and completeness. \n\nPhase 1 of the PA -GRIIS project will present close to 100 exemplar checklists of introduced (alien) and invasive species in a selection of protected areas and other areas of biodiversity significance\n\nThis annotated checklist is of introduced (alien) and invasive alien species known to occur in the \nSerengeti-Mara Ecosystem, taking in the Serengeti National Park and Maasai Mara National Reserve in East Africa","type":"CHECKLIST"},{"key":"096967cb-0d2c-4e10-9840-fb95265b4402","title":"Protected Areas - Global Register of Introduced and Invasive Species - Golden Gate Highlands National Park, South Africa","description":"The Protected Areas -Global Register of Introduced and Invasive Species (PA-GRIIS) presents validated checklists of introduced (alien) and invasive alien species at a site level. The primary intention of PA-GRIIS is to provide checklists of introduced (alien) and invasive species present on designated protected areas (such as National Parks, Ramsar sites- Wetlands of International importance, World Heritage Sites (natural and mixed), Marine protected areas etc.) and other areas of biodiversity significance (such as Important Plant Areas (IPA), Important Bird Areas (IBA) etc.), as well as buffer zones around these areas. Areas surrounding protected areas and other areas of high biodiversity significance can serve as an invasion source of alien and invasive species propagules. The establishment of buffer zones and the management of alien and invasive species within these areas is a key management strategy in the prevention of introduction and control/management of biological invasions. In the case of islands buffer zones.\n\nChecklists are living entities, especially for biological invasions given the growing nature of the problem. PA -GRIIS checklists are based on the GRIIS published methodology (Pagad et al 2018) and supported by the Integrated Publishing Tool of the Global Biodiversity Information Infrastructure (GBIF) that jointly enable ongoing improvements and updates to expand their taxonomic coverage and completeness. \n\nPhase 1 of the PA -GRIIS project will present close to 100 exemplar checklists of introduced (alien) and invasive species in a selection of protected areas and other areas of biodiversity significance\n\nThis annotated checklist is of introduced (alien) and invasive alien species known to occur in the nationally designated Golden Gate Highlands National Park, South Africa","type":"CHECKLIST"},{"key":"c4074965-7f04-46b9-a422-fdd47a0e2e03","title":"Makiling Biodiversity Information System (MAKIBIS)","description":"Makiling Biodiversity Information System (MakiBIS) is an online portal of diverse species composition of Mt. Makiling lifted from various published materials. It serves a single repository of biodiversity species documented within MFR that allows user to readily access available information of each taxon via internet. The system shared the information globally-based on standards of Global Biodiversity Information Facility (GBIF) using Darwin Core platform, particularly the taxonomic information of the species recorded. MakiBIS is envisioned to be a prototype system that calls for an initiative to have nationwide biodiversity information system known as Philippine Biodiversity Information System (PhilBIS) through interagency and multidisciplinary partnership. The creation of a database system released in the worldwide web provides avenue among users in the world to view and appreciate the ecological importance of biodiversity in any given country.","type":"CHECKLIST"},{"key":"27455364-100a-4f24-b17c-b051ae69dd3a","title":"Annotated checklist of the Hemiptera Heteroptera of the Site of Community Importance and Special Area of Conservation “ Alpi Marittime ” (NW Italy)","description":"This dataset contains the digitized treatments in Plazi based on the original journal article Norbiato, Margherita, Dioli, Paride, Cianferoni, Fabio (2019): Annotated checklist of the Hemiptera Heteroptera of the Site of Community Importance and Special Area of Conservation “ Alpi Marittime ” (NW Italy). Zoosystema 41 (15): 269-312, DOI: 10.5252/zoosystema2019v41a15","type":"CHECKLIST"},{"key":"507191c9-df1f-44f0-b809-2de4cfe6805f","title":"Chapter 7: Linnaean Plant Names and their Types (part D)","description":"This dataset contains the digitized treatments in Plazi based on the original book chapter Jarvis, Charlie (2007): Chapter 7: Linnaean Plant Names and their Types (part D). In: Order out of Chaos. Linnaean Plant Types and their Types. London: Linnaean Society of London in association with the Natural History Museum: 474-489, ISBN: 978-0-9506207-7-0, DOI: https://doi.org/10.5281/zenodo.291971","type":"CHECKLIST"},{"key":"309cbe80-0be8-4196-a3d0-93f338e7cc4e","title":"Global Register of Introduced and Invasive Species – British Indian Ocean Territory","description":"The Global Register of Introduced and Invasive Species (GRIIS) presents validated and verified checklists of introduced (alien) and invasive alien species at the country, territory, and associated island level. \n\nThe primary intention of GRIIS is to provide checklists for countries, islands and soon also for protected areas. Checklists are living entities, especially for biological invasions given the growing nature of the problem. GRIIS checklists are based on a published methodology and supported by the Integrated Publishing Tool that jointly enable ongoing improvements and updates to expand their taxonomic coverage and completeness. \n\nPhase 1 of the project focused on developing validated and verified checklists of countries that are Party to the Convention on Biological Diversity (CBD). Phase 2 which is on-going, aims to achieve global coverage including non-party countries and all overseas territories of countries e.g. Netherlands, France and United Kingdom. Species belonging to all Kingdoms are covered as well as occurring in all environment/systems. \n\nCountry/ Territory/ Island checklists are reviewed and verified by networks of country or species experts. Verified checklists/ species records as well as those under review are presented on the online GRIIS website (www.griis.org) in addition to being published through the GBIF IPT\n\nThis annotated checklist is of introduced (alien) and invasive alien species known to occur in British Indian Ocean Territory (BIOT), an Overseas territory of the United Kingdom.","type":"CHECKLIST"},{"key":"76fa7439-0e6f-4ebf-af0a-dad12f6ce35a","title":"Chapter 7: Linnaean Plant Names and their Types (part V)","description":"This dataset contains the digitized treatments in Plazi based on the original book chapter Jarvis, Charlie (2007): Chapter 7: Linnaean Plant Names and their Types (part V). In: Order out of Chaos. Linnaean Plant Types and their Types. London: Linnaean Society of London in association with the Natural History Museum: 911-926, ISBN: 978-0-9506207-7-0, DOI: https://doi.org/10.5281/zenodo.291971","type":"CHECKLIST"}]
  recorded_at: 2020-12-08 23:53:45 GMT
  recorded_with: vcr/0.5.4, webmockr/0.7.0
