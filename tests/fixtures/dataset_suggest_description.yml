http_interactions:
- request:
    method: get
    uri: https://api.gbif.org/v1/dataset/suggest?limit=100&type=OCCURRENCE
    body:
      encoding: ''
      string: ''
    headers:
      Accept-Encoding: gzip, deflate
      Accept: application/json, text/xml, application/xml, */*
      User-Agent: r-curl/3.3 crul/0.7.0 rOpenSci(rgbif/1.2.0)
      X-USER-AGENT: r-curl/3.3 crul/0.7.0 rOpenSci(rgbif/1.2.0)
  response:
    status:
      status_code: '200'
      message: OK
      explanation: Request fulfilled, document follows
    headers:
      status: HTTP/1.1 200 OK
      date: Tue, 26 Feb 2019 15:14:36 GMT
      content-type: application/json
      access-control-allow-origin: '*'
      access-control-allow-methods: HEAD, GET, POST, DELETE, PUT, OPTIONS
      server: Jetty(9.3.z-SNAPSHOT)
      cache-control: public, max-age=3601
      x-varnish: 745637932 754484622
      age: '0'
      via: 1.1 varnish (Varnish/5.2)
      accept-ranges: bytes
      content-length: '73825'
      connection: keep-alive
    body:
      encoding: ASCII-8BIT
      string: W3sia2V5IjoiNGZhN2IzMzQtY2UwZC00ZTg4LWFhYWUtMmUwYzEzOGQwNDllIiwidGl0bGUiOiJFT0QgLSBlQmlyZCBPYnNlcnZhdGlvbiBEYXRhc2V0IiwiZGVzY3JpcHRpb24iOiJlQmlyZCBpcyBhIGNvbGxlY3RpdmUgZW50ZXJwcmlzZSB0aGF0IHRha2VzIGEgbm92ZWwgYXBwcm9hY2ggdG8gY2l0aXplbiBzY2llbmNlIGJ5IGRldmVsb3BpbmcgY29vcGVyYXRpdmUgcGFydG5lcnNoaXBzIGFtb25nIGV4cGVydHMgaW4gYSB3aWRlIHJhbmdlIG9mIGZpZWxkczogcG9wdWxhdGlvbiBlY29sb2dpc3RzLCBjb25zZXJ2YXRpb24gYmlvbG9naXN0cywgcXVhbnRpdGF0aXZlIGVjb2xvZ2lzdHMsIHN0YXRpc3RpY2lhbnMsIGNvbXB1dGVyIHNjaWVudGlzdHMsIEdJUyBhbmQgaW5mb3JtYXRpY3Mgc3BlY2lhbGlzdHMsIGFwcGxpY2F0aW9uIGRldmVsb3BlcnMsIGFuZCBkYXRhIGFkbWluaXN0cmF0b3JzLiBNYW5hZ2VkIGJ5IHRoZSBDb3JuZWxsIExhYiBvZiBPcm5pdGhvbG9neSBlQmlyZOKAmXMgZ29hbCBpcyB0byBpbmNyZWFzZSBkYXRhIHF1YW50aXR5IHRocm91Z2ggcGFydGljaXBhbnQgcmVjcnVpdG1lbnQgYW5kIGVuZ2FnZW1lbnQgZ2xvYmFsbHksIGJ1dCBhbHNvIHRvIHF1YW50aWZ5IGFuZCBjb250cm9sIGZvciBkYXRhIHF1YWxpdHkgaXNzdWVzIHN1Y2ggYXMgb2JzZXJ2ZXIgdmFyaWFiaWxpdHksIGltcGVyZmVjdCBkZXRlY3Rpb24gb2Ygc3BlY2llcywgYW5kIGJvdGggc3BhdGlhbCBhbmQgdGVtcG9yYWwgYmlhcyBpbiBkYXRhIGNvbGxlY3Rpb24uIGVCaXJkIGRhdGEgYXJlIG9wZW5seSBhdmFpbGFibGUgYW5kIHVzZWQgYnkgYSBicm9hZCBzcGVjdHJ1bSBvZiBzdHVkZW50cywgdGVhY2hlcnMsIHNjaWVudGlzdHMsIE5HT3MsIGdvdmVybm1lbnQgYWdlbmNpZXMsIGxhbmQgbWFuYWdlcnMsIGFuZCBwb2xpY3kgbWFrZXJzLiBUaGUgcmVzdWx0IGlzIHRoYXQgZUJpcmQgaGFzIGJlY29tZSBhIG1ham9yIHNvdXJjZSBvZiBiaW9kaXZlcnNpdHkgZGF0YSwgaW5jcmVhc2luZyBvdXIga25vd2xlZGdlIG9mIHRoZSBkeW5hbWljcyBvZiBzcGVjaWVzIGRpc3RyaWJ1dGlvbnMsIGFuZCBoYXZpbmcgYSBkaXJlY3QgaW1wYWN0IG9uIHRoZSBjb25zZXJ2YXRpb24gb2YgYmlyZHMgYW5kIHRoZWlyIGhhYml0YXRzLiIsInR5cGUiOiJPQ0NVUlJFTkNFIn0seyJrZXkiOiI3NTk1NmVlNi0xYTJiLTRmYTMtYjNlOC1jY2RhNjRjZTZjMmQiLCJ0aXRsZSI6IklOUE4gLSBEb25uw6llcyBmbG9yZSBkZXMgQ0JOIGFncsOpZ8OpZXMgcGFyIGxhIEZDQk4iLCJkZXNjcmlwdGlvbiI6IkTDqHMgbGEgY3LDqWF0aW9uIGRlIGxldXIgRsOpZMOpcmF0aW9uIChGQ0JOIC0gd3d3LmZjYm4uZnIpIGVuIDE5OTksIGxlcyBvbnplIENvbnNlcnZhdG9pcmVzIGJvdGFuaXF1ZXMgbmF0aW9uYXV4IChDQk4pIG9udCBleHByaW3DqSBsYSB2b2xvbnTDqSBjb2xsZWN0aXZlIGRlIGNvbnN0aXR1ZXIgdW4gc3lzdMOobWUgZOKAmWluZm9ybWF0aW9uIG5hdGlvbmFsIHBvdXIgbWV0dHJlIGVuIGNvbW11biBsZXVycyBkb25uw6llcywgZXQgY2VsbGVzIGRlIGxldXJzIHBhcnRlbmFpcmVzLCBzdXIgbGEgZmxvcmUsIGxhIGZvbmdlIGV0IGxlcyB2w6lnw6l0YXRpb25zLWhhYml0YXRzLiBD4oCZZXN0IHLDqWVsbGVtZW50IGVuIDIwMTAgYXZlYyBsZSBsYW5jZW1lbnQgZGUgbOKAmcOpdGFibGlzc2VtZW50IGR1IEZvcm1hdCBTdGFuZGFyZCBkZSBEb25uw6llcyBzdXIgbGEgZmxvcmUgKEZTRCBGbG9yZSksIGNvbsOndSBjb21tZSBsZSDCqyBmb3JtYXQgY29tbXVuIGRlIGRvbm7DqWVzIGRlIGxhIEbDqWTDqXJhdGlvbiBkZXMgQ0JOIMK7LCBxdWUgbGEgZMOpbWFyY2hlIGEgw6l0w6kgaW5pdGnDqWUuIElsIHPigJllbiBlc3Qgc3VpdmkgZGUgbm9tYnJldXggw6ljaGFuZ2VzIGF5YW50IHBlcm1pcyBkZSBmaW5hbGlzZXIgbGUgZm9ybWF0LCBkZSBsZSB0ZXN0ZXIgc3VyIGxlcyBwcmVtaWVycyBqZXV4IGRlIGRvbm7DqWVzLCBk4oCZw6l0YWJsaXIgdW5lIGNoYXJ0ZSBk4oCZYWRow6lzaW9uIGF1IHByb2pldCBldCBk4oCZw6lsYWJvcmVyIGxlIGNhZHJhZ2UgZmluYWwgZGUgbOKAmWV4ZXJjaWNlIGTigJlhZ3LDqWdhdGlvbiBkZXMgZG9ubsOpZXMuIExlIHByb2pldCBz4oCZZXN0IGNvbmNyw6l0aXPDqSBhdSBwcmVtaWVyIHRyaW1lc3RyZSAyMDEzIMOgIHRyYXZlcnMgbGEgbWlzZSBhdSBmb3JtYXQgZGVzIGRvbm7DqWVzIGTDqXRlbnVlcyBwYXIgbGVzIENCTiBldCBsZXVyIGludMOpZ3JhdGlvbiBkYW5zIGxlIFN5c3TDqG1lIGTigJlJbmZvcm1hdGlvbiBkZSBsYSBGQ0JOIChTSS1GbG9yZSkuIEEgbOKAmWhvcml6b24gZGUgbOKAmWFubsOpZSAyMDE0LCBpbCByw6lzdWx0ZSwgZGUgY2UgcHJvamV0IHN0cnVjdHVyYW50LCBxdWUgbGEgRkNCTiBkaXNwb3NlIGTigJl1biBzeXN0w6htZSBk4oCZaW5mb3JtYXRpb24gZOKAmWVudmVyZ3VyZSBuYXRpb25hbGUgZXQgZm9ydCBkZSBwbHVzIGRlIDIwIG1pbGxpb25zIGRlIGRvbm7DqWVzIGTigJlvYnNlcnZhdGlvbiBzdXIgbGEgZmxvcmUgZGUgRnJhbmNlLiBMZXMgZG9ubsOpZXMgY2VudHJhbGlzw6llcyBvbnQgw6l0w6kgY29uc29saWTDqWVzIHN1ciBsYSBiYXNlIGR1IHLDqWbDqXJlbnRpZWwgVEFYUkVGIDUuMCBldCB1bmUgbWlzZSDDoCBqb3VyIGVzdCBwcsOpdnVlIHBvdXIgZmluIDIwMTUuIiwidHlwZSI6Ik9DQ1VSUkVOQ0UifSx7ImtleSI6ImU2ZmFiN2IzLWM3MzMtNDBiOS04ZGYzLTJhMDNlNDk1MzJjMSIsInRpdGxlIjoiRmxvcmEgdm9uIERldXRzY2hsYW5kIChQaGFuZXJvZ2FtZW4pIiwiZGVzY3JpcHRpb24iOiJWZXJicmVpdHVuZyBkZXIgRmFybi0gdW5kIEJsdWV0ZW5wZmxhbnplbiBpbiBEZXV0c2NobGFuZCwgVm9ya29tbWVuc25hY2h3ZWlzZSBhZ2dyZWdpZXJ0IGF1ZiBRdWFkcmFudGVuIGRlciBUb3BvZ3JhcGhpc2NoZW4gS2FydGUgMSA6IDI1MDAwIChUSzI1ID0gTVRCKSwgc293aWUgaW4gWmVpdHBlcmlvZGVuIDx2b3IgMTk1MD4sIDwxOTUwIC0gMTk4MD4sIDxuYWNoIDE5ODAgPiIsInR5cGUiOiJPQ0NVUlJFTkNFIn0seyJrZXkiOiJmMDZmZWYzYy02ZWE2LTQzNDUtYjcyNC1hMWI4ZTQ5MGRjNTUiLCJ0aXRsZSI6IkFuaWxsYW1pZW50byBTRU9fQmlyZCByaW5naW5nIiwiZGVzY3JpcHRpb24iOiJTY2llbnRpZmljIGJpcmQgcmluZ2luZyBpcyBhIHJlc2VhcmNoIG1ldGhvZCBiYXNlZCBvbiB0aGUgaW5kaXZpZHVhbCBtYXJraW5nIG9mIGJpcmRzLlxuQmlyZCBSaW5naW5nIGludm9sdmVzIHRoZSBtYXJraW5nIG9mIGluZGl2aWR1YWwgYmlyZHMgYnkgaGlnaGx5IHRyYWluZWQgb3JuaXRob2xvZ2lzdHMgdG8gcHJvdmlkZSB2aXRhbGRhdGEgb24gbWlncmF0aW9uIHBhdHRlcm5zLCBkZW1vZ3JhcGh5XG5hbmQgZWNvbG9naWNhbCBwcm9jZXNzZXMuIiwidHlwZSI6Ik9DQ1VSUkVOQ0UifSx7ImtleSI6IjZhYzNmNzc0LWQ5ZmItNDc5Ni1iM2U5LTkyYmY2YzgxYzA4NCIsInRpdGxlIjoibmF0dXJndWNrZXIiLCJkZXNjcmlwdGlvbiI6Im5hdHVyZ3Vja2VyLmRlIC8gZW5qb3luYXR1cmUubmV0IGlzIGEgcmFwaWRseSBncm93aW5nIHNvY2lhbCBuZXR3b3JrIHdpdGggc2V2ZXJhbCBtaWxsaW9ucyBvZiBvYnNlcnZhdGlvbnMgb2Ygd2lsZCBwbGFudHMgYW5kIGFuaW1hbHMsIHRodXMgbmF0dXJndWNrZXIuZGUgLyBlbmpveW5hdHVyZS5uZXQgc3VwcG9ydHMgYW5kIHByb21vdGVzIG5hdHVyZSBjb25zZXJ2YW5jeS4gbmF0dXJndWNrZXIuZGUgLyBlbmpveW5hdHVyZS5uZXQgb2ZmZXJzIG5hdHVyZSBvYnNlcnZlcnMgKG1haW5seSBjaXRpemVuIHNjaWVudGlzdHMpIGEgcGVyc29uYWwgZGF0YSBjZW50ZXIgZm9yIHRoZWlyIGRhdGEgaW4gd2hpY2ggdGhleSBjYW4gcG9vbCBhbmQgbWFuYWdlIGFsbCB0aGVpciBvYnNlcnZhdGlvbnMgYW5kIG5hdHVyZSBwaG90b2dyYXBocyBmb3IgdGhlIHN1cnJvdW5kaW5nIHJlZ2lvbiwgb3IgZXZlbiB3b3JsZHdpZGUgZnJvbSB0aGVpciB2YWNhdGlvbnMuIEluIGFkZGl0aW9uLCBiZWdpbm5lcnMgY2FuIGZpbmQgYSBteXJpYWQgb2YgaW5mb3JtYXRpb24sIHN1Y2ggYXMgaHVuZHJlZHMgb2YgdGhvdXNhbmRzIG9mIHBob3RvZ3JhcGhzLCB1cCB0byBkYXRlIGRpc3RyaWJ1dGlvbiBtYXBzLCB0ZW50aG91c2FuZHMgb2JzZXJ2YXRpb24gYXJlYXMgd2l0aCBoZWxwZnVsIGhpbnRzLCBhbmQgYSBzdHJvbmcgY29tbXVuaXR5IGluIG5hdHVyZ3Vja2VyLmRlIC9lbmpvYXluYXR1cmUubmV0LiIsInR5cGUiOiJPQ0NVUlJFTkNFIn0seyJrZXkiOiI4M2UyMDU3My1mN2RkLTQ4NTItOTE1OS0yMTU2NmUxZTY5MWUiLCJ0aXRsZSI6IkJpcmQgdHJhY2tpbmcgLSBHUFMgdHJhY2tpbmcgb2YgTGVzc2VyIEJsYWNrLWJhY2tlZCBHdWxscyBhbmQgSGVycmluZyBHdWxscyBicmVlZGluZyBhdCB0aGUgc291dGhlcm4gTm9ydGggU2VhIGNvYXN0IiwiZGVzY3JpcHRpb24iOiJCaXJkIHRyYWNraW5nIC0gR1BTIHRyYWNraW5nIG9mIExlc3NlciBCbGFjay1iYWNrZWQgR3VsbHMgYW5kIEhlcnJpbmcgR3VsbHMgYnJlZWRpbmcgYXQgdGhlIHNvdXRoZXJuIE5vcnRoIFNlYSBjb2FzdCBpcyBhIHNwZWNpZXMgb2NjdXJyZW5jZSBkYXRhc2V0IHB1Ymxpc2hlZCBieSB0aGUgUmVzZWFyY2ggSW5zdGl0dXRlIGZvciBOYXR1cmUgYW5kIEZvcmVzdCAoSU5CTykgYW5kIGRlc2NyaWJlZCAodjUuNSkgaW4gU3RpZW5lbiBldCBhbC4gMjAxNiAoaHR0cHM6Ly9kb2kub3JnLzEwLjM4OTcvem9va2V5cy41NTUuNjE3MykuIFRoZSBkYXRhc2V0IGNvbnRhaW5zIGNsb3NlIHRvIDguNSBtaWxsaW9uIG9jY3VycmVuY2VzIChHUFMgZml4ZXMpIHJlY29yZGVkIGJ5IEdQUyB0cmFja2VycyBtb3VudGVkIG9uIDEwOCBMZXNzZXIgQmxhY2stYmFja2VkIEd1bGxzIGFuZCAzNyBIZXJyaW5nIEd1bGxzIGJyZWVkaW5nIGF0IHRoZSBCZWxnaWFuIGFuZCBEdXRjaCBjb2FzdC4gVGhlIHRyYWNrZXJzIGFyZSBkZXZlbG9wZWQgYnkgdGhlIFVuaXZlcnNpdHkgb2YgQW1zdGVyZGFtIEJpcmQgVHJhY2tpbmcgU3lzdGVtIChVdkEtQmlUUywgaHR0cDovL3d3dy51dmEtYml0cy5ubCkgYW5kIGFsbG93IHRvIHN0dWR5IHRoZSBndWxscycgaGFiaXRhdCB1c2UgYW5kIG1pZ3JhdGlvbiBiZWhhdmlvdXIgaW4gZ3JlYXQgZGV0YWlsLiBPdXIgYmlyZCB0cmFja2luZyBuZXR3b3JrIGlzIG9wZXJhdGlvbmFsIHNpbmNlIDIwMTMgYW5kIGlzIG1haW50YWluZWQgYW5kIHVzZWQgYnkgdGhlIElOQk8sIHRoZSBGbGFuZGVycyBNYXJpbmUgSW5zdGl0dXRlIChWTElaKSwgVXZBLUJpVFMsIEdoZW50IFVuaXZlcnNpdHkgKFVHZW50KSwgYW5kIHRoZSBVbml2ZXJzaXR5IG9mIEFudHdlcnAgKFVBKS4gU2VlIHRoZSBkYXRhc2V0IG1ldGFkYXRhIGZvciBjb250YWN0IGluZm9ybWF0aW9uLCBzY29wZSwgYW5kIG1ldGhvZG9sb2d5LiBJc3N1ZXMgd2l0aCB0aGUgZGF0YXNldCBjYW4gYmUgcmVwb3J0ZWQgYXQgaHR0cHM6Ly9naXRodWIuY29tL2luYm8vZGF0YS1wdWJsaWNhdGlvbi90cmVlL21hc3Rlci9kYXRhc2V0cy9iaXJkLXRyYWNraW5nLWd1bGwtb2NjdXJyZW5jZXNcblRoZSBmb2xsb3dpbmcgaW5mb3JtYXRpb24gaXMgbm90IGluY2x1ZGVkIGluIHRoZSBkYXRhc2V0IGFuZCBhdmFpbGFibGUgdXBvbiByZXF1ZXN0OiBvdXRsaWVycywgc3BlZWQsIHRlbXBlcmF0dXJlLCBiYXJvbWV0cmljIHByZXNzdXJlLCBhY2NlbGVyb21ldGVyIGRhdGEsIEdQUyBtZXRhZGF0YSAoZml4IHRpbWUsIG51bWJlciBvZiBzYXRlbGxpdGVzIHVzZWQsIHZlcnRpY2FsIGFjY3VyYWN5KSwgYmlyZCBiaW9tZXRyaWNzIGRhdGEgbWVhc3VyZWQgZHVyaW5nIHRhZ2dpbmcgKGJpbGwgbGVuZ3RoLCBiaWxsIGRlcHRoLCB0YXJzdXMgbGVuZ3RoLCB3aW5nIGxlbmd0aCwgYm9keSBtYXNzKSwgbGlmZSBoaXN0b3J5IGRhdGEgKGRheSBvZiByaW5naW5nLCBhZ2UsIHJlc2lnaHRpbmdzIGJ5IHZvbHVudGVlcnMpLCBhcyB3ZWxsIGFzIGdyb3d0aCBkYXRhIG9mIGNoaWNrcy5cblRvIGFsbG93IGFueW9uZSB0byB1c2UgdGhpcyBkYXRhc2V0LCB3ZSBoYXZlIHJlbGVhc2VkIHRoZSBkYXRhIHRvIHRoZSBwdWJsaWMgZG9tYWluIHVuZGVyIGEgQ3JlYXRpdmUgQ29tbW9ucyBaZXJvIHdhaXZlciAoaHR0cDovL2NyZWF0aXZlY29tbW9ucy5vcmcvcHVibGljZG9tYWluL3plcm8vMS4wLykuIFdlIHdvdWxkIGFwcHJlY2lhdGUgaG93ZXZlciwgaWYgeW91IHJlYWQgYW5kIGZvbGxvdyB0aGVzZSBub3JtcyBmb3IgZGF0YSB1c2UgKGh0dHA6Ly93d3cuaW5iby5iZS9lbi9ub3Jtcy1mb3ItZGF0YS11c2UpIGFuZCBwcm92aWRlIGEgbGluayB0byB0aGUgb3JpZ2luYWwgZGF0YXNldCAoaHR0cHM6Ly9kb2kub3JnLzEwLjE1NDY4LzAyb21seSkgd2hlbmV2ZXIgcG9zc2libGUuIElmIHlvdSB1c2UgdGhlc2UgZGF0YSBmb3IgYSBzY2llbnRpZmljIHBhcGVyLCBwbGVhc2UgY2l0ZSB0aGUgZGF0YXNldCBmb2xsb3dpbmcgdGhlIGFwcGxpY2FibGUgY2l0YXRpb24gbm9ybXMgYW5kL29yIGNvbnNpZGVyIHVzIGZvciBjby1hdXRob3JzaGlwLiBXZSBhcmUgYWx3YXlzIGludGVyZXN0ZWQgdG8ga25vdyBob3cgeW91IGhhdmUgdXNlZCBvciB2aXN1YWxpemVkIHRoZSBkYXRhLCBvciB0byBwcm92aWRlIG1vcmUgaW5mb3JtYXRpb24sIHNvIHBsZWFzZSBjb250YWN0IHVzIHZpYSB0aGUgY29udGFjdCBpbmZvcm1hdGlvbiBwcm92aWRlZCBpbiB0aGUgbWV0YWRhdGEsIG9wZW5kYXRhQGluYm8uYmUgb3IgaHR0cHM6Ly90d2l0dGVyLmNvbS9MaWZlV2F0Y2hJTkJPLlxuVGhlIGJpcmQgdHJhY2tpbmcgbmV0d29yayB1c2VkIHRvIGNvbGxlY3QgdGhlc2UgZGF0YSBpcyBzZXQgdXAgYW5kIG1haW50YWluZWQgYnkgdGhlIElOQk8gYW5kIFZMSVogYXMgcGFydCBvZiB0aGUgRmxlbWlzaCBjb250cmlidXRpb24gdG8gTGlmZVdhdGNoLiIsInR5cGUiOiJPQ0NVUlJFTkNFIn0seyJrZXkiOiI4MjFjYzI3YS1lM2JiLTRiYzUtYWMzNC04OWFkYTI0NTA2OWQiLCJ0aXRsZSI6Ik5NTkggRXh0YW50IFNwZWNpbWVuIFJlY29yZHMiLCJkZXNjcmlwdGlvbiI6IlB1YmxpYyByZWNvcmRzIG9mIGFjY2Vzc2lvbmVkIHNwZWNpbWVucyBhbmQgb2JzZXJ2YXRpb25zIGN1cmF0ZWQgYnkgdGhlIE5hdGlvbmFsIE11c2V1bSBvZiBOYXR1cmFsIEhpc3RvcnksIFNtaXRoc29uaWFuIEluc3RpdHV0aW9uLiBUaGVzZSBkYXRhIGFyZSBmcm9tIHRoZSBEZXBhcnRtZW50cyBvZiBCb3RhbnksIEVudG9tb2xvZ3ksIEludmVydGVicmF0ZSBab29sb2d5IGFuZCBWZXJ0ZWJyYXRlIFpvb2xvZ3kgKEFtcGhpYmlhbnMgJiBSZXB0aWxlcywgQmlyZHMsIEZpc2hlcywgYW5kIE1hbW1hbHMpIGFuZCBpbmNsdWRlIG1vcmUgdGhhbiAyNzAsMDAwIHByaW1hcnkgdHlwZSBzcGVjaW1lbiByZWNvcmRzLiIsInR5cGUiOiJPQ0NVUlJFTkNFIn0seyJrZXkiOiI4MmNiMjkzYy1mNzYyLTExZTEtYTQzOS0wMDE0NWViNDVlOWEiLCJ0aXRsZSI6IkdyZWF0IEJhY2t5YXJkIEJpcmQgQ291bnQiLCJkZXNjcmlwdGlvbiI6IlRoZSBHcmVhdCBCYWNreWFyZCBCaXJkIENvdW50IChHQkJDKSBpcyBhIGxhdGUgd2ludGVyIHdlZWtlbmQgc3VydmV5IG9mIGJpcmQgcG9wdWxhdGlvbnMgYWNyb3NzIHRoZSBVbml0ZWQgU3RhdGVzIGFuZCBDYW5hZGEuIERldmVsb3BlZCBieSB0aGUgQ29ybmVsbCBMYWIgb2YgT3JuaXRob2xvZ3kgYW5kIEF1ZHVib24sIHRoZSBHQkJDIGVuZ2FnZXMgdGVucyBvZiB0aG91c2FuZHMgb2YgcGFydGljaXBhbnRzLiBEYXRhIGlzIGNvbGxlY3RlZCB3aXRoIHBvc3RhbCBjb2RlIG9yIHRvd24gZ2VvZ3JhcGhpY2FsIHJlc29sdXRpb24uIFN0YXJ0ZWQgaW4gMTk5OCwgdGhlIEdCQkMgcHJvdmlkZXMgYSBwbGFjZS1iYXNlZCBjaGFyYWN0ZXJpemF0aW9uIG9mIGEgZ2l2ZW4gYXJlYSB0aHJvdWdoIGEgY2hlY2tsaXN0IG9mIGJpcmRzIG9ic2VydmVkIGF0IHRoYXQgbG9jYXRpb24uIFByZXNlbnRseSwgR0JCQyBjb2xsZWN0cyBhcHByb3hpbWF0ZWx5IDUwIHRob3VzYW5kIGNoZWNrbGlzdHMgYW5udWFsbHkgZHVyaW5nIGEgNC1kYXkgcGVyaW9kIGluIG1pZC1GZWJydWFyeS4iLCJ0eXBlIjoiT0NDVVJSRU5DRSJ9LHsia2V5IjoiNGY3MDEwOGEtZGRhNy00ZThiLTgyOTgtYmFiYWVlNTE4MmMzIiwidGl0bGUiOiJCaXJkIFJpbmdpbmcgQ2VudHJlIGluIFN3ZWRlbiAoTlJNKSIsImRlc2NyaXB0aW9uIjoiVGhpcyBkYXRhYmFzZSBjb250YWlucyBpbmZvcm1hdGlvbiBhYm91dCBiaXJkIHJpbmdpbmcgaW4gU3dlZGVuLiIsInR5cGUiOiJPQ0NVUlJFTkNFIn0seyJrZXkiOiJhODYyMDFhNC1mYTIwLTQ0ZTUtYWRlMi02OGVhMzU2M2NmYTgiLCJ0aXRsZSI6Ik1hY3JvLW1vdGggZGlzdHJpYnV0aW9uIHJlY29yZHMgZm9yIHRoZSBVSyBmb3IgdGhlIHBlcmlvZCBwcmUgMjAwMCBmcm9tIEJ1dHRlcmZseSBDb25zZXJ2YXRpb24iLCJkZXNjcmlwdGlvbiI6Ik1vdGggcHJvdmlzaW9uYWwgZGlzdHJpYnV0aW9uIGRhdGEgZm9yIHRoZSBwZXJpb2QgcHJlIDIwMDAgZnJvbSB0aGUgTmF0aW9uYWwgTW90aCBSZWNvcmRpbmcgU2NoZW1lIGxlZCBieSBCdXR0ZXJmbHkgQ29uc2VydmF0aW9uLiBUaGUgTmF0aW9uYWwgTW90aCBSZWNvcmRpbmcgU2NoZW1lIHByb3ZpZGVzIGEgY29tcHJlaGVuc2l2ZSBuZXR3b3JrIGZvciByZWNvcmRpbmcgdGhlIDI1MDArIHNwZWNpZXMgb2YgbW90aHMgaW4gdGhlIFVLLCB0aGUgSXNsZSBvZiBNYW4gYW5kIHRoZSBDaGFubmVsIElzbGFuZHMsIHRocm91Z2ggd2hpY2ggbWVtYmVycyBvZiB0aGUgcHVibGljIGNhbiBjb250cmlidXRlIG1vdGggc2lnaHRpbmdzIHRvIHVuZGVycGluIGNvbnNlcnZhdGlvbi4gVGhlIE5NUlMgd2FzIGxhdW5jaGVkIGluIDIwMDcgYW5kIHdhcyBkZXZlbG9wZWQgYXMgcGFydCBvZiB0aGUgTW90aHMgQ291bnQgcHJvamVjdCBmdW5kZWQgYnkgdGhlIEhlcml0YWdlIExvdHRlcnkgRnVuZCB3aXRoIHN1cHBvcnQgZnJvbSBtYW55IG90aGVyIG9yZ2FuaXNhdGlvbnMgYW5kIGlzIG5vdyBhbiBvbmdvaW5nIHJlY29yZGluZyBzY2hlbWUuIiwidHlwZSI6Ik9DQ1VSUkVOQ0UifSx7ImtleSI6IjFlMjY2YzNkLTkyZWYtNGQ1YS04ZTRhLWMwNDc0MmM3NzJjMyIsInRpdGxlIjoiVUsgQnV0dGVyZmx5IE1vbml0b3JpbmcgU2NoZW1lIChVS0JNUykiLCJkZXNjcmlwdGlvbiI6IlRoZSBVS0JNUyBpcyBhIHN0YW5kYXJpc2VkIG1vbml0b3Jpbmcgc2NoZW1lIGZvciBtb25pdG9yaW5nIGJ1dHRlZmxpZXMgaW4gdGhlIFVLLiAgVGhpcyBkYXRhc2V0IGluY2x1ZGVzIHJlY29yZHMgZnJvbSB0cmFkaXRpb25hbCBmaXhlZCB0cmFuc2VjdCBzaXRlcywgb2Z0ZW4gY2FsbGVkICdQb2xsYXJkIFdhbGtzJzsgZGF0YSBmcm9tIHRoZSBXaWRlciBDb3VudHJ5c2lkZSBCdXR0ZXJmbHkgU3VydmV5IGlzIGV4Y2x1ZGVkIGFuZCBhdmFpbGFibGUgd2l0aGluIGEgc2VwYXJhdGUgZGF0YXNldC5cbiBcbiBUaGUgVUtCTVMgaXMgcnVuIGJ5IEJ1dHRlcmZseSBDb25zZXJ2YXRpb24gKEJDKSwgdGhlIENlbnRyZSBmb3IgRWNvbG9neSBhbmQgSHlkcm9sb2d5IChDRUgpLCBhbmQgdGhlIEJyaXRpc2ggVHJ1c3QgZm9yIE9ybml0aG9sb2d5IChCVE8pLCBpbiBwYXJ0bmVyc2hpcCB3aXRoIHRoZSBKb2ludCBOYXR1cmUgQ29uc2VydmF0aW9uIENvbW1pdHRlZSAoSk5DQyksIGFuZCBzdXBwb3J0ZWQgYW5kIHN0ZWVyZWQgYnkgRm9yZXN0cnkgQ29tbWlzc2lvbiAoRkMpLCBOYXR1cmFsIEVuZ2xhbmQgKE5FKSwgTmF0dXJhbCBSZXNvdXJjZXMgV2FsZXMgKE5SVyksIE5vcnRoZXJuIElyZWxhbmQgRW52aXJvbm1lbnQgQWdlbmN5IChOSUVBKSBhbmQgU2NvdHRpc2ggTmF0dXJhbCBIZXJpdGFnZSAoU05IKS4iLCJ0eXBlIjoiT0NDVVJSRU5DRSJ9LHsia2V5IjoiMjgyZDBjY2ItNGZhMC00MGY5LTg1OTMtMTA1Yzc3ZTg4NDE3IiwidGl0bGUiOiJTb3V0aGVybiBBZnJpY2FuIEJpcmQgQXRsYXMgUHJvamVjdCIsImRlc2NyaXB0aW9uIjoiVGhlIFNvdXRoZXJuIEFmcmljYW4gQmlyZCBBdGxhcyBQcm9qZWN0IHN0YXJ0ZWQgaW4gSnVseSAyMDA3LCBzbyBpdCBoYXMgYmVlbiBydW5uaW5nIGZvciBhbG1vc3QgdGhyZWUgYW5kIGEgaGFsZiB5ZWFycy4gVG8gZGF0ZSwgb3ZlciA4MDAgU0FCQVAyIGF0bGFzZXJzIGhhdmUgY29sbGVjdGVkIG1vcmUgdGhhbiB0d28gbWlsbGlvbiByZWNvcmRzIG9mIGJpcmQgZGlzdHJpYnV0aW9uIGZyb20gbW9yZSB0aGFuIDc1JSBvZiB0aGUgcXVhcnRlciBkZWdyZWUgZ3JpZCBjZWxscyBpbiB0aGUgU0FCQVAyIHJlZ2lvbi4gTW9zdCBvZiB0aGUgU0FCQVAxIGRhdGEgd2VyZSBjb2xsZWN0ZWQgaW4gdGhlIHBlcmlvZCAxOTg34oCTMTk5MSwgMjAgeWVhcnMgYWdvLiBUaGUgU0FCQVAxIGRhdGFiYXNlIGNvbnRhaW5zIHNldmVuIG1pbGxpb24gcmVjb3Jkcy4gT25lIG9mIHRoZSBTQUJBUDIgb2JqZWN0aXZlcyBpcyB0byBzZWUgaG93IHRoZSBkaXN0cmlidXRpb25zIG9mIHRoZSBiaXJkIHNwZWNpZXMgb2NjdXJyaW5nIGluIFNvdXRoIEFmcmljYSwgTGVzb3RobyBhbmQgU3dhemlsYW5kIGhhdmUgY2hhbmdlZCBvdmVyIHRoZSBwYXN0IHR3byBkZWNhZGVzLiIsInR5cGUiOiJPQ0NVUlJFTkNFIn0seyJrZXkiOiI4NTdhYTg5Mi1mNzYyLTExZTEtYTQzOS0wMDE0NWViNDVlOWEiLCJ0aXRsZSI6Ik9ic2VydmF0aW9ucyBkdSBDb25zZXJ2YXRvaXJlIGJvdGFuaXF1ZSBuYXRpb25hbCBkdSBCYXNzaW4gcGFyaXNpZW4uIiwiZGVzY3JpcHRpb24iOiJTeXN0w6htZSBkJiMzOTtpbmZvcm1hdGlvbiBzdXIgbGEgZmxvcmUgZHUgQmFzc2luIHBhcmlzaWVuLCBGbG9yYS4iLCJ0eXBlIjoiT0NDVVJSRU5DRSJ9LHsia2V5IjoiN2JkNjVhN2EtZjc2Mi0xMWUxLWE0MzktMDAxNDVlYjQ1ZTlhIiwidGl0bGUiOiJUcm9waWNvcyBTcGVjaW1lbiBEYXRhIiwiZGVzY3JpcHRpb24iOiJUaGUgTWlzc291cmkgQm90YW5pY2FsIEdhcmRlbuKAmXMgSGVyYmFyaXVtIGlzIG9uZSBvZiB0aGUgd29ybGTigJlzIG91dHN0YW5kaW5nIHJlc2VhcmNoIHJlc291cmNlcyBmb3Igc3BlY2ltZW5zIGFuZCBpbmZvcm1hdGlvbiBvbiBicnlvcGh5dGVzIGFuZCB2YXNjdWxhciBwbGFudHMuIFRoZSBjb2xsZWN0aW9uIGlzIGxpbWl0ZWQgdG8gdGhlc2UgdHdvIG1ham9yIGdyb3VwcyBvZiBwbGFudHMuIEFzIG9mIDMxIERlY2VtYmVyIDIwMTUgdGhlIGNvbGxlY3Rpb24gaGFkIDYuNjYgbWlsbGlvbiBzcGVjaW1lbnMgKDYuMSBtaWxsaW9uIHZhc2N1bGFyIHBsYW50cyBhbmQgNTYzLDAwMCBicnlvcGh5dGVzKS4gVGhpcyBzcGVjaW1lbiBkYXRhc2V0IGluY2x1ZGVzIG92ZXIgNC40IG1pbGxpb24gcmVjb3JkcyAoNC4wIG1pbGxpb24gdmFzY3VsYXIgcGxhbnRzIGFuZCAzMDAsMDAwIGJyeW9waHl0ZXMpLiIsInR5cGUiOiJPQ0NVUlJFTkNFIn0seyJrZXkiOiI1M2YxM2M4Zi00MTNlLTQ1MzctYmRhNi05ODY2NmNkNzk3NWYiLCJ0aXRsZSI6Ik90aGVyIEJTQkkgU2NvdHRpc2ggZGF0YSB1cCB0byAyMDEyIiwidHlwZSI6Ik9DQ1VSUkVOQ0UifSx7ImtleSI6IjM3ZjQ4ZTAwLTFmZTgtMTFkYy1iNDYxLWI4YTAzYzUwYTg2MiIsInRpdGxlIjoiRHV0Y2ggRm91bmRhdGlvbiBmb3IgQXBwbGllZCBXYXRlciBSZXNlYXJjaCAoU1RPV0EpIC0gTGltbm9kYXRhIE5lZXJsYW5kaWNhIiwiZGVzY3JpcHRpb24iOiJUaGUgTGltbm9kYXRhIE5lZXJsYW5kaWNhIGRhdGEgc2V0IGNvbnRhaW5zIHRoZSBkYXRhIG9mIG1vcmUgdGhhbiAzMCB5ZWFycyBzeXN0ZW1hdGljIGFuZCBwcm9qZWN0IGJhc2VkIHNhbXBsaW5nIG9mIER1dGNoLCBtYWlubHkgZnJlc2h3YXRlciwgd2F0ZXJib2RpZXMuIERhdGEgb3JpZ2luYXRlIGZyb20gMzcgZGF0YSBwcm92aWRlcnM7IDI2IHdhdGVyIGJvYXJkcywgdGhlIHByb3ZpbmNlcyBhbmQgdGhlIE1pbmlzdHJ5IG9mIFRyYW5zcG9ydCwgUHVibGljIFdvcmtzIGFuZCBXYXRlciBNYW5hZ2VtZW50LiBPdmVyIDIwLDAwMCBzYW1wbGUgcG9pbnRzIHdlcmUgdXNlZC4gVGhlIG1haW4gcHVycG9zZSBvZiB0aGUgZGF0YXNldCBpcyBtb25pdG9yaW5nIHRoZSBxdWFsaXR5IG9mIER1dGNoIHN1cmZhY2Ugd2F0ZXJzLiBOZXh0IHRvIHRoZSBiaW9sb2dpY2FsIGNoYXJhY3RlcmlzdGljcyBhbHNvIGEtYmlvdGljIGRhdGEgd2VyZSBzYW1wbGVkIGFuZCBzdG9yZWQgYWxvbmdzaWRlIHRoZSBiaW90aWMgZGF0YS4gT2JzZXJ2YXRpb25zIGFyZSBhdmFpbGFibGUgZnJvbSBwaHl0b3BsYW5rdG9uLCBkaWF0b21zLCBhcXVhdGljIGFuZCByaXBhcmlhbiBwbGFudHMsIG1hY3JvLWludmVydGVicmF0ZXMgYW5kIGZpc2guIFRoZSBkYXRhIHdlcmUgY29sbGVjdGVkIG9uIGEgeWVhcmx5IGJhc2UuIFRoZSB0YXhvbm9teSBoYXMgYmVlbiB2YWxpZGF0ZWQgYWNjb3JkaW5nIHRvIHRoZSBEdXRjaCBzdGFuZGFyZGlzZWQgY2hlY2tsaXN0IG9mIGFxdWF0aWMgc3BlY2llcy5cblxuVXBkYXRlIEphbnVhcnkgMjAxNTogQWRkZWQgZGF0YSBmb3IgMjAxMSBhbmQgMjAxMi4gRW5oYW5jZWQgdGF4b25vbWljIGFuZCBsb2NhbGl0eSBkYXRhIGZpZWxkcy4iLCJ0eXBlIjoiT0NDVVJSRU5DRSJ9LHsia2V5IjoiYjA1YTE5Y2YtZGNmMi00ZWY5LWJiYmItYWQwZWNiZDI5MTdjIiwidGl0bGUiOiJFcmVtYWVhIiwidHlwZSI6Ik9DQ1VSUkVOQ0UifSx7ImtleSI6IjNlOTgxN2MxLTgzMDItNDk1NS04N2UzLWE0MDhkYjBlYTM3OSIsInRpdGxlIjoiSW5zZWN0YSBvZiBDb3N0YSBSaWNhIChJTkJpbykiLCJkZXNjcmlwdGlvbiI6Ik9jY3VycmVuY2UgcmVjb3JkcyBvZiB0aGUgSW5zZWN0YSBjbGFzcyBjb2xsZWN0ZWQsIGlkZW50aWZpZWQsIGRpZ2l0aXplZCwgYW5kIHB1Ymxpc2hlZCBieSB0aGUgTmF0aW9uYWwgQmlvZGl2ZXJzaXR5IEluc3RpdHV0ZSAoSU5CaW8pIG9mIENvc3RhIFJpY2EuIiwidHlwZSI6Ik9DQ1VSUkVOQ0UifSx7ImtleSI6Ijg2MzA2ZTRiLTVlZDgtNDY4NC1hNjI2LWQ5YjlmNDM5ZGNjZSIsInRpdGxlIjoiT2JzZXJ2YXRpb25zIGZsb3Jpc3RpcXVlcyBpc3N1ZXMgZGUgbGEgYmFzZSBkZSBkb25uw6llcyBkdSBDb25zZXJ2YXRvaXJlIGJvdGFuaXF1ZSBuYXRpb25hbCBhbHBpbiIsImRlc2NyaXB0aW9uIjoiT2JzZXJ2YXRpb25zIGZsb3Jpc3RpcXVlcyBpc3N1ZXMgZGUgbGEgYmFzZSBkZSBkb25uw6llcyBmbG9yZSBkdSBDb25zZXJ2YXRvaXJlIGJvdGFuaXF1ZSBuYXRpb25hbCBhbHBpbiAoQ0JOQSkuIENlcyBvYnNlcnZhdGlvbnMgc29udCBwcm9kdWl0ZXMgcGFyIGxlIENCTkEgZGFucyBsZSBjYWRyZSBkZSBzYSBtaXNzaW9uIGRlIGNvbm5haXNzYW5jZSwgcGFyIHNlcyBwYXJ0ZW5haXJlcyBvdSBwcm92aWVubmVudCBkZSBsYSBiaWJsaW9ncmFwaGllIG91IGQnaGVyYmllci4gKENCTi1BbHBpbi0wMDEpIiwidHlwZSI6Ik9DQ1VSUkVOQ0UifSx7ImtleSI6IjA0MGM1NjYyLWRhNzYtNDc4Mi1hNDhlLWNkZWExODkyZDE0YyIsInRpdGxlIjoiSW50ZXJuYXRpb25hbCBCYXJjb2RlIG9mIExpZmUgcHJvamVjdCAoaUJPTCkiLCJkZXNjcmlwdGlvbiI6IlRoZSBJbnRlcm5hdGlvbmFsIEJhcmNvZGUgb2YgTGlmZSBQcm9qZWN0IChpQk9MKSB3YXMgZm9ybWFsbHkgYWN0aXZhdGVkIGluIE9jdG9iZXIgMjAxMC4gSXRzIGZpcnN0IHBoYXNlICgyMDEwLTIwMTUpIHdpbGwgbGVhZCB0byB0aGUgYWNxdWlzaXRpb24gb2YgRE5BIGJhcmNvZGUgcmVjb3JkcyBmb3IgNU0gc3BlY2ltZW5zIHJlcHJlc2VudGluZyA1MDBLIHNwZWNpZXMuIGlCT0wgd2lsbCByZWxlYXNlIGVhY2ggYmFyY29kZSByZWNvcmQgaW4gdHdvIHBoYXNlcy4gVGhlIGluaXRpYWwgcGhhc2Ugd2lsbCByZWxlYXNlIGJhcmNvZGUgc2VxdWVuY2UocyksIHRyYWNlIGZpbGVzLCBoaWdoLWxldmVsIChvcmRpbmFsKSB0YXhvbm9taWMgYXNzaWdubWVudCwgR1BTIGNvLW9yZGluYXRlcyBhbmQgdGhlIGNvdW50cnkgb2YgY29sbGVjdGlvbi4gVGhpcyBwaGFzZSBvZiBkYXRhIHJlbGVhc2Ugd2lsbCBvY2N1ciBhdXRvbWF0aWNhbGx5IG9uIGEgcXVhcnRlcmx5IGJhc2lzIGluIGRhdGFmaWxlcyBwb3N0ZWQgb24gdGhpcyBwYWdlIGFzIHdlbGwgYXMgYXQgR2VuQmFuay4gVGhlIHNlY29uZCBwaGFzZSBvZiBkYXRhIHJlbGVhc2Ugd2lsbCBpbnZvbHZlIGEgbW9yZSBwcmVjaXNlIHRheG9ub21pYyBhc3NpZ25tZW50IGFuZCBhbmNpbGxhcnkgZGF0YSwgc3VjaCBhcyBpbWFnZXMsIGZvciBlYWNoIHNwZWNpbWVuLlRoZSBkYXRhIHJlbGVhc2VkIHRvIGRhdGUgY29uc2lzdHMgb2YgcmVjb3JkcyBmb3IgMiw4NjksMTY4IHNlcXVlbmNlcyBhbmFseXplZCBhdCB0aGUgQ2FuYWRpYW4gQ2VudHJlIGZvciBETkEgQmFyY29kaW5nIGF0IHRoZSBVbml2ZXJzaXR5IG9mIEd1ZWxwaCBhbmQgdGhlIENlbnRyZSBmb3IgRW52aXJvbm1lbnRhbCAmYW1wOyBNb2xlY3VsYXIgQWxnYWwgUmVzZWFyY2ggYXQgdGhlIFVuaXZlcnNpdHkgb2YgTmV3IEJydW5zd2ljayBkdXJpbmcgdGhlIGZpcnN0IHllYXIgb2YgaUJPTCByYW1wLXVwIChKdWx5IDEsIDIwMDkgLSBKdW5lIDMwLCAyMDEwKSBhbmQgdGhlIDY2IG1vbnRocyBvZiB0aGUgb2ZmaWNpYWxseSBhY3RpdmF0ZWQgaUJPTCBwcm9qZWN0IChKdWx5IDEsIDIwMTAgLSBEZWMgMzEsIDIwMTUpLiBUaGVzZSBzcGVjaW1lbnMgYXJlIGRlcml2ZWQgZnJvbSBtYW55IGNvbGxhYm9yYXRvcnMgaW4gbWFueSBuYXRpb25zLiIsInR5cGUiOiJPQ0NVUlJFTkNFIn0seyJrZXkiOiJmMTkyOWI5MC03OWY1LTQ3YWEtYjk4My01MWYxMDhlYjQ5MWYiLCJ0aXRsZSI6IkJyeW9waHl0ZSBkYXRhIGZvciBHcmVhdCBCcml0YWluIGZyb20gdGhlIEJyaXRpc2ggQnJ5b2xvZ2ljYWwgU29jaWV0eSBoZWxkIGJ5IEJSQzogQXRsYXMgMjAxNCIsImRlc2NyaXB0aW9uIjoiQnJ5b3BoeXRlIHJlY29yZHMgc3VibWl0dGVkIHRvIHRoZSBCaW9sb2dpY2FsIFJlY29yZHMgQ2VudHJlIGZvciBFbmdsYW5kLCBJcmVsYW5kLCBTY290bGFuZCwgV2FsZXMsIHRoZSBJc2xlIG9mIE1hbiBhbmQgdGhlIENoYW5uZWwgSXNsYW5kcy4gVGhlIGRhdGFzZXQgY29tcHJpc2VzIHJlY29yZHMgY29sbGVjdGVkIGZvciB0aGUgQnJ5b3BoeXRlIFJlY29yZGluZyBTY2hlbWUsIGFzIHdlbGwgYXMgdGhvc2UgZXh0cmFjdGVkIGZyb20gbGl0ZXJhdHVyZSBhbmQgbXVzZXVtIHNvdXJjZXMuIERldGFpbHMgb2YgYWxsIHRoZSBzdXJ2ZXlzIGluIHRoaXMgZGF0YXNldCBjYW4gYmUgb2J0YWluZWQgYnkgY2xpY2tpbmcgdGhlICdTdXJ2ZXlzJyB0YWIuIFRoaXMgJ0F0bGFzJyBkYXRhc2V0IGNvbnRhaW5zIGFsbCBvZiB0aGUgcmVjb3JkcyBwcmVzZW50ZWQgaW4gQmxvY2tlZWwgZXQgYWwuICgyMDE0KSBBdGxhcyBvZiBCcml0aXNoIGFuZCBJcmlzaCBCcnlvcGh5dGVzLCB3aXRoIHRoZSBleGNlcHRpb24gb2YgdHdvIGRhdGFzZXRzIChvbmUgZnJvbSBDb2Zub2QgW05vcnRoIFdhbGVzIEVudmlyb25tZW50YWwgSW5mb3JtYXRpb24gQ2VudHJlXSBhbmQgb25lIGZyb20gQ0VEYVIgW0NlbnRyZSBmb3IgRW52aXJvbm1lbnRhbCBEYXRhIGFuZCBSZWNvcmRpbmcsIE5vcnRoZXJuIElyZWxhbmRdKSB3aGljaCB0aGUgQkJTIHdlcmUgbm90IGdpdmVuIHBlcm1pc3Npb24gdG8gZXhwb3J0IHRvIHRoZSBOQk4uIFRoZXNlIGFyZSBkYXRhc2V0cyA4ODMgYW5kIDg4MSBpbiB0aGUgQkJTL0JSQyBkYXRhYmFzZS4gVGhpcyBuZXcgZGF0YXNldCBjb250YWlucyByZWNvcmRzIGNvdmVyaW5nIDEwOSB2aWNlLWNvdW50aWVzIHNpbmNlIHRoZSBsYXN0IE5CTiBleHBvcnQsIHdpdGggb3ZlciBmaXZlIGh1bmRyZWQgbmV3IHJlY29yZHMgZm9yIGVhY2ggb2YgdGhlIGZvbGxvd2luZyBjb3VudGllczogQ2hlc2hpcmUsIE5vcnRoIEVidWRlcywgRWFzdCBTdXNzZXgsIFdlc3QgUm9zcywgQ2Flcm5hcnZvbnNoaXJlLCBNZXJpb25ldGhzaGlyZSwgU2hyb3BzaGlyZSAoU2Fsb3ApLCBDYXJtYXJ0aGVuc2hpcmUsIEFyZ3lsbCBNYWluLCBXZXN0IEludmVybmVzcy1zaGlyZSwgU291dGggTGFuY2FzaGlyZSwgU3VycmV5LCBFYXN0IE5vcmZvbGssIE91dGVyIEhlYnJpZGVzLCBTb3V0aC13ZXN0IFlvcmtzaGlyZSwgRWFzdCBJbnZlcm5lc3Mtc2hpcmUgKHdpdGggTmFpcm4pLCBCcmVjb25zaGlyZSwgQ2FtYnJpZGdlc2hpcmUsIFdlc3QgTGFuY2FzaGlyZSwgRHVtZnJpZXNzaGlyZSwgV2VzdCBOb3Jmb2xrLCBXZXN0IFN1c3NleCwgSHVudGluZ2RvbnNoaXJlLCBOb3J0aCBFc3NleCwgRHVyaGFtLCBDYXJkaWdhbnNoaXJlLCBCdWNraW5naGFtc2hpcmUsIE5vcnRoIE5vcnRodW1iZXJsYW5kIChDaGV2aW90KSwgV2VzdCBTdXRoZXJsYW5kLCBhbmQgRGVyYnlzaGlyZS4gVGhpcyBkYXRhc2V0IHdpbGwgbm90IGJlIGFkZGVkIHRvIGluIGZ1dHVyZSwgYnV0IHdpbGwgb25seSBiZSBzdWJqZWN0IHRvIGFtZW5kbWVudHMuIERhdGEgY29sbGVjdGVkIG9yIGNvbGxhdGVkIGJ5IHRoZSBCQlMgcG9zdC1BdGxhcyAoaS5lLiBmcm9tIHRoZSAwMS8wMS8yMDE0KSB3aWxsIGZvcm0gYSBuZXcgZGF0YXNldCBvbiB0aGUgTkJOLiIsInR5cGUiOiJPQ0NVUlJFTkNFIn0seyJrZXkiOiI1ZjUwMWRmMC0wYzYxLTExZGQtODRjZS1iOGEwM2M1MGE4NjIiLCJ0aXRsZSI6IlNMVSBBcXVhIEluc3RpdHV0ZSBvZiBGcmVzaHdhdGVyIFJlc2VhcmNoIE5hdGlvbmFsIHJlZ2lzdGVyIG9mIHN1cnZleSB0ZXN0LWZpc2hpbmcgLSBOT1JTIiwiZGVzY3JpcHRpb24iOiJTdGFuZGFyZGl6ZWQgdGVzdC1maXNoaW5nIHdpdGggTm9yZGljIG11bHRpLW1lc2ggZ2lsbG5ldHMgaXMgYSB3aWRlbHkgdXNlZCBtZXRob2QgaW4gU3dlZGVuIHRvIGludmVzdGlnYXRlIHRoZSBmaXNoIGZhdW5hIGluIGEgbGFrZS4gSW4gMjAwNSB0aGUgbWV0aG9kIGJlY2FtZSBhbiBFdXJvcGVhbiBzdGFuZGFyZCAoRU4gMTQ3NTcpLiBTdGFuZGFyZGl6ZWQgdGVzdC1maXNoaW5nIGNhdGNoIG1vc3Qgb2YgdGhlIFN3ZWRpc2ggc3BlY2llcyBpbiBhIHJlcHJlc2VudGF0aXZlIHdheSwgZ2l2aW5nIGEgZ29vZCBlc3RpbWF0ZSBvZiBzcGVjaWVzIGFidW5kYW5jZSBhbmQgc2l6ZSBkaXN0cmlidXRpb24uIFRoZSByZXN1bHRzIGFyZSBnZW5lcmFsbHkgdXNlZCBmb3IgcHVycG9zZXMgb2YgZW52aXJvbm1lbnRhbCBwcm90ZWN0aW9uIGFuZCBmaXNoZXJ5IG1hbmFnZW1lbnQuXG5cbk5PUlMgY29uc2lzdHMgb2YgdGhvdXNhbmRzIG9mIHRlc3QtZmlzaGluZyBvY2Nhc2lvbnMgYmFjayB0byB0aGUgMTk1MOKAmXMuIFRoZSBEZXBhcnRtZW50IG9mIEFxdWF0aWMgUmVzb3VyY2VzIChTTFUgQXF1YSkgYXQgdGhlIFN3ZWRpc2ggVW5pdmVyc2l0eSBvZiBBZ3JpY3VsdHVyYWwgU2NpZW5jZXMgaXMgcmVzcG9uc2libGUgb2YgY29sbGVjdGluZyBhbmQgY2hlY2tpbmcgdGVzdC1maXNoaW5nIGRhdGEgZ2VuZXJhdGVkIGluIG5hdGlvbmFsIGFuZCByZWdpb25hbCBlbnZpcm9ubWVudGFsIHByb2dyYW1zLCBvbiBiZWhhbGYgb2YgdGhlIFN3ZWRpc2ggQWdlbmN5IGZvciBNYXJpbmUgYW5kIFdhdGVyIE1hbmFnZW1lbnQuIFNMVSBBcXVhIGFsc28gY29sbGVjdCB0ZXN0LWZpc2hpbmcgZGF0YSBmcm9tIHNldmVyYWwgb3RoZXIgdHlwZXMgb2YgaW52ZXN0aWdhdGlvbnMgaW4gb3JkZXIgdG8gY3JlYXRlIGEgZGF0YWJhc2UgYXMgcmVwcmVzZW50YXRpdmUgYXMgcG9zc2libGUuIFRoZSBwdXJwb3NlIGlzIHRvIGZhY2lsaXRhdGUgb2J0YWluaW5nIGRhdGEgb2YgaGlnaCBxdWFsaXR5IGZvciByZXNlYXJjaCwgbmF0aW9uYWwgaW52ZXN0aWdhdGlvbnMgYW5kIHJlcG9ydHMuIFRoZSBkYXRhYmFzZSBhbHNvIHNlcnZlcyBhcyBhIHJlZmVyZW5jZSBmb3IgbG9jYWwgYW5kIHJlZ2lvbmFsIGludmVzdGlnYXRpb25zLiBBbGwgZGF0YSBpcyBhdmFpbGFibGUgZm9yIHRoZSBwdWJsaWMuIiwidHlwZSI6Ik9DQ1VSUkVOQ0UifSx7ImtleSI6IjY3YzU0Zjg1LTc5MTAtNGNiZi04ZGU0LTZmMGIxMzZhMGUzNCIsInRpdGxlIjoiQ29udGludW91cyBQbGFua3RvbiBSZWNvcmRlciBEYXRhc2V0IChTQUhGT1MpIiwiZGVzY3JpcHRpb24iOiJTQUhGT1MgaXMgdW5pcXVlIGluIGhhdmluZyBjb21wYXJhYmxlIGRhdGEgb24gdGhlIGdlb2dyYXBoaWNhbCBkaXN0cmlidXRpb24sIHNlYXNvbmFsIGN5Y2xlcyBhbmQgeWVhci10by15ZWFyIGNoYW5nZXMgaW4gYWJ1bmRhbmNlIG9mIHBsYW5rdG9uIG92ZXIgYSBsYXJnZSBzcGF0aWFsIGFyZWEuIFRoZXJlIGlzIG5vIG90aGVyIHN1cnZleSBpbiB0aGUgd29ybGQgd2l0aCA4MCB5ZWFycyBvZiBtYXJpbmUgcGxhbmt0b24gZGF0YS5cblxuQ1BSIERhdGEgYXJlIGF2YWlsYWJsZSBpbiBwYXBlciBmb3JtIGJhY2sgdG8gMTkzMSBhbmQgZnJvbSBKYW51YXJ5IDE5NDYgb253YXJkcyBpbiBhIGNvbXB1dGVyaXNlZCByZWxhdGlvbmFsIGRhdGFiYXNlLiBUaGUgZGF0YWJhc2UgY29udGFpbnMgcmVzdWx0cyAgd2l0aCAyLDYyOSw2MjggdGF4b25vbWljIGFidW5kYW5jZSBlbnRyaWVzLiIsInR5cGUiOiJPQ0NVUlJFTkNFIn0seyJrZXkiOiJlNzA3ZTZkYS1lMTQzLTQ0NWQtYjQxZC01MjljNGE3NzdlOGIiLCJ0aXRsZSI6IlN1ZmZvbGsgQmlvZGl2ZXJzaXR5IEluZm9ybWF0aW9uIFNlcnZpY2UgKFNCSVMpIERhdGFzZXQiLCJkZXNjcmlwdGlvbiI6IkFsbCBzcGVjaWVzIHJlY29yZHMgZnJvbSB0aGUgU0JJUyBSZWNvcmRlciBEYXRhYmFzZSIsInR5cGUiOiJPQ0NVUlJFTkNFIn0seyJrZXkiOiI4NTdiY2U2Ni1mNzYyLTExZTEtYTQzOS0wMDE0NWViNDVlOWEiLCJ0aXRsZSI6IkJpb2xvZ2llemVudHJ1bSBMaW56IiwiZGVzY3JpcHRpb24iOiJaT0JPREFUIChab29sb2dpY2FsIEJvdGFuaWNhbCBEYXRhYmFzZSkiLCJ0eXBlIjoiT0NDVVJSRU5DRSJ9LHsia2V5IjoiYjRhZTE3MjAtMTQzMS00OWVlLWJmZWItODE0NmZjNDJiMWEzIiwidGl0bGUiOiJTQUZSSU5HOiBIaXN0b3JpY2FsIEJpcmQgUmluZ2luZyBSZWNvcmRzICgyMDA1LTIwMDkpIiwiZGVzY3JpcHRpb24iOiJCaXJkIHJpbmdpbmcgc3RhcnRlZCBpbiAxOTQ4IGluIHNvdXRoZXJuIEFmcmljYSBhbmQgaXMgdGh1cyB0aGUgbG9uZ2VzdCBydW5uaW5nIGJpcmQgbW9uaXRvcmluZyBwcm9qZWN0IGluIHRoZSBzdWItcmVnaW9uLiBBbHRob3VnaCB0aGUgZGF0YSBhcmUgYmlhc2VkIHRvIGFyZWFzIHdoZXJlIHJpbmdlcnMgb3BlcmF0ZWQsIGl0IGlzIGFuIGludmFsdWFibGUgcmVjb3JkIG9mIGJpcmQgb2NjdXJyZW5jZSBhbmQgZGlzdHJpYnV0aW9uIGNoYW5nZXMsIGFycml2YWwgYW5kIGRlcGFydHVyZSB0aW1lcyBvZiBtaWdyYW50cywgc3Vydml2YWwgYW5kIG1hc3MgZGF0YSBpbiBoaXN0b3JpY2FsIHRpbWVzLlRoZSBTb3V0aCBBZnJpY2FuIEJpcmQgUmluZ2luZyBVbml0IChTQUZSSU5HKSwgd2hpY2ggaXMgYW4gZXNzZW50aWFsIGFybSBvZiB0aGUgQW5pbWFsIERlbW9ncmFwaHkgVW5pdCwgYWRtaW5pc3RlcnMgYmlyZCByaW5naW5nIGluIHNvdXRoZXJuIEFmcmljYS4iLCJ0eXBlIjoiT0NDVVJSRU5DRSJ9LHsia2V5IjoiOTEyYWM3YjMtZjQ3My00MzViLTk3ZDEtMjBiNmVkMGE2MjA4IiwidGl0bGUiOiJSU1BCIEJpZyBHYXJkZW4gQmlyZHdhdGNoIHdpbnRlciBzaWdodGluZ3MgaW4gdGhlIFVLIGluIDIwMDkiLCJkZXNjcmlwdGlvbiI6IlRoZSBkYXRhc2V0IGNvbnRhaW5zIHRoZSByZWNvcmRzIGZyb20gZ2FyZGVuIGJpcmQgb2JzZXJ2YXRpb25zLCBtYWRlIGJ5IHRoZSBwdWJsaWMgZHVyaW5nIGEgb25lLWhvdXIgcGVyaW9kIG9mIHRoZWlyIGNob2ljZSBvbiB0aGUgMjQtMjUgSmFudWFyeSAyMDA5LiBUaGUgc3VydmV5IGhhcyBiZWVuIGNvbmR1Y3RlZCBpbiB0aGUgVUsgYW5udWFsbHkgaW4gdGhlIGxhc3Qgd2Vla2VuZCBvZiBKYW51YXJ5IHNpbmNlIDE5NzkuIFRoaXMgZGF0YXNldCBjb250YWlucyBkYXRhIGZvciA2OSBkaWZmZXJlbnQgc3BlY2llcy5cbiA8YnIgLz48YnIgLz5cbiBUaGUgZmlyc3QgQmlnIEdhcmRlbiBCaXJkd2F0Y2ggZGF0YXNldCB0byBiZSB1cGxvYWRlZCBvbnRvIHRoZSBOQk4sIHdhcyB0aGUgMjAwOCBob3VzZSBzcGFycm93LCBzdGFybGluZyBhbmQgYmxhY2tiaXJkIGRhdGFzZXQuIFRoZXNlIHRocmVlIHNwZWNpZXMgd2VyZSB0aGUgbW9zdCBjb21tb25seSByZWNvcmRlZCBkdXJpbmcgMjAwOC4gTW9yZSBkYXRhIGZvciBvdGhlciB5ZWFycyB3aWxsIGJlIGluY2x1ZGVkIGluIGFubnVhbCBkYXRhc2V0cy4gVGhpcyBzdXJ2ZXkgaXMgZnVuZGVkIGJ5IHRoZSBSU1BCLiIsInR5cGUiOiJPQ0NVUlJFTkNFIn0seyJrZXkiOiI5NWU2MzVkNC1mNzYyLTExZTEtYTQzOS0wMDE0NWViNDVlOWEiLCJ0aXRsZSI6IkJhbmNvIGRlIERhdG9zIGRlIGxhIEJpb2RpdmVyc2lkYWQgZGUgbGEgQ29tdW5pdGF0IFZhbGVuY2lhbmEiLCJkZXNjcmlwdGlvbiI6IkVsIEJhbmNvIGRlIERhdG9zIGRlIEJpb2RpdmVyc2lkYWQgZGUgbGEgQ29tdW5pdGF0IFZhbGVuY2lhbmEgdGllbmUgY29tbyBvYmpldGl2byByZWNvZ2VyIHRvZGEgbGEgaW5mb3JtYWNpw7NuIGRlIGxvY2FsaXphY2nDs24gZGUgZXNwZWNpZXMgZW4gZWwgdGVycml0b3JpbyBkZSBsYSBDb211bml0YXQgVmFsZW5jaWFuYSB5IHN1IGVudG9ybm8gbWFyaW5vLiBMb3MgZGF0b3Mgc29uIHByb3ZlbmllbnRlcyBkZSBjb2xlY2Npb25lcywgYmlibGlvZ3JhZsOtYSB5IHRyYWJham9zIGRlIGNhbXBvLiBUb2RhcyBsYXMgY2l0YXMgZXN0w6FuIGdlb3JyZWZlcmVuY2lhZGFzLiBTZSBhcG9ydGFuLCBwYXJhIGFsZ3VuYXMgZXNwZWNpZXMsIGltw6FnZW5lcyB5IGZpY2hhcyBjb24gZGVzY3JpcGNpw7NuIHkgYmlvbG9nw61hLCBkaXN0cmlidWNpw7NuLCBow6FiaXRhdCwgc2l0dWFjacOzbiBhY3R1YWwsIGFtZW5hemFzIHkgYWNjaW9uZXMgZGUgY29uc2VydmFjacOzbiwgeSBsYXMgZXZvbHVjaW9uZXMgcG9ibGFjaW9uZXMuIiwidHlwZSI6Ik9DQ1VSUkVOQ0UifSx7ImtleSI6IjAyZDFlNzcyLTU0ZWUtNDc2Ny1iNGI4LWMzNWYwYzcyNzBiYSIsInRpdGxlIjoiTkJJUyBSZWNvcmRzIHRvIERlY2VtYmVyIDIwMTYiLCJkZXNjcmlwdGlvbiI6IlNwZWNpZXMgcmVjb3JkcyBmb3IgdGhlIGNvdW50eSBvZiBOb3Jmb2xrIiwidHlwZSI6Ik9DQ1VSUkVOQ0UifSx7ImtleSI6ImI4NGEzNzExLWI0Y2EtNGU0Zi1hZGFjLTgwZGZhZWE5OGQxYyIsInRpdGxlIjoiSGF0aWtrYSBPYnNlcnZhdGlvbiBEYXRhYmFzZSIsImRlc2NyaXB0aW9uIjoiSGF0aWtrYSBPYnNlcnZhdGlvbiBEYXRhYmFzZSBpcyBhIGRpZ2l0YWwgZmllbGQgam91cm5hbCBmb3IgRmlubmlzaCBhbWF0ZXVyIG5hdHVyYWxpc3RzLiBJdCBjb250YWlucyBvY2N1cnJlbmNlIGRhdGEgZm9yIGFsbCB0YXhvbiBncm91cHMgZnJvbSBGaW5sYW5kIGFuZCBzZXZlcmFsIG90aGVyIGNvdW50cmllcy4iLCJ0eXBlIjoiT0NDVVJSRU5DRSJ9LHsia2V5IjoiYTk5Y2EzYzktNzQ0OC00YmY2LWFiYTUtMGVmNjFiMDEyMzJjIiwidGl0bGUiOiJSb3RoZXJoYW0gQmlvbG9naWNhbCBSZWNvcmRzIENlbnRyZSAtIE5vbi1zZW5zaXRpdmUgUmVjb3JkcyBmcm9tIGFsbCB0YXhvbm9taWMgZ3JvdXBzIiwiZGVzY3JpcHRpb24iOiJUaGlzIGRhdGFzZXQgaXMgcGFydCBvZiBhIHBpbG90IHByb2plY3Qgb2YgWW9ya3NoaXJlIGFuZCBIdW1iZXIgRW52aXJvbm1lbnRhbCBEYXRhIE5ldHdvcmsgKFlIRUROKSB0byBtb2JpbGlzZSBMUkMgZGF0YSBhbmQgTmF0dXJhbGlzdCBkYXRhIGZyb20gb3VyIHJlZ2lvbiBtb3JlIHdpZGVseS5cbiBcbiBUaGUgZGF0YSBoYXMgYmVlbiBjb2xsYXRlZCBpbnRvIDIgZGF0YXNldHMgZm9yIE5CTiAoU2Vuc2l0aXZlIGFuZCBub24tc2Vuc2l0aXZlIHNwZWNpZXMpIHdpdGggdGhlIG9yaWdpbmFsIHN1cnZleSBuYW1lIGFzIGFuIGF0dHJpYnV0ZS4gTW9yZSBkZXRhaWxlZCBtZXRhLWRhdGEgY2FuIGJlIG9idGFpbmVkIGZvciBpbmRpdmlkdWFsIHN1cnZleXMgb24gcmVxdWVzdCBmcm9tIHRoZSBjZW50cmUuXG4gXG4gQ3VycmVudGx5IFNlbnNpdGl2ZSBzcGVjaWVzIGluY2x1ZGVzIGFsbCBiYXRzLCBiYWRnZXJzIGFuZCBhbGwgYmlyZHMgb2YgcHJleS5cbiBcbiBTb21lIGRhdGEgaGFzIGJlZW4gZXhjbHVkZWQgYWx0b2dldGhlciBmcm9tIHRoZXNlIGRhdGFzZXRzIHVudGlsIHN1Y2ggdGltZSBhcyB3ZSBjYW4gY2xhcmlmeSBvdXIgYXV0aG9yaXR5IHRvIGRpc3RyaWJ1dGUgaXQgYnV0IHRoaXMgY2FuIGJlIG9idGFpbmVkIGRpcmVjdGx5IGZyb20gdGhlIExSQy4iLCJ0eXBlIjoiT0NDVVJSRU5DRSJ9LHsia2V5IjoiOTQ0MGIyNGMtY2Q5OS00OGUxLTljMWQtMTM1YTU5MjY3ZWIwIiwidGl0bGUiOiJJbnZlbnRhaXJlIE5hdGlvbmFsIGR1IFBhdHJpbW9pbmUgTmF0dXJlbCA6IEZsb3JlIEZyYW5jby1CZWxnZSIsImRlc2NyaXB0aW9uIjoiTCdvYmplY3RpZiBkZSBjZXQgaW52ZW50YWlyZSBlc3QgZGUgcmFzc2VtYmxlciB1biBqZXUgZXhoYXVzdGlmIGRlIGRvbm7DqWVzIHN1ciBsJ2Vuc2VtYmxlIGRlcyBlc3DDqGNlcyBjb25udWVzIGRhbnMgbGUgdGllcnMgbm9yZCBkZSBsYSBGcmFuY2UgZXQgZW4gQmVsZ2lxdWUuIExlIHLDqXNlYXUgZXN0IGNvb3Jkb25uw6kgcGFyIGwnSW5zdGl0dXQgRmxvcmlzdGlxdWUgRnJhbmNvLUJlbGdlIChMLiBEZWx2b3NhbGxlIGV0IFYuIEJvdWxsZXQpLiBBdSAwMS8wMS8yMDAyLCBsYSBiYXNlIGNvbnRpZW50IGVudmlyb24gMiAzNTAgMDAwIGRvbm7DqWVzLiBDZWxsZXMtY2kgY291dnJlbnQgdW5lIHDDqXJpb2RlIGFsbGFudCBkZSAxOTEwIMOgIDE5OTggbWFpcyBsJ2Vzc2VudGllbCBjb25jZXJuZSBsZXMgYW5uw6llcyAxOTcwLTE5ODkuIExlcyBkb25uw6llcyBzb250IGxvY2FsaXPDqWVzIHNvdXMgbGEgZm9ybWUgZCd1bmUgcHLDqXNlbmNlIGFic2VuY2UgcGFyIG1haWxsZSBkZSA0IGttIHggNCBrbS4gQ2UgZmljaGllciBuZSBjb250aWVudCBwYXMgZCdpbmZvcm1hdGlvbnMgYXV0cmVzIHF1ZSBsZXMgZG9ubsOpZXMgZXNzZW50aWVsbGVzIChlc3DDqGNlLCBsaWV1LCBkYXRlLCBvYnNlcnZhdGV1ciBvdSBzb3VyY2UgYmlibGlvZ3JhcGhpcXVlKS4iLCJ0eXBlIjoiT0NDVVJSRU5DRSJ9LHsia2V5IjoiZjlhNzBkYWItMDA0Yi00NWFkLTkwY2ItMjRkOGZmNjQ1YjQ0IiwidGl0bGUiOiJDZW50cmUgZm9yIEJpb2RpdmVyc2l0eSBHZW5vbWljcyAtIENhbmFkaWFuIFNwZWNpbWVucyIsImRlc2NyaXB0aW9uIjoiVGhlIENlbnRyZSBmb3IgQmlvZGl2ZXJzaXR5IEdlbm9taWNzIChDQkcpIGF0IHRoZSBVbml2ZXJzaXR5IG9mIEd1ZWxwaCBpcyBzcGVhcmhlYWRpbmcgYSBub3ZlbCBhcHByb2FjaCB0byBiaW9kaXZlcnNpdHkgcmVzZWFyY2ggd2l0aGluIENhbmFkYSBhbmQgaW50ZXJuYXRpb25hbGx5LiBJdHMgdGhyZWUgcmVzZWFyY2ggdW5pdHMgLS0gQ0JHIENvbGxlY3Rpb25zLCBDQkcgR2Vub21pY3MgKG9yIHRoZSBDYW5hZGlhbiBDZW50cmUgZm9yIEROQSBCYXJjb2RpbmcsIENDREIpIGFuZCBDQkcgSW5mb3JtYXRpY3MgLS0gYXJlIGFkdmFuY2luZyAyMXN0IGNlbnR1cnkgYmlvZGl2ZXJzaXR5IHNjaWVuY2UgYnkgZW5hYmxpbmcgc3BlY2llcyBpZGVudGlmaWNhdGlvbiBhbmQgZGlzY292ZXJ5IHRoYXQgaXMgYmFzZWQgb24gdGhlIGFuYWx5c2lzIG9mIHNlcXVlbmNlIGRpdmVyc2l0eSBpbiBzaG9ydCwgc3RhbmRhcmRpemVkIGdlbmUgcmVnaW9ucywgRE5BIGJhcmNvZGVzLiBDQkcgQ29sbGVjdGlvbnMgbWFpbnRhaW5zIGEgZ2xvYmFsbHkgdW5pcXVlIG5hdHVyYWwgaGlzdG9yeSBjb2xsZWN0aW9uIG9mIDMuMyBtaWxsaW9uIHNwZWNpbWVucy4gRXZlcnkgc3BlY2ltZW4gaXMgZGlnaXRpemVkLCBhbmQgdGhlIGV4YWN0IHN0b3JhZ2UgbG9jYXRpb24gb2YgZWFjaCBzcGVjaW1lbiBpcyB0cmFja2VkIGluIGEgY29sbGVjdGlvbiBtYW5hZ2VtZW50IGluZm9ybWF0aW9uIHN5c3RlbSBmb3IgcXVpY2sgcmVmZXJlbmNlIGFuZCByZXRyaWV2YWwuIFRoZSBkYXRhYmFzZWQgaW5mb3JtYXRpb24gZm9yIGV2ZXJ5IHZvdWNoZXIgaXMgYWxzbyBhcmNoaXZlZCBpbiB0aGUgQmFyY29kZSBvZiBMaWZlIERhdGEgU3lzdGVtIChCT0xEOyB3d3cuYm9sZHN5c3RlbXMub3JnKSwgcGVybWl0dGluZyB0aGUgcGVybWFuZW50IHN0b3JhZ2UsIHZhbGlkYXRpb24gYW5kIGFuYWx5c2lzIG9mIGJhcmNvZGUgc2VxdWVuY2UgZGF0YSBhbmQgYXNzb2NpYXRlZCBzcGVjaW1lbiBtZXRhZGF0YS4gTW9zdCAoODguNiUpIG9mIHRoZSBzcGVjaW1lbnMgaGF2ZSBiZWVuIEROQSBiYXJjb2RlZCwgYW5kIGEgZmV3IHJlcHJlc2VudGF0aXZlcyBvZiBldmVyeSBzcGVjaWVzIGhhdmUgYmVlbiBkaWdpdGFsbHkgaW1hZ2VkLiBUaGUgQ0NEQiBob2xkcyBoaWdoIHF1YWxpdHkgRE5BIGV4dHJhY3RzIGluIGEgc2VjdXJlIDIwMDAgZnQyIHVsdHJhLWNvbGQgZnJlZXplciBiYW5rLiBUaGVzZSBETkEgZXh0cmFjdHMgcmVmbGVjdCByZXNpZHVhbCBtYXRlcmlhbCBmb2xsb3dpbmcgdGhlIGJhcmNvZGUgYW5hbHlzaXMgb2Ygc2FtcGxlczsgaXQgY29udGFpbnMgNS4zIG1pbGxpb24gZXh0cmFjdHMgZnJvbSBvdmVyIDI1MCwwMDAgc3BlY2llcyBkZXJpdmVkIGZyb20gMjMxIGNvdW50cmllcywgb2NlYW5zIGFuZCBkZXBlbmRlbnQgdGVycml0b3JpZXMsIGFsbCBjb25uZWN0ZWQgdG8gYSB2b3VjaGVyIHNwZWNpbWVuIG9uIEJPTEQuXG5cblRoaXMgcmVzb3VyY2UgcmVwcmVzZW50cyB0aGUgQ2FuYWRpYW4gc3BlY2ltZW5zIGhlbGQgaW4gdGhlIFNwZWNpbWVuIEFyY2hpdmVzIG9mIENCRyBDb2xsZWN0aW9ucyBhcyBvZiBEZWMgMjAxNy4gIFBsZWFzZSBhZGRyZXNzIGlucXVpcmllcyB0byBjY2RiY29sQHVvZ3VlbHBoLmNhIiwidHlwZSI6Ik9DQ1VSUkVOQ0UifSx7ImtleSI6ImI3Y2Q1YWQwLWY2NWEtNGRlMS1hMWJiLTMxOGNmNWFlMTJmOCIsInRpdGxlIjoiTEVSTiBSZWNvcmRzIiwiZGVzY3JpcHRpb24iOiJSZWNvcmRzIGhlbGQgd2l0aGluIHRoZSBMRVJOIGRhdGFiYXNlIHdoaWNoIGhhdmUgYmVlbiBtYXJrZWQgYXMgaGF2aW5nIGJlZW4gdmFsaWRhdGVkICh3aXRoaW4gTEVSTiBwcm9jZWR1cmVzKSBhbmQgd2hlcmUgTEVSTiBoYXMgdGhlIGFncmVlbWVudCBvZiB0aGUgZGF0YSBvd25lciB0byBwdWJsaXNoIHRoZW0gb24gdGhlIE5CTiBHYXRld2F5LiIsInR5cGUiOiJPQ0NVUlJFTkNFIn0seyJrZXkiOiI0ZWJlNTgzNS04NTFmLTQzZmQtYmVlZC1hZmFkZTM1N2JmYzciLCJ0aXRsZSI6Ik9ic2VydmF0aW9ucyBmbG9yaXN0aXF1ZXMgZmxvdXTDqWVzIGlzc3VlcyBkZSBsYSBiYXNlIGRlIGRvbm7DqWVzIGZsb3JlIGR1IENvbnNlcnZhdG9pcmUgYm90YW5pcXVlIG5hdGlvbmFsIGFscGluIiwiZGVzY3JpcHRpb24iOiJPYnNlcnZhdGlvbnMgZmxvcmlzdGlxdWVzIGZsb3V0w6llcyDDoCBsYSBtYWlsbGUgZGUgMTAga20gaXNzdWVzIGRlIGxhIGJhc2UgZGUgZG9ubsOpZXMgZmxvcmUgZHUgQ29uc2VydmF0b2lyZSBib3RhbmlxdWUgbmF0aW9uYWwgYWxwaW4gKENCTkEpLiBDZXMgb2JzZXJ2YXRpb25zIHNvbnQgcHJvZHVpdGVzIHBhciBsZXMgcGFydGVuYWlyZXMgZHUgQ0JOQSBvdSBwcm92aWVubmVudCBkZSBsYSBiaWJsaW9ncmFwaGllIG91IGQnaGVyYmllci4gTGUgamV1IGNvbnRpZW50IGRlcyBkb25uw6llcyBzdXIgbGEgZmxvcmUgZXQgbGEgZm9uZ2UuIiwidHlwZSI6Ik9DQ1VSUkVOQ0UifSx7ImtleSI6ImU1ZjE2ZDg2LWUyMjUtNDgyMi05N2JlLWE2NGNlMTcwNzljNyIsInRpdGxlIjoiUmVsZXbDqXMgZmxvcmlzdGlxdWVzIGR1IHByb3RvY29sZSBkZSBsJ0ludmVudGFpcmUgTmF0aW9uYWwgRm9yZXN0aWVyIGRlIGwnSUdOIiwiZGVzY3JpcHRpb24iOiJJbnZlbnRhaXJlIGZvcmVzdGllciBkw6ljZW5uYWwgY29uY2VybmFudCBsYSBGcmFuY2UgbcOpdHJvcG9saXRhaW5lIG1lbsOpIHBhciBs4oCZSUdOIGRlcHVpcyBub3ZlbWJyZSAyMDA0LiBSZWxldsOpcyBmbG9yaXN0aXF1ZXMgZXQgZm9yZXN0aWVycyBlZmZlY3R1w6lzIHN1ciBwbGFjZXR0ZXMgZW4gZm9yw6p0IGV0IHBldXBsZXJhaWUuIElsIHPigJlhZ2l0IGRlIHJlbGV2w6lzIHByb3RvY29sw6lzLCBhdmVjIHVuIHBsYW4gZOKAmcOpY2hhbnRpbGxvbm5hZ2UgYmFzw6kgc3VyIHVuZSBncmlsbGUgcsOpZ3VsacOocmUgZGUgbWFpbGxlcyBjYXJyw6llcyBkZSAxIGttIGRlIGPDtHTDqSwgY291dnJhbnQgbOKAmWVuc2VtYmxlIGR1IHRlcnJpdG9pcmUuIExlcyBwbGFjZXR0ZXMgc29udCBkZSAxNSBtIGRlIHJheW9uICg3IGFyZXMpIHBvdXIgbOKAmWVuc2VtYmxlIGRlIGxhIGZsb3JlIHZhc2N1bGFpcmUgZXQgZGUgMjUgbSBkZSByYXlvbiAoMjAgYXJlcykgcG91ciBsZXMgYXJicmVzLiBMZXMgcmVsZXbDqXMgc29udCBhc3NvY2llcyDDoCBk4oCZYXV0cmVzIG1lc3VyZXMgZGVuZHJvbG9naXF1ZXMgZXQgw6ljb2xvZ2lxdWVzLiBJbHMgbmUgc29udCBwYXMgdG91cyBlZmZlY3R1ZXMgw6AgbGEgbcOqbWUgcMOpcmlvZGUuIFxuaHR0cDovL2ludmVudGFpcmUtZm9yZXN0aWVyLmlnbi5mci9zcGlwL3NwaXAucGhwP3J1YnJpcXVlMjA1IiwidHlwZSI6Ik9DQ1VSUkVOQ0UifSx7ImtleSI6ImM3NzliMDQ5LTI4ZjMtNGRhZi1iYmY0LTBhNDA4MzA4MTliNiIsInRpdGxlIjoiRUJDQyBBdGxhcyBvZiBFdXJvcGVhbiBCcmVlZGluZyBCaXJkcyIsImRlc2NyaXB0aW9uIjoiSW4gMTk5NyB0aGUgRUJDQyBBdGxhcyBvZiBFdXJvcGVhbiBicmVlZGluZyBiaXJkcywgYWxzbyByZWZlcnJlZCB0byBhcyBFdXJvcGVhbiBPcm5pdGhvbG9naWNhbCBBdGxhcyBvciAgJ0VPQScsIHdhcyBwdWJsaXNoZWQuIFRoaXMgdm9sdW1pbm91cyBib29rIHdhcyB0aGUgcmVzdWx0IG9mIG1vcmUgdGhhbiAyNSB5ZWFycyBvZiBmaWVsZHdvcmssIGNvb3BlcmF0aW9uLCBkYXRhIGdhdGhlcmluZywgZGF0YSBwcm9jZXNzaW5nLCB3cml0aW5nIGFuZCBlZGl0aW5nLiBOZXh0IHRvIGEgYmVhdXRpZnVsIGJvb2sgdGhlIGRhdGEgaW4gdGhlIG1hcHMgcHJvdmlkZXMgY291bnRsZXNzIHBvc3NpYmlsaXRpZXMgZnVyIGZ1cnRoZXIgc3R1ZGllcyBvbiB0aGUgZGlzdHJpYnV0aW9uIG9mIHRoZSBFdXJvcGVhbiBicmVlZGluZyBiaXJkcy4iLCJ0eXBlIjoiT0NDVVJSRU5DRSJ9LHsia2V5IjoiYmI1YjMwYjQtODI3ZS00ZDVlLWE4NmEtODI1ZDY1Y2I2NTgzIiwidGl0bGUiOiJQYWxlb2Jpb2xvZ3kgRGF0YWJhc2UiLCJkZXNjcmlwdGlvbiI6IlRoZSBQYWxlb2Jpb2xvZ3kgRGF0YWJhc2UgKFBCREIpIGlzIGEgbm9uLWdvdmVybm1lbnRhbCwgbm9uLXByb2ZpdCBwdWJsaWMgcmVzb3VyY2UgZm9yIHBhbGVvbnRvbG9naWNhbCBkYXRhLiBJdCBoYXMgYmVlbiBvcmdhbml6ZWQgYW5kIG9wZXJhdGVkIGJ5IGEgbXVsdGktZGlzY2lwbGluYXJ5LCBtdWx0aS1pbnN0aXR1dGlvbmFsLCBpbnRlcm5hdGlvbmFsIGdyb3VwIG9mIHBhbGVvYmlvbG9naWNhbCByZXNlYXJjaGVycy4gSXRzIHB1cnBvc2UgaXMgdG8gcHJvdmlkZSBnbG9iYWwsIGNvbGxlY3Rpb24tYmFzZWQgb2NjdXJyZW5jZSBhbmQgdGF4b25vbWljIGRhdGEgZm9yIG9yZ2FuaXNtcyBvZiBhbGwgZ2VvbG9naWNhbCBhZ2VzLCBhcyB3ZWxsIGRhdGEgc2VydmljZXMgdG8gYWxsb3cgZWFzeSBhY2Nlc3MgdG8gZGF0YSBmb3IgaW5kZXBlbmRlbnQgZGV2ZWxvcG1lbnQgb2YgYW5hbHl0aWNhbCB0b29scywgdmlzdWFsaXphdGlvbiBzb2Z0d2FyZSwgYW5kIGFwcGxpY2F0aW9ucyBvZiBhbGwgdHlwZXMuIFRoZSBEYXRhYmFzZeKAmXMgYnJvYWRlciBnb2FsIGlzIHRvIGVuY291cmFnZSBhbmQgZW5hYmxlIGRhdGEtZHJpdmVuIGNvbGxhYm9yYXRpdmUgZWZmb3J0cyB0aGF0IGFkZHJlc3MgbGFyZ2Utc2NhbGUgcGFsZW9iaW9sb2dpY2FsIHF1ZXN0aW9ucy4iLCJ0eXBlIjoiT0NDVVJSRU5DRSJ9LHsia2V5IjoiMTY5ZmE3NjEtMmZiOS00MDIyLTkzYmQtZTIyYjdhMDYyZWZkIiwidGl0bGUiOiJQbHV0b0YgcGxhdGZvcm0gb2JzZXJ2YXRpb25zIiwiZGVzY3JpcHRpb24iOiJPYnNlcnZhdGlvbiByZWNvcmRzIGZyb20gQ2l0aXplbiBTY2llbmNlIGFuZCByZXNlYXJjaCBwcm9qZWN0cyBob3N0ZWQgYnkgUGx1dG9GIHBsYXRmb3JtLiBBbGwgb2JzZXJ2YXRpb25zIGhhdmUgYmVlbiBtb2RlcmF0ZWQgYW5kIHZlcmlmaWVkIG9uIFBsdXRvRiB3b3JrYmVuY2ggYnkgYXBwb2ludGVkIHBlcnNvbnMuIiwidHlwZSI6Ik9DQ1VSUkVOQ0UifSx7ImtleSI6ImNhNDM1NzU0LTkxOTAtNGE4Ny05YjJjLWMyMTU2Mzg5ODI5NCIsInRpdGxlIjoiRG9ubsOpZXMgaXNzdWVzIGRlIENsaWNuYXQgKEJhc2UgZGUgZG9ubsOpZXMgbmF0dXJhbGlzdGUgcGljYXJkZSBnw6lyw6llIHBhciBQaWNhcmRpZSBOYXR1cmUpIiwiZGVzY3JpcHRpb24iOiJDcsOpw6kgZW4gMjAwOSwgQ2xpY25hdCBlc3QgdW4gbG9naWNpZWwgbGlicmUgZMOpdmVsb3Bww6kgcGFyIFBpY2FyZGllIE5hdHVyZSBhdmVjIGxlIHNvdXRpZW4gZGUgbOKAmVVuaW9uIGV1cm9ww6llbm5lLCBkZSBsYSBEUkVBTCBQaWNhcmRpZSwgZGUgbGEgUsOpZ2lvbiBQaWNhcmRpZSwgZHUgQ29uc2VpbCBnw6luw6lyYWwgZGUgbOKAmUFpc25lIGV0IGR1IENvbnNlaWwgZ8OpbsOpcmFsIGRlIGxhIFNvbW1lLlxuSWwgcGVybWV0IMOgIHRvdXMgbGVzIFBpY2FyZHMgZGVwdWlzIGludGVybmV0wqA6XG4qwqBkZSBzYWlzaXIgZXQgZ8OpcmVyIGxldXJzIHByb3ByZXMgb2JzZXJ2YXRpb25zIGRlIGZhdW5lIHNhdXZhZ2UgKGRlcyBtYW1taWbDqHJlcyBhdXggbW9sbHVzcXVlcywgZW4gcGFzc2FudCBwYXIgbGVzIG9pc2VhdXggb3UgbGVzIHBhcGlsbG9ucynCoDtcbirCoGRlIGNvbnN1bHRlciBsZXMgaW5mb3JtYXRpb25zIGFjdHVhbGlzw6llcyBhdSBqb3VyIGxlIGpvdXIgY29tbWUgbGVzIGNhcnRlcyBkZSByw6lwYXJ0aXRpb24gZGVzIGVzcMOoY2VzLlxuQ2hhcXVlIGNpdG95ZW4gcGljYXJkLCBkdSBkw6lidXRhbnQgYXUgc2NpZW50aWZpcXVlLCBwZXV0IHNhaXNpciBkZXMgZG9ubsOpZXMgZGFucyB1biBlc3BhY2Ugc2ltcGxlIGTigJl1dGlsaXNhdGlvbiwgam9pbmRyZSBkZXMgcGhvdG9zIMOgIHNlcyBvYnNlcnZhdGlvbnMsIGLDqW7DqWZpY2llciBkZSBjYXJ0b2dyYXBoaWVzIHLDqWdpb25hbGVzXG5ldCBkZSByZXN0aXR1dGlvbnMgY29tbXVuYWxlcyBsdWkgcGVybWV0dGFudCBkZSBtaWV1eCBjb25uYcOudHJlIG5vdHJlIHJpY2hlIGZhdW5lIHBpY2FyZGUuXG5DbGljbmF0IHBlcm1ldCwgZ3LDomNlIMOgIHNlcyBkb25uw6llcywgZGUgcmVuZHJlIGRpc3BvbmlibGVzIGxpYnJlbWVudCBkZXMgYXRsYXMgZXNww6hjZXMsIGludmVudGFpcmVzIHBhciBjb21tdW5lLCDDqXR1ZGVzIGV0IGF1dHJlcyBpbmZvcm1hdGlvbnMuIENyw6nDqSDDoCBkZXMgZmlucyBkZSBjb25uYWlzc2FuY2UgZXQgZGUgcHJvdGVjdGlvbiBkZSBsYSBuYXR1cmUsIENsaWNuYXQgZXN0IGRlc3RpbsOpIGF1c3NpIGJpZW4gYXV4IGluc3RpdHV0aW9ucyBwdWJsaXF1ZXMgZGFucyBsZSBjYWRyZSBwYXIgZXhlbXBsZSBkZSBsYSBtaXNlIGVuIHBsYWNlIGRlIHN0cmF0w6lnaWVzIGRlIGNvbnNlcnZhdGlvbiBvdSBkZSBwcm9qZXRzIGTigJlhbcOpbmFnZW1lbnRzLCBxdeKAmWF1eCDDqWzDqHZlcyBvdSDDqXR1ZGlhbnRzIG91IGF1eCBwYXNzaW9ubsOpcyBkZSBuYXR1cmUuXG5DbGljbmF0IHBlcm1ldCDDqWdhbGVtZW50IGTigJlhaWRlciBsZXMgbmF0dXJhbGlzdGVzIGRhbnMgbGV1cnMgcmVjaGVyY2hlcyBlbiBmYWlzYW50IHJlc3NvcnRpciBsZXMgZ3JvdXBlcyBk4oCZZXNww6hjZXMgcGV1IGNvbm51cywgb3UgY2VydGFpbmVzIHpvbmVzIHBldSBpbnZlbnRvcmnDqWVzLiBJbCBz4oCZYWdpdCBkb25jIGTigJl1biBvdXRpbCBkeW5hbWlxdWUsIHF1aSB2YSBiaWVuIGF1IGRlbMOgIGTigJl1bmUgYmFzZSBkZSBkb25uw6llcyBuYXR1cmFsaXN0ZXMgaGFiaXR1ZWxsZSBldCB0aWVudCBjb21wdGUgZGUgdG91dGVzIGxlcyBhdmFuY8OpZXMgdGVjaG5vbG9naXF1ZXMgZXQgaW5mb3JtYXRpcXVlcyBhY3R1ZWxsZXMuIFxuQ2UgcHJvamV0IGVzdCDDqWdhbGVtZW50IG91dmVydCBhdXggc3RydWN0dXJlcyByw6ljb2x0YW50IGV0IGfDqXJhbnQgZGVzIGRvbm7DqWVzIHN1ciBsYSBmYXVuZSBzYXV2YWdlLiBMZXMgc3RydWN0dXJlcyBpbXBsaXF1w6llcyBkaXNwb3NlbnQgdG91dGVzIGTigJl1biBjb21wdGUgZOKAmWFjY8OocyBhdXggZG9ubsOpZXMgZW4gZm9uY3Rpb24gZGUgbGV1ciB0ZXJyaXRvaXJlIGTigJlhZ3LDqW1lbnQgZXQvb3UgZGUgbGV1cnMgY2hhbXBzIGTigJlpbnRlcnZlbnRpb24gcHJvcHJlcy5cbkVuZmluLCB1biBtb2R1bGUgc3DDqWNpZmlxdWUgZGUgc2Fpc2llIGJpYmxpb2dyYXBoaXF1ZSBwZXJtZXQgZCdpbnTDqWdyZXIgZGVzIGRvbm7DqWVzIGlzc3VlcyBkZSBwdWJsaWNhdGlvbnMgZGFucyBsYSBiYXNlIGRlIGRvbm7DqWVzLlxuQ2xpY25hdCBlc3QgZG9uYyB1biBvdXRpbCBxdWkgY29tcGlsZSBkZXMgZG9ubsOpZXMgY29sbGVjdMOpZXMgZGUgbWFuacOocmUgb3Bwb3J0dW5pc3RlLCBkZXMgZG9ubsOpZXMgY29sbGVjdMOpZXMgZGFucyBsZSBjYWRyZSBkJ2VucXXDqnRlcyBldCBzdWl2aXMgc3DDqWNpZmlxdWVzIGV0IGRlcyBkb25uw6llcyBiaWJsaW9ncmFwaGlxdWVzLiIsInR5cGUiOiJPQ0NVUlJFTkNFIn0seyJrZXkiOiIzZjRkNGJmMS01ZjlhLTQzZjItYTBkOC1mZjZlZDU5NTI3OTYiLCJ0aXRsZSI6IklNT1MgLSBBbmltYWwgVHJhY2tpbmcgRmFjaWxpdHkgLSBBY291c3RpYyBUcmFja2luZyAtIFF1YWxpdHkgQ29udHJvbGxlZCBEZXRlY3Rpb25zICgyMDA3IC0yMDE3KSIsImRlc2NyaXB0aW9uIjoiPHA+T3ZlciB0aGUgbGFzdCBkZWNhZGUsIHRoZSBJbnRlZ3JhdGVkIE1hcmluZSBPYnNlcnZpbmcgU3lzdGVt4oCZcyBBbmltYWwgVHJhY2tpbmcgRmFjaWxpdHkgKElNT1MgQVRGKSBoYXMgZXN0YWJsaXNoZWQgYSBwZXJtYW5lbnQgYXJyYXkgb2YgYWNvdXN0aWMgcmVjZWl2ZXJzIGFyb3VuZCBBdXN0cmFsaWEgdG8gZGV0ZWN0IHRoZSBtb3ZlbWVudHMgb2YgdGFnZ2VkIG1hcmluZSBhbmltYWxzIGluIGNvYXN0YWwgd2F0ZXJzLiBTaW11bHRhbmVvdXNseSwgSU1PUyBBVEYgZGV2ZWxvcGVkIGEgY2VudHJhbGlzZWQgbmF0aW9uYWwgZGF0YWJhc2UgKGh0dHBzOi8vYW5pbWFsdHJhY2tpbmcuYW9kbi5vcmcuYXUvKSB0byBlbmNvdXJhZ2UgY29sbGFib3JhdGl2ZSByZXNlYXJjaCBhY3Jvc3MgdGhlIHVzZXIgY29tbXVuaXR5IGFuZCBwcm92aWRlIHVucHJlY2VkZW50ZWQgb3Bwb3J0dW5pdGllcyB0byBxdWFudGlmeSBpbmRpdmlkdWFsIGJlaGF2aW91ciBhY3Jvc3MgYSBicm9hZCByYW5nZSBvZiB0YXhhLiBIZXJlIHdlIHByZXNlbnQgdGhlIGRhdGFiYXNlIGFuZCBxdWFsaXR5IGNvbnRyb2wgcHJvY2VkdXJlcyBkZXZlbG9wZWQgdG8gY29sbGF0ZSA0OC41IG1pbGxpb24gdmFsaWQgZGV0ZWN0aW9ucyBmcm9tIDE4OTEgcmVjZWl2aW5nIHN0YXRpb25zLiBUaGlzIGRhdGFzZXQgY29uc2lzdHMgb2YgZGV0ZWN0aW9uIGRhdGEgZm9yIDM1MjMgdGFncyBkZXBsb3llZCBvbiAxMTcgc3BlY2llcyAoZmlzaCwgc2hhcmtzLCByYXlzLCByZXB0aWxlcywgYW5kIG1hbW1hbHMpLCB3aXRoIGRpc3RhbmNlcyB0cmF2ZWxsZWQgcmFuZ2luZyBmcm9tIGEgZmV3IHRvIHRob3VzYW5kcyBvZiBraWxvbWV0cmVzLiBUaGlzIGRhdGFzZXQgb2YgYWNvdXN0aWMgZGV0ZWN0aW9ucyBjb25zdGl0dXRlcyBhIHZhbHVhYmxlIHJlc291cmNlIGZhY2lsaXRhdGluZyBtZXRhLWFuYWx5c2lzIG9mIGFuaW1hbCBtb3ZlbWVudCwgZGlzdHJpYnV0aW9ucywgYW5kIGhhYml0YXQgdXNlLCBhbmQgaXMgaW1wb3J0YW50IGZvciByZWxhdGluZyBzcGVjaWVzIGRpc3RyaWJ1dGlvbiBzaGlmdHMgd2l0aCBlbnZpcm9ubWVudGFsIGNvdmFyaWF0ZXMuPC9wPlxuPHA+VGhpcyBjb3B5IG9mIHRoZSBJTU9TIEFURiBkYXRhIGlzIG9mIHRoZSB2YWxpZCBkZXRlY3Rpb25zIGRvd25sb2FkZWQgdmlhIHRoZSBtZXRhZGF0YSByZWNvcmQgYXQgaHR0cHM6Ly9jYXRhbG9ndWUtaW1vcy5hb2RuLm9yZy5hdS9nZW9uZXR3b3JrL3Nydi9lbmcvbWV0YWRhdGEuc2hvdz91dWlkPTBlZGU2YjNkLTg2MzUtNDcyZi1iOTFjLTU2YTc1OGI0ZTA5MS4gVGhpcyBkYXRhc2V0IGhhcyBiZWVuIHN1bW1hcml6ZWQgYnkgcmVkdWNpbmcgdGhlIGRldGVjdGlvbiByZWNvcmRzIHRvIHRoZSBjb3VudCBvZiBkZXRlY3Rpb25zIHBlciBhbmltYWwgcGVyIHNpdGUgcGVyIGRheSAoVVRDKS4gVGhlIER3QyBmaWVsZCBldmVudElkIGhhcyBiZWVuIHVzZWQgdG8gcmVjb3JkIHRoZSB0cmFuc21pdHRlciBzZXJpYWwgbnVtYmVyLiBUaGUgaW5pdGlhbCBkZXBsb3ltZW50L3JlbGVhc2Ugb2YgdGhlIGFuaW1hbCBoYXMgYWxzbyBiZWVuIGFkZGVkIHRvIHRoZSBkYXRhc2V0IHVzaW5nIGFuIG9jY3VyZW5jZUlkIG9mIHRyYW5zbWl0dGVyIHRhZyB3aXRoIGEgcG9zdGZpeCBvZiAnLXJlbGVhc2UnLjwvcD5cbjxwPkRldGFpbHMgb2YgdGhlIGFjb3VzdGljIHJlY2VpdmVyIHNpdGVzIGlzIGF0IGh0dHBzOi8vY2F0YWxvZ3VlLWltb3MuYW9kbi5vcmcuYXUvZ2VvbmV0d29yay9zcnYvZW5nL21ldGFkYXRhLnNob3c/dXVpZD00YTk3YmQxMS1lODIxLTQ2ODItOGIyMC1jYjY5MjAxZjMyMjMuPC9wPiIsInR5cGUiOiJPQ0NVUlJFTkNFIn0seyJrZXkiOiJhZDBkMWEyNC1lOTUyLTExZTItOTYxZi0wMDE0NWViNDVlOWEiLCJ0aXRsZSI6IlZlZ2V0V2ViIC0gUmVwb3NpdG9yaXVtIHZvbiBWZWdldGF0aW9uc2F1Zm5haG1lbiIsImRlc2NyaXB0aW9uIjoiVmVnZXRXZWIgLSBSZXBvc2l0b3JpdW0gdm9uIFZlZ2V0YXRpb25zYXVmbmFobWVuIGF1cyBEZXV0c2NobGFuZDogVm9ya29tbWVuIHZvbiBQZmxhbnplbmFydGVuIGluIGRlbiBBdWZuYWhtZWZsw6RjaGVuLCB6dWdlb3JkbmV0IHp1IE1UQi1SYXN0ZXJmZWxkZXJuIC0gcmVwb3NpdG9yeSBvZiB2ZWdldGF0aW9uIHBsb3QgZGF0YSBmcm9tIGdlcm1hbnksIGFzc2lnbmVkIHRvIGdyaWQgZmllbGRzIG9mIFRLMjUgbWFwIHVuaXRzICg2IHggMTAgZ2VvZ3JhcGhpY2FsIG1pbnV0ZXMpIiwidHlwZSI6Ik9DQ1VSUkVOQ0UifSx7ImtleSI6ImIzNjA0Mjk3LWY0MzgtNGI1Yy1iNjU0LTc5NzZhOTA5ZjI0ZSIsInRpdGxlIjoiRnVuZ2FsIFJlY29yZHMgRGF0YWJhc2Ugb2YgQnJpdGFpbiBhbmQgSXJlbGFuZCIsImRlc2NyaXB0aW9uIjoiZnVuZ2kgKHRydWUgZnVuZ2kgW211c2hyb29tcywgbGljaGVucywgbW91bGRzLCB5ZWFzdF0sIGNocm9taXN0YW4gZnVuZ2kgW2Rvd255IG1pbGRld3MsIHdhdGVyIG1vdWxkc10sIHByb3Rvem9hbiBmdW5naSBbc2xpbWUgbW91bGRzIGFuZCB0aGVpciBhbGxpZXNdKSIsInR5cGUiOiJPQ0NVUlJFTkNFIn0seyJrZXkiOiI5NDA4MjFjMC0zMjY5LTExZGYtODU1YS1iOGEwM2M1MGE4NjIiLCJ0aXRsZSI6IkJlbGdpYW4gSUZCTCBGbG9yYSBDaGVja2xpc3RzICgxOTM5LTE5NzEpIiwiZGVzY3JpcHRpb24iOiJUaGUgZGF0YSBpbiBJRkJMIDEsIDIgJiAzIGNvdmVycyBhbGwgb2YgdGhlIElGQkwgMSBrbcKyIGZsb3JhIGNoZWNrbGlzdHMgc2FtcGxlZCBiZXR3ZWVuIDE5MzkgYW5kIDE5NzEuIEFib3V0IDEwMDAwIG9yaWdpbmFsIGxpc3RzIGNvcnJlc3BvbmRpbmcgd2l0aCBzb21lIDEgMjAwIDAwMCBkYXRhIHJlcHJlc2VudGF0aXZlIG9mIHRoZSBmb3JtZXIgZGlzdHJpYnV0aW9uIG9mIHZhc2N1bGFyIHBsYW50IHNwZWNpZXMgaW4gQmVsZ2l1bSwgd2VyZSBkaWdpdGlzZWQuIFRoZSBJRkJMIGRhdGEgaXMgaW50ZWdyYXRlZCBpbiBleGlzdGluZyBuYXRpb25hbCBhbmQgcmVnaW9uYWwgZmxvcmEgZGF0YWJhc2VzIGFuZCB3aWxsIGNvbnRyaWJ1dGUgdG8gdGhlIHJlYWxpc2F0aW9uIG9mIHJlZ2lvbmFsIEZsb3JhIEF0bGFzZXMuIFRoZSBhbmFseXNpcyBvZiB0aGUgZGlnaXRpc2VkIGRhdGEgd2lsbCBpbXByb3ZlIHRoZSBwb3NzaWJpbGl0aWVzIHRvIGNvbXBhcmUgZmxvcmFsIGRhdGEgb3ZlciBzdWNjZXNzaXZlIHBlcmlvZHMgYW5kIHdpbGwgYmUgb2YgaGVscCBpbiBkZXZlbG9waW5nIGEgc3RyYXRlZ3kgZm9yIHJlZHVjaW5nIHRoZSBjb3N0cyBhbmQgdGhlIGxlbmd0aCBvZiBuZXcgZmxvcmEgbW9uaXRvcmluZyBhbmQgbWFwcGluZyBwcm9qZWN0cyBpbiB0aGUgZnV0dXJlLlxuVGhlIEF0bGFzIG9mIHRoZSBGbG9yYSAoUHRlcmlkb3BoeXRlcyDigJMgU3Blcm1hdG9waHl0ZXMpIG9mIEJlbGdpdW0gYW5kIEx1eGVtYnVyZyAoVmFuIFJvbXBhZXkgJiBEZWx2b3NhbGxlIDE5NzIpIHdhcyB0aGUgcmVzdWx0IG9mIHRoZSBmaXJzdCBuYXRpb25hbCBmbG9yYSBtYXBwaW5nIHByb2plY3QgKDE5MzktIDE5NzEpLiBVbmZvcnR1bmF0ZWx5LCB0aGUgZGF0YSB1c2VkIHRvIGJ1aWxkIGl0IHdlcmUgb25seSBkaWdpdGlzZWQgYXQgYSBzeW50aGV0aWMgbGV2ZWwgKHVuaXRzIG9mIDE2IGttwrIpLiBUbyBiZSBhYmxlIHRvIGludmVzdGlnYXRlIHRoZSBjaGFuZ2VzIGluIHRoZSBmbG9yYSBiZXR3ZWVuIHRoZSBmaXJzdCBtYXBwaW5nIHBlcmlvZCBhbmQgdGhlIHNlY29uZCAoMTk3MiB1cCB0byBub3cpIGluIGFsbCBpdHMgYXNwZWN0cywgZXNwZWNpYWxseSBpbiByZWxhdGlvbiB0byBlbnZpcm9ubWVudGFsIGZhY3RvcnMgKGNsaW1hdGljLCBwb2xsdXRpb24sIGxhbmQgdXNl4oCmKSwgdGhlIG9yaWdpbmFsIGRhdGEgd2FzIGRpZ2l0aXplZCwgaS5lLiB0aGUgZmllbGQgcmVjb3JkcyBvbiB0aGUgZmxvcmEgKGZsb3JhIGNoZWNrbGlzdHMpIG1hZGUgd2l0aGluIDFrbcKyIElGQkwgc3F1YXJlcy4iLCJ0eXBlIjoiT0NDVVJSRU5DRSJ9LHsia2V5IjoiN2ZkMTIxMTQtOTAxMC00YzEzLThmNDYtOTkwZmUwNGNhODgyIiwidGl0bGUiOiJOYXR1cmVTZXJ2ZSBOZXR3b3JrIFNwZWNpZXMgT2NjdXJyZW5jZSBEYXRhIiwiZGVzY3JpcHRpb24iOiJUaGlzIGRhdGFzZXQgY29uc2lzdHMgb2YgXCJFbGVtZW50IE9jY3VycmVuY2VcIiAoRU8pIHJlY29yZHMgZm9yIHJhcmUgYW5kIGVuZGFuZ2VyZWQgc3BlY2llcyBvZiB0aGUgVW5pdGVkIFN0YXRlcyBhbmQgQ2FuYWRhIHRoYXQgYXJlIG1hbmFnZWQgYnkgdGhlIE5hdHVyZVNlcnZlIE5ldHdvcmsgb2YgbmF0dXJhbCBoZXJpdGFnZSBwcm9ncmFtcyBhbmQgY29uc2VydmF0aW9uIGRhdGEgY2VudGVycy4gT2NjdXJyZW5jZXMgYXJlIGRvY3VtZW50ZWQgYnkgdm91Y2hlciBzcGVjaW1lbnMgYW5kIG90aGVyIGZvcm1zIG9mIGVjb2xvZ2ljYWwgb2JzZXJ2YXRpb25zLCBhbmQgaW5jbHVkZSBzcGF0aWFsbHkgZXhwbGljaXQgZGF0YSBvbiB0aGUgbG9jYXRpb24gYW5kIGV4dGVudCBvZiBwb3B1bGF0aW9ucywgdG9nZXRoZXIgd2l0aCBkYXRhIG9uIGFidW5kYW5jZSBhbmQgcG9wdWxhdGlvbiBjb25kaXRpb24uIER1ZSB0byB0aGUgcG90ZW50aWFsIHNlbnNpdGl2aXR5IG9mIGVuZGFuZ2VyZWQgc3BlY2llcyBsb2NhdGlvbnMsIG9ubHkgbm9uLXNlbnNpdGl2ZSBnZW9ncmFwaGljIGRhdGEgYXJlIHByb3ZpZGVkIGluIHRoaXMgZGF0YXNldC4gU3BlY2llcy1zcGVjaWZpYyBjcml0ZXJpYSB1c2VkIHRvIGRlZmluZSBlbGVtZW50IG9jY3VycmVuY2VzLCBhcyB3ZWxsIGFzIHN0YW5kYXJkcyBmb3IgZG9jdW1lbnRpbmcgYW5kIG1hcHBpbmcgZWxlbWVudCBvY2N1cnJlbmNlcyBhcmUgYXZhaWxhYmxlIG9uIHRoZSBOYXR1cmVTZXJ2ZSB3ZWIgc2l0ZSBhdDogaHR0cDovL3d3dy5uYXR1cmVzZXJ2ZS5vcmcvY29uc2VydmF0aW9uLXRvb2xzL3N0YW5kYXJkcy1tZXRob2RzIiwidHlwZSI6Ik9DQ1VSUkVOQ0UifSx7ImtleSI6IjA5NDNmNjkwLWZkZTUtMTFkZC04M2Y0LWI4YTAzYzUwYTg2MiIsInRpdGxlIjoiUGhhbmVyb2dhbWljIEJvdGFuaWNhbCBDb2xsZWN0aW9ucyAoUykiLCJkZXNjcmlwdGlvbiI6IlRoaXMgZGF0YWJhc2UgY29udGFpbnMgaW5mb3JtYXRpb24gb24gdGhlIHNwZWNpbWVucyBpbiB0aGUgUGhhbmVyb2dhbWljIEJvdGFuaWNhbCBDb2xsZWN0aW9ucyBvZiB0aGUgU3dlZGlzaCBNdXNldW0gb2YgTmF0dXJhbCBIaXN0b3J5LiIsInR5cGUiOiJPQ0NVUlJFTkNFIn0seyJrZXkiOiIxMjcwYjNjOC1mZjU1LTRiNjMtYTQwNy1kY2Q3ZTA4Y2QyM2YiLCJ0aXRsZSI6IkRyYWdvbmZseSByZWNvcmRzIGZyb20gdGhlIEJyaXRpc2ggRHJhZ29uZmx5IFNvY2lldHkncyBEcmFnb25mbHkgUmVjb3JkaW5nIE5ldHdvcmsgZm9yIHRoZSBwZXJpb2QgdXAgdG8gMjAxNCIsImRlc2NyaXB0aW9uIjoiRHJhZ29uZmx5IGFuZCBkYW1zZWxmbHkgcmVjb3JkcyBjb2xsZWN0ZWQgYW5kIGNvbGxhdGVkIGJ5IHRoZSBEcmFnb25mbHkgUmVjb3JkaW5nIE5ldHdvcmsgKERSTiksIGEgcGFydCBvZiB0aGUgQnJpdGlzaCBEcmFnb25mbHkgU29jaWV0eSwgZm9yIHRoZSBwZXJpb2QgMTgwNy0yMDE0LiBUaGlzIGRhdGFzZXQgaW5jb3Jwb3JhdGVzIHRoZSBwcmV2aW91cyBEUk4gYW5kIEJSQyBkcmFnb25mbHkgZGF0YXNldHMgb24gdGhlIEdhdGV3YXkuIiwidHlwZSI6Ik9DQ1VSUkVOQ0UifSx7ImtleSI6IjhlZjk1MzA5LTgxMWYtNGMzYi1hMzI5LWE4NTM2OGU3NzRjOSIsInRpdGxlIjoiU2NvdHRpc2ggU05ILWZ1bmRlZCBCU0JJIHJlY29yZHMiLCJ0eXBlIjoiT0NDVVJSRU5DRSJ9LHsia2V5IjoiZDdjYzE5YmEtNzc4NS00MTMxLWFiNjMtMzMyOGE5OWVjZmFiIiwidGl0bGUiOiJEb25uw6llcyBkJ29ic2VydmF0aW9uIGZsb3JlIGR1IHLDqXNlYXUgZGVzIENCTiBpc3N1ZXMgZHUgc3lzdMOobWUgZCdpbmZvcm1hdGlvbiBkZSBsYSBGQ0JOIiwiZGVzY3JpcHRpb24iOiJEw6hzIGxhIGNyw6lhdGlvbiBkZSBsZXVyIEbDqWTDqXJhdGlvbiAoRkNCTiAtIHd3dy5mY2JuLmZyKSBlbiAxOTk5LCBsZXMgb256ZSBDb25zZXJ2YXRvaXJlcyBib3RhbmlxdWVzIG5hdGlvbmF1eCAoQ0JOKSBvbnQgZXhwcmltw6kgbGEgdm9sb250w6kgY29sbGVjdGl2ZSBkZSBjb25zdGl0dWVyIHVuIHN5c3TDqG1lIGTigJlpbmZvcm1hdGlvbiBuYXRpb25hbCBwb3VyIG1ldHRyZSBlbiBjb21tdW4gbGV1cnMgZG9ubsOpZXMsIGV0IGNlbGxlcyBkZSBsZXVycyBwYXJ0ZW5haXJlcywgc3VyIGxhIGZsb3JlLCBsYSBmb25nZSBldCBsZXMgdsOpZ8OpdGF0aW9ucy1oYWJpdGF0cy4gQ+KAmWVzdCByw6llbGxlbWVudCBlbiAyMDEwIGF2ZWMgbGUgbGFuY2VtZW50IGRlIGzigJnDqXRhYmxpc3NlbWVudCBkdSBGb3JtYXQgU3RhbmRhcmQgZGUgRG9ubsOpZXMgc3VyIGxhIGZsb3JlIChGU0QgRmxvcmUpLCBjb27Dp3UgY29tbWUgbGUgwqsgZm9ybWF0IGNvbW11biBkZSBkb25uw6llcyBkZSBsYSBGw6lkw6lyYXRpb24gZGVzIENCTiDCuywgcXVlIGxhIGTDqW1hcmNoZSBhIMOpdMOpIGluaXRpw6llLiBJbCBz4oCZZW4gZXN0IHN1aXZpIGRlIG5vbWJyZXV4IMOpY2hhbmdlcyBheWFudCBwZXJtaXMgZGUgZmluYWxpc2VyIGxlIGZvcm1hdCwgZGUgbGUgdGVzdGVyIHN1ciBsZXMgcHJlbWllcnMgamV1eCBkZSBkb25uw6llcywgZOKAmcOpdGFibGlyIHVuZSBjaGFydGUgZOKAmWFkaMOpc2lvbiBhdSBwcm9qZXQgZXQgZOKAmcOpbGFib3JlciBsZSBjYWRyYWdlIGZpbmFsIGRlIGzigJlleGVyY2ljZSBk4oCZYWdyw6lnYXRpb24gZGVzIGRvbm7DqWVzLiBMZSBwcm9qZXQgc+KAmWVzdCBjb25jcsOpdGlzw6kgYXUgcHJlbWllciB0cmltZXN0cmUgMjAxMyDDoCB0cmF2ZXJzIGxhIG1pc2UgYXUgZm9ybWF0IGRlcyBkb25uw6llcyBkw6l0ZW51ZXMgcGFyIGxlcyBDQk4gZXQgbGV1ciBpbnTDqWdyYXRpb24gZGFucyBsZSBTeXN0w6htZSBk4oCZSW5mb3JtYXRpb24gZGUgbGEgRkNCTiAoU0ktRkNCTikuIEEgbOKAmWhvcml6b24gZGUgbOKAmWFubsOpZSAyMDE0LCBpbCByw6lzdWx0ZSwgZGUgY2UgcHJvamV0IHN0cnVjdHVyYW50LCBxdWUgbGEgRkNCTiBkaXNwb3NlIGTigJl1biBzeXN0w6htZSBk4oCZaW5mb3JtYXRpb24gZOKAmWVudmVyZ3VyZSBuYXRpb25hbGUgZXQgZm9ydCBkZSBwbHVzIGRlIDIwIG1pbGxpb25zIGRlIGRvbm7DqWVzIGTvv73vv71vYnNlcnZhdGlvbiBzdXIgbGEgZmxvcmUgZGUgRnJhbmNlLiBMZSBwcm9qZXQgYSBhaW5zaSBwZXJtaXMgZGUgY2FwaXRhbGlzZXIgbGEgbWFqZXVyZSBwYXJ0aWUgZGVzIGNvbm5haXNzYW5jZXMgc3VyIGxhIGRpc3RyaWJ1dGlvbiBkZSBsYSBmbG9yZSDDoCBs4oCZw6ljaGVsbGUgZHUgdGVycml0b2lyZSBtw6l0cm9wb2xpdGFpbiBldCBkZSBMYSBSw6l1bmlvbi4gQ2UgcHJvZHVpdCBlc3QgbGUgZnJ1aXQgZOKAmXVuIHRyYXZhaWwgZGUgbG9uZ3VlIGhhbGVpbmUgbWVuw6kgcGFyIGxlcyBDQk4gZXQgbGV1cnMgcGFydGVuYWlyZXMsIHBvdXIgY2VydGFpbnMgZGVwdWlzIHBsdXMgZGUgdmluZ3QgYW5zLiBJbCByZXBvc2UgZW4gZ3JhbmRlIHBhcnRpZSBzdXIgZGVzIGludmVudGFpcmVzIHLDqWFsaXPDqXMgc3VyIGxlIHRlcnJhaW4sIG1haXMgYXVzc2kgc3VyIGRlcyBkw6lwb3VpbGxlbWVudHMgcHVpcyBzYWlzaWVzIGRlIGxhIGJpYmxpb2dyYXBoaWUgZXQgZGUgZG9ubsOpZXMgZOKAmWhlcmJpZXJzLiBJbCBtZXQgw6lnYWxlbWVudCBlbiBqZXUgdG91dGUgbGEgcmljaGVzc2UgZHUgdHJhdmFpbCBwb3Vzc8OpIGTigJlleHBlcnRpc2Ugc2NpZW50aWZpcXVlIGV0IHRlY2huaXF1ZSBtZW7DqSBlbiBjb250aW51IHBhciBsZSByw6lzZWF1IGRlcyBDQk4gZXQgcXVpIGVzdCBheMOpIGTigJl1bmUgcGFydCBzdXIgbGEgdmFsaWRhdGlvbiB0YXhvbm9taXF1ZSBkZXMgZG9ubsOpZXMsIGV0IGTigJlhdXRyZSBwYXJ0IHN1ciBsZXVyIGdlc3Rpb24gZXQgYWRtaW5pc3RyYXRpb24gYXUgc2VpbiBkZSBiYXNlcyBkZSBkb25uw6llcyByw6lnaW9uYWxlcy5cblxuQ2UgamV1eCBjb250aWVudCBsZXMgZG9ubsOpZXMgcG91ciBsZXMgdGF4b25zIGF5YW50IHN1Yml0IGRlcyBtb2RpZmljYXRpb25zIGR1IHLDqWbDqXJlbnRpZWwgVGF4cmVmIGVudHJlIGxhIFY1IGV0IGxhIFY4LiIsInR5cGUiOiJPQ0NVUlJFTkNFIn0seyJrZXkiOiJmN2ZkNzI1NS01YmU2LTQ4Y2YtYjc2YS04MjFjYjg0YWE5M2YiLCJ0aXRsZSI6IkJSRVJDIHNwZWNpZXMgcmVjb3JkcyB3aXRoaW4gbGFzdCAxNSB5ZWFycyIsImRlc2NyaXB0aW9uIjoiQlJFUkMgc3BlY2llcyByZWNvcmRzIHJlY29yZGVkIHdpdGhpbiBsYXN0IDE1IHllYXJzIHdpdGhpbiB0aGUgdW5pdGFyeSBhdXRob3JpdHkgYXJlYXMgb2YgTm9ydGggU29tZXJzZXQsIFNvdXRoIEdsb3VjZXN0ZXJzaGlyZSwgQnJpc3RvbCBhbmQgQmF0aCAmIE5vcnRoIEVhc3QgU29tZXJzZXQiLCJ0eXBlIjoiT0NDVVJSRU5DRSJ9LHsia2V5IjoiODY1ZGYwMjAtZjc2Mi0xMWUxLWE0MzktMDAxNDVlYjQ1ZTlhIiwidGl0bGUiOiJFVVJJU0NPLCBUaGUgRXVyb3BlYW4gR2VuZXRpYyBSZXNvdXJjZXMgU2VhcmNoIENhdGFsb2d1ZSIsImRlc2NyaXB0aW9uIjoiVGhlIEVVUklTQ08gd2ViIGNhdGFsb2d1ZSBhdXRvbWF0aWNhbGx5IHJlY2VpdmVzIGRhdGEgZnJvbSB0aGUgTmF0aW9uYWwgSW52ZW50b3JpZXMgKE5JKS4gSXQgZWZmZWN0aXZlbHkgcHJvdmlkZXMgYWNjZXNzIHRvIGFsbCBleCBzaXR1IFBHUiBpbmZvcm1hdGlvbiBpbiBFdXJvcGUgYW5kIHRodXMgZmFjaWxpdGF0ZXMgbG9jYXRpbmcgYW5kIGFjY2Vzc2luZyBQR1IuIiwidHlwZSI6Ik9DQ1VSUkVOQ0UifSx7ImtleSI6IjdkMTdhMmIyLTg3NTEtNDFiNS1hYzliLTQ4ZWZmYzFlYTIzNiIsInRpdGxlIjoiQlJFUkMgc3BlY2llcyByZWNvcmRzIHJlY29yZGVkIG92ZXIgMTUgeWVhcnMgYWdvIiwiZGVzY3JpcHRpb24iOiJCUkVSQyBzcGVjaWVzIHJlY29yZHMgcmVjb3JkZWQgb3ZlciAxNSB5ZWFycyBhZ28gd2l0aGluIHRoZSB1bml0YXJ5IGF1dGhvcml0eSBhcmVhcyBvZiBOb3J0aCBTb21lcnNldCwgU291dGggR2xvdWNlc3RlcnNoaXJlLCBCcmlzdG9sIGFuZCBCYXRoICYgTm9ydGggRWFzdCBTb21lcnNldC4iLCJ0eXBlIjoiT0NDVVJSRU5DRSJ9LHsia2V5IjoiODY0Yzg3MzYtZjc2Mi0xMWUxLWE0MzktMDAxNDVlYjQ1ZTlhIiwidGl0bGUiOiJQb2ludCBSZXllcyBCaXJkIE9ic2VydmF0b3J5IC0gUG9pbnQgQ291bnRzIiwidHlwZSI6Ik9DQ1VSUkVOQ0UifSx7ImtleSI6ImNkNmUyMWM4LTllOGEtNDkzYS04YTc2LWZiZjc4NjIwNjllNSIsInRpdGxlIjoiUm95YWwgQm90YW5pYyBHYXJkZW5zLCBLZXcgLSBIZXJiYXJpdW0gU3BlY2ltZW5zIiwiZGVzY3JpcHRpb24iOiJUaGUgSGVyYmFyaXVtIGF0IHRoZSBSb3lhbCBCb3RhbmljIEdhcmRlbnMgS2V3IGhvdXNlcyBhcHByb3hpbWF0ZWx5IHNldmVuIG1pbGxpb24gcGxhbnQgc3BlY2ltZW5zLCBjb2xsZWN0ZWQgZnJvbSBhbGwgYXJvdW5kIHRoZSB3b3JsZC4gU3BlY2ltZW5zIGFyZSBlaXRoZXIgcHJlc3NlZCBhbmQgZHJpZWQgb3IgcHJlc2VydmVkIGluIHNwaXJpdC4gS2V3IGlzIGNvbW1pdHRlZCB0byBtYWtpbmcgdGhpcyBpbXBvcnRhbnQgY29sbGVjdGlvbiBtb3JlIGFjY2Vzc2libGUgdG8gYm90YW5pc3RzIGFuZCBvdGhlcnMsIHdoZXJldmVyIHRoZXkgbWF5IGJlLCBmb3IgdXNlIGluIHRoZWlyIG93biBwcm9qZWN0czogcGFydGljdWxhcmx5IGluIGJpb2RpdmVyc2l0eSwgY29uc2VydmF0aW9uLCBzdXN0YWluYWJsZSBkZXZlbG9wbWVudCBhbmQgc3lzdGVtYXRpY3MuIFRvIHRoaXMgZW5kIEtldyBpcyBidWlsZGluZyBhbiBlbGVjdHJvbmljIEhlcmJhcml1bSBDYXRhbG9ndWUgY29udGFpbmluZyBpbWFnZXMgb2YgdGhlIHNwZWNpbWVucyBhbmQgaW5mb3JtYXRpb24gdGFrZW4gZnJvbSB0aGVpciBjb2xsZWN0aW9uIGxhYmVscy4gU3BlY2ltZW5zIHJlcHJlc2VudGVkIGluIEtld+KAmXMgZGlnaXRhbCBjb2xsZWN0aW9ucyBoYXZlIGJlZW4gY29sbGVjdGVkIG92ZXIgYSBwZXJpb2Qgc3Bhbm5pbmcgdGhyZWUgY2VudHVyaWVzLCB3aXRoIGV4YW1wbGVzIGRhdGluZyBiYWNrIHRvIHRoZSBiZWdpbm5pbmcgb2YgdGhlIDE4dGggY2VudHVyeS4gVGhlc2UgaW5jbHVkZSBvdmVyIDMwMCwwMDAgcHV0YXRpdmUgdHlwZSBhbmQgaGlzdG9yaWNhbGx5IGltcG9ydGFudCBzcGVjaW1lbnMgY29sbGVjdGVkIGJ5IHBsYW50IGh1bnRlcnMsIGV4cGxvcmVycyBhbmQgc2NpZW50aXN0cyBvZiBncmVhdCByZW5vd24gaW5jbHVkaW5nIENoYXJsZXMgRGFyd2luLCBKb3NlcGggRGFsdG9uIEhvb2tlciBhbmQgTmF0aGFuaWVsIFdhbGxpY2gsIHRvIG5hbWUganVzdCBhIGZldy4iLCJ0eXBlIjoiT0NDVVJSRU5DRSJ9LHsia2V5IjoiMjVkNGY4MmItYjJiYy00MTk3LWJjMTEtMjdjOGU5YTI1NDM5IiwidGl0bGUiOiJTaHJvcHNoaXJlIEVjb2xvZ2ljYWwgRGF0YSBOZXR3b3JrIGRhdGFiYXNlIiwiZGVzY3JpcHRpb24iOiJBbGwgb3VyIHJlY29yZHMgZm9yIFNocm9wc2hpcmUuIiwidHlwZSI6Ik9DQ1VSUkVOQ0UifSx7ImtleSI6Ijg0MGViZWM2LWY3NjItMTFlMS1hNDM5LTAwMTQ1ZWI0NWU5YSIsInRpdGxlIjoiTUlDUk9CSVMgZGF0YWJhc2UiLCJkZXNjcmlwdGlvbiI6Ik1JQ1JPQklTIGlzIGEgZGF0YWJhc2Ugb2YgbWFyaW5lIG1pY3JvYmlhbCBiaW90YSAsIG1vc3QgZ2FpbmVkIGZyb20gZ2Vub21pYyBhbmFseXNpcyB1c2VkIGluIHN1cHBvcnQgb2YgSUNPTU0uIiwidHlwZSI6Ik9DQ1VSUkVOQ0UifSx7ImtleSI6ImI5MjlmMjNkLTI5MGYtNGU4NS04ZjE3LTc2NGM1NWIzYjI4NCIsInRpdGxlIjoiQmVybmljZSBQLiBCaXNob3AgTXVzZXVtIiwiZGVzY3JpcHRpb24iOiJUaGUgQmVybmljZSBQYXVhaGkgQmlzaG9wIE11c2V1bSwgZGVzaWduYXRlZCB0aGUgSGF3YWnKu2kgU3RhdGUgTXVzZXVtIG9mIE5hdHVyYWwgYW5kIEN1bHR1cmFsIEhpc3RvcnksIGlzIGEgbXVzZXVtIG9mIGhpc3RvcnkgYW5kIHNjaWVuY2UgbG9jYXRlZCBpbiB0aGUgS2FsaWhpIGRpc3RyaWN0IG9mIEhvbm9sdWx1IG9uIHRoZSBIYXdhaWlhbiBpc2xhbmQgb2YgTydhaHUuIEZvdW5kZWQgaW4gMTg4OSwgaXQgaXMgdGhlIGxhcmdlc3QgbXVzZXVtIGluIEhhd2FpJ2kgYW5kIGlzIGhvbWUgdG8gb25lIG9mIHRoZSB3b3JsZCdzIGxhcmdlc3QgY29sbGVjdGlvbnMgb2YgbmF0dXJhbCBoaXN0b3J5IG1hdGVyaWFsIGZyb20gdGhlIFBhY2lmaWMgcmVnaW9uLCB3aXRoIGFwcHJveGltYXRlbHkgMjEgbWlsbGlvbiBzcGVjaW1lbnMuIFRoZSBtYWluIGNvbGxlY3Rpb25zIGluY2x1ZGUgRW50b21vbG9neSwgIE1hbGFjb2xvZ3ksIEJvdGFueSwgSWNodGh5b2xvZ3ksIFZlcnRlYnJhdGUgWm9vbG9neSAoQmlyZHMsIE1hbW1hbHMsIEFtcGhpYmlhbnMgYW5kIFJlcHRpbGVzKSBhbmQgTWFyaW5lIEludmVydGVicmF0ZXMuIEJpc2hvcCBNdXNldW0gaXMgaW4gdGhlIHByb2Nlc3Mgb2YgZHJhbWF0aWNhbGx5IGltcHJvdmluZyBpdHMgZGlnaXRhbCByZXNvdXJjZXMsIGFuZCBpcyBhY3RpdmVseSBpbnZvbHZlZCBpbiB0aGUgZGV2ZWxvcG1lbnQgb2YgYmlvZGl2ZXJzaXR5IGluZm9ybWF0aW9uIHN0YW5kYXJkcyBhbmQgYXNzb2NpYXRlZCBzZXJ2aWNlcyAocGFydGljdWxhcmx5IHRoZSBHbG9iYWwgTmFtZXMgQXJjaGl0ZWN0dXJlKS4iLCJ0eXBlIjoiT0NDVVJSRU5DRSJ9LHsia2V5IjoiMWZlYzI4MjktNGFjMC00MzI5LWI0NDgtNmY3NjhiOGQzNDI3IiwidGl0bGUiOiJMaXN0ZSBkZXMgZXNww6hjZXMgZGUgbGEgZmF1bmUgc2F1dmFnZSAoQW1waGliaWVucywgTWFtbWlmw6hyZXMgaG9ycyBDaGlyb3B0w6hyZXMsIE9pc2VhdXgsIE9ydGhvcHTDqHJlcywgUmVwdGlsZXMgJiBSaG9wYWxvY8OocmVzKSBvYnNlcnbDqWVzIHNlbG9uIGxlIG1haWxsYWdlIGNvbW11bmFsIGZyYW7Dp2FpcyBkZSBsYSBiYXNlIGRlIGRvbm7DqWVzIG5hdHVyYWxpc3RlcyBGYXVuZS1GcmFuY2UgLiIsImRlc2NyaXB0aW9uIjoiTGVzIGVzcMOoY2VzIGNvbmNlcm7DqWVzIHBhciBsZSBqZXV4IGRlIGRvbm7DqWVzIHJlZ2FyZGVudCBsZXMgdGF4b25zIHN1aXZhbnRzIDogQW1waGliaWVucywgTWFtbWlmw6hyZXMgaG9ycyBDaGlyb3B0w6hyZXMsIE9pc2VhdXgsIE9ydGhvcHTDqHJlcywgUmVwdGlsZXMgZXQgUmhvcGFsb2PDqHJlcy4gUG91ciBjaGFxdWUgdGF4b24sIGxlIGpldSBkZSBkb25uw6llcyBhIMOpdMOpIGNyw6llIMOgIHBhcnRpciBkdSB0aXJhZ2UgYWzDqWF0b2lyZSBkJ3VuZSBvYnNlcnZhdGlvbiBkZSBjZSB0YXhvbiByw6lhbGlzw6llIMOgIGwnaW50w6lyaWV1ciBkJ3VuZSBtw6ptZSBjb21tdW5lLiBcbkxhIGRpZmZ1c2lvbiBkZSBsYSBsb2NhbGlzYXRpb24gZGUgY2VydGFpbmVzIGVzcMOoY2VzIHBvdXZhbnQgbnVpcmUgw6AgbGV1ciBjb25zZXJ2YXRpb24sIGxlcyBvYnNlcnZhdGlvbnMgw6AgbGEgbWFpbGxlIG9udCDDqXTDqSBmbG91dMOpZXMgw6AgbCfDqWNoZWxsZSBkdSBkw6lwYXJ0ZW1lbnQgKGNhcyBkZSBsYSBDaWdvZ25lIG5vaXJlLCBkdSBQw6lsb2JhdGUgYnJ1biwgZGUgbGEgU2FsYW1hbmRyZSBkZSBMYW56YSwgZGUgbGEgVmlww6hyZSBkJ09yc2luaSwgZHUgRmFkZXQgZGVzIHRvdXJiacOocmVzLCBkdSBQeWdhcmd1ZSDDoCBxdWV1ZSBibGFuY2hlLCBkdSBHeXBhw6h0ZSBiYXJidSwgZHUgR3JhbmQgVMOpdHJhcywgZGUgbGEgR3J1ZSBjZW5kcsOpZSwgZHUgUGljIHRyaWRhY3R5bGUsIGR1IExvdXAgZ3JpcywgZHUgTHlueCBib3LDqWFsLCBkZSBsJ091cnMgYnJ1bikuIiwidHlwZSI6Ik9DQ1VSUkVOQ0UifSx7ImtleSI6Ijk2YzkzYTFlLWY3NjItMTFlMS1hNDM5LTAwMTQ1ZWI0NWU5YSIsInRpdGxlIjoiQU1OSCBCaXJkIENvbGxlY3Rpb24iLCJkZXNjcmlwdGlvbiI6IlRoZSBEZXBhcnRtZW50IG9mIE9ybml0aG9sb2d5IG1haW50YWlucyBvbmUgb2YgdGhlIGxhcmdlc3QgY29sbGVjdGlvbnMgb2YgYmlyZCBzcGVjaW1lbnMgaW4gdGhlIHdvcmxkLiBUaGUgcmVzZWFyY2ggY29sbGVjdGlvbnMgb2YgdGhlIERlcGFydG1lbnQgbnVtYmVyIG5lYXJseSBvbmUgbWlsbGlvbiBzcGVjaW1lbnM7IHRoZXNlIGluY2x1ZGUgc2tpbnMsIHNrZWxldG9ucywgYWxjb2hvbGljIHByZXBhcmF0aW9ucywgZWdncywgbmVzdHMsIGFuZCB0aXNzdWUgc2FtcGxlcyBmb3IgbW9sZWN1bGFyIGJpb2NoZW1pY2FsIHN0dWRpZXMuIEEgbGFyZ2UgbnVtYmVyIG9mIHR5cGUgc3BlY2ltZW5zIGFuZCByYXJlIG9yIGV4dGluY3Qgc3BlY2llcyBhcmUgYWxzbyBmb3VuZCBpbiBpdHMgY29sbGVjdGlvbnMuIiwidHlwZSI6Ik9DQ1VSUkVOQ0UifSx7ImtleSI6ImY5NDY2NjZlLTY3ZGMtNDg0OC05ZmE4LTIxNjJmMzU1OWUzMyIsInRpdGxlIjoiRG9ubsOpZXMgZCdvY2N1cnJlbmNlcyBFc3DDqGNlcyBpc3N1ZXMgZGUgbCdpbnZlbnRhaXJlIGRlcyBaTklFRkYiLCJkZXNjcmlwdGlvbiI6IkxlcyBkb25uw6llcyBjb3JyZXNwb25kZW50IMOgIGRlcyBkb25uw6llcyBkZSBzeW50aMOoc2UgZXNww6hjZXMgcHLDqXNlbnRlcyBkYW5zIGxlcyBaTklFRkYuIExlcyBkb25uw6llcyBzb250IGJhbmNhcmlzw6llcyDDoCBsYSB6b25lLiIsInR5cGUiOiJPQ0NVUlJFTkNFIn0seyJrZXkiOiJiZDhlZTc0OC00YWU4LTQ5NTYtOThkOS1jMWI4ZThiMmI5YzkiLCJ0aXRsZSI6IlRBWEEgLSBGbG9yZSBldCBoYWJpdGF0cyBuYXR1cmVscyBkZSBGcmFuY2hlLUNvbXTDqSIsImRlc2NyaXB0aW9uIjoiRG9ubsOpZXMgZmxvcmlzdGlxdWVzIGV0IHBoeXRvY8Opbm90aXF1ZXMgKGhhYml0YXRzIG5hdHVyZWxzKSA6IGJhc2UgaW5mb3JtYXRpc8OpZSB2aXNhbnQgw6Agb3JnYW5pc2VyIGxhIHN5bnRow6hzZSBldCBsYSB2YWxpZGF0aW9uIGRlcyBkb25uw6llcyByYXNzZW1ibMOpZXMgcGFyIGxlIENCTkZDLU9SSSwgbGEgU0JGQywgbGUgcsOpc2VhdSBkZSBiw6luw6l2b2xlcyByw6lnaW9uYXV4IGV0IGRpdmVyc2VzIHN0cnVjdHVyZXMgb3Ugb3JnYW5pc21lcyBwYXJ0ZW5haXJlcyAoQ0VORkMsIE9OQ0ZTLCBPTkVNQSwgT05GLCBhc3NvY2lhdGlvbnMgbmF0dXJhbGlzdGVzLCBidXJlYXV4IGQnw6l0dWRlLCBldGMgLi4uKS4gTGVzIGdyb3VwZXMgZmxvcmlzdGlxdWVzIGFib3Jkw6lzIHBvcnRlbnQgc3VyIGxlcyB0cmFjaMOpb3BoeXRlcywgbGVzIGJyeW9waHl0ZXMsIGxlcyBjaGFyb3BoeXRlcy4gTGVzIGNoYW1waWdub25zICh5IGNvbXByaXMgbGljaMOpbmlzw6lzKSBzb250IMOpZ2FsZW1lbnQgdHJhaXTDqXMuRW4gbGllbiBhdmVjIGwnYW3DqWxpb3JhdGlvbiBnw6luw6lyYWxlIGRlIGxhIGNvbm5haXNzYW5jZSwgbGVzIG9iamVjdGlmcyB2aXPDqXMgcG9ydGVudCBzdXIgbGEgbWlzZSBlbiBwbGFjZSBkJ3VuIHLDqXNlYXUgZGUgdmVpbGxlIHBlcm1hbmVudGUsIHBlcm1ldHRhbnQgw6AgdGVybWUgdW5lIG1laWxsZXVyZSBhcHByw6loZW5zaW9uIGRlIGwnw6l2b2x1dGlvbiBkdSBzdGF0dXQgZGVzIHRheG9ucyByw6lnaW9uYXV4IGV0IGQnZW4gYXNzdXJlciBhaW5zaSB1bmUgbWVpbGxldXJlIGNvbnNlcnZhdGlvbi4iLCJ0eXBlIjoiT0NDVVJSRU5DRSJ9LHsia2V5IjoiNzg4OGY2NjYtZjU5ZS00NTM0LTg0NzgtM2ExMGEzYmZlZTQ1IiwidGl0bGUiOiJWbGluZGVyZGF0YWJhbmsgLSBCdXR0ZXJmbGllcyBpbiBGbGFuZGVycyBhbmQgdGhlIEJydXNzZWxzIENhcGl0YWwgUmVnaW9uLCBCZWxnaXVtIiwiZGVzY3JpcHRpb24iOiJWbGluZGVyZGF0YWJhbmsgLSBCdXR0ZXJmbGllcyBpbiBGbGFuZGVycyBhbmQgdGhlIEJydXNzZWxzIENhcGl0YWwgUmVnaW9uLCBCZWxnaXVtIGlzIGEgc3BlY2llcyBvY2N1cnJlbmNlIGRhdGFzZXQgcHVibGlzaGVkIGJ5IHRoZSBSZXNlYXJjaCBJbnN0aXR1dGUgZm9yIE5hdHVyZSBhbmQgRm9yZXN0IChJTkJPKSBhbmQgZGVzY3JpYmVkIGluIE1hZXMgZXQgYWwuIDIwMTYgKGh0dHBzOi8vZG9pLm9yZy8xMC4zODk3L3pvb2tleXMuNTg1LjgwMTkpLiBUaGUgZGF0YXNldCBjb250YWlucyBvdmVyIDc2MS4wMDAgYnV0dGVyZmx5IG9jY3VycmVuY2VzIG9mIDcwIHNwZWNpZXMsIGNvbXBpbGVkIGJ5IHRoZSBJTkJPIGluIGNvb3BlcmF0aW9uIHdpdGggdGhlIEJ1dHRlcmZseSB3b3JraW5nIGdyb3VwIG9mIE5hdHV1cnB1bnQgKFZsaW5kZXJ3ZXJrZ3JvZXApLiBUaGUgb2NjdXJyZW5jZXMgYXJlIGdlb3JlZmVyZW5jZWQgdXNpbmcgdGhlIGNlbnRyb2lkIG9mIHRoZWlyIHJlc3BlY3RpdmUgNSB4IDUga23CsiBVbml2ZXJzYWwgVHJhbnN2ZXJzZSBNZXJjYXRvciAoVVRNKSBncmlkIGNlbGwgYW5kIGFyZSBkZXJpdmVkIGZyb20gdGhlIGRhdGFiYXNlIFZsaW5kZXJkYXRhYmFuayBhdCB0aGUgSU5CTywgd2hpY2ggY29uc2lzdHMgb2YgKGhpc3RvcmljYWwpIGNvbGxlY3Rpb24gYW5kIGxpdGVyYXR1cmUgZGF0YSAoMTgzMC0yMDAxKSwgZm9yIHdoaWNoIGFsbCBidXR0ZXJmbHkgc3BlY2ltZW5zIGluIGluc3RpdHV0aW9uYWwgYW5kIGF2YWlsYWJsZSBwZXJzb25hbCBjb2xsZWN0aW9ucyB3ZXJlIGRpZ2l0aXplZCBhbmQgYWxsIGVudG9tb2xvZ2ljYWwgYW5kIG90aGVyIHJlbGV2YW50IHB1YmxpY2F0aW9ucyB3ZXJlIGNoZWNrZWQgZm9yIGJ1dHRlcmZseSBkaXN0cmlidXRpb24gZGF0YS4gSXQgYWxzbyBjb250YWlucyBvYnNlcnZhdGlvbnMgYW5kIG1vbml0b3JpbmcgZGF0YSBmb3IgdGhlIHBlcmlvZCAxOTkxLTIwMTQuIFRoZSBsYXR0ZXIgdHlwZSB3ZXJlIGNvbGxlY3RlZCBieSBhIChzbWFsbCkgYnV0dGVyZmx5IG1vbml0b3JpbmcgbmV0d29yayB3aGVyZSBidXR0ZXJmbGllcyB3ZXJlIHJlY29yZGVkIHVzaW5nIGEgc3RhbmRhcmRpemVkIHByb3RvY29sLiBUb2dldGhlciB3aXRoIHRoZSBkYXRhc2V0IFZhbnJldXNlbCBldCBhbC4gKDIwMTYsIGh0dHBzOi8vZG9pLm9yZy8xMC4xNTQ2OC9lemZiZWUpLCB0aGUgZGF0YXNldCByZXByZXNlbnRzIHRoZSBtb3N0IGNvbXBsZXRlIG92ZXJ2aWV3IG9mIGJ1dHRlcmZsaWVzIGluIEZsYW5kZXJzIGFuZCB0aGUgQnJ1c3NlbHMgQ2FwaXRhbCBSZWdpb24gKG5vcnRoIEJlbGdpdW0pLlxuSW5mb3JtYXRpb24gd2l0aGhlbGQ6IGluIHRoZSBvcmlnaW5hbCBkYXRhYmFzZSwgdGhlIG9ic2VydmVy4oCZcyBuYW1lIGFuZCB0aGUgZXhhY3QgWFktY29vcmRpbmF0ZXMgYXJlIGtub3duLlxuVG8gYWxsb3cgYW55b25lIHRvIHVzZSB0aGlzIGRhdGFzZXQsIHdlIGhhdmUgcmVsZWFzZWQgdGhlIGRhdGEgdG8gdGhlIHB1YmxpYyBkb21haW4gdW5kZXIgYSBDcmVhdGl2ZSBDb21tb25zIFplcm8gd2FpdmVyIChodHRwOi8vY3JlYXRpdmVjb21tb25zLm9yZy9wdWJsaWNkb21haW4vemVyby8xLjAvKS4gV2Ugd291bGQgYXBwcmVjaWF0ZSBob3dldmVyLCBpZiB5b3UgcmVhZCBhbmQgZm9sbG93IHRoZXNlIG5vcm1zIGZvciBkYXRhIHVzZSAoaHR0cDovL3d3dy5pbmJvLmJlL2VuL25vcm1zLWZvci1kYXRhLXVzZSkgYW5kIHByb3ZpZGUgYSBsaW5rIHRvIHRoZSBvcmlnaW5hbCBkYXRhc2V0IChodHRwczovL2RvaS5vcmcvMTAuMTU0NjgvbmpnYm1oKSB3aGVuZXZlciBwb3NzaWJsZS4gSWYgeW91IHVzZSB0aGVzZSBkYXRhIGZvciBhIHNjaWVudGlmaWMgcGFwZXIsIHBsZWFzZSBjaXRlIHRoZSBkYXRhc2V0IGZvbGxvd2luZyB0aGUgYXBwbGljYWJsZSBjaXRhdGlvbiBub3JtcyBhbmQvb3IgY29uc2lkZXIgdXMgZm9yIGNvLWF1dGhvcnNoaXAuIFdlIGFyZSBhbHdheXMgaW50ZXJlc3RlZCB0byBrbm93IGhvdyB5b3UgaGF2ZSB1c2VkIG9yIHZpc3VhbGl6ZWQgdGhlIGRhdGEsIG9yIHRvIHByb3ZpZGUgbW9yZSBpbmZvcm1hdGlvbiwgc28gcGxlYXNlIGNvbnRhY3QgdXMgdmlhIHRoZSBjb250YWN0IGluZm9ybWF0aW9uIHByb3ZpZGVkIGluIHRoZSBtZXRhZGF0YSwgb3BlbmRhdGFAaW5iby5iZSBvciBodHRwczovL3R3aXR0ZXIuY29tL0xpZmVXYXRjaElOQk8uIiwidHlwZSI6Ik9DQ1VSUkVOQ0UifSx7ImtleSI6Ijg0ODA2ZTg2LWY3NjItMTFlMS1hNDM5LTAwMTQ1ZWI0NWU5YSIsInRpdGxlIjoiUGFsZW9iaW9sb2d5IERhdGFiYXNlIiwidHlwZSI6Ik9DQ1VSUkVOQ0UifSx7ImtleSI6IjgzNjE0OWFmLWU3YjAtNGZjNy1iNmQ5LTRkNTZjMjhiYWQ0MyIsInRpdGxlIjoiSW52ZW50YWlyZSBOYXRpb25hbCBkdSBQYXRyaW1vaW5lIE5hdHVyZWwgOiBPaXNlYXV4IGhpdmVybmFudHMgZGUgRnJhbmNlIiwiZGVzY3JpcHRpb24iOiJMJ29iamVjdGlmIGRlIGNldCBpbnZlbnRhaXJlIGVzdCBkZSByYXNzZW1ibGVyIHVuIGpldSBleGhhdXN0aWYgZGUgZG9ubsOpZXMgc3VyIGwnZW5zZW1ibGUgZGVzIGVzcMOoY2VzIGhpdmVybmFudCBlbiBGcmFuY2UgbcOpdHJvcG9saXRhaW5lLiBMZSByw6lzZWF1IGEgw6l0w6kgY29vcmRvbm7DqSBwYXIgTW1lIEQuIFlhZXRtYW4tQmVydGhlbG90IGV0IEcuIEphcnJ5IChTb2Npw6l0w6kgZCdFdHVkZSBPcm5pdGhvbG9naXF1ZSBkZSBGcmFuY2UpLiBBdSAwMS8wMS8yMDAyLCBsYSBiYXNlIGNvbnRpZW50IGVudmlyb24gMSA2MDMgNTEyIGRvbm7DqWVzLiBDZWxsZXMtY2kgY291dnJlbnQgbGVzIDQgaGl2ZXJzIGRlIDE5NzctMTk3OCDDoCAxOTgwLTE5ODEgw6AgcmFpc29uIGRlIDggZMOpY2FkZXMgcGFyIGhpdmVyLiBEb25uw6llcyBlc3NlbnRpZWxsZXMgKGVzcMOoY2UsIGxpZXUsIHDDqXJpb2RlKSwgY2xhc3NlcyBkJ2Fib25kYW5jZS4gTGUgbGlldVxuZXN0IGRvbm7DqSBzb3VzIGxhIGZvcm1lIGQndW5lIG1haWxsZSBkZSA0IGTDqWNpZ3JhZGVzIHggMiBkw6ljaWdyYWRlcyAoZMOpY291cGFnZSBkZXMgY2FydGVzIElHTiAxLzUwIDAwMGUpLiIsInR5cGUiOiJPQ0NVUlJFTkNFIn0seyJrZXkiOiJjNTVjZjI4Yy04ZWQzLTQzY2QtOTE0Yy04YThiN2I0YjlkZjAiLCJ0aXRsZSI6IkZsb3JhIG9mIFdvcmNlc3RlcnNoaXJlIiwiZGVzY3JpcHRpb24iOiJWYXNjdWxhciBwbGFudHMgdGhyb3VnaG91dCB0aGUgY291bnR5IiwidHlwZSI6Ik9DQ1VSUkVOQ0UifSx7ImtleSI6IjE5NzkwOGQwLTU1NjUtMTFkOC1iMjkwLWI4YTAzYzUwYTg2MiIsInRpdGxlIjoiRmlzaGJhc2UiLCJkZXNjcmlwdGlvbiI6IkZpc2hiYXNlIG9jY3VycmVuY2VzIGhvc3RlZCBieSBHQklGLVN3ZWRlbiIsInR5cGUiOiJPQ0NVUlJFTkNFIn0seyJrZXkiOiJjMWExM2JmMC0wYzcxLTExZGQtODRkNC1iOGEwM2M1MGE4NjIiLCJ0aXRsZSI6IkJvdGFueSAoVVBTKSIsImRlc2NyaXB0aW9uIjoiRGF0YWJhc2Ugb2YgdGhlIGJvdGFueSBjb2xsZWN0aW9uIG9mIHRoZSBNdXNldW0gb2YgRXZvbHV0aW9uIGluIFVwcHNhbGEuIiwidHlwZSI6Ik9DQ1VSUkVOQ0UifSx7ImtleSI6ImRlZThlZGM0LWIxOWEtMTFlMi04ODZkLTAwMTQ1ZWI0NWU5YSIsInRpdGxlIjoiRmxvcmlzdGljIERhdGFiYXNlcyBvZiBNZWNrbGVuYnVyZy1Qb21lcmFuaWEgLSBIaWdoZXIgUGxhbnRzIiwiZGVzY3JpcHRpb24iOiJCYXNlZCBvbiB0aGUgZmxvcmlzdGljIHN1cnZleSBvZiBFYXN0ZXJuIEdlcm1hbnkgKEJlbmtlcnQgZXQgYWwuIDE5OTYpIGEgZGlzdHJpYnV0aW9uIGRhdGFiYXNlIG9mIGhpZ2hlciBwbGFudHMgaW4gTWVja2xlbmJ1cmctVm9ycG9tbWVybiBoYXMgYmVlbiBtYW5hZ2VkIGluIHRoZSBCb3RhbmljYWwgSW5zdGl0dXRlIG9mIEJvdGFueSBhbmQgTGFuZHNjYXBlIEVjb2xvZ3kgYXQgdGhlIFVuaXZlcnNpdHkgb2YgR3JlaWZzd2FsZC4gT24gdGhlIG9jY2FzaW9uIG9mIHRoZSBOZXcgY3JpdGljYWwgRmxvcmEgb2YgTWVja2xlbmJ1cmctVm9ycG9tbWVybiAoSGVua2VyICYgQmVyZyAyMDA1KSBhIGNvbXByZWhlbnNpdmUgZWRpdCBoYXMgYmVlbiBkb25lLiBVc2VyIGlucHV0IGlzIHBvc3NpYmxlIGF0IHRoZSB3ZWJzaXRlIGh0dHA6Ly93d3cuZmxvcmEtbXYuZGUuIiwidHlwZSI6Ik9DQ1VSUkVOQ0UifSx7ImtleSI6ImY2MGUzMWE1LWRjMTItNDRjMS04MzU4LTA5OGYxMzFjZDE0MSIsInRpdGxlIjoiV2Vsc2ggQlNCSSBkYXRhIChleC1WUERCIGRhdGFzZXQpIGF0IGhlY3RhZCByZXNvbHV0aW9uIiwidHlwZSI6Ik9DQ1VSUkVOQ0UifSx7ImtleSI6ImNjODg1ZTc4LTBmYWUtNDlhMy05YzZkLTkzYWM5MGRlYmQ2OCIsInRpdGxlIjoiRmlubmlzaCBGbG9yaXN0aWMgRGF0YWJhc2UgKExpdGVyYXR1cmUgU291cmNlcykiLCJkZXNjcmlwdGlvbiI6IkZpbm5pc2ggZmxvcmlzdGljIGRhdGEgZnJvbSBwdWJsaWNhdGlvbnMuIiwidHlwZSI6Ik9DQ1VSUkVOQ0UifSx7ImtleSI6Ijg1ODE4YWVhLWY3NjItMTFlMS1hNDM5LTAwMTQ1ZWI0NWU5YSIsInRpdGxlIjoiVGhlIFN5c3RlbS13aWRlIEluZm9ybWF0aW9uIE5ldHdvcmsgZm9yIEdlbmV0aWMgUmVzb3VyY2VzIChTSU5HRVIpIiwiZGVzY3JpcHRpb24iOiJUaGUgU3lzdGVtLXdpZGUgSW5mb3JtYXRpb24gTmV0d29yayBmb3IgR2VuZXRpYyBSZXNvdXJjZXMgKFNJTkdFUikgaXMgYW4gaW5mb3JtYXRpb24gZXhjaGFuZ2UgbmV0d29yayBvZiB0aGUgRnV0dXJlIEhhcnZlc3QgQ2VudHJlcyBvZiB0aGUgQ29uc3VsdGF0aXZlIEdyb3VwIG9uIEludGVybmF0aW9uYWwgQWdyaWN1bHR1cmFsIFJlc2VhcmNoIChDR0lBUikgYW5kIGFzc29jaWF0ZWQgcGFydG5lcnMuIiwidHlwZSI6Ik9DQ1VSUkVOQ0UifSx7ImtleSI6IjdmOWViNjIyLWMwMzYtNDRjNi04YmU5LTU3OTNlYWExZmExZSIsInRpdGxlIjoiV2F0ZXJ2b2dlbHMgLSBXaW50ZXJpbmcgd2F0ZXJiaXJkcyBpbiBGbGFuZGVycywgQmVsZ2l1bSIsImRlc2NyaXB0aW9uIjoiPHA+V2F0ZXJ2b2dlbHMgLSBXaW50ZXJpbmcgd2F0ZXJiaXJkcyBpbiBGbGFuZGVycywgQmVsZ2l1bSBpcyBhIHNwZWNpZXMgb2NjdXJyZW5jZSBkYXRhc2V0IHB1Ymxpc2hlZCBieSB0aGUgUmVzZWFyY2ggSW5zdGl0dXRlIGZvciBOYXR1cmUgYW5kIEZvcmVzdCAoSU5CTykuIFRoZSBkYXRhc2V0IGNvbnRhaW5zIG1vcmUgdGhhbiA3NSwwMDAgYmlyZCBjb3VudHMsIGNvdmVyaW5nIG92ZXIgNjAwLDAwMCBvYnNlcnZhdGlvbnMgYW5kIDM1IG1pbGxpb24gaW5kaXZpZHVhbHMgZm9yIHRoZSBwZXJpb2QgMTk5MS0yMDEzLiBJdCBpbmNsdWRlcyBpbmZvcm1hdGlvbiBvbiAxNzAgc3BlY2llcyBpbiBuZWFybHkgMSwyMDAgd2V0bGFuZCBzaXRlcy4gVGhlIGFpbSBvZiB0aGVzZSBiaXJkIGNvdW50cyBpcyB0byBnYXRoZXIgaW5mb3JtYXRpb24gb24gdGhlIHNpemUsIGRpc3RyaWJ1dGlvbiBhbmQgbG9uZyB0ZXJtIHRyZW5kcyBvZiB3aW50ZXJpbmcgd2F0ZXJiaXJkIHBvcHVsYXRpb25zIGluIEZsYW5kZXJzLiBUaGVzZSBkYXRhIGFyZSBhbHNvIHVzZWQgdG8gYXNzZXNzIHRoZSBpbXBvcnRhbmNlIG9mIGluZGl2aWR1YWwgc2l0ZXMgZm9yIHdhdGVyYmlyZHMsIHVzaW5nIHF1YW50aXRhdGl2ZSBjcml0ZXJpYS4gRnVydGhlcm1vcmUsIHRoZSB3YXRlcmJpcmQgY291bnRzIGNvbnRyaWJ1dGUgdG8gaW50ZXJuYXRpb25hbCBtb25pdG9yaW5nIHByb2dyYW1zLCBzdWNoIGFzIHRoZSBJbnRlcm5hdGlvbmFsIFdhdGVyYmlyZCBDZW5zdXMgKGNvb3JkaW5hdGVkIGJ5IFdldGxhbmRzIEludGVybmF0aW9uYWwpIGFuZCBmdWxmaWwgc29tZSBvZiB0aGUgb2JqZWN0aXZlcyBvZiB0aGUgRXVyb3BlYW4gQmlyZCBEaXJlY3RpdmUsIHRoZSBSYW1zYXIgQ29udmVudGlvbiwgYW5kIHRoZSBBZ3JlZW1lbnQgb24gdGhlIENvbnNlcnZhdGlvbiBvZiBBZnJpY2FuLUV1cmFzaWFuIE1pZ3JhdG9yeSBXYXRlcmJpcmRzIChBRVdBKS4gVGhlIGRhdGEgYXJlIHJlbGVhc2VkIGluIGJ1bGsgYXMgb3BlbiBkYXRhLiBTZWUgdGhlIGRhdGFzZXQgbWV0YWRhdGEgb3IgdGhlIHB1YmxpY2F0aW9uIGZvciBjb250YWN0IGluZm9ybWF0aW9uLCBzY29wZSBhbmQgbWV0aG9kb2xvZ3kuIElzc3VlcyB3aXRoIHRoZSBkYXRhc2V0IGNhbiBiZSByZXBvcnRlZCBhdCBodHRwczovL2dpdGh1Yi5jb20vTGlmZVdhdGNoSU5CTy9kYXRhLXB1YmxpY2F0aW9uL3RyZWUvbWFzdGVyL2RhdGFzZXRzL3dhdGVydm9nZWxzLW9jY3VycmVuY2VzPC9wPlxuPHA+VGhlIGZvbGxvd2luZyBpbmZvcm1hdGlvbiBpcyBub3QgaW5jbHVkZWQgaW4gdGhpcyBkYXRhc2V0IGFuZCBhdmFpbGFibGUgdXBvbiByZXF1ZXN0OiByb29zdCBzaXRlIGNvdW50cywgY291bnRzIGZyb20gaGlzdG9yaWNhbCAoaW5hY3RpdmUpIGxvY2F0aW9ucy48L3A+XG48cD5UbyBhbGxvdyBhbnlvbmUgdG8gdXNlIHRoaXMgZGF0YXNldCwgd2UgaGF2ZSByZWxlYXNlZCB0aGUgZGF0YSB0byB0aGUgcHVibGljIGRvbWFpbiB1bmRlciBhIENyZWF0aXZlIENvbW1vbnMgWmVybyB3YWl2ZXIgKGh0dHA6Ly9jcmVhdGl2ZWNvbW1vbnMub3JnL3B1YmxpY2RvbWFpbi96ZXJvLzEuMC8pLiBXZSB3b3VsZCBhcHByZWNpYXRlIGhvd2V2ZXIsIGlmIHlvdSByZWFkIGFuZCBmb2xsb3cgdGhlc2Ugbm9ybXMgZm9yIGRhdGEgdXNlIChodHRwOi8vd3d3LmluYm8uYmUvZW4vbm9ybXMtZm9yLWRhdGEtdXNlKSBhbmQgcHJvdmlkZSBhIGxpbmsgdG8gdGhlIG9yaWdpbmFsIGRhdGFzZXQgKGh0dHBzOi8vZG9pLm9yZy8xMC4xNTQ2OC9sajB1ZHEpIHdoZW5ldmVyIHBvc3NpYmxlLiBJZiB5b3UgdXNlIHRoZXNlIGRhdGEgZm9yIGEgc2NpZW50aWZpYyBwYXBlciwgcGxlYXNlIGNpdGUgdGhlIGRhdGFzZXQgZm9sbG93aW5nIHRoZSBhcHBsaWNhYmxlIGNpdGF0aW9uIG5vcm1zIGFuZC9vciBjb25zaWRlciB1cyBmb3IgY28tYXV0aG9yc2hpcC4gV2UgYXJlIGFsd2F5cyBpbnRlcmVzdGVkIHRvIGtub3cgaG93IHlvdSBoYXZlIHVzZWQgb3IgdmlzdWFsaXplZCB0aGUgZGF0YSwgb3IgdG8gcHJvdmlkZSBtb3JlIGluZm9ybWF0aW9uLCBzbyBwbGVhc2UgY29udGFjdCB1cyB2aWEgdGhlIGNvbnRhY3QgaW5mb3JtYXRpb24gcHJvdmlkZWQgaW4gdGhlIG1ldGFkYXRhLCBvcGVuZGF0YUBpbmJvLmJlIG9yIGh0dHBzOi8vdHdpdHRlci5jb20vTGlmZVdhdGNoSU5CTy48L3A+IiwidHlwZSI6Ik9DQ1VSUkVOQ0UifSx7ImtleSI6IjgxODZiMGMwLTkyNWUtMTFkYS04OTAwLWI4YTAzYzUwYTg2MiIsInRpdGxlIjoiUmluZ2luZyBEYXRhIGZyb20gdGhlIEJpcmQgTWlncmF0aW9uIFJlc2VhcmNoIFN0YXRpb24sIFVuaXZlcnNpdHkgb2YgR2RhxYRzayIsImRlc2NyaXB0aW9uIjoiUmluZ2luZyBkYXRhIChtYWlubHkgcGFzc2VyaW5lcykgaGFzIGJlZW4gY29sbGVjdGVkIGF0IHJpbmdpbmcgc3RhdGlvbnMgaW4gTm9ydGhlcm4gUG9sYW5kIHNpbmNlIDE5NjEuIFRoZSBkYXRhYmFzZSBpcyBzdGlsbCB1bmRlciBkZXZlbG9wbWVudC4iLCJ0eXBlIjoiT0NDVVJSRU5DRSJ9LHsia2V5IjoiYzg2ODFjYzItOWQwYS00YzVmLWI2MjAtNWM3NTNhYmZlMmJjIiwidGl0bGUiOiJOTU5IIFBhbGVvYmlvbG9neSBTcGVjaW1lbiBSZWNvcmRzIiwiZGVzY3JpcHRpb24iOiJQdWJsaWMgcmVjb3JkcyBmcm9tIHRoZSBEZXBhcnRtZW50IG9mIFBhbGVvYmlvbG9neSwgTmF0aW9uYWwgTXVzZXVtIG9mIE5hdHVyYWwgSGlzdG9yeSwgU21pdGhzb25pYW4gSW5zdGl0dXRpb24uIFRoZXNlIGRhdGEgY292ZXIgYWNjZXNzaW9uZWQgc3BlY2ltZW5zIHJlcHJlc2VudGluZyBmb3NzaWwgaW52ZXJ0ZWJyYXRlcywgdmVydGVicmF0ZXMsIGFuZCBwbGFudHMgZnJvbSBhbGwgb3ZlciB0aGUgd29ybGQgYW5kIGluY2x1ZGUgbW9yZSB0aGFuIDEzOSwwMDAgcGFsZW9iaW9sb2dpY2FsIHR5cGUgc3BlY2ltZW4gcmVjb3Jkcy4iLCJ0eXBlIjoiT0NDVVJSRU5DRSJ9LHsia2V5IjoiNjg1MTMzNzUtM2FhNS00ZjZmLTk5NzUtZDk3ZDU2YzIxZDYxIiwidGl0bGUiOiJJbGxpbm9pcyBOYXR1cmFsIEhpc3RvcnkgU3VydmV5IEluc2VjdCBDb2xsZWN0aW9uIiwiZGVzY3JpcHRpb24iOiJUaGUgaW5zZWN0IGNvbGxlY3Rpb24gYXQgdGhlIFN1cnZleSBub3cgaG91c2VzIG92ZXIgNiwwMDAsMDAwIGN1cmF0ZWQgc3BlY2ltZW5zLiBUaGUgZ3Jvd3RoIGFuZCB3aWRlLXJhbmdpbmcgc2NvcGUgb2YgdGhpcyBjb2xsZWN0aW9uIGNhbiBiZSBjcmVkaXRlZCB0byB0aGUgZGl2ZXJzZSBpbnRlcmVzdHMgb2YgdGhlIHN5c3RlbWF0aXN0cyB3aG8gaGF2ZSBzcGVudCBhbGwgb3IgcGFydCBvZiB0aGVpciBjYXJlZXIgYXQgdGhlIFN1cnZleS4gU2NpZW50aXN0cyBzdWNoIGFzIFN0ZXBoZW4gQS4gRm9yYmVzLCB0aGUgZmlyc3QgRGlyZWN0b3Igb2YgdGhlIFN0YXRlIExhYm9yYXRvcnkgYW5kIENoaWVmIG9mIHRoZSBOYXR1cmFsIEhpc3RvcnkgU3VydmV5OyBUaGVvZG9yZSBGcmlzb24sIHdobyBzdWNjZWVkZWQgRm9yYmVzOyBhbmQgSC4gSC4gUm9zcywgd2hvIGRpcmVjdGVkIHRoZSBpbnRlbnNlIHN5c3RlbWF0aWNzIHN0dWRpZXMgb2YgdGhlIGZhdW5pc3RpYyBzZWN0aW9uIGZvciA0MCB5ZWFycywgcGxhY2VkIGNvbnNpZGVyYWJsZSBlbXBoYXNpcyBvbiBlbmxhcmdpbmcgdGhlIGluc2VjdCBjb2xsZWN0aW9uLiBUaGVzZSBpbnNlY3RzIGRvY3VtZW50IHRoZSBjaGFuZ2luZyBsYW5kc2NhcGUgYW5kIGVudmlyb25tZW50YWwgY29uZGl0aW9ucyBvZiB0aGUgd29ybGQuXG5cblRoZSBJTkhTIGluc2VjdCBjb2xsZWN0aW9uIGlzIG9uZSBvZiB0aGUgbGFyZ2VzdCBpbiBOb3J0aCBBbWVyaWNhLiBUaGUgbW9zdCByZWNlbnQgc2l6ZSBlc3RpbWF0ZSB3YXMgZG9uZSBpbiAxOTkyLiBUaGUgaGVhdnkgY29uY2VudHJhdGlvbiBvZiBzcGVjaW1lbnMgZnJvbSB0aGUgbGFzdCB0aGlyZCBvZiB0aGUgMTgwMHMgYWxzbyBtYWtlcyB0aGlzIG9uZSBvZiBOb3J0aCBBbWVyaWNhJ3Mgb2xkZXN0IGluc2VjdCBhbmQgcmVsYXRlZCBhcnRocm9wb2QgY29sbGVjdGlvbnMuIFxuXG5UaGUgSU5IUyBJbnNlY3QgQ29sbGVjdGlvbiBpbmNsdWRlcyBtb3JlIHRoYW4gMTMsMDAwIHByaW1hcnkgdHlwZXMgKHN5bnR5cGVzIGluY2x1c2l2ZSkuIEJlY2F1c2Ugb2Ygc2l6ZSwgaGlzdG9yaWNhbCBob2xkaW5ncywgYW5kIHdpZGUgYnJlYWR0aCBvZiBjb3ZlcmFnZSBpbiBjZXJ0YWluIGdyb3VwcywgdGhlIGNvbGxlY3Rpb24gaXMgYW4gaW1wb3J0YW50IG5hdGlvbmFsIGFuZCB3b3JsZHdpZGUgcmVzb3VyY2UuIiwidHlwZSI6Ik9DQ1VSUkVOQ0UifSx7ImtleSI6IjNkYzJhN2Y2LThkM2EtNDIyOC1hNjljLWVjNzk1MDI4ZmUyZiIsInRpdGxlIjoiTWlzY2VsbGFuZW91cyByZWNvcmRzIGhlbGQgb24gdGhlIENvZm5vZCBkYXRhYmFzZSIsImRlc2NyaXB0aW9uIjoiVGhpcyBkYXRhc2V0IGluY2x1ZGVzIGFsbCByZWNvcmRzIGhlbGQgb24gdGhlIENvZm5vZCBkYXRhYmFzZSwgd2l0aCBzb21lIGV4Y2VwdGlvbnMuIFJlY29yZHMgb2YgSU5OUyBhcmUgc3VwcGxpZWQgaW4gYSBzZXBhcmF0ZSBkYXRhc2V0LiBPbmx5IHJlY29yZHMgd2hlcmUgc3BlY2lmaWMgcGVybWlzc2lvbnMgaGF2ZSBiZWVuIG9idGFpbmVkIGZyb20gdGhlIGRhdGFzZXQgc3VwcGxpZXIgYXJlIGluY2x1ZGVkLiBXZSBoYXZlIGFsc28gZXhjbHVkZWQgdGhlIGZvbGxvd2luZyByZWNvcmRzOiBhbnkgd2hpY2ggd2UgYmVsaWV2ZSB0byBiZSBhbHJlYWR5IGhlbGQgb24gdGhlIE5CTiBBdGxhczsgYW55IHN1Ym1pdHRlZCB0byB1cyBieSBCaW9sb2dpY2FsIFJlY29yZHMgQ2VudHJlIG9yIGEgTmF0aW9uYWwgU2NoZW1lL1NvY2lldHkvQ29uc2VydmF0aW9uIG9yZ2FuaXNhdGlvbjsgYW5kIGFueSBvd25lZCBieSBOYXR1cmFsIFJlc291cmNlcyBXYWxlcyAoc29tZSBvZiB3aGljaCBhcmUgc3VibWl0dGVkIGJ5IENvZm5vZCB3aXRoaW4gdGhyZWUgc2VwYXJhdGUgZGF0YXNldHMpLiBUaGlzIGRhdGFzZXQgaW5jbHVkZXMgU2Vuc2l0aXZlIHNwZWNpZXMgcmVjb3JkcyAoYXMgZGVzY3JpYmVkIGluIG91ciBEYXRhIFNvdXJjaW5nLCBNYW5hZ2VtZW50IGFuZCBVc2UgcG9saWN5IGF2YWlsYWJsZSBmcm9tIHRoZSBDb2Zub2Qgd2Vic2l0ZSksIGhvd2V2ZXIgdGhleSBhcmUgbm90IHNlbnNpdGl2ZSBhdCB0aGUgcmVzb2x1dGlvbiBzdXBwbGllZCBhbmQgYXMgdGhlaXIgc2l0ZSBuYW1lcyBhbmQgYW55IGF0dGFjaGVkIGNvbW1lbnRzIGhhdmUgYmVlbiByZW1vdmVkLiIsInR5cGUiOiJPQ0NVUlJFTkNFIn0seyJrZXkiOiI3MmI2YmFjNC0zYTkzLTQ5MWItYTkzMS1jYmQwN2JmZjViMzkiLCJ0aXRsZSI6IkRvbm7DqWVzIGRlIGxhIGZsb3JlIGTigJlBbHNhY2UgKFNCQSkiLCJkZXNjcmlwdGlvbiI6Ik9iamVjdGlmOlxuUmFzc2VtYmxlciBsJ2Vuc2VtYmxlIGRlcyBkb25uw6llcyBmbG9yaXN0aXF1ZXMgZCdBbHNhY2UuIE1pc2UgZW4gcGxhY2UgZCd1biBBdGxhcyBldCBkJ3VuIGludmVudGFpcmUgcGVybWFuZW50IGRlIGxhIEZsb3JlXG5cblLDqXNlYXUgZGUgY29sbGVjdGU6XG5NZW1icmVzIGRlIGxhIFNvY2nDqXTDqSBCb3RhbmlxdWUgZCdBbHNhY2UsIHNhaXNpZSBkZXMgdHJhdmF1eCwgcHVibGljYXRpb25zLCByYXBwb3J0cywgcGxhbiBkZSBnZXN0aW9uLCBkb2NvYiwgYW5hbHlzZSBkZSB0b3V0ZXMgbGVzIHB1YmxpY2F0aW9ucyBmbG9yaXN0aXF1ZXMgcsOpZ2lvbmFsZXMsIGV0Yy5cblxuUHVibGljYXRpb25zOlxuQXRsYXMgZGUgbGEgRmxvcmUgZCdBbHNhY2UgOiBodHRwOi8vd3d3LmF0bGFzZmxvcmVhbHNhY2UuY29tL1xuTm9tYnJldXNlcyBwdWJsaWNhdGlvbnMgZGFucyBsZSBCdWxsZXRpbiBkZSBMaWFpc29uIGRlIGxhIFNvY2nDqXTDqSBCb3RhbmlxdWUgZCdBbHNhY2UgOiBodHRwOi8vd3d3LnNiYWxzYWNlLm9yZy9cblxuUHJvdG9jb2xlIGRlIGNvbGxlY3RlIGRlcyBkb25uw6llcyA6IE9ic2VydmF0aW9ucyBkZXMgbWVtYnJlcyBkZSBsYSBTQkEsIHNvcnRpZXMgZGUgdGVycmFpbiwgYmlibGlvZ3JhcGhpZSAocmV2dWVzLCBvdXZyYWdlcywgbcOpbW9pcmVzLCDDqXR1ZGVzLCBtYW51c2NyaXRzLCBldGMuKSwgc2Fpc2llIGRlcyBzcMOpY2ltZW5zIGQnaGVyYmllciAoZS1SZUNvbE5hdCBldCByZWNlbnNlbWVudCBkZXMgaGVyYmllcnMgZCdBbHNhY2UpLCBldGMuIiwidHlwZSI6Ik9DQ1VSUkVOQ0UifSx7ImtleSI6IjQzMDI3MDU0LTM4MTItNDU5OS1iN2JjLWEwMWYxZGY1YjA3MSIsInRpdGxlIjoiRG9ubsOpZXMgT05GIEZhdW5lLUZsb3JlLUZvbmdlIiwiZGVzY3JpcHRpb24iOiJEb25uw6llcyBwYXNzw6llcyAocmVwcmlzZSBiaWJsaW9ncmFwaGllIGV0IGNhcm5ldHMgZGUgdGVycmFpbjsgaW1wb3J0YXRpb25zKSBldCBkb25uw6llcyBhY3R1ZWxsZXMgZGVwdWlzIDIwMDkgKEJETikuIEEgbGEgZm9pcyBkb25uw6llcyBwcm90b2NvbMOpZXMgZXQgZG9ubsOpZXMgXCJvcHBvcnR1bmlzdGVzXCIuXG5BbcOpbGlvcmF0aW9uIGRlIGxhIGNvbm5haXNzYW5jZSBkZXMgdGF4b25zIHByw6lzZW50cyBkYW5zIGxlcyBmb3LDqnRzIHB1YmxpcXVlcyBQb3RlbnRpZWxsZW1lbnQgdG91cyBsZXMgYWdlbnRzIE9ORiwgZW4gcGFydGljdWxpZXIgcsOpc2VhdXggbmF0dXJhbGlzdGVzIGRlIGwnT05GICgyMjAgcGVyc29ubmVzKSBFc3DDqGNlLCBkYXRlLCBvYnNlcnZhdGV1ciwgY29tbXVuZSAvIG1haWxsZSIsInR5cGUiOiJPQ0NVUlJFTkNFIn0seyJrZXkiOiI4NjQ4ZmRiZS1mNzYyLTExZTEtYTQzOS0wMDE0NWViNDVlOWEiLCJ0aXRsZSI6Ikhhd2sgTWlncmF0aW9uIEFzc29jaWF0aW9uIG9mIE5vcnRoIEFtZXJpY2EgLSBIYXdrQ291bnQiLCJ0eXBlIjoiT0NDVVJSRU5DRSJ9LHsia2V5IjoiOTYxYTVjZTEtZjg0My00ZTc1LTg2YTYtNTFhYTk1OWZjMTJjIiwidGl0bGUiOiJQbGFudCIsImRlc2NyaXB0aW9uIjoi7IS46rOE64qUIOyngOq4iCDsg53rrLwg64uk7JaR7ISxIOuztOyghOydmCDspJHsmpTshLHsl5Ag64yA7ZWY7JesIOyDiOuhnOyatCDsnbjsi53qs7wg67OA7ZmU66W8IOunnuqzoCDsnojsnLzrqbAg7J2466WY7IOd7KG07J2EIOychO2VtOyEnCDsi53rrLzsnZgg7IS46rOE66W8IOyYqOyghO2VmOqyjCDrs7TsoITtlbTslbwg7ZWc64uk64qUIOygiOuMgOyggeyduCDqs7zsoJzrpbwg7ZW06rKw7ZWY6riwIOychO2VmOyXrCDrhbjroKXtlZjqs6Ag7J6I7Iq164uI64ukLiDsmrDrpqzrgpjrnbzsl5DshJzrj4Qg66eO7J2AIOyImOuqqeybkOqzvCDsi53rrLzsm5Dsl5DshJwg7Iud66y8IOyiheydmCDsiJjsp5Hqs7wg67O07KCE7J2EIOychO2VnCDtmZzrj5nqs7wg7Jew6rWs66W8IOyngOyGjeyggeycvOuhnCDsiJjtlontlZjqs6Ag7J6I7Jy866mwLCDsi53rrLzsnpDsm5DsnZgg67O07KCE7J2EIOychO2VnCDsoJXssYXqs7wg6rOE7ZqN7J2EIOyImOumve2VmOqzoCDsnojsirXri4jri6QuIFxuwrcg7IKw66a87LKt7JeQ7ISc64qUIOq1reqwgOyggSDsi53rrLzsnpDsm5DsnZgg67O07KCE7J2EIOychO2VnCDrp47snYAg6rO87KCc65OkIOykkeyXkOyEnCDsi53rrLwg7KKF7J2YIOyEnOyLneyymOyXkCDrjIDtlZwg67O07KCE7Iuk7YOc66W8IOuqqOuLiO2EsOungSDtlZjquLAg7JyE7ZWcIOOAjOq1reqwgCDsi53rrLzsnpDsm5DsoJXrs7Qg6rSA66as7Iuc7Iqk7YWc44CN7J2EIOq1rOy2le2VmOqzoCDsnojsirXri4jri6QuIFxuwrcgXCLtlZzqta3snZgg7Iud66y87J6Q7JuQXCLtmYjtjpjsnbTsp4DripQg44CM6rWt6rCAIOyLneusvOyekOybkOygleuztCDqtIDrpqzsi5zsiqTthZzjgI3sl5DshJwg6rWs7LaV65CY64qUIOygleuztCDspJHsl5DshJwg7J2867aA66W8IOydvOuwmOyduOyXkOqyjCDsoJzqs7XtlZjripQg67aA67aE6rO8IOuEpO2KuOybjO2BrCDqtazstpXsnYQg7JyE7ZWcIOyekOujjOyImOynkSDssrTqs4Qo6rWt6rCAIOyLneusvOyekOybkOygleuztCDqtIDrpqzsi5zsiqTthZwg7J247Yq4652864S3KSDrtoDrtoTsnLzroZwg6rWs67aE65CY7Ja0IOq1reqwgOyggeyduCDsi53rrLwg67O07KCE7Iuk7YOcIOykkeyLrOydmCDsoJXrs7TroZwg7Jq07JiB65CgIOyYiOyglSDsnoXri4jri6QuIFxuIFxuIDIwMTDrhYTquYzsp4Ag6rWs7LaV7JmE66OM66W8IOuqqe2RnOuhnCDtlZjqs6Ag7J6I64qU44CM6rWt6rCAIOyLneusvOyekOybkOygleuztCDqtIDrpqzsi5zsiqTthZzjgI3snYAg66eO7J2AIOyekOujjOulvCDsoJzqs7XtlZjripQg64yA7ZWZ7J2YIOyLneusvCDtkZzrs7jqtIDqs7wg7IiY66qp7JuQLCDsi53rrLzsm5Dsl5DshJzsnZgg7KCB6re57KCB7J24IO2YkeyhsOyXkCDsnZjtlZjsl6wg64uo6rOE67OE66GcIOy2lOynhOuQmOqzoCDsnojsirXri4jri6QuIOyLnOyKpO2FnCDqtazstpXsnbQg7JmE66OM65CY7KeAIOyViuydgCDsg4HtmansnbTsp4Drp4wg7KCEIOq1reuvvOydtCDtlajqu5gg6rWt6rCAIOyLneusvOyekOybkCDrs7TsoITsl5Ag64+Z7LC47ZWY6rOgIO2VqOq7mCDrsJzsoITsi5ztgqTquLAg7JyE7ZWY7JesIOy2lOynhCDqs7zsoJXqs7wg6rWs7LaV64K07Jqp7JeQIOuMgO2VnCDtmYjtjpjsnbTsp4Drpbwg6rO16rCcIO2VqeuLiOuLpC4gXG4gXG4g7KeA7IaN7KCB7Jy866GcIOq1rOy2leuQoCDsoJXrs7Trpbwg7J207Jqp7ZWY7Iuc66m07IScIO2aqOycqOyggSDtmZzsmqnrsKnslYjsl5Ag64yA7ZWcIOydmOqyrOydhCDquLDtg4Qg7JeG7J20IOyjvOyLnOqzoCDqta3rpr3siJjrqqnsm5Ag7IOd66y87ZGc67O46rO8IOydtOuzkeyynCDrsJXsgqwsIOyCsOumvOyyrSDsoJXrs7TthrXqs4Tqs7wg6rmA7LCs7ZqMIOyEnOq4sOq0gOqzvCDtmJHsnZjtlZjsl6wg7KO87Iuc66m0IOyEseqzteyggeyduCDqta3qsIAg7Iud66y87J6Q7JuQ7KCV67O0IOq0gOumrOyLnOyKpO2FnOydtCDqtazstpXrkKAg7IiYIOyeiOuPhOuhnSDstZzshKDsnYQg64uk7ZWY6rKg7Iq164uI64ukIiwidHlwZSI6Ik9DQ1VSUkVOQ0UifSx7ImtleSI6IjUyMzU5MGYwLWY4N2QtNGZlZC1hY2QyLTY4NzNiZGNlMGE4YyIsInRpdGxlIjoiUkVDT1JEIEF2ZXMgRGF0YSIsImRlc2NyaXB0aW9uIjoiQWxsIFJFQ09SRCBjb3ZlcmFnZSBhcmVhIEF2ZXMgZGF0YSIsInR5cGUiOiJPQ0NVUlJFTkNFIn0seyJrZXkiOiI4MmFkNGU0ZS1mNzYyLTExZTEtYTQzOS0wMDE0NWViNDVlOWEiLCJ0aXRsZSI6IlN3aXNzIE5hdGlvbmFsIEJ1dHRlcmZsaWVzIERhdGFiYW5rIiwiZGVzY3JpcHRpb24iOiJEYXRhYmFzZSB3aXRoIHJlY29yZHMgb2YgdmFyaW91cyBvcmlnaW5zLCBhc3NlbWJsaW5nIGxpdGVyYXR1cmUgZGF0YSwgZGlnaXRpemVkIGNvbGxlY3Rpb24gZGF0YSBhbmQgcmVjZW50IG9ic2VydmF0aW9uYWwgcmVjb3JkcyBwcm92aWRlZCB0byB0aGUgQ1NDRi4gUHJvcG9ydGlvbmFsbHksIHRoaXMgbGF0dGVyIHJlc291cmNlIHJlcHJlc2VudHMgdGhlIG1vc3QgaW1wb3J0YW50IG9uZSBhbmQgaXMgdGhlIHJlc3VsdCBvZiB0aGUgbmV0d29yayBhY3Rpdml0aWVzIG9mIHZvbHVudGFyeSBjb2xsYWJvcmF0b3JzLCBpbnRlcm5hbGx5IG9wZXJhdGVkIHByb2plY3RzIChCaW9kaXZlcnNpdHkgTW9uaXRvcmluZyBaMy1aNCwgUmVkIExpc3QgUHJvamVjdCkgYW5kIGltcGFjdCBzdHVkaWVzLCBidXQgYWxzbyBpbmNsdWRlcyBkYXRhIGZyb20gUGhEIGFuZCBtYXN0ZXIgdGhlc2VzLiBUaGUgZGF0YSBjb3ZlciBhIHBlcmlvZCBmcm9tIDE4MzUgdG8gb3VyIGRheXMuIFJlY29yZHMgaGF2ZSBiZWVuIHJldmlld2VkIGFjY29yZGluZyB0byBhIHN0YW5kYXJkaXplZCB2YWxpZGF0aW9uIHByb2NlZHVyZSAoaHR0cDovL3d3dy5jc2NmLmNoL3BhZ2UyNDE2NF9lbi5odG1sKS4gRGlnaXRpemVkIGNvbGxlY3Rpb24gZGF0YSBmb3Igc3BlY2ltZW5zIGhvc3RlZCBpbiBTd2lzcyBpbnN0aXR1dGlvbnMgaGF2ZSBiZWVuIGV4Y2x1ZGVkIGZyb20gdGhpcyByZXNvdXJjZSBhcyBhbHJlYWR5IHBhcnQgb2YgdGhlIGNvcnJlc3BvbmRpbmcgaW5zdGl0dXRpb25hbCBkYXRhc2V0LiBOb21lbmNsYXR1cmUgaGFzIGJlZW4gcmV2aWV3ZWQgd2l0aGluIHRoZSBTd2lzcyBwYXJ0aWNpcGF0aW9uIGluIHRoZSBQYW4tRXVyb3BlYW4gU3BlY2llcyBEaXJlY3RvcnkgSW5mcmFzdHJ1Y3R1cmUgUEVTSSAoRmF1bmEgRXVyb3BhZWEpLiIsInR5cGUiOiJPQ0NVUlJFTkNFIn0seyJrZXkiOiIxMGU0NGM0OC0wODM5LTRhMjAtODZkNS1mMGUyM2FlMmUzNjYiLCJ0aXRsZSI6IkJlZSBCaW9sb2d5IGFuZCBTeXN0ZW1hdGljcyBMYWJvcmF0b3J5IiwiZGVzY3JpcHRpb24iOiJUaGUgUG9sbGluYXRpbmcgSW5zZWN0cyAtLSBCaW9sb2d5LCBNYW5hZ2VtZW50IGFuZCBTeXN0ZW1hdGljcyBSZXNlYXJjaCBVbml0IChQSVJVKSB3YXMgZm91bmRlZCBpbiB0aGUgbGF0ZSAxOTQwcyBhcyBwYXJ0IG9mIHRoZSBhbGZhbGZhIHNlZWQgcHJvZHVjdGlvbiB1bml0LiAgV2UgZm9jdXMgcHJpbWFyaWx5IG9uIHBvbGxpbmF0aW9uIHJlc2VhcmNoIHdpdGggYmVlcy5UaGUgbWlzc2lvbiBvZiB0aGUgUG9sbGluYXRpbmcgSW5zZWN0IC0gQmlvbG9neSwgTWFuYWdlbWVudCBhbmQgU3lzdGVtYXRpY3MgUmVzZWFyY2ggVW5pdCBpcyB0aGUgZGV2ZWxvcG1lbnQgb2Ygbm9uLUFwaXMgYmVlcywgZm9yIGV4YW1wbGUgdGhlIGFsZmFsZmEgbGVhZmN1dHRpbmcgYmVlIGFuZCBibHVlIG9yY2hhcmQgYmVlLCBhcyBjcm9wIHBvbGxpbmF0b3JzLiAgUmVzZWFyY2ggZW1waGFzaXMgYXJlYXMgaW5jbHVkZSB0aGUgZGV2ZWxvcG1lbnQgYW5kIGltcHJvdmVtZW50IG9mIG1hbmFnZW1lbnQgc3lzdGVtcyBmb3IgYmVlIHBvcHVsYXRpb25zLCBiaW9sb2dpY2FsIHN0dWRpZXMgb2YgYmVlcywgcGxhbnQtcG9sbGluYXRpb24gc3lzdGVtcywgYW5kIGJlZSBiaW9zeXN0ZW1hdGljcy4gIENyb3NzLXBvbGxpbmF0ZWQgY3JvcHMgbm90IGVmZmVjdGl2ZWx5IHBvbGxpbmF0ZWQgYnkgaG9uZXkgYmVlcyBoYXZlIGJlZW4gdGFyZ2V0ZWQgZm9yIGltcHJvdmVkIHBvbGxpbmF0aW9uIG1hbmFnZW1lbnQsIGFuZCB0aGUgY2FuZGlkYWN5IG9mIHNlbGVjdGVkIHBvbGxpbmF0b3Igc3BlY2llcyBjb250aW51ZXMgdG8gYmUgZXZhbHVhdGVkLiAgQ3VycmVudCByZXNlYXJjaCBvbiBlc3RhYmxpc2hlZCBzcGVjaWVzLCBsaWtlIHRoZSBhbGZhbGZhIGxlYWZjdXR0aW5nIGJlZSBhbmQgYmx1ZSBvcmNoYXJkIGJlZSwgaXMgZGlyZWN0ZWQgdG93YXJkIGRldmVsb3BpbmcgY29udHJvbCBwcm9ncmFtcyBmb3IgcGVzdHMgYW5kIGRpc2Vhc2VzLCBpbXByb3ZpbmcgbWFuYWdlbWVudCB0aGF0IHdpbGwgcmVzdWx0IGluIGJldHRlciBiZWUgaGVhbHRoIGFuZCBkZW1vbnN0cmF0aW5nIHBvbGxpbmF0aW9uIGVmZmljYWN5IGFuZCBpbmNyZWFzZWQgcHJvZHVjZXIgcHJvZml0YWJpbGl0eSBvbiAmIzM0O25ldyYjMzQ7IGNyb3BzLiIsInR5cGUiOiJPQ0NVUlJFTkNFIn0seyJrZXkiOiI5MWM0YmI5MC0zNjA4LTQ3ZTYtOTc1Ny0zNjFhNGE3NzI4ZjUiLCJ0aXRsZSI6IkJMUyBMaWNoZW4gRGF0YWJhc2U6IEVuZ2xhbmQgMTY1MC0yMDE2IiwiZGVzY3JpcHRpb24iOiJBIGNvbGxhdGlvbiBvZiB0aGUgYXZhaWxhYmxlIGxpY2hlbiByZWNvcmRzIGZvciBzaXRlcyAoZXhjbHVkaW5nIGNodXJjaGVzIGFuZCBncmF2ZXlhcmRzKSBpbiBFbmdsYW5kIGZyb20gMTY1MCB0byBKYW51YXJ5IDIwMTcsIGZvciBwdXJwb3NlcyBvZiBjb25zZXJ2YXRpb24sIGZ1dHVyZSBtb25pdG9yaW5nIGFuZCByZXNlYXJjaC4gSGFiaXRhdCBhbmQgc3Vic3RyYXRlIGluZm9ybWF0aW9uIGlzIGluY2x1ZGVkIHdoZXJlIGF2YWlsYWJsZS4iLCJ0eXBlIjoiT0NDVVJSRU5DRSJ9LHsia2V5IjoiYTJhYWIwNDAtMDY4MC0xMWRmLTgyM2MtYjhhMDNjNTBhODYyIiwidGl0bGUiOiJOYXRpb25hbCBXZXRsYW5kIEludmVudG9yeSAoTlYpIiwiZGVzY3JpcHRpb24iOiJUaGUgbmF0aW9uYWwgd2V0bGFuZCBpbnZlbnRvcnkgKFZNSSkgaGFzIGZvciAyNSB5ZWFycyBtYWRlIGludmVudG9yaWVzIG9mIFN3ZWRpc2ggd2V0bGFuZHMgdGhhdCBhcmUgc2l0dWF0ZWQgYmVsb3cgdGhlIG1vdW50YWluIHJhbmdlLiBXZXRsYW5kcyBoYXZlIGJlZW4gZGVmaW5lZCBpbiBWTUkgYXM6IFwiTGFuZCB3aGVyZSB3YXRlciwgZm9yIGEgbGFyZ2UgcGFydCBvZiB0aGUgeWVhciwgaXMgY2xvc2UgdG8sIGluIG9yIGFib3ZlIHRoZSBncm91bmQsIGFzIHdlbGwgYXMgdmVnZXRhdGlvbi1jb3ZlcmVkIHdhdGVyIGFyZWFzLiBBdCBsZWFzdCA1MCUgb2YgdGhlIHZlZ2V0YXRpb24gc2hvdWxkIGJlIGh5ZHJvcGhpbGljLCBpLmUuIG1vaXN0dXJlIGxvdmluZywgaW4gb3JkZXIgZm9yIGl0IHRvIGJlIGNhbGxlZCBhIHdldGxhbmQgYXJlYS4gQW4gZXhjZXB0aW9uIGlzIHNvbWV0aW1lcyBkcnktbGFpZCBib3R0b20gYXJlYXMgb2YgbGFrZXMsIHNlYXMgYW5kIHN0cmVhbXMuIFRoZXkgY291bnQgYXMgd2V0bGFuZHMgZXZlbiB0aG91Z2ggdGhleSBsYWNrIHZlZ2V0YXRpb24uIFwiIFxuXG5JbiB0b3RhbCwgVk1JIGhhcyBpbnZlbnRlZCAzNSwwMDAgc2l0ZXMgd2l0aCBhIHRvdGFsIGFyZWEgb2YgNC4zIG1pbGxpb24gaGVjdGFyZXMsIHdoaWNoIGNvcnJlc3BvbmRzIHRvIDEwJSBvZiBTd2VkZW4ncyB0b3RhbCBsYW5kIGFyZWEuIFRoZSBwdXJwb3NlIG9mIHRoZSBpbnZlbnRvcmllcyBoYXMgYmVlbiB0byBjcmVhdGUgYSBrbm93bGVkZ2UgYmFuayBvdmVyIHRoZSBjb3VudHJ5J3Mgd2V0bGFuZHMsIHdoaWNoIGNhbiBiZSB1c2VkIGZvciBlbnZpcm9ubWVudGFsIG1vbml0b3JpbmcgYW5kIG5hdHVyYWwgcmVzb3VyY2UgcGxhbm5pbmcuIEJ5IGV4YW1pbmluZyBob3cgYW5kIGluIHdoYXQgcmFuZ2Ugd2V0bGFuZHMgYXJlIGFmZmVjdGVkIGJ5IGh1bWFuIGFjdGl2aXRpZXMgYW5kIGJ5IGlkZW50aWZ5aW5nIHZhbHVhYmxlIHdldGxhbmRzLCB0aGVpciB2YWx1ZXMgY2FuIGJlIHByZXNlcnZlZCBmb3IgdGhlIGZ1dHVyZS4gSW52ZW50b3J5IGRhdGEgd2FzIGFsc28gcGxhbm5lZCB0byBwcm92aWRlIGEgYmFzaXMgZm9yIHRoZSBhdXRob3JpdGllcycgaGFuZGxpbmcgb2YgZS5nLiBsYW5kIGRyYWluYWdlIGFuZCBsb2dnaW5nLlxuXG5Gb3IgcHJhY3RpY2FsIHJlYXNvbnMgaW52ZW50b3JpZXMgaGFzIG9ubHkgYmVlbiBwZXJmb3JtZWQgYXQgbGFyZ2VyIHdldGxhbmRzIGJlbG93IHRoZSBtb3VudGFpbiByYW5nZXMuIEluIG5vcnRoZXJuIFN3ZWRlbiBpbnZlbnRvcmllcyB0b29rIHBsYWNlIGF0IGFsbCB3ZXRsYW5kcyBsYXJnZXIgdGhhbiA1MCBoYSBhbmQgaW4gYWxsIHdldGxhbmRzIGluIHNvdXRoZXJuIFN3ZWRlbiB3ZXRsYW5kcyBsYXJnZXIgdGhhbiAxMCBoYS4gQWxsIGludmVudG9yaWVkIHdldGxhbmRzIGhhdmUgYmVlbiBhbmFseXplZCB3aXRoIGFlcmlhbCBwaG90b3MgYW5kIHJlbW90ZSBzZW5zaW5nIGFuZCBoYXMgYmVlbiBjbGFzc2lmaWVkIGFjY29yZGluZyB0byB0aGUgc3RhdHVzIG9mIHRoZSBuYXR1cmUgdmFsdWVzLiBBIHRvdGFsIG9mIDEyJSBvZiB3ZXRsYW5kcyBoYXZlIGFsc28gYmVlbiB2aXNpdGVkIGluIG9yZGVyIHRvIHByb3ZpZGUgZnVydGhlciBrbm93bGVkZ2UuIEJhc2VkIG9uIHRoZSByZW1vdGUgc2Vuc2luZywgYWxsIHdldGxhbmRzIHdlcmUgY2xhc3NpZmllZCBpbnRvIG9uZSBvZiB0aGUgNDcgZGlmZmVyZW50IHdldGxhbmQgdHlwZXMuIEJhc2VkIG9uIHRoZSBzcGF0aWFsIGV4dGVudCBvZiB3ZXRsYW5kIHR5cGVzLCB3ZSBoYXZlIGRpdmlkZWQgU3dlZGVuIGludG8gZml2ZSBkaWZmZXJlbnQgbWFyc2gvYm9nLXJlZ2lvbnM6IEZlbGwgYm9nLCBQYWxzYSBib2csIFN0cmluZyBib2csIFJhaXNlZCBib2cgYW5kIFBpbmUgYm9nL0JlYWNoIHdldGxhbmQgYm9nLiBcblxuVGhlIHJlc3VsdHMgb2YgdGhlIFZNSSBhcmUgcmVndWxhcmx5IHVzZWQgYnkgY291bnR5IGFkbWluaXN0cmF0aXZlIGJvYXJkcyBhbmQgbXVuaWNpcGFsaXRpZXMgYW5kIGhhdmUgYmVlbiBhbiBpbXBvcnRhbnQgdG9vbCBmb3IgbmF0aW9uYWwgcHJvdGVjdGlvbiBvZiB3ZXRsYW5kcy4gVGhlIHJlZ2lvbmFsIGludmVudG9yaWVzIGhhdmUgYmVlbiBtYWRlIGJ5IHRoZSB2YXJpb3VzIGNvdW50eSBhZG1pbmlzdHJhdGl2ZSBib2FyZHMgYW5kIHRoZSBTd2VkaXNoIEVudmlyb25tZW50YWwgUHJvdGVjdGlvbiBBZ2VuY3kgaGFzIGFjdGVkIGFzIGNvb3JkaW5hdG9yIGZvciB0aGUgcHJvamVjdC5cblxuVGhlIGRpZ2l0YWwgZGF0YSBjb250YWlucyB0aGUgZGVsaW1pdGF0aW9uIG9mIHRoZSBWTUkgYXJlYXMsIGEgY2VudHJhbCBjb29yZGluYXRlIGFuZCBhbiBJRCAoTE9JRCkuIFZpYSBJRCwgeW91IGNhbiBleHRyYWN0IGRhdGEgZnJvbSBhY2Nlc3MgZGF0YWJhc2VzIHdpdGggaW5mb3JtYXRpb24gYWJvdXQgc3BlY2llcyBpbnZlbnRvcmllZC4gTW9yZSBpbmZvcm1hdGlvbiBvbiB0aGUgcHJvamVjdCBjYW4gYmUgZm91bmQgYXQgaHR0cDovL3d3dy5uYXR1cnZhcmRzdmVya2V0LnNlL09tLU5hdHVydmFyZHN2ZXJrZXQvUHVibGlrYXRpb25lci9JU0JOLzU5MDAvOTc4LTkxLTYyMC01OTI1LTUvLiIsInR5cGUiOiJPQ0NVUlJFTkNFIn0seyJrZXkiOiJjY2ExM2YyYy0wZDJjLTRjMmYtOTNiOS00NDQ2YzBjYzE2MjkiLCJ0aXRsZSI6IkJ1Z0d1aWRlIC0gSWRlbnRpZmljYXRpb24sIEltYWdlcywgJiBJbmZvcm1hdGlvbiBGb3IgSW5zZWN0cywgU3BpZGVycyAmIFRoZWlyIEtpbiBGb3IgdGhlIFVuaXRlZCBTdGF0ZXMgJiBDYW5hZGEiLCJkZXNjcmlwdGlvbiI6IkJ1Z0d1aWRlIChodHRwOi8vYnVnZ3VpZGUubmV0KSBpcyBhbiBvbmxpbmUgY29tbXVuaXR5IG9mIG5hdHVyYWxpc3RzIHdobyBlbmpveSBsZWFybmluZyBhYm91dCBhbmQgc2hhcmluZyBvYnNlcnZhdGlvbnMgb2YgaW5zZWN0cywgc3BpZGVycywgYW5kIG90aGVyIHJlbGF0ZWQgY3JlYXR1cmVzLiBCdWdHdWlkZSBjb2xsZWN0cyBwaG90b2dyYXBocyBvZiBpbnNlY3RzIGFuZCBvdGhlciBhcnRocm9wb2RzIGZyb20gdGhlIFVuaXRlZCBTdGF0ZXMgYW5kIENhbmFkYSBmb3IgaWRlbnRpZmljYXRpb24gYW5kIHJlc2VhcmNoIGFuZCBzdW1tYXJpemVzIGZpbmRpbmdzIGluIGd1aWRlIHBhZ2VzIGZvciBlYWNoIG9yZGVyLCBmYW1pbHksIGdlbnVzLCBhbmQgc3BlY2llcy4gQnkgY2FwdHVyaW5nIHRoZSBwbGFjZSBhbmQgdGltZSB0aGF0IHN1Ym1pdHRlZCBpbWFnZXMgd2VyZSB0YWtlbiwgQnVnR3VpZGUgY3JlYXRlcyBhIHZpcnR1YWwgaW5zZWN0IGNvbGxlY3Rpb24uIiwidHlwZSI6Ik9DQ1VSUkVOQ0UifSx7ImtleSI6IjI4OWY0YmZjLTQ0NjAtNDNjNC1iZDQzLTUyNDhlMzJmNTNiZSIsInRpdGxlIjoiUkVDT1JEIFZhc2N1bGFyIFBsYW50IERhdGEiLCJkZXNjcmlwdGlvbiI6IkFsbCBSRUNPUkQgY292ZXJhZ2UgYXJlYSBWYXNjdWxhciBQbGFudCBkYXRhLiIsInR5cGUiOiJPQ0NVUlJFTkNFIn0seyJrZXkiOiJlMTEwYmRjZi04MWY2LTRkM2ItYjdlOC1mZTEyZWQ5NGUzZTMiLCJ0aXRsZSI6IlBhcmNfTmF0aW9uYWxfZGVfUG9ydF9Dcm9zXzIwMTdfMTJfMTgiLCJkZXNjcmlwdGlvbiI6IlBhcmMgTmF0aW9uYWwgZGUgUG9ydCBDcm9zIiwidHlwZSI6Ik9DQ1VSUkVOQ0UifSx7ImtleSI6IjgxMzhlYjcyLWY3NjItMTFlMS1hNDM5LTAwMTQ1ZWI0NWU5YSIsInRpdGxlIjoiUkJJTlMgRGFSV0lOIiwiZGVzY3JpcHRpb24iOiJUaGUgUm95YWwgQmVsZ2lhbiBJbnN0aXR1dGUgb2YgTmF0dXJhbCBTY2llbmNlcyBob3VzZXMgYSBwcmVjaW91cyBjb2xsZWN0aW9uIG9mIHpvb2xvZ2ljYWwsIGFudGhyb3BvbG9naWNhbCwgcGFsZW9udG9sb2dpY2FsLCBtaW5lcmFsb2dpY2FsIGFuZCBnZW9sb2dpY2FsIG1hdGVyaWFscyBhbmQgZGF0YS4gVGhlIHJlbm93bmVkIElndWFub2RvbnMgZnJvbSBCZXJuaXNzYXJ0LCBhbWJhc3NhZG9ycyBvZiB0aGUgQmVsZ2lhbiBzY2llbmNlIGluc3RpdHV0ZSBpbiBCcnVzc2VscywgcmVwcmVzZW50IGEgbmF0dXJhbCBoaXN0b3J5IGNvbGxlY3Rpb24gY3VycmVudGx5IGVzdGltYXRlZCB0byBob2xkIG92ZXIgMzcgbWlsbGlvbiBzcGVjaW1lbnMuIFRoZSByb290cyBvZiB0aGUgcHJlc2VudCBkYXkgY29sbGVjdGlvbiByZWFjaCBmYXIgYmFjayBpbiBoaXN0b3J5LiBJdCBldm9sdmVkIGZyb20gdGhlIE5hdHVyYWwgSGlzdG9yeSBjb2xsZWN0aW9uIG9mIEthcmVsIG9mIExvdGhhcmluZ2VuLCBnb3Zlcm5vciBvZiBUaGUgTmV0aGVybGFuZHMgKDE3MTItMTc4MCkgYW5kIHdhcyBwYXJ0IG9mIGRpZGFjdGljIG1hdGVyaWFscyBvd25lZCBieSB0aGUgQ2VudHJhbCBTY2hvb2wgb2YgdGhlIENpdHkgb2YgQnJ1c3NlbHMuIEFmdGVyIHRoZSBpbmRlcGVuZGVuY2Ugb2YgQmVsZ2l1bSwgdGhlIENpdHkgb2YgQnJ1c3NlbHMgZG9uYXRlZCB0aGUgY29sbGVjdGlvbiB0byB0aGUgQmVsZ2lhbiBHb3Zlcm5tZW50IGFuZCBiZWNhbWUgcGFydCBvZiB0aGUgYXV0b25vbW91cyBSb3lhbCBOYXR1cmFsIEhpc3RvcnkgTXVzZXVtIGluIDE4NDYsIGtub3duIGFzIHRoZSBSb3lhbCBCZWxnaWFuIEluc3RpdHV0ZSBvZiBOYXR1cmFsIFNjaWVuY2VzIHNpbmNlIDE5NDguIEZpZWxkd29yayBieSByZXNlYXJjaGVycyBhbmQgY29sbGFib3JhdG9ycywgaW4gQmVsZ2l1bSBhbmQgYWJyb2FkLCBkb25hdGlvbnMgYW5kIHB1cmNoYXNlcyBoYXZlIGJlZW4gZXhwYW5kaW5nIHRoZSBhc3NldHMgZXZlciBzaW5jZS4gRGF0YSBwcmVzZW50ZWQgaGVyZSBhcmUgY29taW5nIGZyb20gdGhlIGRhcndpbiBkYXRhYmFzZSwgdGhlIGNvbGxlY3Rpb24gbWFuYWdlbWVudCB0b29sIG9mIHRoZSBSQklOUy4gVG9kYXksIHRoZSBkYXJ3aW4gZGF0YWJhc2UgbWFuYWdlcyBpbmZvcm1hdGlvbiBvbiBhYm91dCAzNTAuMDAwIHNwZWNpbWVucyBzdG9yZWQgaW4gdGhlIGluc3RpdHV0ZSdzIGRlcG9zaXRvcmllcy4gVGhpcyBudW1iZXIgcmlzZXMgb24gYSBkYWlseSBiYXNpcyB0aGFua3MgdG8gdGhlIGNvbnRpbnVlZCBlZmZvcnRzIG9mIGN1cmF0b3JzIGFuZCB0aGVpciBhZGp1bmN0cyB0aGF0IGFyZSByZXNwb25zaWJsZSBmb3IgbWFpbnRhaW5pbmcgdGhlIHN0b3JlZCBzcGVjaW1lbnMgYW5kIGluZm9ybWF0aW9uLiBPdXIgb25saW5lIGRhdGFiYXNlIHByb3ZpZGVzIGluZm9ybWF0aW9uIGFib3V0IHRoZSBjb2xsZWN0aW9ucyBvZiB0aGUgVmVydGVicmF0ZXMsIEludmVydGVicmF0ZXMsIEVudG9tb2xvZ3kgYW5kIFBhbGVvYm90YW55LiBUaGUgYXBwbGljYXRpb24gd2lsbCBzb29uIGJlIGV4cGFuZGVkIHdpdGggcGFsZW9udG96b29sb2dpY2FsIGRhdGEuIFRoZSBEZXBhcnRtZW50IG9mIEdlb2xvZ3kgYW5kIHRoZSBEZXBhcnRtZW50IG9mIE1hcmluZSBFY29zeXN0ZW1zIHByb3ZpZGUgaW5mb3JtYXRpb24gb24gZGlmZmVyZW50IHN5c3RlbXMuIE1vcmUgaW5mb3JtYXRpb24gb24gdGhlc2UgZGVwYXJ0bWVudHMgY2FuIGJlIGZvdW5kIG9uIHd3dy5zY2llbmNlc25hdHVyZWxsZXMuYmUvaW5zdGl0dXRlL3N0cnVjdHVyZS9nZW9sb2d5L2dzYl93ZWJzaXRlIGFuZCB3d3cubXVtbS5hYy5iZSBUaGUgY29ybmVyIHN0b25lIG9mIHRoZSBkYXJ3aW4gZGF0YWJhc2UgaXMgdGhlIHNwZWNpbWVuIGFuZCB0aGUgaW5mb3JtYXRpb24gYWJvdXQgaXRzIG9yaWdpbiBhbmQgaXRzIHN0YXR1cy4gQWx0aG91Z2ggdGhlIHN0YXR1cyBvZiB0aGUgc3BlY2ltZW5zIHNvbGxvdyB0aGUgY3VycmVudCByZWd1bGF0aW9ucyBvZiB0aGUgSW50ZXJuYXRpb25hbCBDb2RlIG9uIFpvb2xvZ2ljYWwgTm9tZW5jbGF0dXJlIG90aGVyIHN0YXR1cyBzcGVjaWZpY2F0aW9ucyBub3QgdHJlYXRlZCBieSB0aGUgSUNaTiByZWd1bGF0aW9ucyAoZWcuIHRvcG90eXBlKSBoYXZlIGJlZW4gbWFpbnRhaW5lZCBhcyBzdXBwbGVtZW50YXJ5IGluZm9ybWF0aW9uIGFib3V0IHRoZSBzcGVjaW1lbihzKSBpbiBxdWVzdGlvbi4gRW5qb3kgeW91ciB2aXJ0dWFsIHZpc2l0IHRocm91Z2ggb3VyIGNvbGxlY3Rpb25zISIsInR5cGUiOiJPQ0NVUlJFTkNFIn0seyJrZXkiOiJlMWUxNmNmMC1hZGEyLTExZTItOGZiYy0wMDE0NWViNDVlOWEiLCJ0aXRsZSI6Ik5lcHR1bmUgRGVlcC1TZWEgTWljcm9mb3NzaWwgT2NjdXJyZW5jZSBEYXRhYmFzZSIsImRlc2NyaXB0aW9uIjoiTWljcm9wYWxlb250b2xvZ2ljIHN0dWR5IG9mIGRlZXAtc2VhIHNlZGltZW50cyBjb3JlZCBvdmVyIHNldmVyYWwgZGVjYWRlcyBieSB0aGUgRFNEUCwgT0RQIGFuZCBJT0RQIGRyaWxsaW5nIHByb2dyYW1zIGhhcyB5aWVsZGVkIGEgdmFzdCBib2R5IG9mIGluZm9ybWF0aW9uIG9uIHRoZSBvY2N1cnJlbmNlcyBvZiBpbmRpdmlkdWFsIGZvc3NpbCBtYXJpbmUgcGxhbmt0b24gc3BlY2llcyBvdmVyIHRpbWUuIFRoaXMgaW5mb3JtYXRpb24gYWxzbyBoYXMgYmVlbiBjb21iaW5lZCB3aXRoIG90aGVyIHR5cGVzIG9mIGdlb2Nocm9ub2xvZ2ljIGluZm9ybWF0aW9uIGJ5IGludGVyZGlzY2lwbGluYXJ5IHRlYW1zIG9mIHNjaWVudGlzdHMgdG8gY29uc3RydWN0IGRldGFpbGVkIGFnZSBlc3RpbWF0ZXMgLSBhZ2UgbW9kZWxzIC0gZm9yIGh1bmRyZWRzIG9mIGRlZXAtc2VhIGRyaWxsaW5nIHNlY3Rpb25zLiBUb2dldGhlciwgdGhpcyBpbmZvcm1hdGlvbiBwcm92aWRlcyBhIHVuaXF1ZWx5IGRldGFpbGVkIGhpc3Rvcnkgb2Ygb2YgYmlvbG9naWMgZXZvbHV0aW9uIGluIHRoZSBvY2VhbnMsIGFzIHdlbGwgYXMgYW4gaW1wb3J0YW50IHNvdXJjZSBvZiBnZW9jaHJvbm9sb2dpYyBpbmZvcm1hdGlvbiBmb3IgZ2VvbG9naWMgc3R1ZGllcyBvZiBvY2VhbiBhbmQgY2xpbWF0ZSBjaGFuZ2UuICAgIFRoZSBOZXB0dW5lIGRhdGFiYXNlIHByb3ZpZGVzIGludGVncmF0ZWQgYWNjZXNzIHRvIHRoaXMgZ2xvYmFsIGRhdGEtc2V0LiBJdCBjb250YWlucyBvdmVyIDUwMCwwMDAgcmVjb3JkcyBmb3IgdGhlIG9jY3VycmVuY2VzIG9mIHNwZWNpZXMgaW4gaW5kaXZpZHVhbCwgbnVtZXJpY2FsbHkgYWdlLWRhdGVkIHNhbXBsZXMsIGFnZSBtb2RlbHMgZm9yIGh1bmRyZWRzIG9mIGRlZXAtc2VhIHNlY3Rpb25zLCBhbmQgZXh0ZW5zaXZlLCBhbm5vdGF0ZWQsIHF1YWxpdHktY29udHJvbGxlZCB0YXhvbm9taWMgbGlzdHMgZm9yIHRob3VzYW5kcyBvZiBmb3NzaWwgbWFyaW5lIHBsYW5rdG9uIHNwZWNpZXMuIE5lcHR1bmUsIG9yIGFuYWx5c2VzIGZyb20gaXQsIGhhdmUgYmVlbiB1c2VkIGluIG92ZXIgMzAgcmVzZWFyY2ggcGFwZXJzIChtZWRpYW4gSVNJIDMuNSksIGluY2x1ZGluZyA4IGluIFNjaWVuY2UsIE5hdHVyZSBvciBQTkFTLiAgICBOZXB0dW5lIHdhcyBvcmlnaW5hbGx5IGNyZWF0ZWQgYnkgYSB0ZWFtIGxlZCBieSBtZSBpbiB0aGUgZWFybHkgMTk5MHMgYXQgdGhlIEVUSCBpbiBaw7xyaWNoLCBhbmQgcmUtY2FzdCBpbiBpbnRlcm5ldCBmb3JtLCB3aXRoIHRoZSBhZGRpdGlvbiBvZiBtb3JlIGRhdGEsIGJ5IHRoZSBDaHJvbm9zIHByb2plY3Qgb2YgTlNGIGluIHRoZSBlYXJseSAyMDAwcy4gSW4gcmVzcG9uc2UgdG8gdGhlIGxhcHNlIG9mIENocm9ub3MgYW5kIHN1cHBvcnQgZm9yIE5lcHR1bmUsIEkgdGVhbWVkIHVwIHdpdGggUGF0cmljayBEaXZlciwgdGhlIG1haW4gQ2hyb25vcyBkYXRhYmFzZSBwcm9ncmFtbWVyLCB0byBjcmVhdGUgYSBuZXcgdmVyc2lvbiBvZiBOZXB0dW5lIChOZXB0dW5lIFNhbmRib3ggQmVybGluLCBvciBOU0IpIHRoYXQgaXMgaG9zdGVkIGF0IHRoZSBNdXNldW0gZsO8ciBOYXR1cmt1bmRlLiBFeHRlbnNpdmUgcmVwcm9ncmFtbWluZyBoYXMgc3RyZWFtbGluZWQgdGhlIHN5c3RlbSBzbyB0aGF0IGl0IGlzIGVhc2llciB0byBtYWludGFpbiwgYW5kIGluY2x1ZGVzIHN1cHBvcnQgZm9yIGRpcmVjdCBwcm9ncmFtbWFibGUgYWNjZXNzIG92ZXIgdGhlIGludGVybmV0IGZvciBhZHZhbmNlZCByZXNlYXJjaCBwdXJwb3Nlcy4gVGhpcyBwcm9qZWN0IHdhcyBzdXBwb3J0ZWQgYnkgQ0VFUywgT3Nsby4gTlNCIGN1cnJlbnRseSBkb2VzIG5vdCBoYXZlIGEgd2ViLWludGVyZmFjZSBidXQgb25lIGlzIHBsYW5uZWQgdG8gYmUgYWRkZWQgYnkgZWFybHkgMjAxMy4gICAgTlNCIGhhcyBhbHJlYWR5IGJlZW4gdXNlZCBpbiBwdWJsaXNoZWQgcmVzZWFyY2ggd2l0aGluIG15IG93biBncm91cCwgYW5kIHRvIHByb3ZpZGUgZGF0YSBvbiByZXF1ZXN0IHRvIGV4dGVybmFsIHNjaWVudGlzdHMuIEJyb2FkZXIgY29sbGFib3JhdGlvbnMgYW5kIHJlbmV3ZWQgZ2VuZXJhbCBwdWJsaWMgYWNjZXNzIHZpYSB0aGUgd2ViIGludGVyZmFjZSBhcmUgcGxhbm5lZCBmb3IgdGhlIGZ1dHVyZS4iLCJ0eXBlIjoiT0NDVVJSRU5DRSJ9LHsia2V5IjoiODRhYjdiNzYtZjc2Mi0xMWUxLWE0MzktMDAxNDVlYjQ1ZTlhIiwidGl0bGUiOiJDLkEuIFRyaXBsZWhvcm4gSW5zZWN0IENvbGxlY3Rpb24gKE9TVUMpLCBPaGlvIFN0YXRlIFVuaXZlcnNpdHkiLCJ0eXBlIjoiT0NDVVJSRU5DRSJ9LHsia2V5IjoiYWI0N2M0YTktNGI2YS00ZDU5LWI4NDYtODk5ZDk0MjBmN2QzIiwidGl0bGUiOiJDUkJQTyA6IFNUT0MsIEJhZ3VhZ2UiLCJkZXNjcmlwdGlvbiI6IlN1aXZpIHRlbXBvcmVsIGRlcyBvaXNlYXV4IGNvbW11bnMgLyBWaWdpZSBOYXR1cmVcbmh0dHA6Ly92aWdpZW5hdHVyZS5tbmhuLmZyL3BhZ2Uvc3VpdmktdGVtcG9yZWwtZGVzLW9pc2VhdXgtY29tbXVucy1zdG9jIiwidHlwZSI6Ik9DQ1VSUkVOQ0UifSx7ImtleSI6IjJhNjM2ZmQ2LWRjNzMtNDljMC05ZTViLTI2YmQwNTUzMjMxMyIsInRpdGxlIjoiTmV3IFplYWxhbmQgZmlzaCBhbmQgc3F1aWQgZGlzdHJpYnV0aW9ucyBmcm9tIHJlc2VhcmNoIGJvdHRvbSB0cmF3bHMgMTk2NC0yMDA4IiwiZGVzY3JpcHRpb24iOiJGcm9tIDE5OTcgdG8gMjAwOCwgYSByZXNlYXJjaCBwcm9ncmFtbWUgdG8gZGV0ZXJtaW5lIGlmIGZpc2ggYXNzZW1ibGFnZXMgaW4gdGhlIE5ldyBaZWFsYW5kIHJlZ2lvbiBjb3VsZCBiZSBjbGFzc2lmaWVkIGludG8gY2xlYXJseSBpZGVudGlmaWFibGUgY29tbXVuaXRpZXMgYmFzZWQgb24gdGhlaXIgYXNzb2NpYXRpb25zIHdpdGggZWFjaCBvdGhlciBhbmQgd2l0aCBlbnZpcm9ubWVudGFsIGZlYXR1cmVzIHdhcyB1bmRlcnRha2VuLiBUaGlzIGRhdGFzZXQgaXMgdGFrZW4gZnJvbSB0aGUgcmVzdWx0aW5nIGZpc2ggY29tbXVuaXRpZXMgZGF0YWJhc2UuIFRoZXNlIGRhdGEgaGF2ZSBiZWVuIHVzZWQgdG8gc2hvdyBnZW9ncmFwaGljYWwgYW5kIGRlcHRoIGRpc3RyaWJ1dGlvbnMgb2Ygc3BlY2llcyBmcm9tIGFsbCByZXNlYXJjaCB0b3dzIHdpdGhpbiB0aGUgTmV3IFplYWxhbmQgRUVaIHNpbmNlIDIwMDguIiwidHlwZSI6Ik9DQ1VSUkVOQ0UifSx7ImtleSI6Ijk5OGZmN2I0LTBlMDctNDBkMC1iYTFmLWM1ZjI0OWRiY2Q1MSIsInRpdGxlIjoiQkxTIE1hcHBpbmcgU2NoZW1lIGRhdGFzZXQsIDE3NTAtMjAwOSIsImRlc2NyaXB0aW9uIjoiTGljaGVuIGRpc3RyaWJ1dGlvbiBkYXRhIGF0IDEwa20gc3F1YXJlIGxldmVsLCBkaXN0aW5ndWlzaGluZyByZWNvcmRzIGZyb20gYmVmb3JlIGFuZCBzaW5jZSAxOTYwLiIsInR5cGUiOiJPQ0NVUlJFTkNFIn0seyJrZXkiOiI5ZDdmYzgzNi04NTg4LTQwOGEtYmNjMC1jMjIzNjBiZjRhMjQiLCJ0aXRsZSI6IlByZWNpcyBQbGFudCBEYXRhIiwiZGVzY3JpcHRpb24iOiJQUkVDSVMgKE5hdGlvbmFsIEhlcmJhcml1bSBQcmV0b3JpYSAoUFJFKSBDb21wdXRlcmlzZWQgSW5mb3JtYXRpb24gU3lzdGVtKSBpcyBiYXNlZCBhdCB0aGUgTmF0aW9uYWwgSGVyYmFyaXVtIGluIFByZXRvcmlhLiBUaGUgbWlzc2lvbiBvZiBQUkVDSVMgaXMgdG8gZGV2ZWxvcCwgbWFpbnRhaW4sIGFuZCBleHBhbmQgYW4gZWxlY3Ryb25pYyBkYXRhYmFzZSBzeXN0ZW0gb24gc291dGhlcm4gQWZyaWNhbiBwbGFudHMgKHRoZSByZWdpb24gc291dGggb2YgdGhlIExpbXBvcG8gYW5kIEt1bmVuZSBSaXZlcnMpIHRvIHByb3ZpZGUgYW4gZWZmaWNpZW50IGN1c3RvbWVyLWRyaXZlbiBpbmZvcm1hdGlvbiBzZXJ2aWNlIGFuZCB0byBwcm9kdWNlIGVsZWN0cm9uaWMgYW5kIHB1Ymxpc2hhYmxlIHByb2R1Y3RzLiIsInR5cGUiOiJPQ0NVUlJFTkNFIn0seyJrZXkiOiI1ZDI2YzA0Yy1kMjY5LTRlMWEtOWM1NC0wZmM2NzhmYWU1NmEiLCJ0aXRsZSI6IkVzdG9uaWFuIFVuaXZlcnNpdHkgb2YgTGlmZSBTY2llbmNlcyIsImRlc2NyaXB0aW9uIjoiTmF0dXJhbCBIaXN0b3J5IENvbGxlY3Rpb25zIGluIEVzdG9uaWFuIFVuaXZlcnNpdHkgb2YgTGlmZSBTY2llbmNlcy4iLCJ0eXBlIjoiT0NDVVJSRU5DRSJ9LHsia2V5IjoiY2MyMDMxZDEtMzk1ZC00MDUyLThjZTEtNzk2YTA4YzNkYmYyIiwidGl0bGUiOiJEQVNTSCBEYXRhIEFyY2hpdmUgQ2VudHJlIC0gU3RhdHV0b3J5IFN1cnZleXMiLCJkZXNjcmlwdGlvbiI6IkRhdGFzZXRzIHByb3ZpZGVkIHRvIHRoZSBEQVNTSCBEYXRhIEFyY2hpdmUgQ2VudHJlIGZyb20gU3RhdHV0b3J5IEFnZW5jaWVzLiBEYXRhIGNvbXBseSB3aXRoIE1FRElOIHN0YW5kYXJkcyAod3d3Lm9jZWFubmV0Lm9yZykgYW5kIGZ1cnRoZXIgYXNzZXRzIChpbWFnZXMsIHZpZGVvLCBiYXRoeW1ldHJ5KSBtYXkgYmUgYXZhaWxhYmxlLiIsInR5cGUiOiJPQ0NVUlJFTkNFIn0seyJrZXkiOiJiYmVlMTE4Yy1hNTBlLTRmN2YtYmNhMS1kNWJmZWZjNTM2MGIiLCJ0aXRsZSI6IlNFUiBTcGVjaWVzLWJhc2VkIFN1cnZleXMiLCJkZXNjcmlwdGlvbiI6IlRoaXMgZGF0YXNldCBjb3ZlcnMgcmVjb3JkcyBzdXBwbGllZCB0byBTRVIgYXMgcGFydCBvZiBvcmdhbmlzZWQgU3BlY2llcy1iYXNlZCBzdXJ2ZXlzLCBlaXRoZXIgZm9yIHNpbmdsZSBzcGVjaWVzIG9yIHRheG9ub21pYyBncm91cHMuIEluIG1vc3QgY2FzZXMgdGhlIGRhdGEgY29sbGVjdGlvbiBoYXMgYmVlbiBhZG1pbmlzdGVyZWQgYnkgdGhlIHRheG9uLWludGVyZXN0IGdyb3VwIHdpdGhpbiB0aGUgQ291bnR5LiIsInR5cGUiOiJPQ0NVUlJFTkNFIn0seyJrZXkiOiJmYWUzN2QxZi01YjdhLTRmZTItOGNmYS04OTQ4YWVmYmNhYzIiLCJ0aXRsZSI6Ik5hdHVyYWwgRW5nbGFuZCBNYXJpbmUgTW9uaXRvcmluZyBzdXJ2ZXlzIiwiZGVzY3JpcHRpb24iOiJWYXJpb3VzLCBwbGVhc2Ugc2VlIGluZGl2aWR1YWwgc3VydmV5cy4iLCJ0eXBlIjoiT0NDVVJSRU5DRSJ9LHsia2V5IjoiMDQ1NTkzYWEtMGFjMi00ZmZhLThkOTYtOWQ2NjliMjdmMDNjIiwidGl0bGUiOiJSb3lhbCBEdXRjaCBBbmdsaW5nIEFzc29jaWF0aW9uIChTVk4pIC0gUGlzY2FyaWEiLCJkZXNjcmlwdGlvbiI6IlRoaXMgZGF0YXNldCBpcyBhIHNlbGVjdGlvbiBvZiB0aGUgUGlzY2FyaWEgZGF0YWJhc2Ugb2YgdGhlIFJveWFsIER1dGNoIEFuZ2xpbmcgQXNzb2NpYXRpb24uIFBpc2NhcmlhIGlzIHVzZWQgYXMgYSBuYXRpb253aWRlIHN0YW5kYXJkIGluIHRoZSBOZXRoZXJsYW5kcyBmb3IgdGhlIHN0b3JhZ2UgYW5kIGFuYWx5c2lzIG9mIGZpc2ggZGF0YS4iLCJ0eXBlIjoiT0NDVVJSRU5DRSJ9XQ==
  recorded_at: 2019-02-26 15:14:38 GMT
  recorded_with: vcr/0.2.6, webmockr/0.3.4
