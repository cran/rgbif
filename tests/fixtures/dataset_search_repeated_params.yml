http_interactions:
- request:
    method: get
    uri: https://api.gbif.org/v1/dataset/search?limit=100&type=metadata&type=checklist
    body:
      encoding: ''
      string: ''
    headers:
      Accept-Encoding: gzip, deflate
      Accept: application/json, text/xml, application/xml, */*
      User-Agent: r-curl/3.2 crul/0.6.0 rOpenSci(rgbif/1.0.4.9100)
      X-USER-AGENT: r-curl/3.2 crul/0.6.0 rOpenSci(rgbif/1.0.4.9100)
  response:
    status:
      status_code: '200'
      message: OK
      explanation: Request fulfilled, document follows
    headers:
      status: HTTP/1.1 200 OK
      date: Wed, 10 Oct 2018 16:23:13 GMT
      content-type: application/json
      access-control-allow-origin: '*'
      access-control-allow-methods: HEAD, GET, POST, DELETE, PUT
      server: Jetty(9.3.z-SNAPSHOT)
      x-api-url: /v1/dataset/search?limit=100&type=metadata&type=checklist
      cache-control: public, max-age=600
      x-varnish: 628163143 628163142
      age: '0'
      via: 1.1 varnish (Varnish/5.2)
      accept-ranges: bytes
      content-length: '143354'
      connection: keep-alive
    body:
      encoding: ASCII-8BIT
      string: 
  recorded_at: 2018-10-10 16:23:14 GMT
  recorded_with: vcr/0.1.0, webmockr/0.2.6, crul/0.6.0
- request:
    method: get
    uri: https://api.gbif.org/v1/dataset/search?limit=100&publishingCountry=DE&publishingCountry=NZ
    body:
      encoding: ''
      string: ''
    headers:
      Accept-Encoding: gzip, deflate
      Accept: application/json, text/xml, application/xml, */*
      User-Agent: r-curl/3.2 crul/0.6.0 rOpenSci(rgbif/1.0.4.9100)
      X-USER-AGENT: r-curl/3.2 crul/0.6.0 rOpenSci(rgbif/1.0.4.9100)
  response:
    status:
      status_code: '200'
      message: OK
      explanation: Request fulfilled, document follows
    headers:
      status: HTTP/1.1 200 OK
      date: Wed, 10 Oct 2018 16:23:14 GMT
      content-type: application/json
      access-control-allow-origin: '*'
      access-control-allow-methods: HEAD, GET, POST, DELETE, PUT
      server: Jetty(9.3.z-SNAPSHOT)
      x-api-url: /v1/dataset/search?limit=100&publishingCountry=DE&publishingCountry=NZ
      cache-control: public, max-age=600
      x-varnish: 609782611 617678140
      age: '0'
      via: 1.1 varnish (Varnish/5.2)
      accept-ranges: bytes
      content-length: '88634'
      connection: keep-alive
    body:
      encoding: ASCII-8BIT
      string: eyJvZmZzZXQiOjAsImxpbWl0IjoxMDAsImVuZE9mUmVjb3JkcyI6ZmFsc2UsImNvdW50IjozMjMzMCwicmVzdWx0cyI6W3sia2V5IjoiZTZmYWI3YjMtYzczMy00MGI5LThkZjMtMmEwM2U0OTUzMmMxIiwidGl0bGUiOiJGbG9yYSB2b24gRGV1dHNjaGxhbmQgKFBoYW5lcm9nYW1lbikiLCJkZXNjcmlwdGlvbiI6IlZlcmJyZWl0dW5nIGRlciBGYXJuLSB1bmQgQmx1ZXRlbnBmbGFuemVuIGluIERldXRzY2hsYW5kLCBWb3Jrb21tZW5zbmFjaHdlaXNlIGFnZ3JlZ2llcnQgYXVmIFF1YWRyYW50ZW4gZGVyIFRvcG9ncmFwaGlzY2hlbiBLYXJ0ZSAxIDogMjUwMDAgKFRLMjUgPSBNVEIpLCBzb3dpZSBpbiBaZWl0cGVyaW9kZW4gPHZvciAxOTUwPiwgPDE5NTAgLSAxOTgwPiwgPG5hY2ggMTk4MCA+IiwidHlwZSI6Ik9DQ1VSUkVOQ0UiLCJob3N0aW5nT3JnYW5pemF0aW9uS2V5IjoiNDNjYWIyYjAtMDY1My0xMWQ5LWFjYjItYjhhMDNjNTBhODYyIiwiaG9zdGluZ09yZ2FuaXphdGlvblRpdGxlIjoiQnVuZGVzYW10IGbDvHIgTmF0dXJzY2h1dHogLyBOZXR6d2VyayBQaHl0b2RpdmVyc2l0w6R0IERldXRzY2hsYW5kIiwiY291bnRyeUNvdmVyYWdlIjpbXSwicHVibGlzaGluZ0NvdW50cnkiOiJERSIsInB1Ymxpc2hpbmdPcmdhbml6YXRpb25LZXkiOiI0M2NhYjJiMC0wNjUzLTExZDktYWNiMi1iOGEwM2M1MGE4NjIiLCJwdWJsaXNoaW5nT3JnYW5pemF0aW9uVGl0bGUiOiJCdW5kZXNhbXQgZsO8ciBOYXR1cnNjaHV0eiAvIE5ldHp3ZXJrIFBoeXRvZGl2ZXJzaXTDpHQgRGV1dHNjaGxhbmQiLCJsaWNlbnNlIjoiaHR0cDovL2NyZWF0aXZlY29tbW9ucy5vcmcvbGljZW5zZXMvYnktbmMvNC4wL2xlZ2FsY29kZSIsImRlY2FkZXMiOltdLCJrZXl3b3JkcyI6W10sInJlY29yZENvdW50Ijo5NTc3ODg3fSx7ImtleSI6IjZhYzNmNzc0LWQ5ZmItNDc5Ni1iM2U5LTkyYmY2YzgxYzA4NCIsInRpdGxlIjoibmF0dXJndWNrZXIiLCJkZXNjcmlwdGlvbiI6Im5hdHVyZ3Vja2VyLmRlIC8gZW5qb3luYXR1cmUubmV0IGlzIGEgcmFwaWRseSBncm93aW5nIHNvY2lhbCBuZXR3b3JrIHdpdGggc2V2ZXJhbCBtaWxsaW9ucyBvZiBvYnNlcnZhdGlvbnMgb2Ygd2lsZCBwbGFudHMgYW5kIGFuaW1hbHMsIHRodXMgbmF0dXJndWNrZXIuZGUgLyBlbmpveW5hdHVyZS5uZXQgc3VwcG9ydHMgYW5kIHByb21vdGVzIG5hdHVyZSBjb25zZXJ2YW5jeS4gbmF0dXJndWNrZXIuZGUgLyBlbmpveW5hdHVyZS5uZXQgb2ZmZXJzIG5hdHVyZSBvYnNlcnZlcnMgKG1haW5seSBjaXRpemVuIHNjaWVudGlzdHMpIGEgcGVyc29uYWwgZGF0YSBjZW50ZXIgZm9yIHRoZWlyIGRhdGEgaW4gd2hpY2ggdGhleSBjYW4gcG9vbCBhbmQgbWFuYWdlIGFsbCB0aGVpciBvYnNlcnZhdGlvbnMgYW5kIG5hdHVyZSBwaG90b2dyYXBocyBmb3IgdGhlIHN1cnJvdW5kaW5nIHJlZ2lvbiwgb3IgZXZlbiB3b3JsZHdpZGUgZnJvbSB0aGVpciB2YWNhdGlvbnMuIEluIGFkZGl0aW9uLCBiZWdpbm5lcnMgY2FuIGZpbmQgYSBteXJpYWQgb2YgaW5mb3JtYXRpb24sIHN1Y2ggYXMgaHVuZHJlZHMgb2YgdGhvdXNhbmRzIG9mIHBob3RvZ3JhcGhzLCB1cCB0byBkYXRlIGRpc3RyaWJ1dGlvbiBtYXBzLCB0ZW50aG91c2FuZHMgb2JzZXJ2YXRpb24gYXJlYXMgd2l0aCBoZWxwZnVsIGhpbnRzLCBhbmQgYSBzdHJvbmcgY29tbXVuaXR5IGluIG5hdHVyZ3Vja2VyLmRlIC9lbmpvYXluYXR1cmUubmV0LiIsInR5cGUiOiJPQ0NVUlJFTkNFIiwiaG9zdGluZ09yZ2FuaXphdGlvbktleSI6ImJiNjQ2ZGZmLWE5MDUtNDQwMy1hNDliLTZkMzc4YzJjZjBkOSIsImhvc3RpbmdPcmdhbml6YXRpb25UaXRsZSI6Im5hdHVyZ3Vja2VyLmRlIiwiY291bnRyeUNvdmVyYWdlIjpbXSwicHVibGlzaGluZ0NvdW50cnkiOiJERSIsInB1Ymxpc2hpbmdPcmdhbml6YXRpb25LZXkiOiJiYjY0NmRmZi1hOTA1LTQ0MDMtYTQ5Yi02ZDM3OGMyY2YwZDkiLCJwdWJsaXNoaW5nT3JnYW5pemF0aW9uVGl0bGUiOiJuYXR1cmd1Y2tlci5kZSIsImxpY2Vuc2UiOiJodHRwOi8vY3JlYXRpdmVjb21tb25zLm9yZy9saWNlbnNlcy9ieS80LjAvbGVnYWxjb2RlIiwiZGVjYWRlcyI6W10sImtleXdvcmRzIjpbXSwicmVjb3JkQ291bnQiOjg3MzgyMzZ9LHsia2V5IjoiNjRkYWJkM2MtNGYzNC00NTIwLWI5ZGQtZDIyN2EwYmYxNTgyIiwidGl0bGUiOiJPY2N1cnJlbmNlIERhdGEgb2YgVmFzY3VsYXIgUGxhbnRzIGNvbGxlY3RlZCBvciBjb21waWxlZCBmb3IgdGhlIEZsb3JhIG9mIEJhdmFyaWEiLCJkZXNjcmlwdGlvbiI6Imh0dHA6Ly93aWtpLmJheWVybmZsb3JhLmRlL3dlYi9GbG9yYV9vZl9CYXZhcmlhXyVFMiU5NCU4MF9vY2N1cnJlbmNlX2RhdGFfb25saW5lIiwidHlwZSI6Ik9DQ1VSUkVOQ0UiLCJob3N0aW5nT3JnYW5pemF0aW9uS2V5IjoiMDY3NGFlYTAtYTdlMS0xMWQ4LTk1MzQtYjhhMDNjNTBhODYyIiwiaG9zdGluZ09yZ2FuaXphdGlvblRpdGxlIjoiU3RhYXRsaWNoZSBOYXR1cndpc3NlbnNjaGFmdGxpY2hlIFNhbW1sdW5nZW4gQmF5ZXJucyIsImNvdW50cnlDb3ZlcmFnZSI6W10sInB1Ymxpc2hpbmdDb3VudHJ5IjoiREUiLCJwdWJsaXNoaW5nT3JnYW5pemF0aW9uS2V5IjoiMDY3NGFlYTAtYTdlMS0xMWQ4LTk1MzQtYjhhMDNjNTBhODYyIiwicHVibGlzaGluZ09yZ2FuaXphdGlvblRpdGxlIjoiU3RhYXRsaWNoZSBOYXR1cndpc3NlbnNjaGFmdGxpY2hlIFNhbW1sdW5nZW4gQmF5ZXJucyIsImxpY2Vuc2UiOiJodHRwOi8vY3JlYXRpdmVjb21tb25zLm9yZy9saWNlbnNlcy9ieS80LjAvbGVnYWxjb2RlIiwiZGVjYWRlcyI6W10sImtleXdvcmRzIjpbXSwicmVjb3JkQ291bnQiOjUzODI1Njd9LHsia2V5IjoiYWQwZDFhMjQtZTk1Mi0xMWUyLTk2MWYtMDAxNDVlYjQ1ZTlhIiwidGl0bGUiOiJWZWdldFdlYiAtIFJlcG9zaXRvcml1bSB2b24gVmVnZXRhdGlvbnNhdWZuYWhtZW4iLCJkZXNjcmlwdGlvbiI6IlZlZ2V0V2ViIC0gUmVwb3NpdG9yaXVtIHZvbiBWZWdldGF0aW9uc2F1Zm5haG1lbiBhdXMgRGV1dHNjaGxhbmQ6IFZvcmtvbW1lbiB2b24gUGZsYW56ZW5hcnRlbiBpbiBkZW4gQXVmbmFobWVmbMOkY2hlbiwgenVnZW9yZG5ldCB6dSBNVEItUmFzdGVyZmVsZGVybiAtIHJlcG9zaXRvcnkgb2YgdmVnZXRhdGlvbiBwbG90IGRhdGEgZnJvbSBnZXJtYW55LCBhc3NpZ25lZCB0byBncmlkIGZpZWxkcyBvZiBUSzI1IG1hcCB1bml0cyAoNiB4IDEwIGdlb2dyYXBoaWNhbCBtaW51dGVzKSIsInR5cGUiOiJPQ0NVUlJFTkNFIiwiaG9zdGluZ09yZ2FuaXphdGlvbktleSI6IjQzY2FiMmIwLTA2NTMtMTFkOS1hY2IyLWI4YTAzYzUwYTg2MiIsImhvc3RpbmdPcmdhbml6YXRpb25UaXRsZSI6IkJ1bmRlc2FtdCBmw7xyIE5hdHVyc2NodXR6IC8gTmV0endlcmsgUGh5dG9kaXZlcnNpdMOkdCBEZXV0c2NobGFuZCIsImNvdW50cnlDb3ZlcmFnZSI6W10sInB1Ymxpc2hpbmdDb3VudHJ5IjoiREUiLCJwdWJsaXNoaW5nT3JnYW5pemF0aW9uS2V5IjoiNDNjYWIyYjAtMDY1My0xMWQ5LWFjYjItYjhhMDNjNTBhODYyIiwicHVibGlzaGluZ09yZ2FuaXphdGlvblRpdGxlIjoiQnVuZGVzYW10IGbDvHIgTmF0dXJzY2h1dHogLyBOZXR6d2VyayBQaHl0b2RpdmVyc2l0w6R0IERldXRzY2hsYW5kIiwibGljZW5zZSI6Imh0dHA6Ly9jcmVhdGl2ZWNvbW1vbnMub3JnL2xpY2Vuc2VzL2J5LW5jLzQuMC9sZWdhbGNvZGUiLCJkZWNhZGVzIjpbXSwia2V5d29yZHMiOltdLCJyZWNvcmRDb3VudCI6MTE0MjQzMX0seyJrZXkiOiJkZWU4ZWRjNC1iMTlhLTExZTItODg2ZC0wMDE0NWViNDVlOWEiLCJ0aXRsZSI6IkZsb3Jpc3RpYyBEYXRhYmFzZXMgb2YgTWVja2xlbmJ1cmctUG9tZXJhbmlhIC0gSGlnaGVyIFBsYW50cyIsImRlc2NyaXB0aW9uIjoiQmFzZWQgb24gdGhlIGZsb3Jpc3RpYyBzdXJ2ZXkgb2YgRWFzdGVybiBHZXJtYW55IChCZW5rZXJ0IGV0IGFsLiAxOTk2KSBhIGRpc3RyaWJ1dGlvbiBkYXRhYmFzZSBvZiBoaWdoZXIgcGxhbnRzIGluIE1lY2tsZW5idXJnLVZvcnBvbW1lcm4gaGFzIGJlZW4gbWFuYWdlZCBpbiB0aGUgQm90YW5pY2FsIEluc3RpdHV0ZSBvZiBCb3RhbnkgYW5kIExhbmRzY2FwZSBFY29sb2d5IGF0IHRoZSBVbml2ZXJzaXR5IG9mIEdyZWlmc3dhbGQuIE9uIHRoZSBvY2Nhc2lvbiBvZiB0aGUgTmV3IGNyaXRpY2FsIEZsb3JhIG9mIE1lY2tsZW5idXJnLVZvcnBvbW1lcm4gKEhlbmtlciAmIEJlcmcgMjAwNSkgYSBjb21wcmVoZW5zaXZlIGVkaXQgaGFzIGJlZW4gZG9uZS4gVXNlciBpbnB1dCBpcyBwb3NzaWJsZSBhdCB0aGUgd2Vic2l0ZSBodHRwOi8vd3d3LmZsb3JhLW12LmRlLiIsInR5cGUiOiJPQ0NVUlJFTkNFIiwiaG9zdGluZ09yZ2FuaXphdGlvbktleSI6IjdhYzE5YzdlLTNlNDktNDY3Mi1hYzk0LTc2MTI2ZDY3NmY0MCIsImhvc3RpbmdPcmdhbml6YXRpb25UaXRsZSI6IkVybnN0LU1vcml0ei1Bcm5kdC1Vbml2ZXJzaXRhZXQiLCJjb3VudHJ5Q292ZXJhZ2UiOltdLCJwdWJsaXNoaW5nQ291bnRyeSI6IkRFIiwicHVibGlzaGluZ09yZ2FuaXphdGlvbktleSI6IjdhYzE5YzdlLTNlNDktNDY3Mi1hYzk0LTc2MTI2ZDY3NmY0MCIsInB1Ymxpc2hpbmdPcmdhbml6YXRpb25UaXRsZSI6IkVybnN0LU1vcml0ei1Bcm5kdC1Vbml2ZXJzaXRhZXQiLCJsaWNlbnNlIjoiaHR0cDovL2NyZWF0aXZlY29tbW9ucy5vcmcvbGljZW5zZXMvYnkvNC4wL2xlZ2FsY29kZSIsImRlY2FkZXMiOltdLCJrZXl3b3JkcyI6W10sInJlY29yZENvdW50Ijo3MDI0MzF9LHsia2V5IjoiZTFlMTZjZjAtYWRhMi0xMWUyLThmYmMtMDAxNDVlYjQ1ZTlhIiwidGl0bGUiOiJOZXB0dW5lIERlZXAtU2VhIE1pY3JvZm9zc2lsIE9jY3VycmVuY2UgRGF0YWJhc2UiLCJkZXNjcmlwdGlvbiI6Ik1pY3JvcGFsZW9udG9sb2dpYyBzdHVkeSBvZiBkZWVwLXNlYSBzZWRpbWVudHMgY29yZWQgb3ZlciBzZXZlcmFsIGRlY2FkZXMgYnkgdGhlIERTRFAsIE9EUCBhbmQgSU9EUCBkcmlsbGluZyBwcm9ncmFtcyBoYXMgeWllbGRlZCBhIHZhc3QgYm9keSBvZiBpbmZvcm1hdGlvbiBvbiB0aGUgb2NjdXJyZW5jZXMgb2YgaW5kaXZpZHVhbCBmb3NzaWwgbWFyaW5lIHBsYW5rdG9uIHNwZWNpZXMgb3ZlciB0aW1lLiBUaGlzIGluZm9ybWF0aW9uIGFsc28gaGFzIGJlZW4gY29tYmluZWQgd2l0aCBvdGhlciB0eXBlcyBvZiBnZW9jaHJvbm9sb2dpYyBpbmZvcm1hdGlvbiBieSBpbnRlcmRpc2NpcGxpbmFyeSB0ZWFtcyBvZiBzY2llbnRpc3RzIHRvIGNvbnN0cnVjdCBkZXRhaWxlZCBhZ2UgZXN0aW1hdGVzIC0gYWdlIG1vZGVscyAtIGZvciBodW5kcmVkcyBvZiBkZWVwLXNlYSBkcmlsbGluZyBzZWN0aW9ucy4gVG9nZXRoZXIsIHRoaXMgaW5mb3JtYXRpb24gcHJvdmlkZXMgYSB1bmlxdWVseSBkZXRhaWxlZCBoaXN0b3J5IG9mIG9mIGJpb2xvZ2ljIGV2b2x1dGlvbiBpbiB0aGUgb2NlYW5zLCBhcyB3ZWxsIGFzIGFuIGltcG9ydGFudCBzb3VyY2Ugb2YgZ2VvY2hyb25vbG9naWMgaW5mb3JtYXRpb24gZm9yIGdlb2xvZ2ljIHN0dWRpZXMgb2Ygb2NlYW4gYW5kIGNsaW1hdGUgY2hhbmdlLiAgICBUaGUgTmVwdHVuZSBkYXRhYmFzZSBwcm92aWRlcyBpbnRlZ3JhdGVkIGFjY2VzcyB0byB0aGlzIGdsb2JhbCBkYXRhLXNldC4gSXQgY29udGFpbnMgb3ZlciA1MDAsMDAwIHJlY29yZHMgZm9yIHRoZSBvY2N1cnJlbmNlcyBvZiBzcGVjaWVzIGluIGluZGl2aWR1YWwsIG51bWVyaWNhbGx5IGFnZS1kYXRlZCBzYW1wbGVzLCBhZ2UgbW9kZWxzIGZvciBodW5kcmVkcyBvZiBkZWVwLXNlYSBzZWN0aW9ucywgYW5kIGV4dGVuc2l2ZSwgYW5ub3RhdGVkLCBxdWFsaXR5LWNvbnRyb2xsZWQgdGF4b25vbWljIGxpc3RzIGZvciB0aG91c2FuZHMgb2YgZm9zc2lsIG1hcmluZSBwbGFua3RvbiBzcGVjaWVzLiBOZXB0dW5lLCBvciBhbmFseXNlcyBmcm9tIGl0LCBoYXZlIGJlZW4gdXNlZCBpbiBvdmVyIDMwIHJlc2VhcmNoIHBhcGVycyAobWVkaWFuIElTSSAzLjUpLCBpbmNsdWRpbmcgOCBpbiBTY2llbmNlLCBOYXR1cmUgb3IgUE5BUy4gICAgTmVwdHVuZSB3YXMgb3JpZ2luYWxseSBjcmVhdGVkIGJ5IGEgdGVhbSBsZWQgYnkgbWUgaW4gdGhlIGVhcmx5IDE5OTBzIGF0IHRoZSBFVEggaW4gWsO8cmljaCwgYW5kIHJlLWNhc3QgaW4gaW50ZXJuZXQgZm9ybSwgd2l0aCB0aGUgYWRkaXRpb24gb2YgbW9yZSBkYXRhLCBieSB0aGUgQ2hyb25vcyBwcm9qZWN0IG9mIE5TRiBpbiB0aGUgZWFybHkgMjAwMHMuIEluIHJlc3BvbnNlIHRvIHRoZSBsYXBzZSBvZiBDaHJvbm9zIGFuZCBzdXBwb3J0IGZvciBOZXB0dW5lLCBJIHRlYW1lZCB1cCB3aXRoIFBhdHJpY2sgRGl2ZXIsIHRoZSBtYWluIENocm9ub3MgZGF0YWJhc2UgcHJvZ3JhbW1lciwgdG8gY3JlYXRlIGEgbmV3IHZlcnNpb24gb2YgTmVwdHVuZSAoTmVwdHVuZSBTYW5kYm94IEJlcmxpbiwgb3IgTlNCKSB0aGF0IGlzIGhvc3RlZCBhdCB0aGUgTXVzZXVtIGbDvHIgTmF0dXJrdW5kZS4gRXh0ZW5zaXZlIHJlcHJvZ3JhbW1pbmcgaGFzIHN0cmVhbWxpbmVkIHRoZSBzeXN0ZW0gc28gdGhhdCBpdCBpcyBlYXNpZXIgdG8gbWFpbnRhaW4sIGFuZCBpbmNsdWRlcyBzdXBwb3J0IGZvciBkaXJlY3QgcHJvZ3JhbW1hYmxlIGFjY2VzcyBvdmVyIHRoZSBpbnRlcm5ldCBmb3IgYWR2YW5jZWQgcmVzZWFyY2ggcHVycG9zZXMuIFRoaXMgcHJvamVjdCB3YXMgc3VwcG9ydGVkIGJ5IENFRVMsIE9zbG8uIE5TQiBjdXJyZW50bHkgZG9lcyBub3QgaGF2ZSBhIHdlYi1pbnRlcmZhY2UgYnV0IG9uZSBpcyBwbGFubmVkIHRvIGJlIGFkZGVkIGJ5IGVhcmx5IDIwMTMuICAgIE5TQiBoYXMgYWxyZWFkeSBiZWVuIHVzZWQgaW4gcHVibGlzaGVkIHJlc2VhcmNoIHdpdGhpbiBteSBvd24gZ3JvdXAsIGFuZCB0byBwcm92aWRlIGRhdGEgb24gcmVxdWVzdCB0byBleHRlcm5hbCBzY2llbnRpc3RzLiBCcm9hZGVyIGNvbGxhYm9yYXRpb25zIGFuZCByZW5ld2VkIGdlbmVyYWwgcHVibGljIGFjY2VzcyB2aWEgdGhlIHdlYiBpbnRlcmZhY2UgYXJlIHBsYW5uZWQgZm9yIHRoZSBmdXR1cmUuIiwidHlwZSI6Ik9DQ1VSUkVOQ0UiLCJob3N0aW5nT3JnYW5pemF0aW9uS2V5IjoiMTA5ODA5MjAtNmRhZC0xMWRhLWFkMTMtYjhhMDNjNTBhODYyIiwiaG9zdGluZ09yZ2FuaXphdGlvblRpdGxlIjoiTXVzZXVtIGbDvHIgTmF0dXJrdW5kZSBCZXJsaW4iLCJjb3VudHJ5Q292ZXJhZ2UiOltdLCJwdWJsaXNoaW5nQ291bnRyeSI6IkRFIiwicHVibGlzaGluZ09yZ2FuaXphdGlvbktleSI6IjEwOTgwOTIwLTZkYWQtMTFkYS1hZDEzLWI4YTAzYzUwYTg2MiIsInB1Ymxpc2hpbmdPcmdhbml6YXRpb25UaXRsZSI6Ik11c2V1bSBmw7xyIE5hdHVya3VuZGUgQmVybGluIiwibGljZW5zZSI6Imh0dHA6Ly9jcmVhdGl2ZWNvbW1vbnMub3JnL2xpY2Vuc2VzL2J5LzQuMC9sZWdhbGNvZGUiLCJkZWNhZGVzIjpbXSwia2V5d29yZHMiOltdLCJyZWNvcmRDb3VudCI6NTAwODA4fSx7ImtleSI6IjJhNjM2ZmQ2LWRjNzMtNDljMC05ZTViLTI2YmQwNTUzMjMxMyIsInRpdGxlIjoiTmV3IFplYWxhbmQgZmlzaCBhbmQgc3F1aWQgZGlzdHJpYnV0aW9ucyBmcm9tIHJlc2VhcmNoIGJvdHRvbSB0cmF3bHMgMTk2NC0yMDA4IiwiZGVzY3JpcHRpb24iOiJGcm9tIDE5OTcgdG8gMjAwOCwgYSByZXNlYXJjaCBwcm9ncmFtbWUgdG8gZGV0ZXJtaW5lIGlmIGZpc2ggYXNzZW1ibGFnZXMgaW4gdGhlIE5ldyBaZWFsYW5kIHJlZ2lvbiBjb3VsZCBiZSBjbGFzc2lmaWVkIGludG8gY2xlYXJseSBpZGVudGlmaWFibGUgY29tbXVuaXRpZXMgYmFzZWQgb24gdGhlaXIgYXNzb2NpYXRpb25zIHdpdGggZWFjaCBvdGhlciBhbmQgd2l0aCBlbnZpcm9ubWVudGFsIGZlYXR1cmVzIHdhcyB1bmRlcnRha2VuLiBUaGlzIGRhdGFzZXQgaXMgdGFrZW4gZnJvbSB0aGUgcmVzdWx0aW5nIGZpc2ggY29tbXVuaXRpZXMgZGF0YWJhc2UuIFRoZXNlIGRhdGEgaGF2ZSBiZWVuIHVzZWQgdG8gc2hvdyBnZW9ncmFwaGljYWwgYW5kIGRlcHRoIGRpc3RyaWJ1dGlvbnMgb2Ygc3BlY2llcyBmcm9tIGFsbCByZXNlYXJjaCB0b3dzIHdpdGhpbiB0aGUgTmV3IFplYWxhbmQgRUVaIHNpbmNlIDIwMDguIiwidHlwZSI6Ik9DQ1VSUkVOQ0UiLCJob3N0aW5nT3JnYW5pemF0aW9uS2V5IjoiYzU4YWMwMTktYjQxMy00NjEzLTg3NzItMzllNTdhY2JlYjhlIiwiaG9zdGluZ09yZ2FuaXphdGlvblRpdGxlIjoiVGhlIE5hdGlvbmFsIEluc3RpdHV0ZSBvZiBXYXRlciBhbmQgQXRtb3NwaGVyaWMgUmVzZWFyY2ggKE5JV0EpIiwiY291bnRyeUNvdmVyYWdlIjpbXSwicHVibGlzaGluZ0NvdW50cnkiOiJOWiIsInB1Ymxpc2hpbmdPcmdhbml6YXRpb25LZXkiOiJjNThhYzAxOS1iNDEzLTQ2MTMtODc3Mi0zOWU1N2FjYmViOGUiLCJwdWJsaXNoaW5nT3JnYW5pemF0aW9uVGl0bGUiOiJUaGUgTmF0aW9uYWwgSW5zdGl0dXRlIG9mIFdhdGVyIGFuZCBBdG1vc3BoZXJpYyBSZXNlYXJjaCAoTklXQSkiLCJsaWNlbnNlIjoiaHR0cDovL2NyZWF0aXZlY29tbW9ucy5vcmcvbGljZW5zZXMvYnkvNC4wL2xlZ2FsY29kZSIsImRlY2FkZXMiOlsxOTYwLDE5NzAsMTk4MCwxOTkwLDIwMDBdLCJrZXl3b3JkcyI6WyJPYnNlcnZhdGlvbiIsIk9jY3VycmVuY2UiXSwicmVjb3JkQ291bnQiOjQ5NTcwNH0seyJrZXkiOiJjN2IzOWRiYy0zOWY1LTQ3ZTYtOGI3MC1kNDllZWE4OTllZjkiLCJ0aXRsZSI6Ik5ldyBaZWFsYW5kIHJlc2VhcmNoIHRhZ2dpbmcgZGF0YWJhc2UiLCJkZXNjcmlwdGlvbiI6IlRhZ2dpbmcgcHJvZ3JhbW1lcyBoYXZlIGJlZW4gdXNlZCB0byBwcm92aWRlIGluZm9ybWF0aW9uIG9uIGZpc2ggYW5kIGZpc2hlcmllcyB0byBjZW50cmFsIGdvdmVybm1lbnQgcG9saWN5IG1ha2VycyBpbiBOZXcgWmVhbGFuZCBmb3IgbWFueSB5ZWFycy4gQSB3aWRlIHZhcmlldHkgb2Ygc3BlY2llcyBoYXZlIGJlZW4gdGhlIHN1YmplY3Qgb2Ygc3VjaCBzdHVkaWVzLCBpbmNsdWRpbmcgZmluZmlzaCwgc2hlbGxmaXNoIGFuZCByb2NrIGxvYnN0ZXJzLiBJbiBOZXcgWmVhbGFuZCwgdGhlIE1pbmlzdHJ5IGZvciBQcmltYXJ5IEluZHVzdHJpZXMgKGZvcm1lcmx5IHRoZSBNaW5pc3RyeSBvZiBGaXNoZXJpZXMpIGhhcyBmdW5kZWQgdGhlc2UgcHJvZ3JhbW1lcyB0byBhaWQgd2l0aCBmaXNoZXJpZXMgcmVzZWFyY2ggYW5kIHN0b2NrIGFzc2Vzc21lbnQuIERhdGEgZnJvbSB0aGVzZSBwcm9ncmFtbWUgYXJlIGhlbGQgaW4gdGhlIFwidGFnXCIgZGF0YWJhc2UsIGZyb20gd2hpY2ggdGhlIGRhdGEgaW4gdGhpcyBkYXRhc2V0IGFyZSBzb3VyY2VkLiIsInR5cGUiOiJPQ0NVUlJFTkNFIiwiaG9zdGluZ09yZ2FuaXphdGlvbktleSI6ImM1OGFjMDE5LWI0MTMtNDYxMy04NzcyLTM5ZTU3YWNiZWI4ZSIsImhvc3RpbmdPcmdhbml6YXRpb25UaXRsZSI6IlRoZSBOYXRpb25hbCBJbnN0aXR1dGUgb2YgV2F0ZXIgYW5kIEF0bW9zcGhlcmljIFJlc2VhcmNoIChOSVdBKSIsImNvdW50cnlDb3ZlcmFnZSI6W10sInB1Ymxpc2hpbmdDb3VudHJ5IjoiTloiLCJwdWJsaXNoaW5nT3JnYW5pemF0aW9uS2V5IjoiMWM5YzNiYjQtMzc3Yy00NTQ3LWFhNzktMTZlYTc1NWQ2MDA2IiwicHVibGlzaGluZ09yZ2FuaXphdGlvblRpdGxlIjoiU291dGh3ZXN0ZXJuIFBhY2lmaWMgT2NlYW4gQmlvZ2VvZ3JhcGhpYyBJbmZvcm1hdGlvbiBTeXN0ZW0gKE9CSVMpIE5vZGUiLCJsaWNlbnNlIjoiaHR0cDovL2NyZWF0aXZlY29tbW9ucy5vcmcvbGljZW5zZXMvYnkvNC4wL2xlZ2FsY29kZSIsImRlY2FkZXMiOlsxOTYwLDE5NzAsMTk4MCwxOTkwLDIwMDAsMjAxMF0sImtleXdvcmRzIjpbIk9ic2VydmF0aW9uIiwiT2NjdXJyZW5jZSJdLCJyZWNvcmRDb3VudCI6NDExOTI2fSx7ImtleSI6IjdiOWIyMWRhLWY3NjItMTFlMS1hNDM5LTAwMTQ1ZWI0NWU5YSIsInRpdGxlIjoiSUJGIE1vbml0b3Jpbmcgb2YgVmFzY3VsYXIgUGxhbnRzIiwiZGVzY3JpcHRpb24iOiJodHRwOi8vd3d3LmRpdmVyc2l0eW1vYmlsZS5uZXQvd2lraS9JQkZwbGFudHNjb2xsX0Fib3V0IiwidHlwZSI6Ik9DQ1VSUkVOQ0UiLCJob3N0aW5nT3JnYW5pemF0aW9uS2V5IjoiMDY3NGFlYTAtYTdlMS0xMWQ4LTk1MzQtYjhhMDNjNTBhODYyIiwiaG9zdGluZ09yZ2FuaXphdGlvblRpdGxlIjoiU3RhYXRsaWNoZSBOYXR1cndpc3NlbnNjaGFmdGxpY2hlIFNhbW1sdW5nZW4gQmF5ZXJucyIsImNvdW50cnlDb3ZlcmFnZSI6W10sInB1Ymxpc2hpbmdDb3VudHJ5IjoiREUiLCJwdWJsaXNoaW5nT3JnYW5pemF0aW9uS2V5IjoiMDY3NGFlYTAtYTdlMS0xMWQ4LTk1MzQtYjhhMDNjNTBhODYyIiwicHVibGlzaGluZ09yZ2FuaXphdGlvblRpdGxlIjoiU3RhYXRsaWNoZSBOYXR1cndpc3NlbnNjaGFmdGxpY2hlIFNhbW1sdW5nZW4gQmF5ZXJucyIsImxpY2Vuc2UiOiJodHRwOi8vY3JlYXRpdmVjb21tb25zLm9yZy9saWNlbnNlcy9ieS80LjAvbGVnYWxjb2RlIiwiZGVjYWRlcyI6W10sImtleXdvcmRzIjpbXSwicmVjb3JkQ291bnQiOjM5NjQ5Nn0seyJrZXkiOiI4MmE0MjFkNC1mNzYyLTExZTEtYTQzOS0wMDE0NWViNDVlOWEiLCJ0aXRsZSI6IkVkYXBob2Jhc2UiLCJkZXNjcmlwdGlvbiI6IkVkYXBob2Jhc2UgaXMgYSBHQklGLUQgcHJvamVjdCBjb2xsZWN0aW5nIGluZm9ybWF0aW9uIGZyb20gbGl0ZXJhdHVyZSBhbmQgbXVzZXVtIGNvbGxlY3Rpb25zIGFib3V0IGRpc3RyaWJ1dGlvbiBhbmQgZWNvbG9neSBvZiBzb2lsIGFuaW1hbHMgKGVhcnRod29ybXMsIHNtYWxsIGVhcnRod29ybXMsIG5lbWF0b2Rlcywgc3ByaW5ndGFpbHMsIG1vc3MvIGJlZXRsZSBtaXRlcywgZ2FtYXNpbmEgbWl0ZXMsIGNlbnRpcGVkZXMsIG1pbGxpcGVkZXMsIGFuZCB3b29kbGljZSkiLCJ0eXBlIjoiT0NDVVJSRU5DRSIsImhvc3RpbmdPcmdhbml6YXRpb25LZXkiOiI5OGRiYWIwMy0wOWU1LTRjZWItOTg4ZS0wNGYzZTgwM2RlY2IiLCJob3N0aW5nT3JnYW5pemF0aW9uVGl0bGUiOiJTZW5ja2VuYmVyZyBNdXNldW0gZsO8ciBOYXR1cmt1bmRlIEfDtnJsaXR6IiwiY291bnRyeUNvdmVyYWdlIjpbXSwicHVibGlzaGluZ0NvdW50cnkiOiJERSIsInB1Ymxpc2hpbmdPcmdhbml6YXRpb25LZXkiOiI5OGRiYWIwMy0wOWU1LTRjZWItOTg4ZS0wNGYzZTgwM2RlY2IiLCJwdWJsaXNoaW5nT3JnYW5pemF0aW9uVGl0bGUiOiJTZW5ja2VuYmVyZyBNdXNldW0gZsO8ciBOYXR1cmt1bmRlIEfDtnJsaXR6IiwibGljZW5zZSI6Imh0dHA6Ly9jcmVhdGl2ZWNvbW1vbnMub3JnL2xpY2Vuc2VzL2J5LW5jLzQuMC9sZWdhbGNvZGUiLCJkZWNhZGVzIjpbXSwia2V5d29yZHMiOltdLCJyZWNvcmRDb3VudCI6Mzk0MTM0fSx7ImtleSI6Ijg1NzE0YzQ4LWY3NjItMTFlMS1hNDM5LTAwMTQ1ZWI0NWU5YSIsInRpdGxlIjoiSGVyYmFyaXVtIEJlcm9saW5lbnNlIiwiZGVzY3JpcHRpb24iOiJUaGUgaGVyYmFyaXVtIG9mIHRoZSBCb3RhbmljIEdhcmRlbiBhbmQgQm90YW5pY2FsIE11c2V1bSBCZXJsaW4tRGFobGVtIChoZXJiYXJpdW0gYWNyb255bTogQikgaXMgdGhlIGxhcmdlc3QgaW4gR2VybWFueSBhbmQgaG9sZHMgYSBjb2xsZWN0aW9uIG9mIG1vcmUgdGhhbiAzLjUgbWlsbGlvbiBwcmVzZXJ2ZWQgc3BlY2ltZW5zLiBBbGwgcGxhbnQgZ3JvdXBzIOKAkyBmbG93ZXJpbmcgcGxhbnRzLCBmZXJucywgbW9zc2VzLCBsaXZlcndvcnRzLCBhbmQgYWxnYWUsIGFzIHdlbGwgYXMgZnVuZ2kgYW5kIGxpY2hlbnMg4oCTIGFyZSByZXByZXNlbnRlZCBpbiB0aGUgY29sbGVjdGlvbnMgd2hpY2ggYXJlIHdvcmxkd2lkZSBpbiBzY29wZS4gQXNzb2NpYXRlZCB3aXRoIHRoZSBnZW5lcmFsIGhlcmJhcml1bSBhcmUgc3BlY2lhbCBjb2xsZWN0aW9ucyBvZiBkcmllZCBmcnVpdHMgYW5kIHNlZWRzLCB3b29kIHNhbXBsZXMsIGFuZCBzcGVjaW1lbnMgcHJlc2VydmVkIGluIGFsY29ob2wuIFRoZSBjb2xsZWN0aW9ucyBvZiB0aGUgaGVyYmFyaXVtIGFyZSBncm93aW5nIGNvbnN0YW50bHkgdGhyb3VnaCBmaWVsZCByZXNlYXJjaCBjb25kdWN0ZWQgYnkgc3RhZmYsIGFuZCB0aHJvdWdoIGdpZnRzLCBhY3F1aXNpdGlvbnMsIGFuZCBleGNoYW5nZXMgb2Ygc3BlY2ltZW5zIGZyb20gb3RoZXIgaGVyYmFyaWEiLCJ0eXBlIjoiT0NDVVJSRU5DRSIsImhvc3RpbmdPcmdhbml6YXRpb25LZXkiOiI1NzI1NGJkMC04MjU2LTExZDgtYjdlZC1iOGEwM2M1MGE4NjIiLCJob3N0aW5nT3JnYW5pemF0aW9uVGl0bGUiOiJCb3RhbmljIEdhcmRlbiBhbmQgQm90YW5pY2FsIE11c2V1bSBCZXJsaW4tRGFobGVtIiwiY291bnRyeUNvdmVyYWdlIjpbXSwicHVibGlzaGluZ0NvdW50cnkiOiJERSIsInB1Ymxpc2hpbmdPcmdhbml6YXRpb25LZXkiOiI1NzI1NGJkMC04MjU2LTExZDgtYjdlZC1iOGEwM2M1MGE4NjIiLCJwdWJsaXNoaW5nT3JnYW5pemF0aW9uVGl0bGUiOiJCb3RhbmljIEdhcmRlbiBhbmQgQm90YW5pY2FsIE11c2V1bSBCZXJsaW4tRGFobGVtIiwibGljZW5zZSI6Imh0dHA6Ly9jcmVhdGl2ZWNvbW1vbnMub3JnL3B1YmxpY2RvbWFpbi96ZXJvLzEuMC9sZWdhbGNvZGUiLCJkZWNhZGVzIjpbXSwia2V5d29yZHMiOltdLCJyZWNvcmRDb3VudCI6MzgwNDQ4fSx7ImtleSI6ImFhNmM1ZWU2LWQ0ZDctNGE2NS1hMDRmLTM3OWNmZmJmNDg0MiIsInRpdGxlIjoiQXJ0ZW5GaW5kZXIiLCJ0eXBlIjoiT0NDVVJSRU5DRSIsImhvc3RpbmdPcmdhbml6YXRpb25LZXkiOiIxMDk4MDkyMC02ZGFkLTExZGEtYWQxMy1iOGEwM2M1MGE4NjIiLCJob3N0aW5nT3JnYW5pemF0aW9uVGl0bGUiOiJNdXNldW0gZsO8ciBOYXR1cmt1bmRlIEJlcmxpbiIsImNvdW50cnlDb3ZlcmFnZSI6W10sInB1Ymxpc2hpbmdDb3VudHJ5IjoiREUiLCJwdWJsaXNoaW5nT3JnYW5pemF0aW9uS2V5IjoiODRhNTAyNzQtYmZiZS00OWFhLWFmMjMtMjljMzcwMzEyNmY5IiwicHVibGlzaGluZ09yZ2FuaXphdGlvblRpdGxlIjoiUE9MTElDSElBIOKAkyBWZXJlaW4gZsO8ciBOYXR1cmZvcnNjaHVuZyB1bmQgTGFuZGVzcGZsZWdlIGUuVi4iLCJsaWNlbnNlIjoiaHR0cDovL2NyZWF0aXZlY29tbW9ucy5vcmcvbGljZW5zZXMvYnkvNC4wL2xlZ2FsY29kZSIsImRlY2FkZXMiOltdLCJrZXl3b3JkcyI6W10sInJlY29yZENvdW50IjoyNjQ3NDN9LHsia2V5IjoiNzdlY2QzMzAtYjA5ZS0xMWUyLWEwMWQtMDAxNDVlYjQ1ZTlhIiwidGl0bGUiOiJJbnNla3RlbiBTYWNoc2VuIiwiZGVzY3JpcHRpb24iOiJJbnNla3RlbiBTYWNoc2VuIChJbnNlY3RzIG9mIFNheG9ueSwgR2VybWFueSkiLCJ0eXBlIjoiT0NDVVJSRU5DRSIsImhvc3RpbmdPcmdhbml6YXRpb25LZXkiOiJjNzZjZjAzMC0yYTk1LTExZGEtOWNjMS1iOGEwM2M1MGE4NjIiLCJob3N0aW5nT3JnYW5pemF0aW9uVGl0bGUiOiJTZW5ja2VuYmVyZyIsImNvdW50cnlDb3ZlcmFnZSI6W10sInB1Ymxpc2hpbmdDb3VudHJ5IjoiREUiLCJwdWJsaXNoaW5nT3JnYW5pemF0aW9uS2V5IjoiYzc2Y2YwMzAtMmE5NS0xMWRhLTljYzEtYjhhMDNjNTBhODYyIiwicHVibGlzaGluZ09yZ2FuaXphdGlvblRpdGxlIjoiU2VuY2tlbmJlcmciLCJsaWNlbnNlIjoiaHR0cDovL2NyZWF0aXZlY29tbW9ucy5vcmcvbGljZW5zZXMvYnkvNC4wL2xlZ2FsY29kZSIsImRlY2FkZXMiOltdLCJrZXl3b3JkcyI6W10sInJlY29yZENvdW50IjoyMTc1MzZ9LHsia2V5IjoiN2Q4ZWQxMzctMWQzMC00MmYxLThiNzgtMTJhNDk1N2U0NjkwIiwidGl0bGUiOiJTeXNUYXggLSAgWm9vbG9naWNhbCBDb2xsZWN0aW9ucyIsImRlc2NyaXB0aW9uIjoiYSBEYXRhYmFzZSBTeXN0ZW0gZm9yIFN5c3RlbWF0aWNzIGFuZCBUYXhvbm9teSIsInR5cGUiOiJPQ0NVUlJFTkNFIiwiaG9zdGluZ09yZ2FuaXphdGlvbktleSI6IjAyMTEyMWMwLWYwNDAtMTFkOC1iMjJmLWI4YTAzYzUwYTg2MiIsImhvc3RpbmdPcmdhbml6YXRpb25UaXRsZSI6IlN5c1RheCIsImNvdW50cnlDb3ZlcmFnZSI6W10sInB1Ymxpc2hpbmdDb3VudHJ5IjoiREUiLCJwdWJsaXNoaW5nT3JnYW5pemF0aW9uS2V5IjoiMDIxMTIxYzAtZjA0MC0xMWQ4LWIyMmYtYjhhMDNjNTBhODYyIiwicHVibGlzaGluZ09yZ2FuaXphdGlvblRpdGxlIjoiU3lzVGF4IiwibGljZW5zZSI6Imh0dHA6Ly9jcmVhdGl2ZWNvbW1vbnMub3JnL2xpY2Vuc2VzL2J5LzQuMC9sZWdhbGNvZGUiLCJkZWNhZGVzIjpbXSwia2V5d29yZHMiOltdLCJyZWNvcmRDb3VudCI6MjE1MTk1fSx7ImtleSI6ImRmY2IwZWU4LTYxNGYtMTFlMi04OTdhLTAwMTQ1ZWI0NWU5YSIsInRpdGxlIjoiU3lzVGF4IC0gQm90YW5pY2FsIEdhcmRlbnMiLCJkZXNjcmlwdGlvbiI6ImEgRGF0YWJhc2UgU3lzdGVtIGZvciBTeXN0ZW1hdGljcyBhbmQgVGF4b25vbXkiLCJ0eXBlIjoiT0NDVVJSRU5DRSIsImhvc3RpbmdPcmdhbml6YXRpb25LZXkiOiIwMjExMjFjMC1mMDQwLTExZDgtYjIyZi1iOGEwM2M1MGE4NjIiLCJob3N0aW5nT3JnYW5pemF0aW9uVGl0bGUiOiJTeXNUYXgiLCJjb3VudHJ5Q292ZXJhZ2UiOltdLCJwdWJsaXNoaW5nQ291bnRyeSI6IkRFIiwicHVibGlzaGluZ09yZ2FuaXphdGlvbktleSI6IjAyMTEyMWMwLWYwNDAtMTFkOC1iMjJmLWI4YTAzYzUwYTg2MiIsInB1Ymxpc2hpbmdPcmdhbml6YXRpb25UaXRsZSI6IlN5c1RheCIsImxpY2Vuc2UiOiJodHRwOi8vY3JlYXRpdmVjb21tb25zLm9yZy9saWNlbnNlcy9ieS80LjAvbGVnYWxjb2RlIiwiZGVjYWRlcyI6W10sImtleXdvcmRzIjpbXSwicmVjb3JkQ291bnQiOjIwNzIxOX0seyJrZXkiOiJiZTYyZmZmYy1kMGU3LTQ1ZjItOTQwNC1kNGJjNDMyMmJjNTciLCJ0aXRsZSI6IlZ1bG5lcmFibGUgbWFyaW5lIGVjb3N5c3RlbXMgaW4gdGhlIFNvdXRoIFBhY2lmaWMgT2NlYW4gcmVnaW9uIiwiZGVzY3JpcHRpb24iOiJWdWxuZXJhYmxlIG1hcmluZSBlY29zeXN0ZW1zIChWTUVzKSBhcmUgYW55IGVjb3N5c3RlbSB0aGF0IGFyZSBoaWdobHkgdnVsbmVyYWJsZSB0byBvbmUgb3IgbW9yZSBraW5kcyBvZiBmaXNoaW5nIGFjdGl2aXR5IG9yIG90aGVyIGRpc3R1cmJhbmNlLCBhbmQgYXJlIGlkZW50aWZpZWQgYnkgdGhlIHZ1bG5lcmFiaWxpdHkgb2YgdGhlaXIgY29tcG9uZW50cyAoZS5nLiBoYWJpdGF0cywgY29tbXVuaXRpZXMgb3Igc3BlY2llcykuIFRoZSBTb3V0aCBQYWNpZmljIFJlZ2lvbmFsIEZpc2hlcmllcyBNYW5hZ2VtZW50IE9yZ2FuaXNhdGlvbiAoU1BSRk1PKSBDb252ZW50aW9uIGluY2x1ZGVzIHNwZWNpZmljIHByb3Zpc2lvbnMgdG8gcHJvdGVjdCBWTUVzLiBTUFJGTU8gaGFzIGRlZmluZWQgdGVuIGJlbnRoaWMgaW52ZXJ0ZWJyYXRlIHRheGEgdGhhdCBhcmUgcmVnYXJkZWQgYXMgaW5kaWNhdG9ycyBvZiBWTUVzLiBUaGV5IGFyZTogUG9yaWZlcmEgKHNwb25nZXMpOyBBY3RpbmlhcmlhIChhbmVtb25lcyk7IEFsY3lvbmFjZWEgKHNvZnQgY29yYWxzKTsgR29yZ29uYWNlYSAoc2VhIGZhbnMpOyBQZW5uYXR1bGFjZWEgKHNlYSBwZW5zKTsgU2NsZXJhY3RpbmlhIChzdG9ueSBjb3JhbHMpOyBBbnRpcGF0aGFyaWEgKGJsYWNrIGNvcmFscyk7IFN0eWxhc3RlcmlkYWUgKGh5ZHJvY29yYWxzKTsgQ3Jpbm9pZGVhIChzZWEgbGlsaWVzKTsgYW5kIEJyaXNpbmdpZGEgKGFybWxlc3Mgc3RhcnMpLiBGb3IgbWFuYWdlbWVudCBwdXJwb3NlcywgaXQgaXMgaW1wb3J0YW50IHRvIGtub3cgd2hlcmUgVk1FcyBhcmUga25vd24gb3IgbGlrZWx5IHRvIG9jY3VyLCBiYXNlZCBvbiB0aGUgYmVzdCBhdmFpbGFibGUgc2NpZW50aWZpYyBhbmQgdGVjaG5pY2FsIGluZm9ybWF0aW9uLiBUaGUgbGlrZWx5IHByZXNlbmNlIG9mIFZNRXMgY2FuIGJlIGlkZW50aWZpZWQgdXNpbmcgaGFiaXRhdCBzdWl0YWJpbGl0eSBtb2RlbHMgZm9yIGluZGljYXRvciB0YXhhLCBpZGVhbGx5IGFjcm9zcyB0aGUgZW50aXJlIFNQUkZNTyBhcmVhLiBUaGlzIGlzIHRoZSBhaW0gb2YgdGhlIFNvdXRoIFBhY2lmaWMgVk1FIHByb2plY3QuIFJlY29yZHMgb2YgVk1FIGluZGljYXRvciB0YXhhIGV4dHJhY3RlZCBmb3IgdGhlIFNQUkZNTyBhcmVhIGFuZCB0aGUgTmV3IFplYWxhbmQgRUVaIGZyb20gT0JJUyAoT25saW5lIEJpb2dlb2dyYXBoaWMgSW5mb3JtYXRpb24gU3lzdGVtOiB3d3cuaW9iaXMub3JnKSB0b2dldGhlciB3aXRoIG90aGVyIG9ubGluZSBkYXRhIHNvdXJjZXMsIGFuZCBkYXRhIGZyb20gcmVzZWFyY2ggaW5zdGl0dXRlcyAoZS5nLiwgTklXQSwgQ1NJUk8pIGFuZCBmaXNoZXJpZXMgYWdlbmNpZXMgKGUuZy4gTVBJLCBBRk1BKSB3ZXJlIHVzZWQgZm9yIHRoZSBwcm9qZWN0LiBUaGVzZSBkYXRhIHdlcmUgY29tcGlsZWQgYW5kIGdyb29tZWQgcHJpb3IgdG8gdXNlIGluIHRoZSBoYWJpdGF0IHN1aXRhYmlsaXR5IG1vZGVsbGluZy4gRGF0YSBpbiB0aGlzIGRhdGFzZXQgcmVwcmVzZW50IHJlY29yZHMgb2YgdGhlIFZNRSBpbmRpY2F0b3IgdGF4YSBhcyBleHRyYWN0ZWQgZnJvbSB0aGUgdmFyaWV0eSBvZiBkYXRhIHNvdXJjZXMgbGlzdGVkIGFib3ZlIGFuZCBtYXkgaW5jbHVkZSByZWNvcmRzIHRoYXQgYXJlIG91dHNpZGUgb2YgdGhlIFNQUkZNTyBhcmVhLiIsInR5cGUiOiJPQ0NVUlJFTkNFIiwiaG9zdGluZ09yZ2FuaXphdGlvbktleSI6ImM1OGFjMDE5LWI0MTMtNDYxMy04NzcyLTM5ZTU3YWNiZWI4ZSIsImhvc3RpbmdPcmdhbml6YXRpb25UaXRsZSI6IlRoZSBOYXRpb25hbCBJbnN0aXR1dGUgb2YgV2F0ZXIgYW5kIEF0bW9zcGhlcmljIFJlc2VhcmNoIChOSVdBKSIsImNvdW50cnlDb3ZlcmFnZSI6W10sInB1Ymxpc2hpbmdDb3VudHJ5IjoiTloiLCJwdWJsaXNoaW5nT3JnYW5pemF0aW9uS2V5IjoiYzU4YWMwMTktYjQxMy00NjEzLTg3NzItMzllNTdhY2JlYjhlIiwicHVibGlzaGluZ09yZ2FuaXphdGlvblRpdGxlIjoiVGhlIE5hdGlvbmFsIEluc3RpdHV0ZSBvZiBXYXRlciBhbmQgQXRtb3NwaGVyaWMgUmVzZWFyY2ggKE5JV0EpIiwibGljZW5zZSI6Imh0dHA6Ly9jcmVhdGl2ZWNvbW1vbnMub3JnL3B1YmxpY2RvbWFpbi96ZXJvLzEuMC9sZWdhbGNvZGUiLCJkZWNhZGVzIjpbXSwia2V5d29yZHMiOlsiU3BlY2ltZW4iLCJPY2N1cnJlbmNlIl0sInJlY29yZENvdW50IjoyMDI4NjJ9LHsia2V5IjoiOGM1MzU0NjQtNGM4MS00NDE3LWEwMzItMWQ4MTdmYjM1MmFlIiwidGl0bGUiOiJOYXRpb25hbCBpbmRpY2F0b3IgZGF0YSBmb3Igcml2ZXIgY29uZGl0aW9uIGluIE5ldyBaZWFsYW5kIiwiZGVzY3JpcHRpb24iOiI8cD5OYXRpb25hbCBpbmRpY2F0b3IgZGF0YSBmb3Igcml2ZXIgY29uZGl0aW9uIGluIE5ldyBaZWFsYW5kIC0gY29sbGVjdGVkIGJ5IFJlZ2lvbmFsIENvdW5jaWxzIGFuZCB0aGUgTmF0aW9uYWwgSW5zdGl0dXRlIG9mIFdhdGVyIGFuZCBBdG1vc3BoZXJpYyBSZXNlYXJjaCAoTklXQSksIGNvbGxhdGVkIGFuZCBwcm9jZXNzZWQgYnkgTklXQSBhbmQgcHJvdGVjdGVkIGJ5IGNvcHlyaWdodCBvd25lZCBieSB0aGUgTWluaXN0cnkgZm9yIHRoZSBFbnZpcm9ubWVudCBvbiBiZWhhbGYgb2YgdGhlIENyb3duLiBUaGUgZGF0YXNldCBjb25zaXN0cyBvZiBwaHlzaWNhbC1jaGVtaWNhbCB3YXRlciBxdWFsaXR5IGFuZCBtYWNyby1pbnZlcnRlYnJhdGUgZGF0YSBmcm9tIHRoZSByZWdpb25hbCBjb3VuY2lsIFN0YXRlIG9mIEVudmlyb25tZW50IChTb0UpIGFuZCBOYXRpb25hbCBSaXZlciBXYXRlciBRdWFsaXR5IE5ldHdvcmsgKE5SV1FOKSBwcm9ncmFtbWVzLiBUaGUgcGh5c2ljYWwtY2hlbWljYWwgd2F0ZXIgcXVhbGl0eSB2YXJpYWJsZXMgYXJlIHdhdGVyIGNsYXJpdHkgKENMQVIpLCBFc2NoZXJpY2hpYSBjb2xpIGNvbmNlbnRyYXRpb24gKEVDT0xJKSwgbml0cmF0ZS1uaXRyb2dlbiBjb25jZW50cmF0aW9uIChOTzNOWzFdKSwgYW1tb25pYWNhbCBuaXRyb2dlbiBjb25jZW50cmF0aW9uIChOSDROKSwgdG90YWwgbml0cm9nZW4gY29uY2VudHJhdGlvbiAoVE4pLCBkaXNzb2x2ZWQgcmVhY3RpdmUgcGhvc3Bob3J1cyBjb25jZW50cmF0aW9uIChEUlApLCB0b3RhbCBwaG9zcGhvcnVzIGNvbmNlbnRyYXRpb24gKFRQKSwgdGVtcGVyYXR1cmUgKFRFTVApLCBkaXNzb2x2ZWQgb3h5Z2VuIGNvbmNlbnRyYXRpb24gKERPWzJdKSBhbmQgcGVyY2VudCBzYXR1cmF0aW9uIChET1NBVCksIHN1c3BlbmRlZCBzZWRpbWVudCAoU1MpLCBhbmQgdHVyYmlkaXR5IChUVVJCKS48L3A+XG48cD5UaGUgaW52ZXJ0ZWJyYXRlIHZhcmlhYmxlcyBhcmUgdGF4YSBsaXN0cyBhbmQgY291bnRzIG9yIGNvZGVkLWFidW5kYW5jZSBjbGFzc2VzIGZvciBlYWNoIHRheG9uLiBUaGUgcmF3IGludmVydGVicmF0ZSBkYXRhIHdlcmUgcG9zdC1wcm9jZXNzZWQgdG8gZ2VuZXJhdGUgZm91ciB2YXJpYWJsZXM6IHRvdGFsIG51bWJlciBvZiB0YXhhIGluIGEgc2FtcGxlIChUQVhBKSwgdGhlIG51bWJlciBvZiB0YXhhIGZyb20gdGhlIGluc2VjdCBvcmRlcnMgRXBoZW1lcm9wdGVyYSwgUGxlY29wdGVyYSBhbmQgVHJpY2hvcHRlcmEgKEVQVHRheGEpLCB0aGUgcGVyY2VudGFnZSBvZiBpbmRpdmlkdWFscyBpbiBhIHNhbXBsZSBmcm9tIEVQVCB0YXhhICglRVBUYWJ1bmQpLCBhbmQgdGhlIFNlbWktUXVhbnRpdGF0aXZlIE1hY3JvaW52ZXJ0ZWJyYXRlIENvbW11bml0eSBJbmRleCBmb3IgaGFyZC1ib3R0b20gc3RyZWFtcyAoU1FNQ0ktaGIpLiBSRUMgcmVhY2ggbnVtYmVycyB3aGVyZSBhZGRlZCB0byBzaXRlIGluZm9ybWF0aW9uIGJhc2VkIG9uIGJlc3QgZ3Vlc3Nlcy48L3A+XG48cD5JbiB0aGUgZGF0YXNldCB1c2VkIGZvciB0aGUgMjAxMiBzdHVkeSwgdGhlIHN0YXJ0IGRhdGVzIGZvciBhbGwgbW9uaXRvcmluZyBzaXRlIHJlY29yZHMgd2VyZSAxIEphbnVhcnkgMjAwNiBvciBlYXJsaWVyLCBhbmQgdGhlIGVuZCBkYXRlcyByYW5nZWQgZnJvbSBKdW5lIDIwMDkgdG8gRmVicnVhcnkgMjAxMi4gVGhlIHJhbmdlIG9mIGVuZCBkYXRlcyBwb3NlcyBzb21lIHBvdGVudGlhbCBwcm9ibGVtcyBkdWUgdG8gdGVtcG9yYWwgdmFyaWF0aW9uIGluIHdhdGVyIHF1YWxpdHkuIEZ1cnRoZXIsIHdlIGNhcnJpZWQgb3V0IHRlbXBvcmFsIHRyZW5kIGFuYWx5c2VzIGluIHRoZSBjdXJyZW50IHN0dWR5IGFuZCByZWNlbnQgZGF0YSB3ZXJlIG5lZWRlZCB0byBlbnN1cmUgdGhhdCB0aGUgYW5hbHlzZXMgY29ycmVzcG9uZGVkIHRvIHJlY2VudCBjb25kaXRpb25zLiBGb3IgdGhlc2UgcmVhc29ucyB3ZSByZXF1ZXN0ZWQgdXBkYXRlZCBwaHlzaWNhbC1jaGVtaWNhbCB3YXRlciBxdWFsaXR5IGRhdGEgZnJvbSBmaXZlIHJlZ2lvbmFsIGNvdW5jaWxzLCB0byBmaWxsIHRoZSBtb3N0IHNldmVyZSBnYXBzIGluIHJlY2VudCBkYXRhLiBFYWNoIG9mIHRoZSBmaXZlIHJlZ2lvbmFsIGNvdW5jaWxzIHByb3ZpZGVkIHVwZGF0ZXMsIGFuZCB0aGUgZW5kaW5nIGRhdGVzIGluIHRoZSBjdXJyZW50IGRhdGFzZXQgcmFuZ2UgZnJvbSBKYW51YXJ5IDIwMTEgdG8gRGVjZW1iZXIgMjAxMi4gTm90ZSB0aGF0IHN0YXJ0IGFuZCBlbmQgZGF0ZXMgY2FuIHZhcnkgYW1vbmcgc2l0ZXMgd2l0aGluIGNvdW5jaWxzLCBhbmQgYW1vbmcgdmFyaWFibGVzIHdpdGhpbiBzaXRlcy48L3A+IiwidHlwZSI6Ik9DQ1VSUkVOQ0UiLCJob3N0aW5nT3JnYW5pemF0aW9uS2V5IjoiYzU4YWMwMTktYjQxMy00NjEzLTg3NzItMzllNTdhY2JlYjhlIiwiaG9zdGluZ09yZ2FuaXphdGlvblRpdGxlIjoiVGhlIE5hdGlvbmFsIEluc3RpdHV0ZSBvZiBXYXRlciBhbmQgQXRtb3NwaGVyaWMgUmVzZWFyY2ggKE5JV0EpIiwiY291bnRyeUNvdmVyYWdlIjpbXSwicHVibGlzaGluZ0NvdW50cnkiOiJOWiIsInB1Ymxpc2hpbmdPcmdhbml6YXRpb25LZXkiOiJjNThhYzAxOS1iNDEzLTQ2MTMtODc3Mi0zOWU1N2FjYmViOGUiLCJwdWJsaXNoaW5nT3JnYW5pemF0aW9uVGl0bGUiOiJUaGUgTmF0aW9uYWwgSW5zdGl0dXRlIG9mIFdhdGVyIGFuZCBBdG1vc3BoZXJpYyBSZXNlYXJjaCAoTklXQSkiLCJsaWNlbnNlIjoiaHR0cDovL2NyZWF0aXZlY29tbW9ucy5vcmcvbGljZW5zZXMvYnktbmMvNC4wL2xlZ2FsY29kZSIsImRlY2FkZXMiOlsxOTgwLDE5OTAsMjAwMCwyMDEwXSwia2V5d29yZHMiOlsiT2JzZXJ2YXRpb24iLCJPY2N1cnJlbmNlIl0sInJlY29yZENvdW50IjoxODM0Mzh9LHsia2V5IjoiN2EyNjYwYmMtZjc2Mi0xMWUxLWE0MzktMDAxNDVlYjQ1ZTlhIiwidGl0bGUiOiJUaGUgRnVuZ2FsIENvbGxlY3Rpb24gYXQgdGhlIFNlbmNrZW5iZXJnIE11c2V1bSBmw7xyIE5hdHVya3VuZGUgR8O2cmxpdHoiLCJkZXNjcmlwdGlvbiI6Imh0dHA6Ly93d3cuZ2JpZi1teWNvbG9neS5kZS9EYXRhYmFzZUNsaWVudHMvR0xNY29sbC9BYm91dC5jZm0iLCJ0eXBlIjoiT0NDVVJSRU5DRSIsImhvc3RpbmdPcmdhbml6YXRpb25LZXkiOiIwNjc0YWVhMC1hN2UxLTExZDgtOTUzNC1iOGEwM2M1MGE4NjIiLCJob3N0aW5nT3JnYW5pemF0aW9uVGl0bGUiOiJTdGFhdGxpY2hlIE5hdHVyd2lzc2Vuc2NoYWZ0bGljaGUgU2FtbWx1bmdlbiBCYXllcm5zIiwiY291bnRyeUNvdmVyYWdlIjpbXSwicHVibGlzaGluZ0NvdW50cnkiOiJERSIsInB1Ymxpc2hpbmdPcmdhbml6YXRpb25LZXkiOiIwNjc0YWVhMC1hN2UxLTExZDgtOTUzNC1iOGEwM2M1MGE4NjIiLCJwdWJsaXNoaW5nT3JnYW5pemF0aW9uVGl0bGUiOiJTdGFhdGxpY2hlIE5hdHVyd2lzc2Vuc2NoYWZ0bGljaGUgU2FtbWx1bmdlbiBCYXllcm5zIiwibGljZW5zZSI6Imh0dHA6Ly9jcmVhdGl2ZWNvbW1vbnMub3JnL2xpY2Vuc2VzL2J5LzQuMC9sZWdhbGNvZGUiLCJkZWNhZGVzIjpbXSwia2V5d29yZHMiOltdLCJyZWNvcmRDb3VudCI6MTYwNzc0fSx7ImtleSI6ImM1YzI1NDJjLTQwOGYtNDQyZi05N2QwLTNhOTc1NjJmZTVlYyIsInRpdGxlIjoiQmF0IEJhbmRpbmciLCJkZXNjcmlwdGlvbiI6IkJhdCBiYW5kaW5nIGRhdGEgR2VybWFueSBzaW5jZSAxOTAwIiwidHlwZSI6Ik9DQ1VSUkVOQ0UiLCJob3N0aW5nT3JnYW5pemF0aW9uS2V5IjoiNmUxY2FkODAtYmRmNS0xMWQ4LTg0ZWEtYjhhMDNjNTBhODYyIiwiaG9zdGluZ09yZ2FuaXphdGlvblRpdGxlIjoiWm9vbG9naXNjaGVzIEZvcnNjaHVuZ3NpbnN0aXR1dCB1bmQgTXVzZXVtIEFsZXhhbmRlciBLb2VuaWciLCJjb3VudHJ5Q292ZXJhZ2UiOltdLCJwdWJsaXNoaW5nQ291bnRyeSI6IkRFIiwicHVibGlzaGluZ09yZ2FuaXphdGlvbktleSI6IjZlMWNhZDgwLWJkZjUtMTFkOC04NGVhLWI4YTAzYzUwYTg2MiIsInB1Ymxpc2hpbmdPcmdhbml6YXRpb25UaXRsZSI6Ilpvb2xvZ2lzY2hlcyBGb3JzY2h1bmdzaW5zdGl0dXQgdW5kIE11c2V1bSBBbGV4YW5kZXIgS29lbmlnIiwibGljZW5zZSI6Imh0dHA6Ly9jcmVhdGl2ZWNvbW1vbnMub3JnL2xpY2Vuc2VzL2J5LzQuMC9sZWdhbGNvZGUiLCJkZWNhZGVzIjpbXSwia2V5d29yZHMiOltdLCJyZWNvcmRDb3VudCI6MTU2MjY1fSx7ImtleSI6Ijg1NzM5Nzc4LWY3NjItMTFlMS1hNDM5LTAwMTQ1ZWI0NWU5YSIsInRpdGxlIjoiTGljaGVuIEhlcmJhcml1bSBCZXJsaW4iLCJkZXNjcmlwdGlvbiI6IlRoaXMgZGF0YWJhc2UgY29udGFpbnMgbGFiZWwgaW5mb3JtYXRpb24gZm9yIGFib3V0IDEwMiwwMDAgc3BlY2ltZW5zIChhbm5vIDIwMTMpIG9mIGxpY2hlbnMgcHJlc2VydmVkIGluIHRoZSBoZXJiYXJpdW0gb2YgdGhlIEJvdGFuaWMgR2FyZGVuICYgQm90YW5pY2FsIE11c2V1bSBCZXJsaW4tRGFobGVtLCBGcmVpZSBVbml2ZXJzaXTDpHQgQmVybGluLCBHZXJtYW55LCBhY3JvbnltIEIuIEl0IHJlcHJlc2VudHMgYWJvdXQgb25lIHRoaXJkIG9mIHRoZSBsaWNoZW4gaG9sZGluZ3MgYW5kIGNvbnRhaW5zIG1haW5seSByZWNlbnQgYWNxdWlzaXRpb25zLCBpbiBwYXJ0aWN1bGFyIHN1Y2ggcmVzdWx0aW5nIGZyb20gb3duIGZpZWxkd29yay4gQWRkZWQgYXJlIGFib3V0IDEzLjAwMCBzcGVjaW1lbnMgb2YgZnVuZ2kuIEl0IGlzIGRlc2lnbmVkIHRvIGFsbG93IHNlYXJjaCBmb3Igc3BlY2ltZW5zIGZvciBETkEgcmVzZWFyY2ggYW5kIHRvIHRyYWNlIHNwZWNpbWVucyByZW5hbWVkIGFmdGVyIHB1YmxpY2F0aW9uLiIsInR5cGUiOiJPQ0NVUlJFTkNFIiwiaG9zdGluZ09yZ2FuaXphdGlvbktleSI6IjU3MjU0YmQwLTgyNTYtMTFkOC1iN2VkLWI4YTAzYzUwYTg2MiIsImhvc3RpbmdPcmdhbml6YXRpb25UaXRsZSI6IkJvdGFuaWMgR2FyZGVuIGFuZCBCb3RhbmljYWwgTXVzZXVtIEJlcmxpbi1EYWhsZW0iLCJjb3VudHJ5Q292ZXJhZ2UiOltdLCJwdWJsaXNoaW5nQ291bnRyeSI6IkRFIiwicHVibGlzaGluZ09yZ2FuaXphdGlvbktleSI6IjU3MjU0YmQwLTgyNTYtMTFkOC1iN2VkLWI4YTAzYzUwYTg2MiIsInB1Ymxpc2hpbmdPcmdhbml6YXRpb25UaXRsZSI6IkJvdGFuaWMgR2FyZGVuIGFuZCBCb3RhbmljYWwgTXVzZXVtIEJlcmxpbi1EYWhsZW0iLCJsaWNlbnNlIjoiaHR0cDovL2NyZWF0aXZlY29tbW9ucy5vcmcvcHVibGljZG9tYWluL3plcm8vMS4wL2xlZ2FsY29kZSIsImRlY2FkZXMiOltdLCJrZXl3b3JkcyI6W10sInJlY29yZENvdW50IjoxNDc0OTF9LHsia2V5IjoiMWNjMWJkNTItMzY5ZS00ZTU0LWIzNTEtZTdiZWFjZmRhNjk4IiwidGl0bGUiOiJOZXcgWmVhbGFuZCBGcmVzaHdhdGVyIEZpc2ggRGF0YWJhc2UiLCJkZXNjcmlwdGlvbiI6IlRoZSBOZXcgWmVhbGFuZCBGcmVzaHdhdGVyIEZpc2ggRGF0YWJhc2UgKE5aRkZEKVxucmVjb3JkcyB0aGUgb2NjdXJyZW5jZSBvZiBmaXNoIGluIGZyZXNoIHdhdGVycyBvZiBOZXcgWmVhbGFuZCxcbmluY2x1ZGluZyBtYWpvciBvZmZzaG9yZSBpc2xhbmRzLiBXZSBtYWludGFpbiB0aGUgZGF0YWJhc2UgYXRcbm91ciBXZWxsaW5ndG9uIGNhbXB1cy4gRGF0YSBzdG9yZWQgaW5jbHVkZSB0aGUgc2l0ZSBsb2NhdGlvbixcbnRoZSBzcGVjaWVzIHByZXNlbnQsIHRoZWlyIGFidW5kYW5jZSBhbmQgc2l6ZSwgYXMgd2VsbCBhc1xuaW5mb3JtYXRpb24gc3VjaCBhcyB0aGUgZmlzaGluZyBtZXRob2QgdXNlZCBhbmQgYSBwaHlzaWNhbFxuZGVzY3JpcHRpb24gb2YgdGhlIHNpdGUuIFRoZSBsYXR0ZXIgaW5jbHVkZXMgYW4gYXNzZXNzbWVudCBvZlxudGhlIGhhYml0YXQgdHlwZSwgc3Vic3RyYXRlIHR5cGUsIGF2YWlsYWJsZSBmaXNoIGNvdmVyLFxuY2F0Y2htZW50IHZlZ2V0YXRpb24sIHJpcGFyaWFuIHZlZ2V0YXRpb24sIHdhdGVyIHdpZHRocyBhbmRcbmRlcHRocywgYW5kIHNvbWUgd2F0ZXIgcXVhbGl0eSBtZWFzdXJlcy4iLCJ0eXBlIjoiT0NDVVJSRU5DRSIsImhvc3RpbmdPcmdhbml6YXRpb25LZXkiOiJjNThhYzAxOS1iNDEzLTQ2MTMtODc3Mi0zOWU1N2FjYmViOGUiLCJob3N0aW5nT3JnYW5pemF0aW9uVGl0bGUiOiJUaGUgTmF0aW9uYWwgSW5zdGl0dXRlIG9mIFdhdGVyIGFuZCBBdG1vc3BoZXJpYyBSZXNlYXJjaCAoTklXQSkiLCJjb3VudHJ5Q292ZXJhZ2UiOltdLCJwdWJsaXNoaW5nQ291bnRyeSI6Ik5aIiwicHVibGlzaGluZ09yZ2FuaXphdGlvbktleSI6ImM1OGFjMDE5LWI0MTMtNDYxMy04NzcyLTM5ZTU3YWNiZWI4ZSIsInB1Ymxpc2hpbmdPcmdhbml6YXRpb25UaXRsZSI6IlRoZSBOYXRpb25hbCBJbnN0aXR1dGUgb2YgV2F0ZXIgYW5kIEF0bW9zcGhlcmljIFJlc2VhcmNoIChOSVdBKSIsImxpY2Vuc2UiOiJodHRwOi8vY3JlYXRpdmVjb21tb25zLm9yZy9saWNlbnNlcy9ieS1uYy80LjAvbGVnYWxjb2RlIiwiZGVjYWRlcyI6WzE5MTBdLCJrZXl3b3JkcyI6WyJPYnNlcnZhdGlvbiIsIk9jY3VycmVuY2UiXSwicmVjb3JkQ291bnQiOjExNzEyNn0seyJrZXkiOiI4NTcyN2YxZS1mNzYyLTExZTEtYTQzOS0wMDE0NWViNDVlOWEiLCJ0aXRsZSI6IkhlcmJhcml1bSBXaWxsaW5nIiwiZGVzY3JpcHRpb24iOiJUaGUg4oCcSGVyYmFyaXVtIFdpbGxpbmfigJ0gaXMgYSBwcml2YXRlIFBoYW5lcm9nYW0gY29sbGVjdGlvbiBvZiBFY2toYXJkIFdpbGxpbmcuIFRoZSBjb2xsZWN0aW9uIGlzIGZvY3Vzc2VkIG9uIEdyZWVjZSBhbmQgY2VudHJhbCBFdXJvcGUgYW5kIGNvbnNpc3RzIG9mIG1vcmUgdGhlbiAxNTAuMDAwIHNwZWNpbWVucyB3aGljaCBhcmUgc3VjY2Vzc2l2ZWx5IGluc2VydGVkIGFuZCBiYXJjb2RlZCBhdCB0aGUgQkdCTSAoSGVyYmFyaXVtIEIpLiIsInR5cGUiOiJPQ0NVUlJFTkNFIiwiaG9zdGluZ09yZ2FuaXphdGlvbktleSI6IjU3MjU0YmQwLTgyNTYtMTFkOC1iN2VkLWI4YTAzYzUwYTg2MiIsImhvc3RpbmdPcmdhbml6YXRpb25UaXRsZSI6IkJvdGFuaWMgR2FyZGVuIGFuZCBCb3RhbmljYWwgTXVzZXVtIEJlcmxpbi1EYWhsZW0iLCJjb3VudHJ5Q292ZXJhZ2UiOltdLCJwdWJsaXNoaW5nQ291bnRyeSI6IkRFIiwicHVibGlzaGluZ09yZ2FuaXphdGlvbktleSI6IjU3MjU0YmQwLTgyNTYtMTFkOC1iN2VkLWI4YTAzYzUwYTg2MiIsInB1Ymxpc2hpbmdPcmdhbml6YXRpb25UaXRsZSI6IkJvdGFuaWMgR2FyZGVuIGFuZCBCb3RhbmljYWwgTXVzZXVtIEJlcmxpbi1EYWhsZW0iLCJsaWNlbnNlIjoiaHR0cDovL2NyZWF0aXZlY29tbW9ucy5vcmcvcHVibGljZG9tYWluL3plcm8vMS4wL2xlZ2FsY29kZSIsImRlY2FkZXMiOltdLCJrZXl3b3JkcyI6W10sInJlY29yZENvdW50IjoxMTI2MDN9LHsia2V5IjoiYjUxOTI4MTUtNWU5MC00NWI0LWExN2QtNjI4NTZhM2VhZDUxIiwidGl0bGUiOiJNb25pdG9yaW5nIGRhdGEgZnJvbSB0aGUgZmVkZXJhbCBzdGF0ZSBOb3J0aCBSaGluZS1XZXN0cGhhbGlhIChHZXJtYW55KSIsImRlc2NyaXB0aW9uIjoiPHA+VGhlIGRhdGFzZXQgY29uc2lzdHMgb2Ygb2NjdXJyZW5jZSBkYXRhIG9mIHRoZSBhcXVhdGljIG9yZ2FuaXNtIGdyb3VwcyBmaXNoLCBtYWNyb2ludmVydGVicmF0ZXMgYW5kIG1hY3JvcGh5dGVzIHRoYXQgd2VyZSBzYW1wbGVkIGluIHRoZSBHZXJtYW4gZmVkZXJhbCBzdGF0ZSBOb3J0aCBSaGluZS1XZXN0cGhhbGlhIGJldHdlZW4gMjAwNCBhbmQgMjAwOS4gVGhlIHNhbXBsaW5nIHdhcyBjb25kdWN0ZWQgYWNjb3JkaW5nIHRvIHRoZSBwcm90b2NvbHMgb2YgdGhlIG5hdGlvbmFsIG1vbml0b3JpbmcgcHJvZ3JhbW1lIGZvciBpbXBsZW1lbnRhdGlvbiBvZiB0aGUgV2F0ZXIgRnJhbWV3b3JrIERpcmVjdGl2ZS48L3A+XG48cD5Gb3IgYWRkaXRpb25hbCBtZXRhZGF0YSBzZWU6IGh0dHA6Ly9kYXRhLmZyZXNod2F0ZXJiaW9kaXZlcnNpdHkuZXUvbWV0YWRiL2JmX21kYl92aWV3LnBocD9lbnRyeUlEPUJGRV85MTwvcD4iLCJ0eXBlIjoiT0NDVVJSRU5DRSIsImhvc3RpbmdPcmdhbml6YXRpb25LZXkiOiJiODcyYjA3NS05YWI1LTRlMjctYjZjNi01YWRkNmI4OTAzNzkiLCJob3N0aW5nT3JnYW5pemF0aW9uVGl0bGUiOiJCaW9GcmVzaCIsImNvdW50cnlDb3ZlcmFnZSI6W10sInB1Ymxpc2hpbmdDb3VudHJ5IjoiREUiLCJwdWJsaXNoaW5nT3JnYW5pemF0aW9uS2V5IjoiYjg3MmIwNzUtOWFiNS00ZTI3LWI2YzYtNWFkZDZiODkwMzc5IiwicHVibGlzaGluZ09yZ2FuaXphdGlvblRpdGxlIjoiQmlvRnJlc2giLCJsaWNlbnNlIjoiaHR0cDovL2NyZWF0aXZlY29tbW9ucy5vcmcvcHVibGljZG9tYWluL3plcm8vMS4wL2xlZ2FsY29kZSIsImRlY2FkZXMiOlsyMDAwXSwia2V5d29yZHMiOlsicml2ZXJzIiwiTW9uaXRvcmluZyBkYXRhIiwiTWFjcm9waHl0ZXMiLCJXYXRlciBGcmFtZXdvcmsgRGlyZWN0aXZlIiwiSW5sYW5kIFdhdGVycyIsIkJpb3RhIiwiTWFjcm9pbnZlcnRlYnJhdGVzIiwiRmlzaCIsIkJpb3NwaGVyZSIsIk9jY3VycmVuY2UiXSwicmVjb3JkQ291bnQiOjExMTk5MX0seyJrZXkiOiI5NjY0MjZjZS1mNzYyLTExZTEtYTQzOS0wMDE0NWViNDVlOWEiLCJ0aXRsZSI6IkhlcmJhcml1bSBTZW5ja2VuYmVyZ2lhbnVtIChGUikiLCJkZXNjcmlwdGlvbiI6IkhlcmJhcml1bSBTZW5ja2VuYmVyZ2lhbnVtIiwidHlwZSI6Ik9DQ1VSUkVOQ0UiLCJob3N0aW5nT3JnYW5pemF0aW9uS2V5IjoiYzc2Y2YwMzAtMmE5NS0xMWRhLTljYzEtYjhhMDNjNTBhODYyIiwiaG9zdGluZ09yZ2FuaXphdGlvblRpdGxlIjoiU2VuY2tlbmJlcmciLCJjb3VudHJ5Q292ZXJhZ2UiOltdLCJwdWJsaXNoaW5nQ291bnRyeSI6IkRFIiwicHVibGlzaGluZ09yZ2FuaXphdGlvbktleSI6ImM3NmNmMDMwLTJhOTUtMTFkYS05Y2MxLWI4YTAzYzUwYTg2MiIsInB1Ymxpc2hpbmdPcmdhbml6YXRpb25UaXRsZSI6IlNlbmNrZW5iZXJnIiwibGljZW5zZSI6Imh0dHA6Ly9jcmVhdGl2ZWNvbW1vbnMub3JnL2xpY2Vuc2VzL2J5LzQuMC9sZWdhbGNvZGUiLCJkZWNhZGVzIjpbXSwia2V5d29yZHMiOltdLCJyZWNvcmRDb3VudCI6MTA5MTE0fSx7ImtleSI6IjgyYjZhYjM4LWY3NjItMTFlMS1hNDM5LTAwMTQ1ZWI0NWU5YSIsInRpdGxlIjoiTWZOIC0gSGV0ZXJvcHRlcmEgQ29sbGVjdGlvbiIsImRlc2NyaXB0aW9uIjoiSGV0ZXJvcHRlcmEgY29sbGVjdGlvbiBvZiB0aGUgTmF0dXJhbCBIaXN0b3J5IE11c2V1bSBCZXJsaW4sIEdlcm1hbnkiLCJ0eXBlIjoiT0NDVVJSRU5DRSIsImhvc3RpbmdPcmdhbml6YXRpb25LZXkiOiIxMDk4MDkyMC02ZGFkLTExZGEtYWQxMy1iOGEwM2M1MGE4NjIiLCJob3N0aW5nT3JnYW5pemF0aW9uVGl0bGUiOiJNdXNldW0gZsO8ciBOYXR1cmt1bmRlIEJlcmxpbiIsImNvdW50cnlDb3ZlcmFnZSI6W10sInB1Ymxpc2hpbmdDb3VudHJ5IjoiREUiLCJwdWJsaXNoaW5nT3JnYW5pemF0aW9uS2V5IjoiMTA5ODA5MjAtNmRhZC0xMWRhLWFkMTMtYjhhMDNjNTBhODYyIiwicHVibGlzaGluZ09yZ2FuaXphdGlvblRpdGxlIjoiTXVzZXVtIGbDvHIgTmF0dXJrdW5kZSBCZXJsaW4iLCJsaWNlbnNlIjoiaHR0cDovL2NyZWF0aXZlY29tbW9ucy5vcmcvbGljZW5zZXMvYnkvNC4wL2xlZ2FsY29kZSIsImRlY2FkZXMiOltdLCJrZXl3b3JkcyI6W10sInJlY29yZENvdW50IjoxMDMxNzh9LHsia2V5IjoiZjI5YWIxOTItNTk2NC00MGFlLWEzOTctZmE0OGZmZGYwNjYxIiwidGl0bGUiOiJab29sb2dpc2NoZSBTdGFhdHNzYW1tbHVuZyBNdWVuY2hlbiAtIEludGVybmF0aW9uYWwgQmFyY29kZSBvZiBMaWZlIChpQk9MKSAtIEJhcmNvZGUgb2YgTGlmZSBQcm9qZWN0IFNwZWNpbWVuIERhdGEiLCJ0eXBlIjoiT0NDVVJSRU5DRSIsImhvc3RpbmdPcmdhbml6YXRpb25LZXkiOiIxMDk4MDkyMC02ZGFkLTExZGEtYWQxMy1iOGEwM2M1MGE4NjIiLCJob3N0aW5nT3JnYW5pemF0aW9uVGl0bGUiOiJNdXNldW0gZsO8ciBOYXR1cmt1bmRlIEJlcmxpbiIsImNvdW50cnlDb3ZlcmFnZSI6W10sInB1Ymxpc2hpbmdDb3VudHJ5IjoiREUiLCJwdWJsaXNoaW5nT3JnYW5pemF0aW9uS2V5IjoiMGUyYWU1MzgtNDMzMi00ZjQxLWJmZWUtOGFhMmM2OTNkMmE5IiwicHVibGlzaGluZ09yZ2FuaXphdGlvblRpdGxlIjoiWm9vbG9naXNjaGUgU3RhYXRzc2FtbWx1bmcgTcO8bmNoZW4vU3RhYXRsaWNoZSBOYXR1cndpc3NlbnNjaGFmdGxpY2hlIFNhbW1sdW5nZW4gQmF5ZXJucyIsImxpY2Vuc2UiOiJodHRwOi8vY3JlYXRpdmVjb21tb25zLm9yZy9saWNlbnNlcy9ieS80LjAvbGVnYWxjb2RlIiwiZGVjYWRlcyI6W10sImtleXdvcmRzIjpbXSwicmVjb3JkQ291bnQiOjk5NzQ5fSx7ImtleSI6IjgyOGEzZDhjLWY3NjItMTFlMS1hNDM5LTAwMTQ1ZWI0NWU5YSIsInRpdGxlIjoiSGVyYmFyaXVtIFNlbmNrZW5iZXJnaWFudW0gKEZSKSAtIEZ1bmdpIiwiZGVzY3JpcHRpb24iOiJIZXJiYXJpdW0gU2VuY2tlbmJlcmdpYW51bSAoRlIpIC0gRnVuZ2kiLCJ0eXBlIjoiT0NDVVJSRU5DRSIsImhvc3RpbmdPcmdhbml6YXRpb25LZXkiOiJjNzZjZjAzMC0yYTk1LTExZGEtOWNjMS1iOGEwM2M1MGE4NjIiLCJob3N0aW5nT3JnYW5pemF0aW9uVGl0bGUiOiJTZW5ja2VuYmVyZyIsImNvdW50cnlDb3ZlcmFnZSI6W10sInB1Ymxpc2hpbmdDb3VudHJ5IjoiREUiLCJwdWJsaXNoaW5nT3JnYW5pemF0aW9uS2V5IjoiYzc2Y2YwMzAtMmE5NS0xMWRhLTljYzEtYjhhMDNjNTBhODYyIiwicHVibGlzaGluZ09yZ2FuaXphdGlvblRpdGxlIjoiU2VuY2tlbmJlcmciLCJsaWNlbnNlIjoiaHR0cDovL2NyZWF0aXZlY29tbW9ucy5vcmcvbGljZW5zZXMvYnkvNC4wL2xlZ2FsY29kZSIsImRlY2FkZXMiOltdLCJrZXl3b3JkcyI6W10sInJlY29yZENvdW50Ijo5ODU5MH0seyJrZXkiOiI5NjY2NTkzYS1mNzYyLTExZTEtYTQzOS0wMDE0NWViNDVlOWEiLCJ0aXRsZSI6IkNvbGxlY3Rpb24gTWFtbWFsaWEgU01GIiwiZGVzY3JpcHRpb24iOiJNYW1tYWxzIG9mIHRoZSB3b3JsZCIsInR5cGUiOiJPQ0NVUlJFTkNFIiwiaG9zdGluZ09yZ2FuaXphdGlvbktleSI6ImM3NmNmMDMwLTJhOTUtMTFkYS05Y2MxLWI4YTAzYzUwYTg2MiIsImhvc3RpbmdPcmdhbml6YXRpb25UaXRsZSI6IlNlbmNrZW5iZXJnIiwiY291bnRyeUNvdmVyYWdlIjpbXSwicHVibGlzaGluZ0NvdW50cnkiOiJERSIsInB1Ymxpc2hpbmdPcmdhbml6YXRpb25LZXkiOiJjNzZjZjAzMC0yYTk1LTExZGEtOWNjMS1iOGEwM2M1MGE4NjIiLCJwdWJsaXNoaW5nT3JnYW5pemF0aW9uVGl0bGUiOiJTZW5ja2VuYmVyZyIsImxpY2Vuc2UiOiJodHRwOi8vY3JlYXRpdmVjb21tb25zLm9yZy9saWNlbnNlcy9ieS80LjAvbGVnYWxjb2RlIiwiZGVjYWRlcyI6W10sImtleXdvcmRzIjpbXSwicmVjb3JkQ291bnQiOjkyMjA3fSx7ImtleSI6Ijk2Njc4ZTkwLWY3NjItMTFlMS1hNDM5LTAwMTQ1ZWI0NWU5YSIsInRpdGxlIjoiQ29sbGVjdGlvbiBBdmVzIChiaXJkIHNraW5zKSBTTUYiLCJkZXNjcmlwdGlvbiI6IkF2ZXMgb2YgdGhlIHdvcmxkLCBiaXJkIHNraW5zIiwidHlwZSI6Ik9DQ1VSUkVOQ0UiLCJob3N0aW5nT3JnYW5pemF0aW9uS2V5IjoiYzc2Y2YwMzAtMmE5NS0xMWRhLTljYzEtYjhhMDNjNTBhODYyIiwiaG9zdGluZ09yZ2FuaXphdGlvblRpdGxlIjoiU2VuY2tlbmJlcmciLCJjb3VudHJ5Q292ZXJhZ2UiOltdLCJwdWJsaXNoaW5nQ291bnRyeSI6IkRFIiwicHVibGlzaGluZ09yZ2FuaXphdGlvbktleSI6ImM3NmNmMDMwLTJhOTUtMTFkYS05Y2MxLWI4YTAzYzUwYTg2MiIsInB1Ymxpc2hpbmdPcmdhbml6YXRpb25UaXRsZSI6IlNlbmNrZW5iZXJnIiwibGljZW5zZSI6Imh0dHA6Ly9jcmVhdGl2ZWNvbW1vbnMub3JnL2xpY2Vuc2VzL2J5LzQuMC9sZWdhbGNvZGUiLCJkZWNhZGVzIjpbXSwia2V5d29yZHMiOltdLCJyZWNvcmRDb3VudCI6NzkzMjJ9LHsia2V5IjoiNzFmNGM5NzQtZjc2Mi0xMWUxLWE0MzktMDAxNDVlYjQ1ZTlhIiwidGl0bGUiOiJNZk4gLSBGb3NzaWwgdmVydGVicmF0ZXMgSVYiLCJkZXNjcmlwdGlvbiI6IkZvc3NpbCBtYW1tYWxzIChib25lcyBhbmQgdGVldGgpIiwidHlwZSI6Ik9DQ1VSUkVOQ0UiLCJob3N0aW5nT3JnYW5pemF0aW9uS2V5IjoiMTA5ODA5MjAtNmRhZC0xMWRhLWFkMTMtYjhhMDNjNTBhODYyIiwiaG9zdGluZ09yZ2FuaXphdGlvblRpdGxlIjoiTXVzZXVtIGbDvHIgTmF0dXJrdW5kZSBCZXJsaW4iLCJjb3VudHJ5Q292ZXJhZ2UiOltdLCJwdWJsaXNoaW5nQ291bnRyeSI6IkRFIiwicHVibGlzaGluZ09yZ2FuaXphdGlvbktleSI6IjEwOTgwOTIwLTZkYWQtMTFkYS1hZDEzLWI4YTAzYzUwYTg2MiIsInB1Ymxpc2hpbmdPcmdhbml6YXRpb25UaXRsZSI6Ik11c2V1bSBmw7xyIE5hdHVya3VuZGUgQmVybGluIiwibGljZW5zZSI6Imh0dHA6Ly9jcmVhdGl2ZWNvbW1vbnMub3JnL2xpY2Vuc2VzL2J5LzQuMC9sZWdhbGNvZGUiLCJkZWNhZGVzIjpbXSwia2V5d29yZHMiOltdLCJyZWNvcmRDb3VudCI6Nzc0MTR9LHsia2V5IjoiOTY1OTYwMzYtZjc2Mi0xMWUxLWE0MzktMDAxNDVlYjQ1ZTlhIiwidGl0bGUiOiJDb2xsZWN0aW9uIEFyYWNobm9sb2d5IFNNRiIsImRlc2NyaXB0aW9uIjoiT25lIG9mIHRoZSBtb3N0IGltcG9ydGFudCBBcmFuZWEgYW5kIE9waWxpb25lcyBjb2xsZWN0aW9uIG9mIHRoZSB3b3JsZCIsInR5cGUiOiJPQ0NVUlJFTkNFIiwiaG9zdGluZ09yZ2FuaXphdGlvbktleSI6ImM3NmNmMDMwLTJhOTUtMTFkYS05Y2MxLWI4YTAzYzUwYTg2MiIsImhvc3RpbmdPcmdhbml6YXRpb25UaXRsZSI6IlNlbmNrZW5iZXJnIiwiY291bnRyeUNvdmVyYWdlIjpbXSwicHVibGlzaGluZ0NvdW50cnkiOiJERSIsInB1Ymxpc2hpbmdPcmdhbml6YXRpb25LZXkiOiJjNzZjZjAzMC0yYTk1LTExZGEtOWNjMS1iOGEwM2M1MGE4NjIiLCJwdWJsaXNoaW5nT3JnYW5pemF0aW9uVGl0bGUiOiJTZW5ja2VuYmVyZyIsImxpY2Vuc2UiOiJodHRwOi8vY3JlYXRpdmVjb21tb25zLm9yZy9saWNlbnNlcy9ieS80LjAvbGVnYWxjb2RlIiwiZGVjYWRlcyI6W10sImtleXdvcmRzIjpbXSwicmVjb3JkQ291bnQiOjc0MDM0fSx7ImtleSI6ImJkNjNhOTNjLTgyODMtMTFlMi1iODczLTAwMTQ1ZWI0NWU5YSIsInRpdGxlIjoiRUNhdFN5bTogRWxlY3Ryb25pYyBXb3JsZCBDYXRhbG9nIG9mIFN5bXBoeXRhIiwidHlwZSI6Ik9DQ1VSUkVOQ0UiLCJob3N0aW5nT3JnYW5pemF0aW9uS2V5IjoiYzc2Y2YwMzAtMmE5NS0xMWRhLTljYzEtYjhhMDNjNTBhODYyIiwiaG9zdGluZ09yZ2FuaXphdGlvblRpdGxlIjoiU2VuY2tlbmJlcmciLCJjb3VudHJ5Q292ZXJhZ2UiOltdLCJwdWJsaXNoaW5nQ291bnRyeSI6IkRFIiwicHVibGlzaGluZ09yZ2FuaXphdGlvbktleSI6ImM3NmNmMDMwLTJhOTUtMTFkYS05Y2MxLWI4YTAzYzUwYTg2MiIsInB1Ymxpc2hpbmdPcmdhbml6YXRpb25UaXRsZSI6IlNlbmNrZW5iZXJnIiwibGljZW5zZSI6Imh0dHA6Ly9jcmVhdGl2ZWNvbW1vbnMub3JnL2xpY2Vuc2VzL2J5LzQuMC9sZWdhbGNvZGUiLCJkZWNhZGVzIjpbXSwia2V5d29yZHMiOltdLCJyZWNvcmRDb3VudCI6NjkzOTZ9LHsia2V5IjoiNjFhOWNhMzgtYjYyZi0xMWUyLWFmY2ItMDAxNDVlYjQ1ZTlhIiwidGl0bGUiOiJGdW5ndXMgQ29sbGVjdGlvbnMgYXQgU3RhYXRsaWNoZXMgTXVzZXVtIGbDvHIgTmF0dXJrdW5kZSBLYXJsc3J1aGUgKEhlcmJhcml1bSBLUikiLCJkZXNjcmlwdGlvbiI6Imh0dHA6Ly93d3cuc21uay5kZS9lbi9jb2xsZWN0aW9ucy9ib3RhbnkvZnVuZ2kvIiwidHlwZSI6Ik9DQ1VSUkVOQ0UiLCJob3N0aW5nT3JnYW5pemF0aW9uS2V5IjoiMDY3NGFlYTAtYTdlMS0xMWQ4LTk1MzQtYjhhMDNjNTBhODYyIiwiaG9zdGluZ09yZ2FuaXphdGlvblRpdGxlIjoiU3RhYXRsaWNoZSBOYXR1cndpc3NlbnNjaGFmdGxpY2hlIFNhbW1sdW5nZW4gQmF5ZXJucyIsImNvdW50cnlDb3ZlcmFnZSI6W10sInB1Ymxpc2hpbmdDb3VudHJ5IjoiREUiLCJwdWJsaXNoaW5nT3JnYW5pemF0aW9uS2V5IjoiMDY3NGFlYTAtYTdlMS0xMWQ4LTk1MzQtYjhhMDNjNTBhODYyIiwicHVibGlzaGluZ09yZ2FuaXphdGlvblRpdGxlIjoiU3RhYXRsaWNoZSBOYXR1cndpc3NlbnNjaGFmdGxpY2hlIFNhbW1sdW5nZW4gQmF5ZXJucyIsImxpY2Vuc2UiOiJodHRwOi8vY3JlYXRpdmVjb21tb25zLm9yZy9saWNlbnNlcy9ieS80LjAvbGVnYWxjb2RlIiwiZGVjYWRlcyI6W10sImtleXdvcmRzIjpbXSwicmVjb3JkQ291bnQiOjY3Mjg4fSx7ImtleSI6IjgyYjdkMmVjLWY3NjItMTFlMS1hNDM5LTAwMTQ1ZWI0NWU5YSIsInRpdGxlIjoiQ2hyeXNvbWVsaWRhZSBvZiBDZW50cmFsIEV1cm9wZSIsInR5cGUiOiJPQ0NVUlJFTkNFIiwiaG9zdGluZ09yZ2FuaXphdGlvbktleSI6IjEwOTgwOTIwLTZkYWQtMTFkYS1hZDEzLWI4YTAzYzUwYTg2MiIsImhvc3RpbmdPcmdhbml6YXRpb25UaXRsZSI6Ik11c2V1bSBmw7xyIE5hdHVya3VuZGUgQmVybGluIiwiY291bnRyeUNvdmVyYWdlIjpbXSwicHVibGlzaGluZ0NvdW50cnkiOiJERSIsInB1Ymxpc2hpbmdPcmdhbml6YXRpb25LZXkiOiI3YWMxOWM3ZS0zZTQ5LTQ2NzItYWM5NC03NjEyNmQ2NzZmNDAiLCJwdWJsaXNoaW5nT3JnYW5pemF0aW9uVGl0bGUiOiJFcm5zdC1Nb3JpdHotQXJuZHQtVW5pdmVyc2l0YWV0IiwibGljZW5zZSI6Imh0dHA6Ly9jcmVhdGl2ZWNvbW1vbnMub3JnL2xpY2Vuc2VzL2J5LzQuMC9sZWdhbGNvZGUiLCJkZWNhZGVzIjpbXSwia2V5d29yZHMiOltdLCJyZWNvcmRDb3VudCI6NjQ1NTR9LHsia2V5IjoiZTU3NzRkOTAtOWYwMS00MmJiLWE3NDctMzIzMzFiZTgyYjE4IiwidGl0bGUiOiJBZnJpY2FuIFBsYW50cyAtIGEgcGhvdG8gZ3VpZGUiLCJkZXNjcmlwdGlvbiI6IlBob3RvZ3JhcGhpYyByZWNvcmRzIG9mIHRyb3BpY2FsIEFmcmljYW4gcGxhbnRzIiwidHlwZSI6Ik9DQ1VSUkVOQ0UiLCJob3N0aW5nT3JnYW5pemF0aW9uS2V5IjoiYzc2Y2YwMzAtMmE5NS0xMWRhLTljYzEtYjhhMDNjNTBhODYyIiwiaG9zdGluZ09yZ2FuaXphdGlvblRpdGxlIjoiU2VuY2tlbmJlcmciLCJjb3VudHJ5Q292ZXJhZ2UiOltdLCJwdWJsaXNoaW5nQ291bnRyeSI6IkRFIiwicHVibGlzaGluZ09yZ2FuaXphdGlvbktleSI6ImM3NmNmMDMwLTJhOTUtMTFkYS05Y2MxLWI4YTAzYzUwYTg2MiIsInB1Ymxpc2hpbmdPcmdhbml6YXRpb25UaXRsZSI6IlNlbmNrZW5iZXJnIiwibGljZW5zZSI6Imh0dHA6Ly9jcmVhdGl2ZWNvbW1vbnMub3JnL2xpY2Vuc2VzL2J5LzQuMC9sZWdhbGNvZGUiLCJkZWNhZGVzIjpbXSwia2V5d29yZHMiOltdLCJyZWNvcmRDb3VudCI6NjA2ODV9LHsia2V5IjoiZjE0YTFmZGItNzcyMS00YTU0LTg1ZmUtN2ZkNGFhNzVmY2ExIiwidGl0bGUiOiJSZWNvcmRzIGZyb20gdGhlIE5JV0EgQWxsU2VhQmlvIG1hcmluZSBiaW9sb2d5IGRhdGFiYXNlIiwiZGVzY3JpcHRpb24iOiI8cD5UaGUgQWxsU2VhQmlvIGRhdGFiYXNlIHdhcyB1c2VkIGJ5IE5JV0EgKGFuZCBpdHMgcHJlZGVjZXNzb3IgLSBOZXcgWmVhbGFuZCBPY2Vhbm9ncmFwaGljIEluc3RpdHV0ZSAoTlpPSSkpIHRvIHN0b3JlIGluZm9ybWF0aW9uIGFib3V0IG1hcmluZSBzcGVjaWVzIGNhdWdodCBkdXJpbmcgcmVzZWFyY2ggb3BlcmF0aW9ucywgYXMgd2VsbCBhcyBtdXNldW0gc3BlY2ltZW5zIGhlbGQgYXQgdGhlIE5ldyBaZWFsYW5kIE5hdGlvbmFsIEludmVydGVicmF0ZSBDb2xsZWN0aW9uIChOSUMpLjwvcD5cbjxwPkFsbFNlYUJpbyB3YXMgcmV0aXJlZCBpbiAyMDA1IGFuZCByZXBsYWNlZCBieSB0aGUgQmlvZHMgZGF0YWJhc2UgKGZvciByZXNlYXJjaCBjYXRjaCBkYXRhKSBhbmQgdGhlIFNwZWNpZnkgZGF0YWJhc2UgZm9yIE5JQyBtdXNldW0gc3BlY2ltZW5zLjwvcD4iLCJ0eXBlIjoiT0NDVVJSRU5DRSIsImhvc3RpbmdPcmdhbml6YXRpb25LZXkiOiJjNThhYzAxOS1iNDEzLTQ2MTMtODc3Mi0zOWU1N2FjYmViOGUiLCJob3N0aW5nT3JnYW5pemF0aW9uVGl0bGUiOiJUaGUgTmF0aW9uYWwgSW5zdGl0dXRlIG9mIFdhdGVyIGFuZCBBdG1vc3BoZXJpYyBSZXNlYXJjaCAoTklXQSkiLCJjb3VudHJ5Q292ZXJhZ2UiOltdLCJwdWJsaXNoaW5nQ291bnRyeSI6Ik5aIiwicHVibGlzaGluZ09yZ2FuaXphdGlvbktleSI6ImM1OGFjMDE5LWI0MTMtNDYxMy04NzcyLTM5ZTU3YWNiZWI4ZSIsInB1Ymxpc2hpbmdPcmdhbml6YXRpb25UaXRsZSI6IlRoZSBOYXRpb25hbCBJbnN0aXR1dGUgb2YgV2F0ZXIgYW5kIEF0bW9zcGhlcmljIFJlc2VhcmNoIChOSVdBKSIsImxpY2Vuc2UiOiJodHRwOi8vY3JlYXRpdmVjb21tb25zLm9yZy9saWNlbnNlcy9ieS80LjAvbGVnYWxjb2RlIiwiZGVjYWRlcyI6W10sImtleXdvcmRzIjpbIk9ic2VydmF0aW9uIiwiT2NjdXJyZW5jZSJdLCJyZWNvcmRDb3VudCI6NTc0NTJ9LHsia2V5IjoiMThkMDI3MGUtODk5Yi00YTE2LTgyZjItYWE4N2Q5M2JiMWRmIiwidGl0bGUiOiJDYXd0aHJvbiBJbnN0aXR1dGUgZnJlc2h3YXRlciBpbnZlcnRlYnJhdGUgZGF0YSIsImRlc2NyaXB0aW9uIjoiT3ZlciB0aGUgcGFzdCAyMCsgeWVhcnMgdGhlIENhd3Rocm9uIEluc3RpdHV0ZSBoYXMgYWNjdW11bGF0ZWQgYSBsYXJnZSBzdG9yZSBvZiBpbmZvcm1hdGlvbiBvbiB0aGUgbmF0aW9uLXdpZGUgZGlzdHJpYnV0aW9uIG9mIGZyZXNod2F0ZXIgaW52ZXJ0ZWJyYXRlcyBhbmQgYWxnYWUuIFRoaXMgZGF0YXNldCBjb3ZlcnMgMjAgeWVhcnMgd29ydGggb2YgbWFjb2ludmVydGVicmF0ZSBhbmQgYWxnYWwgc2FtcGxlcyBwcm9jZXNzZWQgYnkgQ2F3dGhyb24gZm9yIHJlZ2lvbmFsIGNvdW5jaWxzIFN0YXRlIG9mIHRoZSBFbnZpcm9ubWVudCBtb25pdG9yaW5nLCBmdW5kZWQgcmVzZWFyY2ggd29yaywgcmVzb3VyY2UgY29tcGxpYW5jZSBtb25pdG9yaW5nIHN1cnZleXMsIGFuZCBhc3Nlc3NtZW50cyBvZiBlbnZpcm9ubWVudGFsIGVmZmVjdHMuIiwidHlwZSI6Ik9DQ1VSUkVOQ0UiLCJob3N0aW5nT3JnYW5pemF0aW9uS2V5IjoiYzU4YWMwMTktYjQxMy00NjEzLTg3NzItMzllNTdhY2JlYjhlIiwiaG9zdGluZ09yZ2FuaXphdGlvblRpdGxlIjoiVGhlIE5hdGlvbmFsIEluc3RpdHV0ZSBvZiBXYXRlciBhbmQgQXRtb3NwaGVyaWMgUmVzZWFyY2ggKE5JV0EpIiwiY291bnRyeUNvdmVyYWdlIjpbXSwicHVibGlzaGluZ0NvdW50cnkiOiJOWiIsInB1Ymxpc2hpbmdPcmdhbml6YXRpb25LZXkiOiJjNThhYzAxOS1iNDEzLTQ2MTMtODc3Mi0zOWU1N2FjYmViOGUiLCJwdWJsaXNoaW5nT3JnYW5pemF0aW9uVGl0bGUiOiJUaGUgTmF0aW9uYWwgSW5zdGl0dXRlIG9mIFdhdGVyIGFuZCBBdG1vc3BoZXJpYyBSZXNlYXJjaCAoTklXQSkiLCJsaWNlbnNlIjoiaHR0cDovL2NyZWF0aXZlY29tbW9ucy5vcmcvbGljZW5zZXMvYnktbmMvNC4wL2xlZ2FsY29kZSIsImRlY2FkZXMiOlsxOTgwLDE5OTAsMjAwMF0sImtleXdvcmRzIjpbIk9jY3VycmVuY2UiXSwicmVjb3JkQ291bnQiOjU0NDE1fSx7ImtleSI6IjZhMTIyMzQ2LTA4YjktMTFlMy1hYjFmLTAwMTQ1ZWI0NWU5YSIsInRpdGxlIjoiTmF0dXJoaXN0b3Jpc2NoZXMgTXVzZXVtIE1haW56LCBGZWxkYmVvYmFjaHR1bmdzZGF0ZW4gUGZsYW56ZW4iLCJkZXNjcmlwdGlvbiI6IlRoaXMgZGF0YXNldCByZXByZXNlbnRzIGJvdGFuaWNhbCBvYnNlcnZhdGlvbiBkYXRhIGZyb20gYWxsIG92ZXIgR2VybWFueSwgcGFydGljdWxhcmx5IFJoaW5lbGFuZC1QYWxhdGluYXRlLiBBbG1vc3QgYWxsIHBsYW50cyB3ZXJlIG9ic2VydmVkIHNpbmNlIDE5OTAuIFRoZSBkYXRhIGhhcyBiZWVuIGludGVncmF0ZWQgaW50byB0aGUgbW9zdCByZWNlbnQgbWFwcGluZyBwcm9qZWN0IGNvbmNlcm5pbmcgdGhlIOKAnEZsb3JhIG9mIEdlcm1hbnnigJ0uIiwidHlwZSI6Ik9DQ1VSUkVOQ0UiLCJob3N0aW5nT3JnYW5pemF0aW9uS2V5IjoiNTcyNTRiZDAtODI1Ni0xMWQ4LWI3ZWQtYjhhMDNjNTBhODYyIiwiaG9zdGluZ09yZ2FuaXphdGlvblRpdGxlIjoiQm90YW5pYyBHYXJkZW4gYW5kIEJvdGFuaWNhbCBNdXNldW0gQmVybGluLURhaGxlbSIsImNvdW50cnlDb3ZlcmFnZSI6W10sInB1Ymxpc2hpbmdDb3VudHJ5IjoiREUiLCJwdWJsaXNoaW5nT3JnYW5pemF0aW9uS2V5IjoiMzNhZWNkZTUtN2UxMy00MjcyLTljYjctZjRmM2IwZWI4MjBjIiwicHVibGlzaGluZ09yZ2FuaXphdGlvblRpdGxlIjoiTmF0dXJoaXN0b3Jpc2NoZXMgTXVzZXVtIE1haW56IiwibGljZW5zZSI6Imh0dHA6Ly9jcmVhdGl2ZWNvbW1vbnMub3JnL2xpY2Vuc2VzL2J5LzQuMC9sZWdhbGNvZGUiLCJkZWNhZGVzIjpbXSwia2V5d29yZHMiOltdLCJyZWNvcmRDb3VudCI6NTQ0MDJ9LHsia2V5IjoiZjQ0MTljNzAtNjE0Zi0xMWUyLTg5N2EtMDAxNDVlYjQ1ZTlhIiwidGl0bGUiOiJTeXNUYXggLSBIZXJiYXJpYSIsImRlc2NyaXB0aW9uIjoiYSBEYXRhYmFzZSBTeXN0ZW0gZm9yIFN5c3RlbWF0aWNzIGFuZCBUYXhvbm9teSIsInR5cGUiOiJPQ0NVUlJFTkNFIiwiaG9zdGluZ09yZ2FuaXphdGlvbktleSI6IjAyMTEyMWMwLWYwNDAtMTFkOC1iMjJmLWI4YTAzYzUwYTg2MiIsImhvc3RpbmdPcmdhbml6YXRpb25UaXRsZSI6IlN5c1RheCIsImNvdW50cnlDb3ZlcmFnZSI6W10sInB1Ymxpc2hpbmdDb3VudHJ5IjoiREUiLCJwdWJsaXNoaW5nT3JnYW5pemF0aW9uS2V5IjoiMDIxMTIxYzAtZjA0MC0xMWQ4LWIyMmYtYjhhMDNjNTBhODYyIiwicHVibGlzaGluZ09yZ2FuaXphdGlvblRpdGxlIjoiU3lzVGF4IiwibGljZW5zZSI6Imh0dHA6Ly9jcmVhdGl2ZWNvbW1vbnMub3JnL2xpY2Vuc2VzL2J5LzQuMC9sZWdhbGNvZGUiLCJkZWNhZGVzIjpbXSwia2V5d29yZHMiOltdLCJyZWNvcmRDb3VudCI6NTMyMDl9LHsia2V5IjoiOTY1YmJiZDgtZjc2Mi0xMWUxLWE0MzktMDAxNDVlYjQ1ZTlhIiwidGl0bGUiOiJDb2xsZWN0aW9uIE1vbGx1c2NhIFNNRiIsImRlc2NyaXB0aW9uIjoiTW9sbHVzY3Mgb2YgdGhlIHdvcmxkIiwidHlwZSI6Ik9DQ1VSUkVOQ0UiLCJob3N0aW5nT3JnYW5pemF0aW9uS2V5IjoiYzc2Y2YwMzAtMmE5NS0xMWRhLTljYzEtYjhhMDNjNTBhODYyIiwiaG9zdGluZ09yZ2FuaXphdGlvblRpdGxlIjoiU2VuY2tlbmJlcmciLCJjb3VudHJ5Q292ZXJhZ2UiOltdLCJwdWJsaXNoaW5nQ291bnRyeSI6IkRFIiwicHVibGlzaGluZ09yZ2FuaXphdGlvbktleSI6ImM3NmNmMDMwLTJhOTUtMTFkYS05Y2MxLWI4YTAzYzUwYTg2MiIsInB1Ymxpc2hpbmdPcmdhbml6YXRpb25UaXRsZSI6IlNlbmNrZW5iZXJnIiwibGljZW5zZSI6Imh0dHA6Ly9jcmVhdGl2ZWNvbW1vbnMub3JnL2xpY2Vuc2VzL2J5LzQuMC9sZWdhbGNvZGUiLCJkZWNhZGVzIjpbXSwia2V5d29yZHMiOltdLCJyZWNvcmRDb3VudCI6NTMwNTl9LHsia2V5IjoiODBiOWZlOTctZDU4Ni00OWUwLWJiNGItYzNjYzBjMzIxMmNmIiwidGl0bGUiOiJXZXN0IEFmcmljYW4gVmVnZXRhdGlvbiBEYXRhYmFzZSIsImRlc2NyaXB0aW9uIjoiVmFzY3VsYXIgcGxhbnQgb2JzZXJ2YXRpb25zIGZyb20gaW52ZW50b3JpZXMgYW5kIHJlbGV2w6lzLiIsInR5cGUiOiJPQ0NVUlJFTkNFIiwiaG9zdGluZ09yZ2FuaXphdGlvbktleSI6ImM3NmNmMDMwLTJhOTUtMTFkYS05Y2MxLWI4YTAzYzUwYTg2MiIsImhvc3RpbmdPcmdhbml6YXRpb25UaXRsZSI6IlNlbmNrZW5iZXJnIiwiY291bnRyeUNvdmVyYWdlIjpbXSwicHVibGlzaGluZ0NvdW50cnkiOiJERSIsInB1Ymxpc2hpbmdPcmdhbml6YXRpb25LZXkiOiJjNzZjZjAzMC0yYTk1LTExZGEtOWNjMS1iOGEwM2M1MGE4NjIiLCJwdWJsaXNoaW5nT3JnYW5pemF0aW9uVGl0bGUiOiJTZW5ja2VuYmVyZyIsImxpY2Vuc2UiOiJodHRwOi8vY3JlYXRpdmVjb21tb25zLm9yZy9saWNlbnNlcy9ieS80LjAvbGVnYWxjb2RlIiwiZGVjYWRlcyI6W10sImtleXdvcmRzIjpbXSwicmVjb3JkQ291bnQiOjUyOTIwfSx7ImtleSI6IjY4NWE0N2YxLTk1YjUtNGJjMC1iMTA1LTNlZDAxMjhkZWZiZiIsInRpdGxlIjoiRnJlc2h3YXRlciBmaXNoZXMgb2YgSXRhbHkiLCJkZXNjcmlwdGlvbiI6IjxwPlRoZSBkYXRhYmFzZSByZWZsZWN0cyB0aGUgd2lkZWx5IGRpc3RyaWJ1dGVkIGRhdGEgZm9yIEl0YWxpYW4gZnJlc2h3YXRlciBmaXNoIG9jY3VycmVuY2VzIGNvbGxlY3RlZCBpbiB0aGUgbGFzdCAyMCB5ZWFycy4gVGhlc2UgZGF0YSBhcmUgYWN0dWFsbHkgaGlkZGVuIGluIGZpc2hlcmllcyBwbGFucyBhbmQgc3R1ZGllcyBvZiB0aGUgSXRhbGlhbiBwcm92aW5jZXMsIHJlZ2lvbnMsIHBhcmtzLCBhbmQgc29tZSBvdGhlciBsb2NhbCBhZG1pbmlzdHJhdGlvbiBkYXRhYmFzZXMgYW5kIOKAnGdyZXkgbGl0ZXJhdHVyZeKAnS4gVGhlc2UgZGF0YWJhc2VzIGFuZCBsaXRlcmF0dXJlIHJlc291cmNlcyBhcmUgY29sbGVjdGVkIHRvZ2V0aGVyLCBhbmQgdGhlIHJlY29yZHMgYXJlIGdlb3JlZmVyZW5jZWQgYW5kIG9yZ2FuaXplZCBpbnRvIG9uZSBkYXRhYmFzZSAodXNpbmcgQXJ0ZWRpYW4gaHR0cDovL2FydGVkaS5ucm0uc2UvZmlzaGJhc2Vfc2Uvc29mdHdhcmUvYXJ0ZWRpYW4vKS48L3A+XG48cD5Gb3IgYWRkaXRpb25hbCBtZXRhZGF0YSBzZWU6IGh0dHA6Ly9kYXRhLmZyZXNod2F0ZXJiaW9kaXZlcnNpdHkuZXUvbWV0YWRiL2JmX21kYl92aWV3LnBocD9lbnRyeUlEPUJGX0NGMjI8L3A+IiwidHlwZSI6Ik9DQ1VSUkVOQ0UiLCJob3N0aW5nT3JnYW5pemF0aW9uS2V5IjoiYjg3MmIwNzUtOWFiNS00ZTI3LWI2YzYtNWFkZDZiODkwMzc5IiwiaG9zdGluZ09yZ2FuaXphdGlvblRpdGxlIjoiQmlvRnJlc2giLCJjb3VudHJ5Q292ZXJhZ2UiOltdLCJwdWJsaXNoaW5nQ291bnRyeSI6IkRFIiwicHVibGlzaGluZ09yZ2FuaXphdGlvbktleSI6ImI4NzJiMDc1LTlhYjUtNGUyNy1iNmM2LTVhZGQ2Yjg5MDM3OSIsInB1Ymxpc2hpbmdPcmdhbml6YXRpb25UaXRsZSI6IkJpb0ZyZXNoIiwibGljZW5zZSI6Imh0dHA6Ly9jcmVhdGl2ZWNvbW1vbnMub3JnL3B1YmxpY2RvbWFpbi96ZXJvLzEuMC9sZWdhbGNvZGUiLCJkZWNhZGVzIjpbMTk5MCwyMDAwLDIwMTBdLCJrZXl3b3JkcyI6WyJyaXZlcnMiLCJnZW5lcmFsZnJlc2h3YXRlciIsIklubGFuZCBXYXRlcnMiLCJCaW90YSIsIk1ldGFkYXRhIiwiT2JzZXJ2YXRpb24iLCJCaW9zcGhlcmUiLCJFbnZpcm9ubWVudCIsIkxvY2F0aW9uIl0sInJlY29yZENvdW50Ijo1MjU0NX0seyJrZXkiOiI3YjlhMDhlYS1mNzYyLTExZTEtYTQzOS0wMDE0NWViNDVlOWEiLCJ0aXRsZSI6IlRoZSBWYXNjdWxhciBQbGFudCBDb2xsZWN0aW9uIGF0IHRoZSBCb3RhbmlzY2hlIFN0YWF0c3NhbW1sdW5nIE3DvG5jaGVuIiwiZGVzY3JpcHRpb24iOiJodHRwOi8vd3d3LmJvdGFuaXNjaGVzdGFhdHNzYW1tbHVuZy5kZS9EYXRhYmFzZUNsaWVudHMvQlNNdnBsYW50c2NvbGwvQWJvdXQuaHRtbCIsInR5cGUiOiJPQ0NVUlJFTkNFIiwiaG9zdGluZ09yZ2FuaXphdGlvbktleSI6IjA2NzRhZWEwLWE3ZTEtMTFkOC05NTM0LWI4YTAzYzUwYTg2MiIsImhvc3RpbmdPcmdhbml6YXRpb25UaXRsZSI6IlN0YWF0bGljaGUgTmF0dXJ3aXNzZW5zY2hhZnRsaWNoZSBTYW1tbHVuZ2VuIEJheWVybnMiLCJjb3VudHJ5Q292ZXJhZ2UiOltdLCJwdWJsaXNoaW5nQ291bnRyeSI6IkRFIiwicHVibGlzaGluZ09yZ2FuaXphdGlvbktleSI6IjA2NzRhZWEwLWE3ZTEtMTFkOC05NTM0LWI4YTAzYzUwYTg2MiIsInB1Ymxpc2hpbmdPcmdhbml6YXRpb25UaXRsZSI6IlN0YWF0bGljaGUgTmF0dXJ3aXNzZW5zY2hhZnRsaWNoZSBTYW1tbHVuZ2VuIEJheWVybnMiLCJsaWNlbnNlIjoiaHR0cDovL2NyZWF0aXZlY29tbW9ucy5vcmcvbGljZW5zZXMvYnkvNC4wL2xlZ2FsY29kZSIsImRlY2FkZXMiOltdLCJrZXl3b3JkcyI6W10sInJlY29yZENvdW50Ijo1MjQxMH0seyJrZXkiOiI1MDVjYWJjMy03NTUwLTRmZDEtOTZkYy02ZDc3ZDVmZmM2ZGUiLCJ0aXRsZSI6Ik1vbml0b3JpbmcgZGF0YSBmcm9tIHRoZSBmZWRlcmFsIHN0YXRlIEhlc3NlIChHZXJtYW55KSIsImRlc2NyaXB0aW9uIjoiPHA+VGhlIGRhdGFzZXQgY29uc2lzdHMgb2Ygb2NjdXJyZW5jZSBkYXRhIG9mIHRoZSBhcXVhdGljIG9yZ2FuaXNtIGdyb3VwcyBmaXNoLCBtYWNyb2ludmVydGVicmF0ZXMgYW5kIG1hY3JvcGh5dGVzIHRoYXQgd2VyZSBzYW1wbGVkIGluIHRoZSBHZXJtYW4gZmVkZXJhbCBzdGF0ZSBIZXNzZSBiZXR3ZWVuIDIwMDUgYW5kIDIwMDguIFRoZSBzYW1wbGluZyB3YXMgY29uZHVjdGVkIGFjY29yZGluZyB0byB0aGUgcHJvdG9jb2xzIG9mIHRoZSBuYXRpb25hbCBtb25pdG9yaW5nIHByb2dyYW1tZSBmb3IgaW1wbGVtZW50YXRpb24gb2YgdGhlIFdhdGVyIEZyYW1ld29yayBEaXJlY3RpdmUuPC9wPlxuPHA+Rm9yIGFkZGl0aW9uYWwgbWV0YWRhdGEgc2VlOiBodHRwOi8vZGF0YS5mcmVzaHdhdGVyYmlvZGl2ZXJzaXR5LmV1L21ldGFkYi9iZl9tZGJfdmlldy5waHA/ZW50cnlJRD1CRkVfODc8L3A+IiwidHlwZSI6Ik9DQ1VSUkVOQ0UiLCJob3N0aW5nT3JnYW5pemF0aW9uS2V5IjoiYjg3MmIwNzUtOWFiNS00ZTI3LWI2YzYtNWFkZDZiODkwMzc5IiwiaG9zdGluZ09yZ2FuaXphdGlvblRpdGxlIjoiQmlvRnJlc2giLCJjb3VudHJ5Q292ZXJhZ2UiOltdLCJwdWJsaXNoaW5nQ291bnRyeSI6IkRFIiwicHVibGlzaGluZ09yZ2FuaXphdGlvbktleSI6ImI4NzJiMDc1LTlhYjUtNGUyNy1iNmM2LTVhZGQ2Yjg5MDM3OSIsInB1Ymxpc2hpbmdPcmdhbml6YXRpb25UaXRsZSI6IkJpb0ZyZXNoIiwibGljZW5zZSI6Imh0dHA6Ly9jcmVhdGl2ZWNvbW1vbnMub3JnL3B1YmxpY2RvbWFpbi96ZXJvLzEuMC9sZWdhbGNvZGUiLCJkZWNhZGVzIjpbMjAwMF0sImtleXdvcmRzIjpbInJpdmVycyIsIk1vbml0b3JpbmcgZGF0YSIsIk1hY3JvcGh5dGVzIiwiV2F0ZXIgRnJhbWV3b3JrIERpcmVjdGl2ZSIsIklubGFuZCBXYXRlcnMiLCJCaW90YSIsIk1hY3JvaW52ZXJ0ZWJyYXRlcyIsIkZpc2giLCJCaW9zcGhlcmUiLCJPY2N1cnJlbmNlIl0sInJlY29yZENvdW50Ijo0OTYzN30seyJrZXkiOiI4NTdjZWExMi1mNzYyLTExZTEtYTQzOS0wMDE0NWViNDVlOWEiLCJ0aXRsZSI6IkhlcmJhcml1bSBTZW5ja2VuYmVyZ2lhbnVtIEfDtnJsaXR6IChHTE0pIiwiZGVzY3JpcHRpb24iOiJUaGUgXCJIZXJiYXJpdW0gTHVzYXRpY3VtXCIgcmVwcmVzZW50cyB0aGUgZmxvcmEgb2YgVXBwZXIgTHVzYXRpYSB3aXRoIDQ3LDAwMCBzcGVjaW1lbnMgb2YgdmFzY3VsYXIgcGxhbnRzIGNvbGxlY3RlZCBvdmVyIGEgcGVyaW9kIG9mIDIwMCB5ZWFycy4gQWJvdXQgNDUsMDAwIHNwZWNpbWVucyBvZiB0aGUgXCJIZXJiYXJpdW0gTHVzYXRpY3VtXCIgYXJlIGRpZ2l0aXNlZCBpbiB0aGUgY29sbGVjdGlvbiBkYXRhYmFzZS4iLCJ0eXBlIjoiT0NDVVJSRU5DRSIsImhvc3RpbmdPcmdhbml6YXRpb25LZXkiOiI1NzI1NGJkMC04MjU2LTExZDgtYjdlZC1iOGEwM2M1MGE4NjIiLCJob3N0aW5nT3JnYW5pemF0aW9uVGl0bGUiOiJCb3RhbmljIEdhcmRlbiBhbmQgQm90YW5pY2FsIE11c2V1bSBCZXJsaW4tRGFobGVtIiwiY291bnRyeUNvdmVyYWdlIjpbXSwicHVibGlzaGluZ0NvdW50cnkiOiJERSIsInB1Ymxpc2hpbmdPcmdhbml6YXRpb25LZXkiOiI1NzI1NGJkMC04MjU2LTExZDgtYjdlZC1iOGEwM2M1MGE4NjIiLCJwdWJsaXNoaW5nT3JnYW5pemF0aW9uVGl0bGUiOiJCb3RhbmljIEdhcmRlbiBhbmQgQm90YW5pY2FsIE11c2V1bSBCZXJsaW4tRGFobGVtIiwibGljZW5zZSI6Imh0dHA6Ly9jcmVhdGl2ZWNvbW1vbnMub3JnL2xpY2Vuc2VzL2J5LzQuMC9sZWdhbGNvZGUiLCJkZWNhZGVzIjpbXSwia2V5d29yZHMiOltdLCJyZWNvcmRDb3VudCI6NDc3NjB9LHsia2V5IjoiMjE0NDhlMzItMTE3YS0xMWUzLWE3NTMtMDAxNDVlYjQ1ZTlhIiwidGl0bGUiOiJTcGhhZXJvY2VyaWRhZSBDb2xsZWN0aW9uIiwiZGVzY3JpcHRpb24iOiJTcGhhZXJvY2VyaWRhZSBDb2xsZWN0aW9uIiwidHlwZSI6Ik9DQ1VSUkVOQ0UiLCJob3N0aW5nT3JnYW5pemF0aW9uS2V5IjoiMTA5ODA5MjAtNmRhZC0xMWRhLWFkMTMtYjhhMDNjNTBhODYyIiwiaG9zdGluZ09yZ2FuaXphdGlvblRpdGxlIjoiTXVzZXVtIGbDvHIgTmF0dXJrdW5kZSBCZXJsaW4iLCJjb3VudHJ5Q292ZXJhZ2UiOltdLCJwdWJsaXNoaW5nQ291bnRyeSI6IkRFIiwicHVibGlzaGluZ09yZ2FuaXphdGlvbktleSI6IjEwOTgwOTIwLTZkYWQtMTFkYS1hZDEzLWI4YTAzYzUwYTg2MiIsInB1Ymxpc2hpbmdPcmdhbml6YXRpb25UaXRsZSI6Ik11c2V1bSBmw7xyIE5hdHVya3VuZGUgQmVybGluIiwibGljZW5zZSI6Imh0dHA6Ly9jcmVhdGl2ZWNvbW1vbnMub3JnL2xpY2Vuc2VzL2J5LzQuMC9sZWdhbGNvZGUiLCJkZWNhZGVzIjpbXSwia2V5d29yZHMiOltdLCJyZWNvcmRDb3VudCI6NDc0OTl9LHsia2V5IjoiODI5MTU5M2MtZjc2Mi0xMWUxLWE0MzktMDAxNDVlYjQ1ZTlhIiwidGl0bGUiOiJDb2xsZWN0aW9uIE1hbGFrb2xvZ2llIC0gU05TRCIsImRlc2NyaXB0aW9uIjoiTW9sbHVzY3Mgb2YgdGhlIHdvcmxkIiwidHlwZSI6Ik9DQ1VSUkVOQ0UiLCJob3N0aW5nT3JnYW5pemF0aW9uS2V5IjoiYzc2Y2YwMzAtMmE5NS0xMWRhLTljYzEtYjhhMDNjNTBhODYyIiwiaG9zdGluZ09yZ2FuaXphdGlvblRpdGxlIjoiU2VuY2tlbmJlcmciLCJjb3VudHJ5Q292ZXJhZ2UiOltdLCJwdWJsaXNoaW5nQ291bnRyeSI6IkRFIiwicHVibGlzaGluZ09yZ2FuaXphdGlvbktleSI6ImM3NmNmMDMwLTJhOTUtMTFkYS05Y2MxLWI4YTAzYzUwYTg2MiIsInB1Ymxpc2hpbmdPcmdhbml6YXRpb25UaXRsZSI6IlNlbmNrZW5iZXJnIiwibGljZW5zZSI6Imh0dHA6Ly9jcmVhdGl2ZWNvbW1vbnMub3JnL2xpY2Vuc2VzL2J5LzQuMC9sZWdhbGNvZGUiLCJkZWNhZGVzIjpbXSwia2V5d29yZHMiOltdLCJyZWNvcmRDb3VudCI6NDQzODh9LHsia2V5IjoiNzA5MDZiOWMtOTU5NC00MmU0LTg0ZmItOGNmMGVlNjZkMjJmIiwidGl0bGUiOiJUaGUgRW52aXJvbm1lbnRhbCBTYW1wbGUgQ29sbGVjdGlvbiBvZiBTcGlkZXJzIGF0IHRoZSBTdGFhdGxpY2hlcyBNdXNldW0gZsO8ciBOYXR1cmt1bmRlIEthcmxzcnVoZSIsImRlc2NyaXB0aW9uIjoiaHR0cDovL3d3dy5kaXZlcnNpdHl3b3JrYmVuY2guZGUvRGF0YWJhc2VDbGllbnRzL1NNTktzcGlkZXJzdHVkY29sbC9BYm91dC5odG1sIiwidHlwZSI6Ik9DQ1VSUkVOQ0UiLCJob3N0aW5nT3JnYW5pemF0aW9uS2V5IjoiMDY3NGFlYTAtYTdlMS0xMWQ4LTk1MzQtYjhhMDNjNTBhODYyIiwiaG9zdGluZ09yZ2FuaXphdGlvblRpdGxlIjoiU3RhYXRsaWNoZSBOYXR1cndpc3NlbnNjaGFmdGxpY2hlIFNhbW1sdW5nZW4gQmF5ZXJucyIsImNvdW50cnlDb3ZlcmFnZSI6W10sInB1Ymxpc2hpbmdDb3VudHJ5IjoiREUiLCJwdWJsaXNoaW5nT3JnYW5pemF0aW9uS2V5IjoiMDY3NGFlYTAtYTdlMS0xMWQ4LTk1MzQtYjhhMDNjNTBhODYyIiwicHVibGlzaGluZ09yZ2FuaXphdGlvblRpdGxlIjoiU3RhYXRsaWNoZSBOYXR1cndpc3NlbnNjaGFmdGxpY2hlIFNhbW1sdW5nZW4gQmF5ZXJucyIsImxpY2Vuc2UiOiJodHRwOi8vY3JlYXRpdmVjb21tb25zLm9yZy9saWNlbnNlcy9ieS80LjAvbGVnYWxjb2RlIiwiZGVjYWRlcyI6W10sImtleXdvcmRzIjpbXSwicmVjb3JkQ291bnQiOjQ0MTQ3fSx7ImtleSI6Ijk2NjFiYzQwLWY3NjItMTFlMS1hNDM5LTAwMTQ1ZWI0NWU5YSIsInRpdGxlIjoiQ29sbGVjdGlvbiBIZXJwZXRvbG9neSBTTUYiLCJkZXNjcmlwdGlvbiI6IlJlcHRpbGVzIGFuZCBBbXBoaWJpYW5zIG9mIHRoZSB3b3JsZCIsInR5cGUiOiJPQ0NVUlJFTkNFIiwiaG9zdGluZ09yZ2FuaXphdGlvbktleSI6ImM3NmNmMDMwLTJhOTUtMTFkYS05Y2MxLWI4YTAzYzUwYTg2MiIsImhvc3RpbmdPcmdhbml6YXRpb25UaXRsZSI6IlNlbmNrZW5iZXJnIiwiY291bnRyeUNvdmVyYWdlIjpbXSwicHVibGlzaGluZ0NvdW50cnkiOiJERSIsInB1Ymxpc2hpbmdPcmdhbml6YXRpb25LZXkiOiJjNzZjZjAzMC0yYTk1LTExZGEtOWNjMS1iOGEwM2M1MGE4NjIiLCJwdWJsaXNoaW5nT3JnYW5pemF0aW9uVGl0bGUiOiJTZW5ja2VuYmVyZyIsImxpY2Vuc2UiOiJodHRwOi8vY3JlYXRpdmVjb21tb25zLm9yZy9saWNlbnNlcy9ieS80LjAvbGVnYWxjb2RlIiwiZGVjYWRlcyI6W10sImtleXdvcmRzIjpbXSwicmVjb3JkQ291bnQiOjQzNTA1fSx7ImtleSI6Ijk2NjhiNjc2LWY3NjItMTFlMS1hNDM5LTAwMTQ1ZWI0NWU5YSIsInRpdGxlIjoiQ29sbGVjdGlvbiBDcnVzdGFjZWEgU01GIiwiZGVzY3JpcHRpb24iOiJEZWNhcG9kYSBhbmQgSXNvcG9kYSwgbWFpbmx5IE5vcnRoIFNlYSwgTWVkaXRlcnJhbmVhbiwgSmFwYW4uIC0tIExhcmdlc3QgY29sbGVjdGlvbiBvZiBqYXBhbmVzZSBjcmFicyBvdXRzaWRlIG9mIEphcGFuLiAtLSBPbmUgb2YgdGhlIGxhcmdlc3QgZnJlc2h3YXRlcmNyYWItY29sbGVjdGlvbiBvZiB0aGUgd29ybGQiLCJ0eXBlIjoiT0NDVVJSRU5DRSIsImhvc3RpbmdPcmdhbml6YXRpb25LZXkiOiJjNzZjZjAzMC0yYTk1LTExZGEtOWNjMS1iOGEwM2M1MGE4NjIiLCJob3N0aW5nT3JnYW5pemF0aW9uVGl0bGUiOiJTZW5ja2VuYmVyZyIsImNvdW50cnlDb3ZlcmFnZSI6W10sInB1Ymxpc2hpbmdDb3VudHJ5IjoiREUiLCJwdWJsaXNoaW5nT3JnYW5pemF0aW9uS2V5IjoiYzc2Y2YwMzAtMmE5NS0xMWRhLTljYzEtYjhhMDNjNTBhODYyIiwicHVibGlzaGluZ09yZ2FuaXphdGlvblRpdGxlIjoiU2VuY2tlbmJlcmciLCJsaWNlbnNlIjoiaHR0cDovL2NyZWF0aXZlY29tbW9ucy5vcmcvbGljZW5zZXMvYnkvNC4wL2xlZ2FsY29kZSIsImRlY2FkZXMiOltdLCJrZXl3b3JkcyI6W10sInJlY29yZENvdW50Ijo0MTg5M30seyJrZXkiOiI5NWQ2NzJlOC1mNzYyLTExZTEtYTQzOS0wMDE0NWViNDVlOWEiLCJ0aXRsZSI6IkVESVQgLSBBVEJJIGluIE1lcmNhbnRvdXIvQWxwaSBNYXJpdHRpbWUgKEZyYW5jZS9JdGFseSkiLCJkZXNjcmlwdGlvbiI6IlRoZSBkYXRhIHByb3ZpZGVkIGhhdmUgYmVlbiBjb2xsZWN0ZWQgdW5kZXIgdGhlIHNjb3BlIG9mIHRoZSBFdXJvcGVhbiBEaXN0cmlidXRlZCBJbnN0aXR1dGUgb2YgVGF4b25vbXkgKEVESVQpLCBhIG5ldHdvcmsgb2YgbW9yZSB0aGFuIDIwIEV1cm9wZWFuLCBOb3J0aCBBbWVyaWNhbiBhbmQgUnVzc2lhbiB0YXhvbm9taWMgaW5zdGl0dXRpb25zIHdpdGggc3VwcG9ydCBmcm9tIHRoZSBFdXJvcGVhbiBDb21taXNzaW9uIChQcm9qZWN0IG5vLiAwMTgzNDApLiBBcyBwYXJ0IG9mIEVESVQncyBhY3Rpdml0aWVzIHRvIHN0cmVuZ3RoZW4gdGhlIGlucHV0IG9mIHRheG9ub215IGZvciBiaW9kaXZlcnNpdHkgY29uc2VydmF0aW9uLCB0aGUgTXVzZXVtIGZ1ZXIgTmF0dXJrdW5kZSBCZXJsaW4gKE1mTikgYW5kIHRoZSBTdGF0ZSBNdXNldW0gb2YgTmF0dXJhbCBIaXN0b3J5IFN0dXR0Z2FydCAoU01OUyksIEdlcm1hbnksIGNvb3JkaW5hdGVzIGFuZCBzdXBwb3J0cyB0aGUgcGFydGljaXBhdGlvbiBvZiB0YXhvbm9taWMgZXhwZXJ0cyBpbiBcIkFsbCBUYXhhIGFuZCBCaW9kaXZlcnNpdHkgSW52ZW50b3J5IGFuZCBNb25pdG9yaW5nXCIgKEFUQkkrTSkgcHJvamVjdHMgYXQgZGVzaWduYXRlZCBhcmVhcyBvZiBjb25zZXJ2YXRpb24gdmFsdWUuIEFUQkkrTSBlZmZvcnRzIGFyZSBsYXJnZS1zY2FsZSwgbG9uZ2VyLXRlcm0gZmllbGQgc3VydmV5cyB0byByZWNvcmQsIGlkZW50aWZ5LCBhbmQgZG9jdW1lbnQgdGhlIGVudGlyZSBiaW9kaXZlcnNpdHkgb2Ygc3BlY2lmaWMgKGNvbnNlcnZhdGlvbikgYXJlYXMsIHdoaWNoIHdpbGwgZm9ybSB0aGUgYmFzaXMgZm9yIHN1YnNlcXVlbnQgbW9uaXRvcmluZyBiaW9kaXZlcnNpdHkgY2hhbmdlcyBvdmVyIHRpbWUuIEFsbCBkYXRhIHByZXNlbnRlZCBoZXJlIG9yaWdpbmF0ZSBlaXRoZXIgZGlyZWN0bHkgZnJvbSBmaWVsZCBzdXJ2ZXlzIHVuZGVydGFrZW4gYnkgbWFueSBpbmRpdmlkdWFsIEVESVQgcmVzZWFyY2hlcnMgYW5kIHBhcnRpY2lwYW50cyBhdCBkZXNpZ25hdGVkIEFUQkkrTSBzaXRlcyBvciBmcm9tIHB1Ymxpc2hlZCBsaXRlcmF0dXJlIGFuZCBvdGhlciByZWNvcmRzIHJlZmVycmluZyB0byB0aGUgc2FtZSBhcmVhcy4iLCJ0eXBlIjoiT0NDVVJSRU5DRSIsImhvc3RpbmdPcmdhbml6YXRpb25LZXkiOiIxMDk4MDkyMC02ZGFkLTExZGEtYWQxMy1iOGEwM2M1MGE4NjIiLCJob3N0aW5nT3JnYW5pemF0aW9uVGl0bGUiOiJNdXNldW0gZsO8ciBOYXR1cmt1bmRlIEJlcmxpbiIsImNvdW50cnlDb3ZlcmFnZSI6W10sInB1Ymxpc2hpbmdDb3VudHJ5IjoiREUiLCJwdWJsaXNoaW5nT3JnYW5pemF0aW9uS2V5IjoiMTA5ODA5MjAtNmRhZC0xMWRhLWFkMTMtYjhhMDNjNTBhODYyIiwicHVibGlzaGluZ09yZ2FuaXphdGlvblRpdGxlIjoiTXVzZXVtIGbDvHIgTmF0dXJrdW5kZSBCZXJsaW4iLCJsaWNlbnNlIjoiaHR0cDovL2NyZWF0aXZlY29tbW9ucy5vcmcvbGljZW5zZXMvYnkvNC4wL2xlZ2FsY29kZSIsImRlY2FkZXMiOltdLCJrZXl3b3JkcyI6W10sInJlY29yZENvdW50Ijo0MTgwMH0seyJrZXkiOiI4MTZlOTAzOC1mNzYyLTExZTEtYTQzOS0wMDE0NWViNDVlOWEiLCJ0aXRsZSI6Ik5hdHVya3VuZGVtdXNldW0gaW0gT3R0b25ldW0gS2Fzc2VsLCBFbnRvbW9sb2dpY2FsIENvbGxlY3Rpb24iLCJ0eXBlIjoiT0NDVVJSRU5DRSIsImhvc3RpbmdPcmdhbml6YXRpb25LZXkiOiJmZTlkMjNhNS01NTE0LTRkNmUtYjA1Yi1kMTE1NDI1Y2QxNTkiLCJob3N0aW5nT3JnYW5pemF0aW9uVGl0bGUiOiJOYXR1cmt1bmRlbXVzZXVtIGltIE90dG9uZXVtIEthc3NlbCIsImNvdW50cnlDb3ZlcmFnZSI6W10sInB1Ymxpc2hpbmdDb3VudHJ5IjoiREUiLCJwdWJsaXNoaW5nT3JnYW5pemF0aW9uS2V5IjoiZmU5ZDIzYTUtNTUxNC00ZDZlLWIwNWItZDExNTQyNWNkMTU5IiwicHVibGlzaGluZ09yZ2FuaXphdGlvblRpdGxlIjoiTmF0dXJrdW5kZW11c2V1bSBpbSBPdHRvbmV1bSBLYXNzZWwiLCJsaWNlbnNlIjoiaHR0cDovL2NyZWF0aXZlY29tbW9ucy5vcmcvbGljZW5zZXMvYnkvNC4wL2xlZ2FsY29kZSIsImRlY2FkZXMiOltdLCJrZXl3b3JkcyI6W10sInJlY29yZENvdW50Ijo0MDkyNn0seyJrZXkiOiJkZWQ3MjRlNy0zZmRlLTQ5YzUtYmZhMy0wM2I0MDQ1YzRjNWYiLCJ0aXRsZSI6IkludGVybmF0aW9uYWwgQ2ljaG9yaWVhZSBOZXR3b3JrIChJQ04pOiBDaWNob3JpZWFlIFBvcnRhbCIsImRlc2NyaXB0aW9uIjoiVGhlIENpY2hvcmllYWUgUG9ydGFsIGlzIGJlaW5nIGVzdGFibGlzaGVkIGFzIGEgY29udmVuaWVudCBhY2Nlc3MgdG8gdGhlIGV4aXN0aW5nIGtub3dsZWRnZSBhYm91dCB0aGUgdHJpYmUgQ2ljaG9yaWVhZSBvZiB0aGUgc3VuZmxvd2VyIGZhbWlseSAoQXN0ZXJhY2VhZSBvciBDb21wb3NpdGFlKS4gVGhlIENpY2hvcmllYWUgaW5jbHVkZSBhYm91dCA5MyBnZW5lcmEsIG9mIHRoZXNlLCA5MCBnZW5lcmEgY29tcHJpc2UgYXBwcm94aW1hdGVseSAxNDAwIHNwZWNpZXMsIHdoaWxlIDMgZ2VuZXJhLCBoYXdrd2VlZHMgYW5kIGRhbmRlbGlvbnMgKEhpZXJhY2l1bSwgUGlsb3NlbGxhLCBhbmQgVGFyYXhhY3VtKSwgYWRkIGZ1cnRoZXIgODAwMCsgc3BlY2llcywgaHlicmlkcyBhbmQvb3IgYXBvbWljdGljcy4gVGhlIENpY2hvcmllYWUgUG9ydGFsIGlzIGRlc2lnbmVkIG9uIHRoZSBiYXNpcyBFRElUIFBsYXRmb3JtIGZvciBDeWJlcnRheG9ub215LCB0byBzZXJ2ZSBib3RoIHRoZSBzcGVjaWFsaXN0IGFuZCB0aGUgb2NjYXNpb25hbCB2aXNpdG9yLCBwcm92aWRpbmcgYSBnZW9ncmFwaGljYWxseSByZWZlcmVuY2VkIHNwZWNpZXMgaW52ZW50b3J5IG9mIHRoZSBlbnRpcmUgdHJpYmUsIG9mZmVyaW5nIHRheG9uIHBhZ2VzIHdpdGggbm90ZXMgb24gc3lzdGVtYXRpY3MsIGRlc2NyaXB0aW9ucywgaW1hZ2VzLCBjb21tb24gbmFtZXMsIGRpc3RyaWJ1dGlvbmFsLCBlY29sb2dpY2FsLCBzcGVjaW1lbiBhbmQgb3RoZXIgZGF0YSwgYW5kIGluY2x1ZGluZyBmdWxsIHN5bm9ueW1pZXMgd2l0aCBwcm90b2xvZ3VlcyBhbmQgdHlwZSBjaXRhdGlvbnMuIFRoZSBhdmFpbGFibGUgZGF0YSBhcmUgY29udGludW91c2x5IGJlaW5nIGNvbXBsZXRlZCBhbmQgdXBkYXRlZC4gSW4gdGhlIGxvbmcgcnVuLCB0aGUgQ2ljaG9yaWVhZSBwb3J0YWwgYWltcyBhdCBwcmVzZW50aW5nIGFuIGV2ZXIgdXAtdG8tZGF0ZSBlbmN5Y2xvcGVkaWMga25vd2xlZGdlIGJhc2Ugb2YgdGhlIHRyaWJlLCB3aXRoIGludGVyYWN0aXZlIGtleXMgdG8gYWxsb3cgZWFzeSBpZGVudGlmaWNhdGlvbiBvZiBpdHMgbWVtYmVycy4iLCJ0eXBlIjoiQ0hFQ0tMSVNUIiwiaG9zdGluZ09yZ2FuaXphdGlvbktleSI6IjU3MjU0YmQwLTgyNTYtMTFkOC1iN2VkLWI4YTAzYzUwYTg2MiIsImhvc3RpbmdPcmdhbml6YXRpb25UaXRsZSI6IkJvdGFuaWMgR2FyZGVuIGFuZCBCb3RhbmljYWwgTXVzZXVtIEJlcmxpbi1EYWhsZW0iLCJjb3VudHJ5Q292ZXJhZ2UiOltdLCJwdWJsaXNoaW5nQ291bnRyeSI6IkRFIiwicHVibGlzaGluZ09yZ2FuaXphdGlvbktleSI6IjU3MjU0YmQwLTgyNTYtMTFkOC1iN2VkLWI4YTAzYzUwYTg2MiIsInB1Ymxpc2hpbmdPcmdhbml6YXRpb25UaXRsZSI6IkJvdGFuaWMgR2FyZGVuIGFuZCBCb3RhbmljYWwgTXVzZXVtIEJlcmxpbi1EYWhsZW0iLCJsaWNlbnNlIjoidW5zcGVjaWZpZWQiLCJkZWNhZGVzIjpbMTkwMCwxOTEwLDE5MjAsMTkzMCwxOTQwLDE5NTAsMTk2MCwxOTcwLDE5ODAsMTk5MCwyMDAwLDIwMTBdLCJrZXl3b3JkcyI6W10sInJlY29yZENvdW50IjozOTUyMn0seyJrZXkiOiJjNjkyY2I3ZS00NmY5LTRkM2EtOGQ1Zi1lOWZjZDQxZTVlZTAiLCJ0aXRsZSI6IlZhc2N1bGFyIHBsYW50IGRpdmVyc2l0eSBpbiBmb3Jlc3RzIiwiZGVzY3JpcHRpb24iOiJPcmlnaW5hbCBkYXRhIGNvbWVzIGZyb20gYSBwcm9qZWN0IHdoaWNoIHRha2VzIG9yIHRvb2sgcGxhY2UgYXMgcGFydCBvZiB0aGUgREZHIHByaW9yaXR5IHByb2dyYW0gXCJFeHBsb3JhdG9yaWVzIGZvciBsYXJnZS1zY2FsZSBhbmQgbG9uZy10ZXJtIGZ1bmN0aW9uYWwgYmlvZGl2ZXJzaXR5IHJlc2VhcmNoXCIuIFRoZSBkYXRhIGlzIHN0b3JlZCB0b2dldGhlciB3aXRoIGRlc2NyaXB0aXZlIG1ldGFkYXRhLCBpbiBjb21iaW5hdGlvbiBjYWxsZWQgYSBkYXRhc2V0LCBpbiB0aGUgcHJvamVjdCByZXBvc2l0b3J5IChodHRwczovL3d3dy5iZXhpcy51bmktamVuYS5kZSkuIFNwZWNpZXMgaW5mb3JtYXRpb24gd2FzIGV4dHJhY3RlZCBmcm9tIHRoYXQgb3JpZ2luYWwgZGF0YXNldC4gVGhlIHNlY29uZCBwYXJhZ3JhcGggaXMgcGFydCBvZiB0aGUgbWV0YWRhdGEgb2YgdGhlIG9yaWdpbmFsIGRhdGFzZXQuPC9icj5WZWdldGF0aW9uIHJlbGV2w6lzIG9mIGFsbCA0MDAgbcKyIEdQcyBpbiBmb3Jlc3RzIiwidHlwZSI6Ik9DQ1VSUkVOQ0UiLCJob3N0aW5nT3JnYW5pemF0aW9uS2V5IjoiNTQxYzI2NjgtOTM5MS00NDc5LWI5MGYtZmU5MGIzNjVmMzNiIiwiaG9zdGluZ09yZ2FuaXphdGlvblRpdGxlIjoiQmlvZGl2ZXJzaXR5IEV4cGxvcmF0b3JpZXMiLCJjb3VudHJ5Q292ZXJhZ2UiOltdLCJwdWJsaXNoaW5nQ291bnRyeSI6IkRFIiwicHVibGlzaGluZ09yZ2FuaXphdGlvbktleSI6IjU0MWMyNjY4LTkzOTEtNDQ3OS1iOTBmLWZlOTBiMzY1ZjMzYiIsInB1Ymxpc2hpbmdPcmdhbml6YXRpb25UaXRsZSI6IkJpb2RpdmVyc2l0eSBFeHBsb3JhdG9yaWVzIiwibGljZW5zZSI6Imh0dHA6Ly9jcmVhdGl2ZWNvbW1vbnMub3JnL2xpY2Vuc2VzL2J5LW5jLzQuMC9sZWdhbGNvZGUiLCJkZWNhZGVzIjpbMjAwMF0sImtleXdvcmRzIjpbInZlZ2V0YXRpb24gZGF0YSIsImZvcmVzdCIsInZhc2N1bGFyIHBsYW50cyIsInJlbGV2w6lzIl0sInJlY29yZENvdW50IjozOTQ3NX0seyJrZXkiOiI5ODQwN2Q4ZC1mZjU4LTQyOTgtOTBmMS0wZDU5ZjM0MjFkZjIiLCJ0aXRsZSI6IkFzb2NpYWNpw7NuIEphcmTDrW4gQm90w6FuaWNvIExhIExhZ3VuYSAtIEhlcmJhcml1bSBMQUdVIiwiZGVzY3JpcHRpb24iOiJUaGlzIGRhdGFzZXQgY29udGFpbnMgdGhlIGNvbXBsZXRlIGhvbGRpbmdzIG9mIHRoZSBoZXJiYXJpdW0gb2YgdGhlIEFjb2NpYWNpw7NuIEphcmTDrW4gQm90w6FuaWNvIExhIExhZ3VuYSAoTEFHVSkiLCJ0eXBlIjoiT0NDVVJSRU5DRSIsImhvc3RpbmdPcmdhbml6YXRpb25LZXkiOiI0ZTExZDc1MC1iYWZiLTExZDktOGU1My1iOGEwM2M1MGE4NjIiLCJob3N0aW5nT3JnYW5pemF0aW9uVGl0bGUiOiJOYXR1cmFsIEhpc3RvcnkgTXVzZXVtLCBWaWVubmEgLSBIZXJiYXJpdW0gVyIsImNvdW50cnlDb3ZlcmFnZSI6W10sInB1Ymxpc2hpbmdDb3VudHJ5IjoiREUiLCJwdWJsaXNoaW5nT3JnYW5pemF0aW9uS2V5IjoiNTcyNTRiZDAtODI1Ni0xMWQ4LWI3ZWQtYjhhMDNjNTBhODYyIiwicHVibGlzaGluZ09yZ2FuaXphdGlvblRpdGxlIjoiQm90YW5pYyBHYXJkZW4gYW5kIEJvdGFuaWNhbCBNdXNldW0gQmVybGluLURhaGxlbSIsImxpY2Vuc2UiOiJodHRwOi8vY3JlYXRpdmVjb21tb25zLm9yZy9wdWJsaWNkb21haW4vemVyby8xLjAvbGVnYWxjb2RlIiwiZGVjYWRlcyI6W10sImtleXdvcmRzIjpbXSwicmVjb3JkQ291bnQiOjM5MjI4fSx7ImtleSI6ImNlMGYxNzUwLWFkOTItNDZiNy1iOGM3LTU5MDMzNDYwZGU0MyIsInRpdGxlIjoiRnJlc2h3YXRlciBmaXNoZXMgb2YgUG9sYW5kIiwiZGVzY3JpcHRpb24iOiI8cD5UaGUgZ2VvLXJlZmVyZW5jZWQgZGlzdHJpYnV0aW9uIGRhdGEgb2YgZnJlc2h3YXRlciBmaXNoZXMgb2YgUG9sYW5kIG9yaWdpbiBmcm9tIGNvbGxlY3Rpb24gZGF0YSBhbmQgYSB3aWRlIHNldCBvZiBwdWJsaWNhdGlvbnMgaW5jbHVkaW5nIGdyZXkgbGl0ZXJhdHVyZS48L3A+XG48cD5Gb3IgYWRkaXRpb25hbCBtZXRhZGF0YSBzZWU6IGh0dHA6Ly9kYXRhLmZyZXNod2F0ZXJiaW9kaXZlcnNpdHkuZXUvbWV0YWRiL2JmX21kYl92aWV3LnBocD9lbnRyeUlEPUJGX0NGODwvcD4iLCJ0eXBlIjoiT0NDVVJSRU5DRSIsImhvc3RpbmdPcmdhbml6YXRpb25LZXkiOiJiODcyYjA3NS05YWI1LTRlMjctYjZjNi01YWRkNmI4OTAzNzkiLCJob3N0aW5nT3JnYW5pemF0aW9uVGl0bGUiOiJCaW9GcmVzaCIsImNvdW50cnlDb3ZlcmFnZSI6W10sInB1Ymxpc2hpbmdDb3VudHJ5IjoiREUiLCJwdWJsaXNoaW5nT3JnYW5pemF0aW9uS2V5IjoiYjg3MmIwNzUtOWFiNS00ZTI3LWI2YzYtNWFkZDZiODkwMzc5IiwicHVibGlzaGluZ09yZ2FuaXphdGlvblRpdGxlIjoiQmlvRnJlc2giLCJsaWNlbnNlIjoiaHR0cDovL2NyZWF0aXZlY29tbW9ucy5vcmcvcHVibGljZG9tYWluL3plcm8vMS4wL2xlZ2FsY29kZSIsImRlY2FkZXMiOltdLCJrZXl3b3JkcyI6WyJyaXZlcnMiLCJ3ZXRsYW5kcyIsIklubGFuZCBXYXRlcnMiLCJCaW90YSIsIk1ldGFkYXRhIiwiQmlvc3BoZXJlIiwiRW52aXJvbm1lbnQiLCJsYWtlcyIsIkxvY2F0aW9uIl0sInJlY29yZENvdW50IjozOTE5MH0seyJrZXkiOiIxYzVjM2U0OC03ZmMwLTRkNGYtOTZlNi1jNGRmMmM3NDdmMzQiLCJ0aXRsZSI6IlRoZSBIZXJwZXRvbG9neSBDb2xsZWN0aW9uIGF0IHRoZSBTdGFhdGxpY2hlcyBNdXNldW0gZsO8ciBOYXR1cmt1bmRlIFN0dXR0Z2FydCIsImRlc2NyaXB0aW9uIjoiaHR0cDovL3d3dy5kaXZlcnNpdHl3b3JrYmVuY2guZGUvRGF0YWJhc2VDbGllbnRzL1NNTlMtWi1oZXJwY29sbC9BYm91dC5odG1sIiwidHlwZSI6Ik9DQ1VSUkVOQ0UiLCJob3N0aW5nT3JnYW5pemF0aW9uS2V5IjoiMDY3NGFlYTAtYTdlMS0xMWQ4LTk1MzQtYjhhMDNjNTBhODYyIiwiaG9zdGluZ09yZ2FuaXphdGlvblRpdGxlIjoiU3RhYXRsaWNoZSBOYXR1cndpc3NlbnNjaGFmdGxpY2hlIFNhbW1sdW5nZW4gQmF5ZXJucyIsImNvdW50cnlDb3ZlcmFnZSI6W10sInB1Ymxpc2hpbmdDb3VudHJ5IjoiREUiLCJwdWJsaXNoaW5nT3JnYW5pemF0aW9uS2V5IjoiMDY3NGFlYTAtYTdlMS0xMWQ4LTk1MzQtYjhhMDNjNTBhODYyIiwicHVibGlzaGluZ09yZ2FuaXphdGlvblRpdGxlIjoiU3RhYXRsaWNoZSBOYXR1cndpc3NlbnNjaGFmdGxpY2hlIFNhbW1sdW5nZW4gQmF5ZXJucyIsImxpY2Vuc2UiOiJodHRwOi8vY3JlYXRpdmVjb21tb25zLm9yZy9saWNlbnNlcy9ieS80LjAvbGVnYWxjb2RlIiwiZGVjYWRlcyI6W10sImtleXdvcmRzIjpbXSwicmVjb3JkQ291bnQiOjM4ODM2fSx7ImtleSI6IjBlZDBhMzk0LTUyNzYtNDMzZS1iZjhkLTA5Y2VhYWVlNDVlOSIsInRpdGxlIjoiQmlvdGEgb2NjdXJyZW5jZSBkYXRhIGZyb20gcGxhbmt0b24gc3VydmV5cyBhcm91bmQgTmV3IFplYWxhbmQiLCJkZXNjcmlwdGlvbiI6IlRoZSBkYXRhc2V0IGNvbnRhaW5zIGRldGFpbHMgb2YgdGhlIGJpb3RhIGNhdWdodCBkdXJpbmcgcGxhbmt0b24gc3VydmV5cyBhcm91bmQgTmV3IFplYWxhbmQgYW5kIHRoZSBzb3V0aCB3ZXN0ZXJuIFBhY2lmaWMgYWx0aG91Z2ggc29tZSBvY2N1cnJlbmNlIGRhdGEgaXMgaW5jbHVkZWQgZnJvbSBvdGhlciBvY2VhbnMgc291cmNlZCBmcm9tIHRoZSBkaWdpdGlzYXRpb24gb2Ygam91cm5hbCBhcnRpY2xlcyBmcm9tIE5ldyBaZWFsYW5kIGF1dGhvcnMuIEEgbGFyZ2Ugc291cmNlIGZyb20gdGhpcyBkYXRhc2V0IGlzIHByb3ZpZGVkIGJ5IHRoZSBOZXcgWmVhbGFuZCBNaW5pc3RyeSBvZiBQcmltYXJ5IEluZHVzdHJpZXMgZnJvbSBpdHMgXCJwbGFua3RvblwiIGFuZCBcInJvY2tsb2JcIiBkYXRhYmFzZXMuIFRoaXMgZGF0YXNldCByZWNvcmRzIGFsbCBiaW9sb2dpY2FsIHNwZWNpbWVucyBjb2xsZWN0ZWQgZHVyaW5nIHBsYW5rdG9uIHNhbXBsaW5nIGluY2x1ZGluZyBmaXNoLCBsYXJ2YWUsIGFuZCBlZ2dzLiBUaGlzIGRhdGFzZXQgZG9lcyBub3QgaW5jbHVkZSBhbmQgZGF0YSBmcm9tIENvbnN0YW50IFBsYW5rdG9uIFJlY29yZGVycy4iLCJ0eXBlIjoiT0NDVVJSRU5DRSIsImhvc3RpbmdPcmdhbml6YXRpb25LZXkiOiJjNThhYzAxOS1iNDEzLTQ2MTMtODc3Mi0zOWU1N2FjYmViOGUiLCJob3N0aW5nT3JnYW5pemF0aW9uVGl0bGUiOiJUaGUgTmF0aW9uYWwgSW5zdGl0dXRlIG9mIFdhdGVyIGFuZCBBdG1vc3BoZXJpYyBSZXNlYXJjaCAoTklXQSkiLCJjb3VudHJ5Q292ZXJhZ2UiOltdLCJwdWJsaXNoaW5nQ291bnRyeSI6Ik5aIiwicHVibGlzaGluZ09yZ2FuaXphdGlvbktleSI6ImM1OGFjMDE5LWI0MTMtNDYxMy04NzcyLTM5ZTU3YWNiZWI4ZSIsInB1Ymxpc2hpbmdPcmdhbml6YXRpb25UaXRsZSI6IlRoZSBOYXRpb25hbCBJbnN0aXR1dGUgb2YgV2F0ZXIgYW5kIEF0bW9zcGhlcmljIFJlc2VhcmNoIChOSVdBKSIsImxpY2Vuc2UiOiJodHRwOi8vY3JlYXRpdmVjb21tb25zLm9yZy9saWNlbnNlcy9ieS1uYy80LjAvbGVnYWxjb2RlIiwiZGVjYWRlcyI6WzE5NTAsMTk2MCwxOTcwLDE5ODAsMTk5MCwyMDAwLDIwMTBdLCJrZXl3b3JkcyI6WyJPYnNlcnZhdGlvbiIsIk9jY3VycmVuY2UiXSwicmVjb3JkQ291bnQiOjM4NjU5fSx7ImtleSI6Ijg1YzhlNDQ0LWY3NjItMTFlMS1hNDM5LTAwMTQ1ZWI0NWU5YSIsInRpdGxlIjoiSGVyYmFyaXVtIEhhbWJ1cmdlbnNlIiwiZGVzY3JpcHRpb24iOiJUaGUgSGVyYmFyaXVtIEhhbWJ1cmdlbnNlIG9mIHRoZSBVbml2ZXJzaXR5IG9mIEhhbWJ1cmcgKGFjcm9ueW0gSEJHKSBpcyB0aGUgNHRoIGxhcmdlc3QgaGVyYmFyaXVtIGluIEdlcm1hbnkgYW5kIGhvbGRzIGEgY29sbGVjdGlvbiBvZiBtb3JlIHRoYW4gMS44IG1pbGxpb24gcHJlc2VydmVkIHBsYW50IHNwZWNpbWVucy4gQWxsIHBsYW50IGdyb3VwcywgZS5nLiBmbG93ZXJpbmcgcGxhbnRzLCBmZXJucywgbW9zc2VzLCBsaWNoZW5zLCBmdW5naSBhbmQgYWxnYWUgYXJlIGNvdmVyZWQuIFRoZSBzY29wZSBpcyB3b3JsZHdpZGUgYW5kIHRoZSBjb2xsZWN0aW9ucyBzcGFuIGEgcGVyaW9kIG9mIDMwMCB5ZWFycy4gVGhlcmUgYXJlIHNwZWNpYWwgY29sbGVjdGlvbnMgc3VjaCBhcyB0aGUgYnVsa3kgc3BlY2ltZW5zIGFuZCBhbGNvaG9sIGNvbGxlY3Rpb25zLCBnYWxscyBhbmQgdGVyYXRvbG9naWEgYXMgd2VsbCBhcyB0aGUgYXV0b2dyYXBoIGFuZCBwb3J0cmFpdCBjb2xsZWN0aW9uLiBUaGUgY29sbGVjdGlvbnMgYXJlIGdyb3dpbmcgYnkgZmllbGQgc3R1ZGllcyBvZiBzdGFmZiBhbmQgbWVtYmVycyBvZiB0aGUgQmlvZGl2ZXJzaXR5LCBFdm9sdXRpb24gYW5kIEVjb2xvZ3kgd29ya2luZyBncm91cCBvZiB0aGUgQmlvY2VudGVyIEtsZWluIEZsb3R0YmVrIG9mIHRoZSB0aGUgVW5pdmVyc2l0eSBvZiBIYW1idXJnLiBTbyBmYXIsIGFsbW9zdCA0MDAwMCBoZXJiYXJpdW0gc2hlZXRzIGhhdmUgYmVlbiBmdWxseSBkaWdpdGl6ZWQgaW5jbHVkaW5nIG5lYXJseSAyMDAwMCB0eXBlIHNwZWNpbWVucy4iLCJ0eXBlIjoiT0NDVVJSRU5DRSIsImhvc3RpbmdPcmdhbml6YXRpb25LZXkiOiJmNzM5YWVmMC04YTViLTExZDktYmM4ZC1iOGEwM2M1MGE4NjIiLCJob3N0aW5nT3JnYW5pemF0aW9uVGl0bGUiOiJIZXJiYXJpdW0gSGFtYnVyZ2Vuc2UiLCJjb3VudHJ5Q292ZXJhZ2UiOltdLCJwdWJsaXNoaW5nQ291bnRyeSI6IkRFIiwicHVibGlzaGluZ09yZ2FuaXphdGlvbktleSI6ImY3MzlhZWYwLThhNWItMTFkOS1iYzhkLWI4YTAzYzUwYTg2MiIsInB1Ymxpc2hpbmdPcmdhbml6YXRpb25UaXRsZSI6IkhlcmJhcml1bSBIYW1idXJnZW5zZSIsImxpY2Vuc2UiOiJodHRwOi8vY3JlYXRpdmVjb21tb25zLm9yZy9saWNlbnNlcy9ieS80LjAvbGVnYWxjb2RlIiwiZGVjYWRlcyI6W10sImtleXdvcmRzIjpbXSwicmVjb3JkQ291bnQiOjM4NTM2fSx7ImtleSI6Ijk2Mzg1ZTk4LTkzYjUtNGU0YS04MDgxLTZlMzBiNzM4ODE2YSIsInRpdGxlIjoiQmlvbG9naWNhbCBvYnNlcnZhdGlvbnMgZnJvbSB0aGUgRGlzY292ZXJ5IEludmVzdGlnYXRpb25zIDE5MjUtMTk1MiIsImRlc2NyaXB0aW9uIjoiPHA+VGhlIERpc2NvdmVyeSBJbnZlc3RpZ2F0aW9ucyB3ZXJlIGEgc2VyaWVzIG9mIGV4cGVkaXRpb25zIHRvIHRoZSBTb3V0aGVybiBPY2VhbnMgZnVuZGVkIG91dCBvZiBwcm9jZWVkcyBmcm9tIHRoZSBzYWxlIG9mIHdoYWxpbmcgbGljZW5zZXMgdGhhdCB0b29rIHBsYWNlIGJldHdlZW4gMTkyNSBhbmQgMTk1MS4gVGhlIGludmVzdGlnYXRpb25zIGhhZCB0aHJlZSBtYWluIGNvbXBvbmVudHM6IGEgbWFyaW5lIGxhYm9yYXRvcnkgYXQgS2luZyBFZHdhcmQgUG9pbnQgb24gU291dGggR2VvcmdpYTsgdGhlIGZhc3Qtc2FpbGluZyAzMjYtdG9uIFJSUyBXaWxsaWFtIFNjb3Jlc2J5OyBhbmQgc3R1ZGllcyB1bmRlcnRha2VuIGJ5IHRoZSBSU1MgRGlzY292ZXJ5LiBJbiAxOTI5LCB0aGUgRGlzY292ZXJ5IHdhcyByZXBsYWNlZCBieSB0aGUgMTAwMC10b24gc3RlZWwtaHVsbGVkIFJSUyBEaXNjb3ZlcnkgSUkgd2hlbiB0aGUgb2xkZXIgc2hpcCB3YXMgZm91bmQgdG8gYmUgc2ltcGx5IHRvbyBzbG93IGFuZCBjdW1iZXJzb21lIHRvIGNhcnJ5IG91dCBhbGwgdGhlIHdvcmsgcmVxdWlyZWQuPC9wPlxuPHA+QSB2YXJpZXR5IG9mIHNhbXBsaW5nIG1ldGhvZHMgd2VyZSBkZXBsb3llZCwgaW5jbHVkaW5nIG90dGVyIHRyYXdscywgYmVhbSB0cmF3bHMsIGRyZWRnZXMsIGZpc2ggdHJhcHMsIGFuZCBhIHZhcmlldHkgb2YgZmluZS1tZXNoZWQgbmV0cyB0b3cgaW4gdGhlIGhvcml6b250YWwsIHZlcnRpY2FsLCBvciBvYmxpcXVlLjwvcD4iLCJ0eXBlIjoiT0NDVVJSRU5DRSIsImhvc3RpbmdPcmdhbml6YXRpb25LZXkiOiJjNThhYzAxOS1iNDEzLTQ2MTMtODc3Mi0zOWU1N2FjYmViOGUiLCJob3N0aW5nT3JnYW5pemF0aW9uVGl0bGUiOiJUaGUgTmF0aW9uYWwgSW5zdGl0dXRlIG9mIFdhdGVyIGFuZCBBdG1vc3BoZXJpYyBSZXNlYXJjaCAoTklXQSkiLCJjb3VudHJ5Q292ZXJhZ2UiOltdLCJwdWJsaXNoaW5nQ291bnRyeSI6Ik5aIiwicHVibGlzaGluZ09yZ2FuaXphdGlvbktleSI6IjFjOWMzYmI0LTM3N2MtNDU0Ny1hYTc5LTE2ZWE3NTVkNjAwNiIsInB1Ymxpc2hpbmdPcmdhbml6YXRpb25UaXRsZSI6IlNvdXRod2VzdGVybiBQYWNpZmljIE9jZWFuIEJpb2dlb2dyYXBoaWMgSW5mb3JtYXRpb24gU3lzdGVtIChPQklTKSBOb2RlIiwibGljZW5zZSI6Imh0dHA6Ly9jcmVhdGl2ZWNvbW1vbnMub3JnL3B1YmxpY2RvbWFpbi96ZXJvLzEuMC9sZWdhbGNvZGUiLCJkZWNhZGVzIjpbMTg3MCwxODgwLDE4OTAsMTkwMCwxOTEwLDE5MjAsMTkzMCwxOTQwLDE5NTBdLCJrZXl3b3JkcyI6WyJPYnNlcnZhdGlvbiIsIk9jY3VycmVuY2UiXSwicmVjb3JkQ291bnQiOjM3MDU5fSx7ImtleSI6IjcxZWJhMzc2LWY3NjItMTFlMS1hNDM5LTAwMTQ1ZWI0NWU5YSIsInRpdGxlIjoiTWZOIC0gRm9zc2lsIGludmVydGVicmF0ZXMgSWEiLCJkZXNjcmlwdGlvbiI6Ikdhc3Ryb3BvZHMsIGJpdmFsdmVzLCBicmFjaGlvcG9kcywgc3BvbmdlcyIsInR5cGUiOiJPQ0NVUlJFTkNFIiwiaG9zdGluZ09yZ2FuaXphdGlvbktleSI6IjEwOTgwOTIwLTZkYWQtMTFkYS1hZDEzLWI4YTAzYzUwYTg2MiIsImhvc3RpbmdPcmdhbml6YXRpb25UaXRsZSI6Ik11c2V1bSBmw7xyIE5hdHVya3VuZGUgQmVybGluIiwiY291bnRyeUNvdmVyYWdlIjpbXSwicHVibGlzaGluZ0NvdW50cnkiOiJERSIsInB1Ymxpc2hpbmdPcmdhbml6YXRpb25LZXkiOiIxMDk4MDkyMC02ZGFkLTExZGEtYWQxMy1iOGEwM2M1MGE4NjIiLCJwdWJsaXNoaW5nT3JnYW5pemF0aW9uVGl0bGUiOiJNdXNldW0gZsO8ciBOYXR1cmt1bmRlIEJlcmxpbiIsImxpY2Vuc2UiOiJodHRwOi8vY3JlYXRpdmVjb21tb25zLm9yZy9saWNlbnNlcy9ieS80LjAvbGVnYWxjb2RlIiwiZGVjYWRlcyI6W10sImtleXdvcmRzIjpbXSwicmVjb3JkQ291bnQiOjM2ODQ1fSx7ImtleSI6ImI3ZWMxYmY4LTgxOWItMTFlMi1iYWQyLTAwMTQ1ZWI0NWU5YSIsInRpdGxlIjoiQW5pbWFsIFNvdW5kIEFyY2hpdmUiLCJkZXNjcmlwdGlvbiI6IlRoZSBBbmltYWwgU291bmQgQXJjaGl2ZSBhdCB0aGUgTXVzZXVtIGZ1ZXIgTmF0dXJrdW5kZSBCZXJsaW4gKEdlcm1hbjogVGllcnN0aW1tZW5hcmNoaXYpIGlzIG9uZSBvZiB0aGUgb2xkZXN0IGFuZCBsYXJnZXN0IHdvcmxkd2lkZS4gRm91bmRlZCBpbiAxOTUxIGJ5IFByb2Zlc3NvciBHdWVudGVyIFRlbWJyb2NrIHRoZSBjb2xsZWN0aW9uIGNvbnNpc3RzIG5vdyBvZiBhcm91bmQgMTMwIDAwMCByZWNvcmRzIG9mIGFuaW1hbCB2b2ljZXMuIiwidHlwZSI6Ik9DQ1VSUkVOQ0UiLCJob3N0aW5nT3JnYW5pemF0aW9uS2V5IjoiMTA5ODA5MjAtNmRhZC0xMWRhLWFkMTMtYjhhMDNjNTBhODYyIiwiaG9zdGluZ09yZ2FuaXphdGlvblRpdGxlIjoiTXVzZXVtIGbDvHIgTmF0dXJrdW5kZSBCZXJsaW4iLCJjb3VudHJ5Q292ZXJhZ2UiOltdLCJwdWJsaXNoaW5nQ291bnRyeSI6IkRFIiwicHVibGlzaGluZ09yZ2FuaXphdGlvbktleSI6IjEwOTgwOTIwLTZkYWQtMTFkYS1hZDEzLWI4YTAzYzUwYTg2MiIsInB1Ymxpc2hpbmdPcmdhbml6YXRpb25UaXRsZSI6Ik11c2V1bSBmw7xyIE5hdHVya3VuZGUgQmVybGluIiwibGljZW5zZSI6Imh0dHA6Ly9jcmVhdGl2ZWNvbW1vbnMub3JnL2xpY2Vuc2VzL2J5LzQuMC9sZWdhbGNvZGUiLCJkZWNhZGVzIjpbXSwia2V5d29yZHMiOltdLCJyZWNvcmRDb3VudCI6MzUzMjJ9LHsia2V5IjoiY2NlMDQwODYtNmM3Yy0xMWUyLTkwY2UtMDAxNDVlYjQ1ZTlhIiwidGl0bGUiOiJCcnlvcGh5dGUgaGVyYmFyaXVtLCBHw7Z0dGluZ2VuIChHT0VUKSIsImRlc2NyaXB0aW9uIjoiVGhlIEJyeW9waHl0ZSBkYXRhYmFzZSBjb250YWlucyBtb3JlIHRoYW4gMzUwMDAgcmVjb3JkcyBvZiB0aGUgQnJ5b3BoeXRlIEhlcmJhcml1bSBhdCBHw7Z0dGluZ2VuIChHT0VUKS4gTWFpbmx5IG5lb3Ryb3BpY2FsIHNwZWNpbWVucyBhcmUgcHJlc2VudGVkLiBQaG90b2dyYXBocyBvciBwbGF0ZXMgb2Ygc3BlY2llcyBsb2NhdGVkIGF0IEfDtnR0aW5nZW4gKEdPRVQpIGFyZSBwcmVzZW50ZWQgaWYgYXZhaWxhYmxlLiIsInR5cGUiOiJPQ0NVUlJFTkNFIiwiaG9zdGluZ09yZ2FuaXphdGlvbktleSI6IjU5YzgxMjkwLWRmMGUtMTFkOC1iMjJlLWI4YTAzYzUwYTg2MiIsImhvc3RpbmdPcmdhbml6YXRpb25UaXRsZSI6Ikdlb3JnLUF1Z3VzdC1Vbml2ZXJzaXTDpHQgR8O2dHRpbmdlbiwgQWxicmVjaHQtdm9uLUhhbGxlci1JbnN0aXR1dCBmw7xyIFBmbGFuemVud2lzc2Vuc2NoYWZ0ZW4sIEFidGVpbHVuZyBTeXN0ZW1hdGlzY2hlIEJvdGFuaWsiLCJjb3VudHJ5Q292ZXJhZ2UiOltdLCJwdWJsaXNoaW5nQ291bnRyeSI6IkRFIiwicHVibGlzaGluZ09yZ2FuaXphdGlvbktleSI6IjU5YzgxMjkwLWRmMGUtMTFkOC1iMjJlLWI4YTAzYzUwYTg2MiIsInB1Ymxpc2hpbmdPcmdhbml6YXRpb25UaXRsZSI6Ikdlb3JnLUF1Z3VzdC1Vbml2ZXJzaXTDpHQgR8O2dHRpbmdlbiwgQWxicmVjaHQtdm9uLUhhbGxlci1JbnN0aXR1dCBmw7xyIFBmbGFuemVud2lzc2Vuc2NoYWZ0ZW4sIEFidGVpbHVuZyBTeXN0ZW1hdGlzY2hlIEJvdGFuaWsiLCJsaWNlbnNlIjoiaHR0cDovL2NyZWF0aXZlY29tbW9ucy5vcmcvbGljZW5zZXMvYnkvNC4wL2xlZ2FsY29kZSIsImRlY2FkZXMiOltdLCJrZXl3b3JkcyI6W10sInJlY29yZENvdW50IjozNTA0NH0seyJrZXkiOiI5NjZjOTA3MC1mNzYyLTExZTEtYTQzOS0wMDE0NWViNDVlOWEiLCJ0aXRsZSI6IkNvbGxlY3Rpb24gQnJ5b3pvYSBTTUYiLCJkZXNjcmlwdGlvbiI6IkJyeW96b2Egb2YgdGhlIHdvcmxkIiwidHlwZSI6Ik9DQ1VSUkVOQ0UiLCJob3N0aW5nT3JnYW5pemF0aW9uS2V5IjoiYzc2Y2YwMzAtMmE5NS0xMWRhLTljYzEtYjhhMDNjNTBhODYyIiwiaG9zdGluZ09yZ2FuaXphdGlvblRpdGxlIjoiU2VuY2tlbmJlcmciLCJjb3VudHJ5Q292ZXJhZ2UiOltdLCJwdWJsaXNoaW5nQ291bnRyeSI6IkRFIiwicHVibGlzaGluZ09yZ2FuaXphdGlvbktleSI6ImM3NmNmMDMwLTJhOTUtMTFkYS05Y2MxLWI4YTAzYzUwYTg2MiIsInB1Ymxpc2hpbmdPcmdhbml6YXRpb25UaXRsZSI6IlNlbmNrZW5iZXJnIiwibGljZW5zZSI6Imh0dHA6Ly9jcmVhdGl2ZWNvbW1vbnMub3JnL2xpY2Vuc2VzL2J5LzQuMC9sZWdhbGNvZGUiLCJkZWNhZGVzIjpbXSwia2V5d29yZHMiOltdLCJyZWNvcmRDb3VudCI6MzI0ODN9LHsia2V5IjoiMTU1YjMzZDItODRiMS00YTMxLTkyODctOWQ5ZTkwMGJjNmM4IiwidGl0bGUiOiJUYXhvbiBsaXN0IG9mIGZ1bmdpIGFuZCBmdW5nYWwtbGlrZSBvcmdhbmlzbXMgZnJvbSBHZXJtYW55IGNvbXBpbGVkIGJ5IHRoZSBER2ZNIiwiZGVzY3JpcHRpb24iOiJodHRwOi8vd3d3LmRpdmVyc2l0eW1vYmlsZS5uZXQvd2lraS9BYm91dF8lMjJUYXhvbl9saXN0X29mX2Z1bmdpX2FuZF9mdW5nYWwtbGlrZV9vcmdhbmlzbXNfZnJvbV9HZXJtYW55X2NvbXBpbGVkX2J5X3RoZV9ER2ZNJTIyIiwidHlwZSI6IkNIRUNLTElTVCIsImhvc3RpbmdPcmdhbml6YXRpb25LZXkiOiIwNjc0YWVhMC1hN2UxLTExZDgtOTUzNC1iOGEwM2M1MGE4NjIiLCJob3N0aW5nT3JnYW5pemF0aW9uVGl0bGUiOiJTdGFhdGxpY2hlIE5hdHVyd2lzc2Vuc2NoYWZ0bGljaGUgU2FtbWx1bmdlbiBCYXllcm5zIiwiY291bnRyeUNvdmVyYWdlIjpbXSwicHVibGlzaGluZ0NvdW50cnkiOiJERSIsInB1Ymxpc2hpbmdPcmdhbml6YXRpb25LZXkiOiIwNjc0YWVhMC1hN2UxLTExZDgtOTUzNC1iOGEwM2M1MGE4NjIiLCJwdWJsaXNoaW5nT3JnYW5pemF0aW9uVGl0bGUiOiJTdGFhdGxpY2hlIE5hdHVyd2lzc2Vuc2NoYWZ0bGljaGUgU2FtbWx1bmdlbiBCYXllcm5zIiwibGljZW5zZSI6Imh0dHA6Ly9jcmVhdGl2ZWNvbW1vbnMub3JnL2xpY2Vuc2VzL2J5LzQuMC9sZWdhbGNvZGUiLCJkZWNhZGVzIjpbXSwia2V5d29yZHMiOltdLCJyZWNvcmRDb3VudCI6MzIyNzF9LHsia2V5IjoiYzcxMWMxNmUtOGRiNS00ZjY2LWFhMDYtMDNkOWU0NzJmYmJjIiwidGl0bGUiOiJUaGUgRnVuZ2FsLCBMaWNoZW4gYW5kIFBsYW50IENvbGxlY3Rpb25zIGF0IHRoZSBIZXJiYXJpdW0gTWFyYnVyZ2Vuc2UiLCJkZXNjcmlwdGlvbiI6Imh0dHA6Ly93d3cuZ2JpZi1teWNvbG9neS5kZS9EYXRhYmFzZUNsaWVudHMvTUJjb2xsL0Fib3V0Lmh0bWwiLCJ0eXBlIjoiT0NDVVJSRU5DRSIsImhvc3RpbmdPcmdhbml6YXRpb25LZXkiOiIwNjc0YWVhMC1hN2UxLTExZDgtOTUzNC1iOGEwM2M1MGE4NjIiLCJob3N0aW5nT3JnYW5pemF0aW9uVGl0bGUiOiJTdGFhdGxpY2hlIE5hdHVyd2lzc2Vuc2NoYWZ0bGljaGUgU2FtbWx1bmdlbiBCYXllcm5zIiwiY291bnRyeUNvdmVyYWdlIjpbXSwicHVibGlzaGluZ0NvdW50cnkiOiJERSIsInB1Ymxpc2hpbmdPcmdhbml6YXRpb25LZXkiOiIwNjc0YWVhMC1hN2UxLTExZDgtOTUzNC1iOGEwM2M1MGE4NjIiLCJwdWJsaXNoaW5nT3JnYW5pemF0aW9uVGl0bGUiOiJTdGFhdGxpY2hlIE5hdHVyd2lzc2Vuc2NoYWZ0bGljaGUgU2FtbWx1bmdlbiBCYXllcm5zIiwibGljZW5zZSI6Imh0dHA6Ly9jcmVhdGl2ZWNvbW1vbnMub3JnL2xpY2Vuc2VzL2J5LzQuMC9sZWdhbGNvZGUiLCJkZWNhZGVzIjpbXSwia2V5d29yZHMiOltdLCJyZWNvcmRDb3VudCI6MzA5NzZ9LHsia2V5IjoiNWQ0N2NiMDktM2VmMi00NzdkLWE1MzktZGQ3ZjY5NTVhZWZkIiwidGl0bGUiOiJIZXJiYXJpdW0gR0FUIiwiZGVzY3JpcHRpb24iOiJUaGUgR2F0ZXJzbGViZW4gSGVyYmFyaXVtIChHQVQpIG9mIHRoZSBJUEsgY29udGFpbnMgYSByZXByZXNlbnRhdGl2ZSA0MDAsMDAwIHNwZWNpbWVucycgY29sbGVjdGlvbiBvZiBjdWx0aXZhdGVkIHBsYW50cyBhbmQgdGhlaXIgd2lsZCByZWxhdGl2ZXMgZnJvbSBleHRyYS10cm9waWNhbCByZWdpb25zLiBJdCBpcyBvbmUgb2YgdGhlIGxhcmdlc3Qgb2Ygc3VjaCBzcGVjaWFsIGhlcmJhcmlhIGluIHRoZSB3b3JsZCBhbmQgc2VydmVzIGFzIGFuIGVzc2VudGlhbCBzb3VyY2Ugb2YgcmVmZXJlbmNlIGFuZCB3b3JraW5nIG1hdGVyaWFsIGZvciB0aGUgcmVwcm9kdWN0aW9uIG9mIGdlbmViYW5rIGFjY2Vzc2lvbnMgYW5kIHZhcmlvdXMgSVBLIHJlc2VhcmNoIGFjdGl2aXRpZXMuIEZ1cnRoZXJtb3JlIHRoZSBHYXRlcnNsZWJlbiBIZXJiYXJpdW0gdGFrZXMgcGFydCBpbiB0aGUgaW50ZXJuYXRpb25hbCBsb2FuIGFuZCBleGNoYW5nZSBuZXR3b3JrIG9mIGJvdGFuaWNhbCBjb2xsZWN0aW9ucyBhbmQgY2FuIGJlIHVzZWQgYnkgR2VybWFuIGFuZCBmb3JlaWduIHNwZWNpYWxpc3RzLiIsInR5cGUiOiJPQ0NVUlJFTkNFIiwiaG9zdGluZ09yZ2FuaXphdGlvbktleSI6IjE5YTNhNGUwLTE5MDgtMTFkYy1hMDdiLWI4YTAzYzUwYTg2MiIsImhvc3RpbmdPcmdhbml6YXRpb25UaXRsZSI6IkxlaWJuaXogSW5zdGl0dXRlIG9mIFBsYW50IEdlbmV0aWNzIGFuZCBDcm9wIFBsYW50IFJlc2VhcmNoIChJUEspIiwiY291bnRyeUNvdmVyYWdlIjpbXSwicHVibGlzaGluZ0NvdW50cnkiOiJERSIsInB1Ymxpc2hpbmdPcmdhbml6YXRpb25LZXkiOiIxOWEzYTRlMC0xOTA4LTExZGMtYTA3Yi1iOGEwM2M1MGE4NjIiLCJwdWJsaXNoaW5nT3JnYW5pemF0aW9uVGl0bGUiOiJMZWlibml6IEluc3RpdHV0ZSBvZiBQbGFudCBHZW5ldGljcyBhbmQgQ3JvcCBQbGFudCBSZXNlYXJjaCAoSVBLKSIsImxpY2Vuc2UiOiJodHRwOi8vY3JlYXRpdmVjb21tb25zLm9yZy9wdWJsaWNkb21haW4vemVyby8xLjAvbGVnYWxjb2RlIiwiZGVjYWRlcyI6W10sImtleXdvcmRzIjpbXSwicmVjb3JkQ291bnQiOjMwOTM0fSx7ImtleSI6IjdiODRjMGEyLWY3NjItMTFlMS1hNDM5LTAwMTQ1ZWI0NWU5YSIsInRpdGxlIjoiQ29sbGVjdGlvbiBDcnVzdGFjZWEgLSBaTUIiLCJkZXNjcmlwdGlvbiI6IkNydXN0YWNlYSwgbWFpbmx5IEFtcGhpcG9kYSBhbmQgSXNvcG9kYSIsInR5cGUiOiJPQ0NVUlJFTkNFIiwiaG9zdGluZ09yZ2FuaXphdGlvbktleSI6ImM3NmNmMDMwLTJhOTUtMTFkYS05Y2MxLWI4YTAzYzUwYTg2MiIsImhvc3RpbmdPcmdhbml6YXRpb25UaXRsZSI6IlNlbmNrZW5iZXJnIiwiY291bnRyeUNvdmVyYWdlIjpbXSwicHVibGlzaGluZ0NvdW50cnkiOiJERSIsInB1Ymxpc2hpbmdPcmdhbml6YXRpb25LZXkiOiJjNzZjZjAzMC0yYTk1LTExZGEtOWNjMS1iOGEwM2M1MGE4NjIiLCJwdWJsaXNoaW5nT3JnYW5pemF0aW9uVGl0bGUiOiJTZW5ja2VuYmVyZyIsImxpY2Vuc2UiOiJodHRwOi8vY3JlYXRpdmVjb21tb25zLm9yZy9saWNlbnNlcy9ieS80LjAvbGVnYWxjb2RlIiwiZGVjYWRlcyI6W10sImtleXdvcmRzIjpbXSwicmVjb3JkQ291bnQiOjI5OTM2fSx7ImtleSI6IjgyOTI3N2MyLWY3NjItMTFlMS1hNDM5LTAwMTQ1ZWI0NWU5YSIsInRpdGxlIjoiQ29sbGVjdGlvbiBJY2h0aHlvbG9naWUgLSBTTlNEIiwiZGVzY3JpcHRpb24iOiJQaXNjZXMgb2YgdGhlIHdvcmxkIiwidHlwZSI6Ik9DQ1VSUkVOQ0UiLCJob3N0aW5nT3JnYW5pemF0aW9uS2V5IjoiYzc2Y2YwMzAtMmE5NS0xMWRhLTljYzEtYjhhMDNjNTBhODYyIiwiaG9zdGluZ09yZ2FuaXphdGlvblRpdGxlIjoiU2VuY2tlbmJlcmciLCJjb3VudHJ5Q292ZXJhZ2UiOltdLCJwdWJsaXNoaW5nQ291bnRyeSI6IkRFIiwicHVibGlzaGluZ09yZ2FuaXphdGlvbktleSI6ImM3NmNmMDMwLTJhOTUtMTFkYS05Y2MxLWI4YTAzYzUwYTg2MiIsInB1Ymxpc2hpbmdPcmdhbml6YXRpb25UaXRsZSI6IlNlbmNrZW5iZXJnIiwibGljZW5zZSI6Imh0dHA6Ly9jcmVhdGl2ZWNvbW1vbnMub3JnL2xpY2Vuc2VzL2J5LzQuMC9sZWdhbGNvZGUiLCJkZWNhZGVzIjpbXSwia2V5d29yZHMiOltdLCJyZWNvcmRDb3VudCI6Mjk0Mzh9LHsia2V5IjoiN2I4OTY0ZWEtZjc2Mi0xMWUxLWE0MzktMDAxNDVlYjQ1ZTlhIiwidGl0bGUiOiJDb2xsZWN0aW9uIFZlcm1lcyAtIFpNQiIsImRlc2NyaXB0aW9uIjoiVmVybWVzIG9mIHRoZSB3b3JsZCIsInR5cGUiOiJPQ0NVUlJFTkNFIiwiaG9zdGluZ09yZ2FuaXphdGlvbktleSI6ImM3NmNmMDMwLTJhOTUtMTFkYS05Y2MxLWI4YTAzYzUwYTg2MiIsImhvc3RpbmdPcmdhbml6YXRpb25UaXRsZSI6IlNlbmNrZW5iZXJnIiwiY291bnRyeUNvdmVyYWdlIjpbXSwicHVibGlzaGluZ0NvdW50cnkiOiJERSIsInB1Ymxpc2hpbmdPcmdhbml6YXRpb25LZXkiOiJjNzZjZjAzMC0yYTk1LTExZGEtOWNjMS1iOGEwM2M1MGE4NjIiLCJwdWJsaXNoaW5nT3JnYW5pemF0aW9uVGl0bGUiOiJTZW5ja2VuYmVyZyIsImxpY2Vuc2UiOiJodHRwOi8vY3JlYXRpdmVjb21tb25zLm9yZy9saWNlbnNlcy9ieS80LjAvbGVnYWxjb2RlIiwiZGVjYWRlcyI6W10sImtleXdvcmRzIjpbXSwicmVjb3JkQ291bnQiOjI4NDU5fSx7ImtleSI6ImY2YTA3YjQyLTFkMmMtMTFlMi04ZmQ0LTAwMTQ1ZWI0NWU5YSIsInRpdGxlIjoiQ29sbGVjdGlvbiBQYWxlb250b2xvZ3kgLSBHUElUIiwiZGVzY3JpcHRpb24iOiJmb3NzaWxzIG9mIHRoZSB3b3JsZCIsInR5cGUiOiJPQ0NVUlJFTkNFIiwiaG9zdGluZ09yZ2FuaXphdGlvbktleSI6ImM3NmNmMDMwLTJhOTUtMTFkYS05Y2MxLWI4YTAzYzUwYTg2MiIsImhvc3RpbmdPcmdhbml6YXRpb25UaXRsZSI6IlNlbmNrZW5iZXJnIiwiY291bnRyeUNvdmVyYWdlIjpbXSwicHVibGlzaGluZ0NvdW50cnkiOiJERSIsInB1Ymxpc2hpbmdPcmdhbml6YXRpb25LZXkiOiJjNzZjZjAzMC0yYTk1LTExZGEtOWNjMS1iOGEwM2M1MGE4NjIiLCJwdWJsaXNoaW5nT3JnYW5pemF0aW9uVGl0bGUiOiJTZW5ja2VuYmVyZyIsImxpY2Vuc2UiOiJodHRwOi8vY3JlYXRpdmVjb21tb25zLm9yZy9saWNlbnNlcy9ieS80LjAvbGVnYWxjb2RlIiwiZGVjYWRlcyI6W10sImtleXdvcmRzIjpbXSwicmVjb3JkQ291bnQiOjI4MzUwfSx7ImtleSI6Ijk2NTgyZGM0LWY3NjItMTFlMS1hNDM5LTAwMTQ1ZWI0NWU5YSIsInRpdGxlIjoiQ29sbGVjdGlvbiBQaXNjZXMgU01GIiwiZGVzY3JpcHRpb24iOiJGaXNoZXMgb2YgdGhlIHdvcmxkIiwidHlwZSI6Ik9DQ1VSUkVOQ0UiLCJob3N0aW5nT3JnYW5pemF0aW9uS2V5IjoiYzc2Y2YwMzAtMmE5NS0xMWRhLTljYzEtYjhhMDNjNTBhODYyIiwiaG9zdGluZ09yZ2FuaXphdGlvblRpdGxlIjoiU2VuY2tlbmJlcmciLCJjb3VudHJ5Q292ZXJhZ2UiOltdLCJwdWJsaXNoaW5nQ291bnRyeSI6IkRFIiwicHVibGlzaGluZ09yZ2FuaXphdGlvbktleSI6ImM3NmNmMDMwLTJhOTUtMTFkYS05Y2MxLWI4YTAzYzUwYTg2MiIsInB1Ymxpc2hpbmdPcmdhbml6YXRpb25UaXRsZSI6IlNlbmNrZW5iZXJnIiwibGljZW5zZSI6Imh0dHA6Ly9jcmVhdGl2ZWNvbW1vbnMub3JnL2xpY2Vuc2VzL2J5LzQuMC9sZWdhbGNvZGUiLCJkZWNhZGVzIjpbXSwia2V5d29yZHMiOltdLCJyZWNvcmRDb3VudCI6MjgxNTh9LHsia2V5IjoiOTdiZDA4NmEtY2Y0My0xMWUyLWE5YjMtMDAxNDVlYjQ1ZTlhIiwidGl0bGUiOiJKZW5hIE1pY3JvYmlhbCBSZXNvdXJjZSBDb2xsZWN0aW9uIChKTVJDKSBhdCBMZWlibml6IEluc3RpdHV0ZSBmb3IgTmF0dXJhbCBQcm9kdWN0IFJlc2VhcmNoIGFuZCBJbmZlY3Rpb24gQmlvbG9neSBlLlYuIEhhbnMtS27DtmxsLUluc3RpdHV0ZSAoSEtJKSBhbmQgRnJpZWRyaWNoIFNjaGlsbGVyIFVuaXZlcnNpdHkgSmVuYSIsImRlc2NyaXB0aW9uIjoiaHR0cDovL3d3dy5oa2ktamVuYS5kZS9pbmRleC5waHAiLCJ0eXBlIjoiT0NDVVJSRU5DRSIsImhvc3RpbmdPcmdhbml6YXRpb25LZXkiOiIwNjc0YWVhMC1hN2UxLTExZDgtOTUzNC1iOGEwM2M1MGE4NjIiLCJob3N0aW5nT3JnYW5pemF0aW9uVGl0bGUiOiJTdGFhdGxpY2hlIE5hdHVyd2lzc2Vuc2NoYWZ0bGljaGUgU2FtbWx1bmdlbiBCYXllcm5zIiwiY291bnRyeUNvdmVyYWdlIjpbXSwicHVibGlzaGluZ0NvdW50cnkiOiJERSIsInB1Ymxpc2hpbmdPcmdhbml6YXRpb25LZXkiOiIwNjc0YWVhMC1hN2UxLTExZDgtOTUzNC1iOGEwM2M1MGE4NjIiLCJwdWJsaXNoaW5nT3JnYW5pemF0aW9uVGl0bGUiOiJTdGFhdGxpY2hlIE5hdHVyd2lzc2Vuc2NoYWZ0bGljaGUgU2FtbWx1bmdlbiBCYXllcm5zIiwibGljZW5zZSI6Imh0dHA6Ly9jcmVhdGl2ZWNvbW1vbnMub3JnL2xpY2Vuc2VzL2J5LzQuMC9sZWdhbGNvZGUiLCJkZWNhZGVzIjpbXSwia2V5d29yZHMiOltdLCJyZWNvcmRDb3VudCI6Mjc4NjB9LHsia2V5IjoiMTZhMzUzM2QtOTBjZi00NDAyLTk1YTQtNDI0MzdlMmY5NjYwIiwidGl0bGUiOiJIZXJiYXJpdW0gU2VuY2tlbmJlcmdpYW51bSAoR0xNKSAtIExpY2hlbmVzIiwiZGVzY3JpcHRpb24iOiJIZXJiYXJpdW0gU2VuY2tlbmJlcmdpYW51bSAoR0xNKSAtIExpY2hlbmVzIiwidHlwZSI6Ik9DQ1VSUkVOQ0UiLCJob3N0aW5nT3JnYW5pemF0aW9uS2V5IjoiYzc2Y2YwMzAtMmE5NS0xMWRhLTljYzEtYjhhMDNjNTBhODYyIiwiaG9zdGluZ09yZ2FuaXphdGlvblRpdGxlIjoiU2VuY2tlbmJlcmciLCJjb3VudHJ5Q292ZXJhZ2UiOltdLCJwdWJsaXNoaW5nQ291bnRyeSI6IkRFIiwicHVibGlzaGluZ09yZ2FuaXphdGlvbktleSI6ImM3NmNmMDMwLTJhOTUtMTFkYS05Y2MxLWI4YTAzYzUwYTg2MiIsInB1Ymxpc2hpbmdPcmdhbml6YXRpb25UaXRsZSI6IlNlbmNrZW5iZXJnIiwibGljZW5zZSI6Imh0dHA6Ly9jcmVhdGl2ZWNvbW1vbnMub3JnL2xpY2Vuc2VzL2J5LzQuMC9sZWdhbGNvZGUiLCJkZWNhZGVzIjpbXSwia2V5d29yZHMiOltdLCJyZWNvcmRDb3VudCI6Mjc2MDJ9LHsia2V5IjoiODU3NzExNDYtZjc2Mi0xMWUxLWE0MzktMDAxNDVlYjQ1ZTlhIiwidGl0bGUiOiJTdGFhdGxpY2hlcyBNdXNldW0gZsO8ciBOYXR1cmt1bmRlIFN0dXR0Z2FydCwgSGVyYmFyaXVtIiwidHlwZSI6Ik9DQ1VSUkVOQ0UiLCJob3N0aW5nT3JnYW5pemF0aW9uS2V5IjoiNTcyNTRiZDAtODI1Ni0xMWQ4LWI3ZWQtYjhhMDNjNTBhODYyIiwiaG9zdGluZ09yZ2FuaXphdGlvblRpdGxlIjoiQm90YW5pYyBHYXJkZW4gYW5kIEJvdGFuaWNhbCBNdXNldW0gQmVybGluLURhaGxlbSIsImNvdW50cnlDb3ZlcmFnZSI6W10sInB1Ymxpc2hpbmdDb3VudHJ5IjoiREUiLCJwdWJsaXNoaW5nT3JnYW5pemF0aW9uS2V5IjoiNTcyNTRiZDAtODI1Ni0xMWQ4LWI3ZWQtYjhhMDNjNTBhODYyIiwicHVibGlzaGluZ09yZ2FuaXphdGlvblRpdGxlIjoiQm90YW5pYyBHYXJkZW4gYW5kIEJvdGFuaWNhbCBNdXNldW0gQmVybGluLURhaGxlbSIsImxpY2Vuc2UiOiJodHRwOi8vY3JlYXRpdmVjb21tb25zLm9yZy9saWNlbnNlcy9ieS1uYy80LjAvbGVnYWxjb2RlIiwiZGVjYWRlcyI6W10sImtleXdvcmRzIjpbXSwicmVjb3JkQ291bnQiOjI3MzUxfSx7ImtleSI6ImVlOWMyNzk4LTE2MzctMTFlMy1iOTg3LTAwMTQ1ZWI0NWU5YSIsInRpdGxlIjoiQ29sbGVjdGlvbnMgb2YgUGh5dG9wbGFua3RvbiBhdCBCR0JNIiwiZGVzY3JpcHRpb24iOiJUaGUgUGh5dG9wbGFua3RvbiBDb2xsZWN0aW9ucyBhdCBCIGNvbXByaXNlIHdhdGVyIHNhbXBsZXMgb2YgbWl4ZWQgcGh5dG9wbGFua3RvbiwgZml4ZWQgd2l0aCBsdWdvbCwgZXRoYW5vbCBvciBvdGhlciBmaXhpbmcgYWdlbnRzLiBJbiB0aGUgb3JpZ2luYWwgZGF0YWJhc2UgYXQgQiwgc2FtcGxlcyBhcmUgcGFydGx5IGxpbmtlZCB0byBzYW1wbGluZyBkYXRhLCBjb3VudGluZ3MsIGFuZCBsaXRlcmF0dXJlIGRhdGEuIFRoZSBjb2xsZWN0aW9ucyBpbmNsdWRlIHNhbXBsZXMgb2YgV2lsbGkgUmlwbCdzIHJlc2VhcmNoIGdyb3VwIChUVSBCZXJsaW4pLCBCYXJiYXJhIE1leWVyIChNUEkgUGzDtm4pLCBhbmQgVXJzdWxhIEdlaXNzbGVyJ3MgcmVzZWFyY2ggZ3JvdXAgKEZVIEJlcmxpbikuIiwidHlwZSI6Ik9DQ1VSUkVOQ0UiLCJob3N0aW5nT3JnYW5pemF0aW9uS2V5IjoiNTcyNTRiZDAtODI1Ni0xMWQ4LWI3ZWQtYjhhMDNjNTBhODYyIiwiaG9zdGluZ09yZ2FuaXphdGlvblRpdGxlIjoiQm90YW5pYyBHYXJkZW4gYW5kIEJvdGFuaWNhbCBNdXNldW0gQmVybGluLURhaGxlbSIsImNvdW50cnlDb3ZlcmFnZSI6W10sInB1Ymxpc2hpbmdDb3VudHJ5IjoiREUiLCJwdWJsaXNoaW5nT3JnYW5pemF0aW9uS2V5IjoiNTcyNTRiZDAtODI1Ni0xMWQ4LWI3ZWQtYjhhMDNjNTBhODYyIiwicHVibGlzaGluZ09yZ2FuaXphdGlvblRpdGxlIjoiQm90YW5pYyBHYXJkZW4gYW5kIEJvdGFuaWNhbCBNdXNldW0gQmVybGluLURhaGxlbSIsImxpY2Vuc2UiOiJodHRwOi8vY3JlYXRpdmVjb21tb25zLm9yZy9saWNlbnNlcy9ieS80LjAvbGVnYWxjb2RlIiwiZGVjYWRlcyI6W10sImtleXdvcmRzIjpbXSwicmVjb3JkQ291bnQiOjI2OTQzfSx7ImtleSI6IjMxODZjZDNmLWE3ZDAtNGU2NC1iYjYwLTYzMGUyMGE0N2ZhNiIsInRpdGxlIjoiTW9uaXRvcmluZyBkYXRhIGZyb20gdGhlIGZlZGVyYWwgc3RhdGUgQmF2YXJpYSAoR2VybWFueSkiLCJkZXNjcmlwdGlvbiI6IjxwPlRoZSBkYXRhc2V0IGNvbnNpc3RzIG9mIG9jY3VycmVuY2UgZGF0YSBvZiB0aGUgYXF1YXRpYyBvcmdhbmlzbSBncm91cHMgbWFjcm9pbnZlcnRlYnJhdGVzIGFuZCBtYWNyb3BoeXRlcyB0aGF0IHdlcmUgc2FtcGxlZCBpbiB0aGUgR2VybWFuIGZlZGVyYWwgc3RhdGUgQmF2YXJpYSBiZXR3ZWVuIDIwMDQgYW5kIDIwMDkuIFRoZSBzYW1wbGluZyB3YXMgY29uZHVjdGVkIGFjY29yZGluZyB0byB0aGUgcHJvdG9jb2xzIG9mIHRoZSBuYXRpb25hbCBtb25pdG9yaW5nIHByb2dyYW1tZSBmb3IgaW1wbGVtZW50YXRpb24gb2YgdGhlIFdhdGVyIEZyYW1ld29yayBEaXJlY3RpdmUuPC9wPlxuPHA+Rm9yIGFkZGl0aW9uYWwgbWV0YWRhdGEgc2VlOiBodHRwOi8vZGF0YS5mcmVzaHdhdGVyYmlvZGl2ZXJzaXR5LmV1L21ldGFkYi9iZl9tZGJfdmlldy5waHA/ZW50cnlJRD1CRkVfODg8L3A+IiwidHlwZSI6Ik9DQ1VSUkVOQ0UiLCJob3N0aW5nT3JnYW5pemF0aW9uS2V5IjoiYjg3MmIwNzUtOWFiNS00ZTI3LWI2YzYtNWFkZDZiODkwMzc5IiwiaG9zdGluZ09yZ2FuaXphdGlvblRpdGxlIjoiQmlvRnJlc2giLCJjb3VudHJ5Q292ZXJhZ2UiOltdLCJwdWJsaXNoaW5nQ291bnRyeSI6IkRFIiwicHVibGlzaGluZ09yZ2FuaXphdGlvbktleSI6ImI4NzJiMDc1LTlhYjUtNGUyNy1iNmM2LTVhZGQ2Yjg5MDM3OSIsInB1Ymxpc2hpbmdPcmdhbml6YXRpb25UaXRsZSI6IkJpb0ZyZXNoIiwibGljZW5zZSI6Imh0dHA6Ly9jcmVhdGl2ZWNvbW1vbnMub3JnL3B1YmxpY2RvbWFpbi96ZXJvLzEuMC9sZWdhbGNvZGUiLCJkZWNhZGVzIjpbMjAwMF0sImtleXdvcmRzIjpbInJpdmVycyIsIk1vbml0b3JpbmcgZGF0YSIsIk1hY3JvcGh5dGVzIiwiV2F0ZXIgRnJhbWV3b3JrIERpcmVjdGl2ZSIsIklubGFuZCBXYXRlcnMiLCJCaW90YSIsIk1hY3JvaW52ZXJ0ZWJyYXRlcyIsIkJpb3NwaGVyZSIsIk9jY3VycmVuY2UiXSwicmVjb3JkQ291bnQiOjI2NjI0fSx7ImtleSI6IjBiYmM1YmEwLWQ3ZjgtMTFlMi05NWU3LTAwMTQ1ZWI0NWU5YSIsInRpdGxlIjoiVGhlIEVudmlyb25tZW50YWwgU2FtcGxlIENvbGxlY3Rpb24gb2YgdGhlIEFydGhyb3BvZGEgVmFyaWEgU2VjdGlvbiBhdCB0aGUgWm9vbG9naXNjaGUgU3RhYXRzc2FtbWx1bmcgTcO8bmNoZW4iLCJkZXNjcmlwdGlvbiI6Imh0dHA6Ly93d3cuc25zYi5pbmZvL0RhdGFiYXNlQ2xpZW50cy9aU01hdnN0dWRpZXNjb2xsL0Fib3V0Lmh0bWwiLCJ0eXBlIjoiT0NDVVJSRU5DRSIsImhvc3RpbmdPcmdhbml6YXRpb25LZXkiOiIwNjc0YWVhMC1hN2UxLTExZDgtOTUzNC1iOGEwM2M1MGE4NjIiLCJob3N0aW5nT3JnYW5pemF0aW9uVGl0bGUiOiJTdGFhdGxpY2hlIE5hdHVyd2lzc2Vuc2NoYWZ0bGljaGUgU2FtbWx1bmdlbiBCYXllcm5zIiwiY291bnRyeUNvdmVyYWdlIjpbXSwicHVibGlzaGluZ0NvdW50cnkiOiJERSIsInB1Ymxpc2hpbmdPcmdhbml6YXRpb25LZXkiOiIwNjc0YWVhMC1hN2UxLTExZDgtOTUzNC1iOGEwM2M1MGE4NjIiLCJwdWJsaXNoaW5nT3JnYW5pemF0aW9uVGl0bGUiOiJTdGFhdGxpY2hlIE5hdHVyd2lzc2Vuc2NoYWZ0bGljaGUgU2FtbWx1bmdlbiBCYXllcm5zIiwibGljZW5zZSI6Imh0dHA6Ly9jcmVhdGl2ZWNvbW1vbnMub3JnL2xpY2Vuc2VzL2J5LzQuMC9sZWdhbGNvZGUiLCJkZWNhZGVzIjpbXSwia2V5d29yZHMiOltdLCJyZWNvcmRDb3VudCI6MjY1MzV9LHsia2V5IjoiYWUzZWZmM2EtNzQ1My00OThjLWJjZGYtYzIyZTFmY2RlYzc4IiwidGl0bGUiOiJ2ZWdldGF0aW9uIHJlbGV2ZXMgb24gZ3Jhc3NsYW5kIGdyaWRwbG90cyBpbiAyMDA3IiwiZGVzY3JpcHRpb24iOiJPcmlnaW5hbCBkYXRhIGNvbWVzIGZyb20gYSBwcm9qZWN0IHdoaWNoIHRha2VzIG9yIHRvb2sgcGxhY2UgYXMgcGFydCBvZiB0aGUgREZHIHByaW9yaXR5IHByb2dyYW0gXCJFeHBsb3JhdG9yaWVzIGZvciBsYXJnZS1zY2FsZSBhbmQgbG9uZy10ZXJtIGZ1bmN0aW9uYWwgYmlvZGl2ZXJzaXR5IHJlc2VhcmNoXCIuIFRoZSBkYXRhIGlzIHN0b3JlZCB0b2dldGhlciB3aXRoIGRlc2NyaXB0aXZlIG1ldGFkYXRhLCBpbiBjb21iaW5hdGlvbiBjYWxsZWQgYSBkYXRhc2V0LCBpbiB0aGUgcHJvamVjdCByZXBvc2l0b3J5IChodHRwczovL3d3dy5iZXhpcy51bmktamVuYS5kZSkuIFNwZWNpZXMgaW5mb3JtYXRpb24gd2FzIGV4dHJhY3RlZCBmcm9tIHRoYXQgb3JpZ2luYWwgZGF0YXNldC4gVGhlIHNlY29uZCBwYXJhZ3JhcGggaXMgcGFydCBvZiB0aGUgbWV0YWRhdGEgb2YgdGhlIG9yaWdpbmFsIGRhdGFzZXQuPC9icj4nU2FtbWVsYXJ0ZW5cIiBzaW5kIGR1cmNoIGFnZz0gQWdncmVnYXRlIG9kZXIgdG90YWwgZ2VrZW5uemVpY2huZXQuIFNpZSB1bWZhc3NlbiBqZW5lIFRheGEsIGRpZSB0ZWlsd2Vpc2UgYmlzIHp1ciBLbGVpbmFydCwgU3Vic3BlY2llcyBvZGVyIFZhcmlldGFzIGJlc3RpbW10IHd1cmRlbiwgdGVpbHdlaXNlIGFiZXIgYXVjaCBudXIgYXVmIEdhdHR1bmdzLSAoLi4uIHNwZWMuIChpbmRldC4pKSBvZGVyIEFydGViZW5lLiBUYXhvbm9taWUgbmFjaCBXaXNza2lyY2hlbixIYWV1cGxlciAoMTk5OClTdGFuZGFyZGxpc3RlIGbDvHIgRGV1dHNjaGxhbmQuIExlYmVuc2Zvcm1lbiBuYWNoIFJhdW5raWFlciwgQy4gKDE5MTApOiBTdGF0aXN0aWsgZGVyIExlYmVuc2Zvcm1lbiBhbHMgR3J1bmRsYWdlIGbDvHIgZGllIGJpb2xvZ2lzY2hlIFBmbGFuemVuZ2VvZ3JhcGhpZS4tQmVpaC4gQmlvbC4gQ2JsLiAyNyBJSSwgMTcwIC0gMjA2ZC4gUm90ZSBMaXN0ZTogS09STkVDSywgRC4sIFNDSE5JVFRMRVIsIE0uLCBWT0xMTUVSLCBJLiAoMTk5Nik6IFJvdGUgTGlzdGUgZGVyIEZhcm4tIHVuZCBCbMO8dGVucGZsYW56ZW4gKFB0ZXJpZG9waHl0YSBldCBTcGVybWF0b3BoeXRhKSBEZXV0c2NobGFuZHMuIOKAkyBMVURXSUcsIEcuLCBTQ0hOSVRUTEVSLCBNLiBbSHJzZy5dOiBSb3RlIExpc3RlbiBnZWbDpGhyZGV0ZXIgUGZsYW56ZW4gRGV1dHNjaGxhbmRzLiDigJMgU2NocmlmdGVuci4gVmVnZXRhdGlvbnNrZC4gMjg6IDIx4oCTMTg3LCBCdW5kZXNhbXQgZsO8ciBOYXR1cnNjaHV0eiwgQm9ubi4nIiwidHlwZSI6Ik9DQ1VSUkVOQ0UiLCJob3N0aW5nT3JnYW5pemF0aW9uS2V5IjoiNTQxYzI2NjgtOTM5MS00NDc5LWI5MGYtZmU5MGIzNjVmMzNiIiwiaG9zdGluZ09yZ2FuaXphdGlvblRpdGxlIjoiQmlvZGl2ZXJzaXR5IEV4cGxvcmF0b3JpZXMiLCJjb3VudHJ5Q292ZXJhZ2UiOltdLCJwdWJsaXNoaW5nQ291bnRyeSI6IkRFIiwicHVibGlzaGluZ09yZ2FuaXphdGlvbktleSI6IjU0MWMyNjY4LTkzOTEtNDQ3OS1iOTBmLWZlOTBiMzY1ZjMzYiIsInB1Ymxpc2hpbmdPcmdhbml6YXRpb25UaXRsZSI6IkJpb2RpdmVyc2l0eSBFeHBsb3JhdG9yaWVzIiwibGljZW5zZSI6Imh0dHA6Ly9jcmVhdGl2ZWNvbW1vbnMub3JnL2xpY2Vuc2VzL2J5LW5jLzQuMC9sZWdhbGNvZGUiLCJkZWNhZGVzIjpbMjAwMF0sImtleXdvcmRzIjpbInZlZ2V0YXRpb24gcmVsZXZlIiwiMjAwNyIsImdyaWRwbG90IiwidmVnZXRhdGlvbiByZWNvcmQiLCJncmFzc2xhbmQiXSwicmVjb3JkQ291bnQiOjI2MzQ2fSx7ImtleSI6ImFiMTIxNjhmLWNkN2QtNDg0YS05ZjU4LTQ0Y2EzNGFmZTc2MiIsInRpdGxlIjoidmVnZXRhdGlvbiByZWxldmVzIG9uIGdyYXNzbGFuZCBncmlkcGxvdHMgMjAwNy0yMDA5IiwiZGVzY3JpcHRpb24iOiJPcmlnaW5hbCBkYXRhIGNvbWVzIGZyb20gYSBwcm9qZWN0IHdoaWNoIHRha2VzIG9yIHRvb2sgcGxhY2UgYXMgcGFydCBvZiB0aGUgREZHIHByaW9yaXR5IHByb2dyYW0gXCJFeHBsb3JhdG9yaWVzIGZvciBsYXJnZS1zY2FsZSBhbmQgbG9uZy10ZXJtIGZ1bmN0aW9uYWwgYmlvZGl2ZXJzaXR5IHJlc2VhcmNoXCIuIFRoZSBkYXRhIGlzIHN0b3JlZCB0b2dldGhlciB3aXRoIGRlc2NyaXB0aXZlIG1ldGFkYXRhLCBpbiBjb21iaW5hdGlvbiBjYWxsZWQgYSBkYXRhc2V0LCBpbiB0aGUgcHJvamVjdCByZXBvc2l0b3J5IChodHRwczovL3d3dy5iZXhpcy51bmktamVuYS5kZSkuIFNwZWNpZXMgaW5mb3JtYXRpb24gd2FzIGV4dHJhY3RlZCBmcm9tIHRoYXQgb3JpZ2luYWwgZGF0YXNldC4gVGhlIHNlY29uZCBwYXJhZ3JhcGggaXMgcGFydCBvZiB0aGUgbWV0YWRhdGEgb2YgdGhlIG9yaWdpbmFsIGRhdGFzZXQuPC9icj4nU2FtbWVsYXJ0ZW5cIiBzaW5kIGR1cmNoIGFnZz0gQWdncmVnYXRlIG9kZXIgdG90YWwgZ2VrZW5uemVpY2huZXQuIFNpZSB1bWZhc3NlbiBqZW5lIFRheGEsIGRpZSB0ZWlsd2Vpc2UgYmlzIHp1ciBLbGVpbmFydCwgU3Vic3BlY2llcyBvZGVyIFZhcmlldGFzIGJlc3RpbW10IHd1cmRlbiwgdGVpbHdlaXNlIGFiZXIgYXVjaCBudXIgYXVmIEdhdHR1bmdzLSAoLi4uIHNwZWMuIChpbmRldC4pKSBvZGVyIEFydGViZW5lLiBUYXhvbm9taWUgbmFjaCBXaXNza2lyY2hlbixIYWV1cGxlciAoMTk5OClTdGFuZGFyZGxpc3RlIGbDvHIgRGV1dHNjaGxhbmQuIExlYmVuc2Zvcm1lbiBuYWNoIFJhdW5raWFlciwgQy4gKDE5MTApOiBTdGF0aXN0aWsgZGVyIExlYmVuc2Zvcm1lbiBhbHMgR3J1bmRsYWdlIGbDvHIgZGllIGJpb2xvZ2lzY2hlIFBmbGFuemVuZ2VvZ3JhcGhpZS4tQmVpaC4gQmlvbC4gQ2JsLiAyNyBJSSwgMTcwIC0gMjA2ZC4gUm90ZSBMaXN0ZTogS09STkVDSywgRC4sIFNDSE5JVFRMRVIsIE0uLCBWT0xMTUVSLCBJLiAoMTk5Nik6IFJvdGUgTGlzdGUgZGVyIEZhcm4tIHVuZCBCbMO8dGVucGZsYW56ZW4gKFB0ZXJpZG9waHl0YSBldCBTcGVybWF0b3BoeXRhKSBEZXV0c2NobGFuZHMuIOKAkyBMVURXSUcsIEcuLCBTQ0hOSVRUTEVSLCBNLiBbSHJzZy5dOiBSb3RlIExpc3RlbiBnZWbDpGhyZGV0ZXIgUGZsYW56ZW4gRGV1dHNjaGxhbmRzLiDigJMgU2NocmlmdGVuci4gVmVnZXRhdGlvbnNrZC4gMjg6IDIx4oCTMTg3LCBCdW5kZXNhbXQgZsO8ciBOYXR1cnNjaHV0eiwgQm9ubi4nIiwidHlwZSI6Ik9DQ1VSUkVOQ0UiLCJob3N0aW5nT3JnYW5pemF0aW9uS2V5IjoiNTQxYzI2NjgtOTM5MS00NDc5LWI5MGYtZmU5MGIzNjVmMzNiIiwiaG9zdGluZ09yZ2FuaXphdGlvblRpdGxlIjoiQmlvZGl2ZXJzaXR5IEV4cGxvcmF0b3JpZXMiLCJjb3VudHJ5Q292ZXJhZ2UiOltdLCJwdWJsaXNoaW5nQ291bnRyeSI6IkRFIiwicHVibGlzaGluZ09yZ2FuaXphdGlvbktleSI6IjU0MWMyNjY4LTkzOTEtNDQ3OS1iOTBmLWZlOTBiMzY1ZjMzYiIsInB1Ymxpc2hpbmdPcmdhbml6YXRpb25UaXRsZSI6IkJpb2RpdmVyc2l0eSBFeHBsb3JhdG9yaWVzIiwibGljZW5zZSI6Imh0dHA6Ly9jcmVhdGl2ZWNvbW1vbnMub3JnL2xpY2Vuc2VzL2J5LW5jLzQuMC9sZWdhbGNvZGUiLCJkZWNhZGVzIjpbMjAwMF0sImtleXdvcmRzIjpbInZlZ2V0YXRpb24gcmVsZXZlIiwiZ3JpZHBsb3QiLCJ2ZWdldGF0aW9uIHJlY29yZCIsImdyYXNzbGFuZCJdLCJyZWNvcmRDb3VudCI6MjYwNDF9LHsia2V5IjoiNWZlNDhlMmMtYTgzZC00M2I3LTk1MmEtZTFlNjJjNDlhZDIzIiwidGl0bGUiOiJNb25pdG9yaW5nIGRhdGEgZnJvbSB0aGUgZmVkZXJhbCBzdGF0ZSBTYXhvbnkgKEdlcm1hbnkpIiwiZGVzY3JpcHRpb24iOiI8cD5UaGUgZGF0YXNldCBjb25zaXN0cyBvZiBvY2N1cnJlbmNlIGRhdGEgb2YgdGhlIGFxdWF0aWMgb3JnYW5pc20gZ3JvdXBzIGZpc2gsIG1hY3JvaW52ZXJ0ZWJyYXRlcyBhbmQgbWFjcm9waHl0ZXMgdGhhdCB3ZXJlIHNhbXBsZWQgaW4gdGhlIEdlcm1hbiBmZWRlcmFsIHN0YXRlIFNheG9ueSBiZXR3ZWVuIDIwMDcgYW5kIDIwMTEuIFRoZSBzYW1wbGluZyB3YXMgY29uZHVjdGVkIGFjY29yZGluZyB0byB0aGUgcHJvdG9jb2xzIG9mIHRoZSBuYXRpb25hbCBtb25pdG9yaW5nIHByb2dyYW1tZSBmb3IgaW1wbGVtZW50YXRpb24gb2YgdGhlIFdhdGVyIEZyYW1ld29yayBEaXJlY3RpdmUuPC9wPlxuPHA+Rm9yIGFkZGl0aW9uYWwgbWV0YWRhdGEgc2VlOiBodHRwOi8vZGF0YS5mcmVzaHdhdGVyYmlvZGl2ZXJzaXR5LmV1L21ldGFkYi9iZl9tZGJfdmlldy5waHA/ZW50cnlJRD1CRkVfOTM8L3A+IiwidHlwZSI6Ik9DQ1VSUkVOQ0UiLCJob3N0aW5nT3JnYW5pemF0aW9uS2V5IjoiYjg3MmIwNzUtOWFiNS00ZTI3LWI2YzYtNWFkZDZiODkwMzc5IiwiaG9zdGluZ09yZ2FuaXphdGlvblRpdGxlIjoiQmlvRnJlc2giLCJjb3VudHJ5Q292ZXJhZ2UiOltdLCJwdWJsaXNoaW5nQ291bnRyeSI6IkRFIiwicHVibGlzaGluZ09yZ2FuaXphdGlvbktleSI6ImI4NzJiMDc1LTlhYjUtNGUyNy1iNmM2LTVhZGQ2Yjg5MDM3OSIsInB1Ymxpc2hpbmdPcmdhbml6YXRpb25UaXRsZSI6IkJpb0ZyZXNoIiwibGljZW5zZSI6Imh0dHA6Ly9jcmVhdGl2ZWNvbW1vbnMub3JnL3B1YmxpY2RvbWFpbi96ZXJvLzEuMC9sZWdhbGNvZGUiLCJkZWNhZGVzIjpbMjAwMCwyMDEwXSwia2V5d29yZHMiOlsicml2ZXJzIiwiTW9uaXRvcmluZyBkYXRhIiwiTWFjcm9waHl0ZXMiLCJXYXRlciBGcmFtZXdvcmsgRGlyZWN0aXZlIiwiSW5sYW5kIFdhdGVycyIsIkJpb3RhIiwiTWFjcm9pbnZlcnRlYnJhdGVzIiwiRmlzaCIsIkJpb3NwaGVyZSIsIk9jY3VycmVuY2UiXSwicmVjb3JkQ291bnQiOjI1ODgzfSx7ImtleSI6ImQzNDg0NDMwLTg4NzYtMTFkZC05ODZjLWI4YTAzYzUwYTg2MiIsInRpdGxlIjoiTmV3IFplYWxhbmQgQmlvZGl2ZXJzaXR5IFJlY29yZGluZyBOZXR3b3JrIiwiZGVzY3JpcHRpb24iOiJBIHN5c3RlbSBieSB3aGljaCB0aGUgZ2VuZXJhbCBwdWJsaWMgY2FuIGVudGVyIHRoZWlyIGJpb2RpdmVyc2l0eSBvYnNlcnZhdGlvbnMsIGFzIHdlbGwgYXMgdmlldyByZXBvcnRzIG9uIGV4aXN0aW5nIG9ic2VydmF0aW9ucy4gVGhlIHBvcnRhbHMgYXJlIEJpcmRzLCBQbGFudHMsIEZ1bmdpLCBNYW1tYWxzLCBGcm9ncyBhbmQgUmVwdGlsZXMsIGFuZCBJbnZlcnRlYnJhdGVzLiIsInR5cGUiOiJPQ0NVUlJFTkNFIiwiaG9zdGluZ09yZ2FuaXphdGlvbktleSI6IjI3NjBkN2IwLTc2N2MtMTFkOC1hMTk4LWI4YTAzYzUwYTg2MiIsImhvc3RpbmdPcmdhbml6YXRpb25UaXRsZSI6IkdCSUYgTmV3IFplYWxhbmQiLCJjb3VudHJ5Q292ZXJhZ2UiOltdLCJwdWJsaXNoaW5nQ291bnRyeSI6Ik5aIiwicHVibGlzaGluZ09yZ2FuaXphdGlvbktleSI6IjI3NjBkN2IwLTc2N2MtMTFkOC1hMTk4LWI4YTAzYzUwYTg2MiIsInB1Ymxpc2hpbmdPcmdhbml6YXRpb25UaXRsZSI6IkdCSUYgTmV3IFplYWxhbmQiLCJsaWNlbnNlIjoiaHR0cDovL2NyZWF0aXZlY29tbW9ucy5vcmcvbGljZW5zZXMvYnkvNC4wL2xlZ2FsY29kZSIsImRlY2FkZXMiOltdLCJrZXl3b3JkcyI6W10sInJlY29yZENvdW50IjoyMzU5M30seyJrZXkiOiI3MWYyN2Q5MC1mNzYyLTExZTEtYTQzOS0wMDE0NWViNDVlOWEiLCJ0aXRsZSI6Ik1mTiAtIEZvc3NpbCBpbnZlcnRlYnJhdGVzIElJSSIsImRlc2NyaXB0aW9uIjoiQXJ0aHJvcG9kcyAoZXhjbHVkaW5nIHRyaWxvYml0ZXMpLCBlY2hpbm9kZXJtcywgZ3JhcHRvbGl0ZXMiLCJ0eXBlIjoiT0NDVVJSRU5DRSIsImhvc3RpbmdPcmdhbml6YXRpb25LZXkiOiIxMDk4MDkyMC02ZGFkLTExZGEtYWQxMy1iOGEwM2M1MGE4NjIiLCJob3N0aW5nT3JnYW5pemF0aW9uVGl0bGUiOiJNdXNldW0gZsO8ciBOYXR1cmt1bmRlIEJlcmxpbiIsImNvdW50cnlDb3ZlcmFnZSI6W10sInB1Ymxpc2hpbmdDb3VudHJ5IjoiREUiLCJwdWJsaXNoaW5nT3JnYW5pemF0aW9uS2V5IjoiMTA5ODA5MjAtNmRhZC0xMWRhLWFkMTMtYjhhMDNjNTBhODYyIiwicHVibGlzaGluZ09yZ2FuaXphdGlvblRpdGxlIjoiTXVzZXVtIGbDvHIgTmF0dXJrdW5kZSBCZXJsaW4iLCJsaWNlbnNlIjoiaHR0cDovL2NyZWF0aXZlY29tbW9ucy5vcmcvbGljZW5zZXMvYnkvNC4wL2xlZ2FsY29kZSIsImRlY2FkZXMiOltdLCJrZXl3b3JkcyI6W10sInJlY29yZENvdW50IjoyMzMxOX0seyJrZXkiOiI1ZDJmNjA5Mi02ZGNkLTQ5NmItYWJiYS02ZDllOTVjY2M4MDEiLCJ0aXRsZSI6Ik1vbml0b3JpbmcgZGF0YSBmcm9tIHRoZSBmZWRlcmFsIHN0YXRlIFJoaW5lbGFuZC1QYWxhdGluYXRlIChHZXJtYW55KSIsImRlc2NyaXB0aW9uIjoiPHA+VGhlIGRhdGFzZXQgY29uc2lzdHMgb2Ygb2NjdXJyZW5jZSBkYXRhIG9mIHRoZSBhcXVhdGljIG9yZ2FuaXNtIGdyb3VwcyBmaXNoLCBtYWNyb2ludmVydGVicmF0ZXMgYW5kIG1hY3JvcGh5dGVzIHRoYXQgd2VyZSBzYW1wbGVkIGluIHRoZSBHZXJtYW4gZmVkZXJhbCBzdGF0ZSBSaGluZWxhbmQtUGFsYXRpbmF0ZSBiZXR3ZWVuIDIwMDYgYW5kIDIwMDkuIFRoZSBzYW1wbGluZyB3YXMgY29uZHVjdGVkIGFjY29yZGluZyB0byB0aGUgcHJvdG9jb2xzIG9mIHRoZSBuYXRpb25hbCBtb25pdG9yaW5nIHByb2dyYW1tZSBmb3IgaW1wbGVtZW50YXRpb24gb2YgdGhlIFdhdGVyIEZyYW1ld29yayBEaXJlY3RpdmUuPC9wPlxuPHA+Rm9yIGFkZGl0aW9uYWwgbWV0YWRhdGEgc2VlOiBodHRwOi8vZGF0YS5mcmVzaHdhdGVyYmlvZGl2ZXJzaXR5LmV1L21ldGFkYi9iZl9tZGJfdmlldy5waHA/ZW50cnlJRD1CRkVfOTI8L3A+IiwidHlwZSI6Ik9DQ1VSUkVOQ0UiLCJob3N0aW5nT3JnYW5pemF0aW9uS2V5IjoiYjg3MmIwNzUtOWFiNS00ZTI3LWI2YzYtNWFkZDZiODkwMzc5IiwiaG9zdGluZ09yZ2FuaXphdGlvblRpdGxlIjoiQmlvRnJlc2giLCJjb3VudHJ5Q292ZXJhZ2UiOltdLCJwdWJsaXNoaW5nQ291bnRyeSI6IkRFIiwicHVibGlzaGluZ09yZ2FuaXphdGlvbktleSI6ImI4NzJiMDc1LTlhYjUtNGUyNy1iNmM2LTVhZGQ2Yjg5MDM3OSIsInB1Ymxpc2hpbmdPcmdhbml6YXRpb25UaXRsZSI6IkJpb0ZyZXNoIiwibGljZW5zZSI6Imh0dHA6Ly9jcmVhdGl2ZWNvbW1vbnMub3JnL3B1YmxpY2RvbWFpbi96ZXJvLzEuMC9sZWdhbGNvZGUiLCJkZWNhZGVzIjpbMjAwMF0sImtleXdvcmRzIjpbInJpdmVycyIsIk1vbml0b3JpbmcgZGF0YSIsIk1hY3JvcGh5dGVzIiwiV2F0ZXIgRnJhbWV3b3JrIERpcmVjdGl2ZSIsIklubGFuZCBXYXRlcnMiLCJCaW90YSIsIk1hY3JvaW52ZXJ0ZWJyYXRlcyIsIkZpc2giLCJCaW9zcGhlcmUiLCJPY2N1cnJlbmNlIl0sInJlY29yZENvdW50IjoyMzIxNX0seyJrZXkiOiJhZmFhODBhMi02MTY3LTQ3ZTEtYmFhZS01NDUwMjA2ZDA3ZGQiLCJ0aXRsZSI6IlRoZSBBcnRocm9wb2RhIFZhcmlhIENvbGxlY3Rpb24gYXQgdGhlIFpvb2xvZ2lzY2hlIFN0YWF0c3NhbW1sdW5nIE3DvG5jaGVuIiwiZGVzY3JpcHRpb24iOiJodHRwOi8vd3d3LnNuc2IuaW5mby9EYXRhYmFzZUNsaWVudHMvWlNNYXJ0aHJvdmFyaWFjb2xsL0Fib3V0Lmh0bWwiLCJ0eXBlIjoiT0NDVVJSRU5DRSIsImhvc3RpbmdPcmdhbml6YXRpb25LZXkiOiIwNjc0YWVhMC1hN2UxLTExZDgtOTUzNC1iOGEwM2M1MGE4NjIiLCJob3N0aW5nT3JnYW5pemF0aW9uVGl0bGUiOiJTdGFhdGxpY2hlIE5hdHVyd2lzc2Vuc2NoYWZ0bGljaGUgU2FtbWx1bmdlbiBCYXllcm5zIiwiY291bnRyeUNvdmVyYWdlIjpbXSwicHVibGlzaGluZ0NvdW50cnkiOiJERSIsInB1Ymxpc2hpbmdPcmdhbml6YXRpb25LZXkiOiIwNjc0YWVhMC1hN2UxLTExZDgtOTUzNC1iOGEwM2M1MGE4NjIiLCJwdWJsaXNoaW5nT3JnYW5pemF0aW9uVGl0bGUiOiJTdGFhdGxpY2hlIE5hdHVyd2lzc2Vuc2NoYWZ0bGljaGUgU2FtbWx1bmdlbiBCYXllcm5zIiwibGljZW5zZSI6Imh0dHA6Ly9jcmVhdGl2ZWNvbW1vbnMub3JnL2xpY2Vuc2VzL2J5LzQuMC9sZWdhbGNvZGUiLCJkZWNhZGVzIjpbXSwia2V5d29yZHMiOltdLCJyZWNvcmRDb3VudCI6MjMyMTR9LHsia2V5IjoiZDhlYTk2NjItYWRhMi0xMWUyLThmYmMtMDAxNDVlYjQ1ZTlhIiwidGl0bGUiOiJNZk4gLSBGb3NzaWwgRmlzaCBDb2xsZWN0aW9uIiwidHlwZSI6Ik9DQ1VSUkVOQ0UiLCJob3N0aW5nT3JnYW5pemF0aW9uS2V5IjoiMTA5ODA5MjAtNmRhZC0xMWRhLWFkMTMtYjhhMDNjNTBhODYyIiwiaG9zdGluZ09yZ2FuaXphdGlvblRpdGxlIjoiTXVzZXVtIGbDvHIgTmF0dXJrdW5kZSBCZXJsaW4iLCJjb3VudHJ5Q292ZXJhZ2UiOltdLCJwdWJsaXNoaW5nQ291bnRyeSI6IkRFIiwicHVibGlzaGluZ09yZ2FuaXphdGlvbktleSI6IjEwOTgwOTIwLTZkYWQtMTFkYS1hZDEzLWI4YTAzYzUwYTg2MiIsInB1Ymxpc2hpbmdPcmdhbml6YXRpb25UaXRsZSI6Ik11c2V1bSBmw7xyIE5hdHVya3VuZGUgQmVybGluIiwibGljZW5zZSI6Imh0dHA6Ly9jcmVhdGl2ZWNvbW1vbnMub3JnL2xpY2Vuc2VzL2J5LzQuMC9sZWdhbGNvZGUiLCJkZWNhZGVzIjpbXSwia2V5d29yZHMiOltdLCJyZWNvcmRDb3VudCI6MjI1MTZ9LHsia2V5IjoiYzQwNzM4ZGUtNmM3Yy0xMWUyLTkwY2UtMDAxNDVlYjQ1ZTlhIiwidGl0bGUiOiJUeXBlIGhlcmJhcml1bSwgR8O2dHRpbmdlbiAoR09FVCkiLCJkZXNjcmlwdGlvbiI6IlRoZSB0eXBlIGRhdGFiYXNlIG9mIHRoZSBIZXJiYXJpdW0gR8O2dHRpbmdlbiAoR09FVCkgaW5jbHVkZXMgdHlwZSBzcGVjaW1lbnMgb2YgdmFzY3VsYXIgcGxhbnRzLCBicnlvcGh5dGVzLCBhbmQgbGljaGVucyAoYWJvdXQgMTEuNjAwIHNwZWNpbWVucykgbG9jYXRlZCBpbiBIZXJiYXJpdW0gR8O2dHRpbmdlbiAoR09FVCkuIEludGVyYWN0aXZlIHBob3RvZ3JhcGhzIGluY2x1ZGluZyBwbGFudCBkZXRhaWxzIGFuZCBsYWJlbHMgYXJlIGF2YWlsYWJsZS4iLCJ0eXBlIjoiT0NDVVJSRU5DRSIsImhvc3RpbmdPcmdhbml6YXRpb25LZXkiOiI1OWM4MTI5MC1kZjBlLTExZDgtYjIyZS1iOGEwM2M1MGE4NjIiLCJob3N0aW5nT3JnYW5pemF0aW9uVGl0bGUiOiJHZW9yZy1BdWd1c3QtVW5pdmVyc2l0w6R0IEfDtnR0aW5nZW4sIEFsYnJlY2h0LXZvbi1IYWxsZXItSW5zdGl0dXQgZsO8ciBQZmxhbnplbndpc3NlbnNjaGFmdGVuLCBBYnRlaWx1bmcgU3lzdGVtYXRpc2NoZSBCb3RhbmlrIiwiY291bnRyeUNvdmVyYWdlIjpbXSwicHVibGlzaGluZ0NvdW50cnkiOiJERSIsInB1Ymxpc2hpbmdPcmdhbml6YXRpb25LZXkiOiI1OWM4MTI5MC1kZjBlLTExZDgtYjIyZS1iOGEwM2M1MGE4NjIiLCJwdWJsaXNoaW5nT3JnYW5pemF0aW9uVGl0bGUiOiJHZW9yZy1BdWd1c3QtVW5pdmVyc2l0w6R0IEfDtnR0aW5nZW4sIEFsYnJlY2h0LXZvbi1IYWxsZXItSW5zdGl0dXQgZsO8ciBQZmxhbnplbndpc3NlbnNjaGFmdGVuLCBBYnRlaWx1bmcgU3lzdGVtYXRpc2NoZSBCb3RhbmlrIiwibGljZW5zZSI6Imh0dHA6Ly9jcmVhdGl2ZWNvbW1vbnMub3JnL2xpY2Vuc2VzL2J5LzQuMC9sZWdhbGNvZGUiLCJkZWNhZGVzIjpbXSwia2V5d29yZHMiOltdLCJyZWNvcmRDb3VudCI6MjIyODV9LHsia2V5IjoiODYzZWZjYzQtZjc2Mi0xMWUxLWE0MzktMDAxNDVlYjQ1ZTlhIiwidGl0bGUiOiJEU01aIFByb2thcnlhIENvbGxlY3Rpb24gQ2F0YWxvZ3VlIiwiZGVzY3JpcHRpb24iOiJUaGUgY2F0YWxvZ3VlIGNvbnRhaW5zIGFsbCBzdHJhaW5zIChvZiB0aGUgQmFjdGVyaWEgYW5kIEFyY2hhZWEgY29sbGVjdGlvbikiLCJ0eXBlIjoiT0NDVVJSRU5DRSIsImhvc3RpbmdPcmdhbml6YXRpb25LZXkiOiI0NjM1NTViMC1kMDgxLTExZGEtYWU4Zi1iOGEwM2M1MGE4NjIiLCJob3N0aW5nT3JnYW5pemF0aW9uVGl0bGUiOiJMZWlibml6IEluc3RpdHV0ZSBEU01aIC0gR2VybWFuIENvbGxlY3Rpb24gb2YgTWljcm9vcmdhbmlzbXMgYW5kIENlbGwgQ3VsdHVyZXMiLCJjb3VudHJ5Q292ZXJhZ2UiOltdLCJwdWJsaXNoaW5nQ291bnRyeSI6IkRFIiwicHVibGlzaGluZ09yZ2FuaXphdGlvbktleSI6IjQ2MzU1NWIwLWQwODEtMTFkYS1hZThmLWI4YTAzYzUwYTg2MiIsInB1Ymxpc2hpbmdPcmdhbml6YXRpb25UaXRsZSI6IkxlaWJuaXogSW5zdGl0dXRlIERTTVogLSBHZXJtYW4gQ29sbGVjdGlvbiBvZiBNaWNyb29yZ2FuaXNtcyBhbmQgQ2VsbCBDdWx0dXJlcyIsImxpY2Vuc2UiOiJodHRwOi8vY3JlYXRpdmVjb21tb25zLm9yZy9saWNlbnNlcy9ieS80LjAvbGVnYWxjb2RlIiwiZGVjYWRlcyI6W10sImtleXdvcmRzIjpbXSwicmVjb3JkQ291bnQiOjIyMjI3fSx7ImtleSI6IjVlMzRmZmRmLTI2NDgtNGVjZi1hYjUzLTU1NWUzZDNkOGQyYiIsInRpdGxlIjoiTW9uaXRvcmluZyBkYXRhIGZyb20gdGhlIGZlZGVyYWwgc3RhdGUgTWVja2xlbmJ1cmctV2VzdGVybiBQb21lcmFuaWEgKEdlcm1hbnkpIiwiZGVzY3JpcHRpb24iOiI8cD5UaGUgZGF0YXNldCBjb25zaXN0cyBvZiBvY2N1cnJlbmNlIGRhdGEgb2YgdGhlIGFxdWF0aWMgb3JnYW5pc20gZ3JvdXBzIGZpc2gsIG1hY3JvaW52ZXJ0ZWJyYXRlcyBhbmQgbWFjcm9waHl0ZXMgdGhhdCB3ZXJlIHNhbXBsZWQgaW4gdGhlIEdlcm1hbiBmZWRlcmFsIHN0YXRlIE1lY2tsZW5idXJnLVdlc3Rlcm4gUG9tZXJhbmlhIGJldHdlZW4gMjAwNiBhbmQgMjAxMC4gVGhlIHNhbXBsaW5nIHdhcyBjb25kdWN0ZWQgYWNjb3JkaW5nIHRvIHRoZSBwcm90b2NvbHMgb2YgdGhlIG5hdGlvbmFsIG1vbml0b3JpbmcgcHJvZ3JhbW1lIGZvciBpbXBsZW1lbnRhdGlvbiBvZiB0aGUgV2F0ZXIgRnJhbWV3b3JrIERpcmVjdGl2ZS48L3A+XG48cD5Gb3IgYWRkaXRpb25hbCBtZXRhZGF0YSBzZWU6IGh0dHA6Ly9kYXRhLmZyZXNod2F0ZXJiaW9kaXZlcnNpdHkuZXUvbWV0YWRiL2JmX21kYl92aWV3LnBocD9lbnRyeUlEPUJGRV85MDwvcD4iLCJ0eXBlIjoiT0NDVVJSRU5DRSIsImhvc3RpbmdPcmdhbml6YXRpb25LZXkiOiJiODcyYjA3NS05YWI1LTRlMjctYjZjNi01YWRkNmI4OTAzNzkiLCJob3N0aW5nT3JnYW5pemF0aW9uVGl0bGUiOiJCaW9GcmVzaCIsImNvdW50cnlDb3ZlcmFnZSI6W10sInB1Ymxpc2hpbmdDb3VudHJ5IjoiREUiLCJwdWJsaXNoaW5nT3JnYW5pemF0aW9uS2V5IjoiYjg3MmIwNzUtOWFiNS00ZTI3LWI2YzYtNWFkZDZiODkwMzc5IiwicHVibGlzaGluZ09yZ2FuaXphdGlvblRpdGxlIjoiQmlvRnJlc2giLCJsaWNlbnNlIjoiaHR0cDovL2NyZWF0aXZlY29tbW9ucy5vcmcvcHVibGljZG9tYWluL3plcm8vMS4wL2xlZ2FsY29kZSIsImRlY2FkZXMiOlsyMDAwLDIwMTBdLCJrZXl3b3JkcyI6WyJyaXZlcnMiLCJNb25pdG9yaW5nIGRhdGEiLCJNYWNyb3BoeXRlcyIsIldhdGVyIEZyYW1ld29yayBEaXJlY3RpdmUiLCJJbmxhbmQgV2F0ZXJzIiwiQmlvdGEiLCJNYWNyb2ludmVydGVicmF0ZXMiLCJGaXNoIiwiQmlvc3BoZXJlIiwiT2NjdXJyZW5jZSJdLCJyZWNvcmRDb3VudCI6MjIyMjR9LHsia2V5IjoiZGVhZTdjYmQtMGMyMC00MjJmLWE3ZjktNGU4YWNmYjU3YzRhIiwidGl0bGUiOiJNb25pdG9yaW5nIGRhdGEgZnJvbSB0aGUgZmVkZXJhbCBzdGF0ZSBTYXhvbnktQW5oYWx0IChHZXJtYW55KSIsImRlc2NyaXB0aW9uIjoiPHA+VGhlIGRhdGFzZXQgY29uc2lzdHMgb2Ygb2NjdXJyZW5jZSBkYXRhIG9mIHRoZSBhcXVhdGljIG9yZ2FuaXNtIGdyb3VwcyBmaXNoLCBtYWNyb2ludmVydGVicmF0ZXMgYW5kIG1hY3JvcGh5dGVzIHRoYXQgd2VyZSBzYW1wbGVkIGluIHRoZSBHZXJtYW4gZmVkZXJhbCBzdGF0ZSBTYXhvbnktQW5oYWx0IGluIDIwMDggYW5kIDIwMDkuIFRoZSBzYW1wbGluZyB3YXMgY29uZHVjdGVkIGFjY29yZGluZyB0byB0aGUgcHJvdG9jb2xzIG9mIHRoZSBuYXRpb25hbCBtb25pdG9yaW5nIHByb2dyYW1tZSBmb3IgaW1wbGVtZW50YXRpb24gb2YgdGhlIFdhdGVyIEZyYW1ld29yayBEaXJlY3RpdmUuPC9wPlxuPHA+Rm9yIGFkZGl0aW9uYWwgbWV0YWRhdGEgc2VlOiBodHRwOi8vZGF0YS5mcmVzaHdhdGVyYmlvZGl2ZXJzaXR5LmV1L21ldGFkYi9iZl9tZGJfdmlldy5waHA/ZW50cnlJRD1CRkVfOTQ8L3A+IiwidHlwZSI6Ik9DQ1VSUkVOQ0UiLCJob3N0aW5nT3JnYW5pemF0aW9uS2V5IjoiYjg3MmIwNzUtOWFiNS00ZTI3LWI2YzYtNWFkZDZiODkwMzc5IiwiaG9zdGluZ09yZ2FuaXphdGlvblRpdGxlIjoiQmlvRnJlc2giLCJjb3VudHJ5Q292ZXJhZ2UiOltdLCJwdWJsaXNoaW5nQ291bnRyeSI6IkRFIiwicHVibGlzaGluZ09yZ2FuaXphdGlvbktleSI6ImI4NzJiMDc1LTlhYjUtNGUyNy1iNmM2LTVhZGQ2Yjg5MDM3OSIsInB1Ymxpc2hpbmdPcmdhbml6YXRpb25UaXRsZSI6IkJpb0ZyZXNoIiwibGljZW5zZSI6Imh0dHA6Ly9jcmVhdGl2ZWNvbW1vbnMub3JnL3B1YmxpY2RvbWFpbi96ZXJvLzEuMC9sZWdhbGNvZGUiLCJkZWNhZGVzIjpbMjAwMF0sImtleXdvcmRzIjpbInJpdmVycyIsIk1vbml0b3JpbmcgZGF0YSIsIk1hY3JvcGh5dGVzIiwiV2F0ZXIgRnJhbWV3b3JrIERpcmVjdGl2ZSIsIklubGFuZCBXYXRlcnMiLCJCaW90YSIsIk1hY3JvaW52ZXJ0ZWJyYXRlcyIsIkZpc2giLCJCaW9zcGhlcmUiLCJPY2N1cnJlbmNlIl0sInJlY29yZENvdW50IjoyMTY2M30seyJrZXkiOiIzNTZkODVhZi1jOTUyLTRiMTYtYjAzNi1iMmVjMzE4MWYzMTciLCJ0aXRsZSI6Ik5hdGlvbmFsIFJpdmVyIFdhdGVyIFF1YWxpdHkgTmV0d29yayBEYXRhYmFzZSAgKE1hY3JvLWludmVydGVicmF0ZXMpIiwiZGVzY3JpcHRpb24iOiJUaGVzZSBtYWNyby1pbnZlcnRlYnJhdGUgZGF0YSBpbmNvcnBvcmF0ZSB0aGUgcmVzdWx0cyBmcm9tIHRoZSBuYXRpb25hbCByaXZlciB3YXRlciBxdWFsaXR5IG5ldHdvcmsgKE5SV1FOKSBmcm9tIDY2IHNpdGVzIHRocm91Z2hvdXQgTmV3IFplYWxhbmQgZm9yIHRoZSBwdXJwb3NlIG9mIG1vbml0b3JpbmcgbG9uZy10ZXJtIHRyZW5kcy4gVGhlIE5SV1FOIHdhcyBmdW5kZWQgYnkgdGhlIEZvdW5kYXRpb24gZm9yIFJlc2VhcmNoLCBTY2llbmNlLCAmIFRlY2hub2xvZ3kgdGhyb3VnaCBOSVdBJ3MgTmF0aW9uYWxseSBTaWduaWZpY2FudCBEYXRhYmFzZTogV2F0ZXIgUmVzb3VyY2VzICYgQ2xpbWF0ZSBwcm9ncmFtbWUuIEN1cnJlbnQgZnVuZGluZyAoZnJvbSBKdWx5IDIwMTEpIGNvbWVzIGZyb20gdGhlIE5JV0EgRW52aXJvbm1lbnRhbCBJbmZvcm1hdGlvbi9Nb25pdG9yaW5nIHByb2dyYW1tZSBjb3JlIGZ1bmRpbmcuIFRoZSBkYXRhIGFyZSBjb2xsZWN0ZWQgYW5udWFsbHkgaW4gc3VtbWVyLCBhbmQgZGF0YSBjb2xsZWN0aW9uIHdhcyBpbml0aWF0ZWQgaW4gSmFudWFyeSAxOTg5LiIsInR5cGUiOiJPQ0NVUlJFTkNFIiwiaG9zdGluZ09yZ2FuaXphdGlvbktleSI6ImM1OGFjMDE5LWI0MTMtNDYxMy04NzcyLTM5ZTU3YWNiZWI4ZSIsImhvc3RpbmdPcmdhbml6YXRpb25UaXRsZSI6IlRoZSBOYXRpb25hbCBJbnN0aXR1dGUgb2YgV2F0ZXIgYW5kIEF0bW9zcGhlcmljIFJlc2VhcmNoIChOSVdBKSIsImNvdW50cnlDb3ZlcmFnZSI6W10sInB1Ymxpc2hpbmdDb3VudHJ5IjoiTloiLCJwdWJsaXNoaW5nT3JnYW5pemF0aW9uS2V5IjoiYzU4YWMwMTktYjQxMy00NjEzLTg3NzItMzllNTdhY2JlYjhlIiwicHVibGlzaGluZ09yZ2FuaXphdGlvblRpdGxlIjoiVGhlIE5hdGlvbmFsIEluc3RpdHV0ZSBvZiBXYXRlciBhbmQgQXRtb3NwaGVyaWMgUmVzZWFyY2ggKE5JV0EpIiwibGljZW5zZSI6Imh0dHA6Ly9jcmVhdGl2ZWNvbW1vbnMub3JnL2xpY2Vuc2VzL2J5LW5jLzQuMC9sZWdhbGNvZGUiLCJkZWNhZGVzIjpbMTk4MCwxOTkwLDIwMDBdLCJrZXl3b3JkcyI6WyJPYnNlcnZhdGlvbiIsIk9jY3VycmVuY2UiXSwicmVjb3JkQ291bnQiOjIxNjQ3fSx7ImtleSI6Ijg1OGFmNDlhLWY3NjItMTFlMS1hNDM5LTAwMTQ1ZWI0NWU5YSIsInRpdGxlIjoiUGh5dG9wYXRob2dlbmljIEZ1bmdpIE9ic2VydmVkIGJ5IEhhbnMgYW5kIEhhbm5hIERvcHBlbGJhdXIiLCJkZXNjcmlwdGlvbiI6Imh0dHA6Ly9ic200LnNuc2IuaW5mby9CU00tTXljb2xvZ3kvQ29sbGVjdGlvbnMvT2JzZXJ2YXRpb25zL0RvcHBlbGJhdXIvQWJvdXQuaHRtbCIsInR5cGUiOiJPQ0NVUlJFTkNFIiwiaG9zdGluZ09yZ2FuaXphdGlvbktleSI6IjA2NzRhZWEwLWE3ZTEtMTFkOC05NTM0LWI4YTAzYzUwYTg2MiIsImhvc3RpbmdPcmdhbml6YXRpb25UaXRsZSI6IlN0YWF0bGljaGUgTmF0dXJ3aXNzZW5zY2hhZnRsaWNoZSBTYW1tbHVuZ2VuIEJheWVybnMiLCJjb3VudHJ5Q292ZXJhZ2UiOltdLCJwdWJsaXNoaW5nQ291bnRyeSI6IkRFIiwicHVibGlzaGluZ09yZ2FuaXphdGlvbktleSI6IjA2NzRhZWEwLWE3ZTEtMTFkOC05NTM0LWI4YTAzYzUwYTg2MiIsInB1Ymxpc2hpbmdPcmdhbml6YXRpb25UaXRsZSI6IlN0YWF0bGljaGUgTmF0dXJ3aXNzZW5zY2hhZnRsaWNoZSBTYW1tbHVuZ2VuIEJheWVybnMiLCJsaWNlbnNlIjoiaHR0cDovL2NyZWF0aXZlY29tbW9ucy5vcmcvbGljZW5zZXMvYnktbmMvNC4wL2xlZ2FsY29kZSIsImRlY2FkZXMiOltdLCJrZXl3b3JkcyI6W10sInJlY29yZENvdW50IjoyMTM0OH0seyJrZXkiOiI1MmE0MjNkMi0wNDg2LTRlNzctYmNlZS02MzUwZDcwOGQ2ZmYiLCJ0aXRsZSI6IlByb2thcnlvdGljIE5vbWVuY2xhdHVyZSBVcC10by1kYXRlIiwiZGVzY3JpcHRpb24iOiImIzM0O1Byb2thcnlvdGljIE5vbWVuY2xhdHVyZSB1cC10by1kYXRlJiMzNDsgaXMgYSBjb21waWxhdGlvbiBvZiBhbGwgbmFtZXMgb2YgQmFjdGVyaWEgYW5kIEFyY2hhZWEgd2hpY2ggaGF2ZSBiZWVuIHZhbGlkbHkgcHVibGlzaGVkIGFjY29yZGluZyB0byB0aGUgQmFjdGVyaW9sb2dpY2FsIENvZGUgc2luY2UgMS4gSmFuLiAxOTgwLCBhbmQgbm9tZW5jbGF0dXJhbCBjaGFuZ2VzIHdoaWNoIGhhdmUgYmVlbiB2YWxpZGx5IHB1Ymxpc2hlZCBzaW5jZS4gSXQgd2lsbCBiZSB1cGRhdGVkIHdpdGggdGhlIHB1YmxpY2F0aW9uIG9mIGVhY2ggbmV3IGlzc3VlIG9mIHRoZSBJbnQuIEouIFN5c3QuIEV2b2wuIE1pY3JvYmlvbC4gKElKU0VNKS4gJiMzNDtQcm9rYXJ5b3RpYyBOb21lbmNsYXR1cmUgdXAtdG8tZGF0ZSYjMzQ7IGlzIHB1Ymxpc2hlZCBieSB0aGUgTGVpYm5pei1JbnN0aXR1dCBEU01aIC0gRGV1dHNjaGUgU2FtbWx1bmcgdm9uIE1pa3Jvb3JnYW5pc21lbiB1bmQgWmVsbGt1bHR1cmVuIEdtYkguIiwidHlwZSI6IkNIRUNLTElTVCIsImhvc3RpbmdPcmdhbml6YXRpb25LZXkiOiJmYmNhOTBlMy04YWVkLTQ4YjEtODRlMy0zNjlhZmJkMDAwY2UiLCJob3N0aW5nT3JnYW5pemF0aW9uVGl0bGUiOiJHQklGIFNlY3JldGFyaWF0IiwiY291bnRyeUNvdmVyYWdlIjpbXSwicHVibGlzaGluZ0NvdW50cnkiOiJERSIsInB1Ymxpc2hpbmdPcmdhbml6YXRpb25LZXkiOiI0NjM1NTViMC1kMDgxLTExZGEtYWU4Zi1iOGEwM2M1MGE4NjIiLCJwdWJsaXNoaW5nT3JnYW5pemF0aW9uVGl0bGUiOiJMZWlibml6IEluc3RpdHV0ZSBEU01aIC0gR2VybWFuIENvbGxlY3Rpb24gb2YgTWljcm9vcmdhbmlzbXMgYW5kIENlbGwgQ3VsdHVyZXMiLCJsaWNlbnNlIjoidW5zcGVjaWZpZWQiLCJkZWNhZGVzIjpbXSwia2V5d29yZHMiOltdLCJyZWNvcmRDb3VudCI6MjAyMzR9LHsia2V5IjoiYWFkOTc1NDItYTA2OC00NDlkLWFkYjMtYThlOTM3ZjY0Y2I0IiwidGl0bGUiOiJBdWNrbGFuZCBNdXNldW0gTGFuZCBWZXJ0ZWJyYXRlcyBDb2xsZWN0aW9uIiwiZGVzY3JpcHRpb24iOiJBdWNrbGFuZCBNdXNldW0ncyBvdXRzdGFuZGluZyBsYW5kIHZlcnRlYnJhdGVzIGNvbGxlY3Rpb24gY29tcHJpc2VzIG92ZXIgMTUsMDAwIGJpcmQgc3BlY2ltZW5zLCAzLDgwMCBhbXBoaWJpYW5zIGFuZCByZXB0aWxlcyBhbmQgMSw2MDAgbGFuZCBtYW1tYWxzLlxuXG5UaGVzZSBzcGVjaW1lbnMgYXJlIHByaW1hcmlseSBmcm9tIG5vcnRoZXJuIE5ldyBaZWFsYW5kLCBidXQgdGhlcmUgaXMgYWxzbyBhIHNpZ25pZmljYW50IGFtb3VudCBvZiBtYXRlcmlhbCBmcm9tIGVsc2V3aGVyZSBpbiB0aGUgY291bnRyeSwgZnJvbSBpc2xhbmRzIG9mIHRoZSBzb3V0aC13ZXN0IFBhY2lmaWMsIGZyb20gQXVzdHJhbGlhIGFuZCBmcm9tIGFyb3VuZCB0aGUgd29ybGQuICBUaGUgY29sbGVjdGlvbiBpcyBwYXJ0aWN1bGFybHkgc3Ryb25nIGluIGtpd2lzIGFuZCBtb2FzLCBvY2VhbmljIHNlYWJpcmRzLCBwZW5ndWlucywgY29ybW9yYW50cywgZHVja3MsIHdhZGVycyBhbmQgYWxsaWVzIChDaGFyYWRyaWlmb3JtZXMpLiIsInR5cGUiOiJPQ0NVUlJFTkNFIiwiaG9zdGluZ09yZ2FuaXphdGlvbktleSI6IjMyZTgyYTY0LWM5YjQtNGIyZi05ZmJkLWQ0NDYzMDliOTczZiIsImhvc3RpbmdPcmdhbml6YXRpb25UaXRsZSI6IkF1Y2tsYW5kIFdhciBNZW1vcmlhbCBNdXNldW0iLCJjb3VudHJ5Q292ZXJhZ2UiOltdLCJwdWJsaXNoaW5nQ291bnRyeSI6Ik5aIiwicHVibGlzaGluZ09yZ2FuaXphdGlvbktleSI6IjMyZTgyYTY0LWM5YjQtNGIyZi05ZmJkLWQ0NDYzMDliOTczZiIsInB1Ymxpc2hpbmdPcmdhbml6YXRpb25UaXRsZSI6IkF1Y2tsYW5kIFdhciBNZW1vcmlhbCBNdXNldW0iLCJsaWNlbnNlIjoiaHR0cDovL2NyZWF0aXZlY29tbW9ucy5vcmcvbGljZW5zZXMvYnkvNC4wL2xlZ2FsY29kZSIsImRlY2FkZXMiOltdLCJrZXl3b3JkcyI6WyJTcGVjaW1lbiIsIk9jY3VycmVuY2UiXSwicmVjb3JkQ291bnQiOjIwMDY1fSx7ImtleSI6Ijk2NjUzZDNlLWY3NjItMTFlMS1hNDM5LTAwMTQ1ZWI0NWU5YSIsInRpdGxlIjoiQ29sbGVjdGlvbiBBdmVzIChiaXJkIHNrZWxldG9ucykgU01GIiwiZGVzY3JpcHRpb24iOiJBdmVzIG9mIHRoZSB3b3JsZCwgYmlyZCBza2VsZXRvbnMiLCJ0eXBlIjoiT0NDVVJSRU5DRSIsImhvc3RpbmdPcmdhbml6YXRpb25LZXkiOiJjNzZjZjAzMC0yYTk1LTExZGEtOWNjMS1iOGEwM2M1MGE4NjIiLCJob3N0aW5nT3JnYW5pemF0aW9uVGl0bGUiOiJTZW5ja2VuYmVyZyIsImNvdW50cnlDb3ZlcmFnZSI6W10sInB1Ymxpc2hpbmdDb3VudHJ5IjoiREUiLCJwdWJsaXNoaW5nT3JnYW5pemF0aW9uS2V5IjoiYzc2Y2YwMzAtMmE5NS0xMWRhLTljYzEtYjhhMDNjNTBhODYyIiwicHVibGlzaGluZ09yZ2FuaXphdGlvblRpdGxlIjoiU2VuY2tlbmJlcmciLCJsaWNlbnNlIjoiaHR0cDovL2NyZWF0aXZlY29tbW9ucy5vcmcvbGljZW5zZXMvYnkvNC4wL2xlZ2FsY29kZSIsImRlY2FkZXMiOltdLCJrZXl3b3JkcyI6W10sInJlY29yZENvdW50IjoxOTc0OH0seyJrZXkiOiI5NjcwMzIyMC1mNzYyLTExZTEtYTQzOS0wMDE0NWViNDVlOWEiLCJ0aXRsZSI6IkNvbGxlY3Rpb24gVGh5c2Fub3B0ZXJhIFNNRiIsImRlc2NyaXB0aW9uIjoiVGh5c2Fub3B0ZXJhIG9mIHRoZSB3b3JsZCIsInR5cGUiOiJPQ0NVUlJFTkNFIiwiaG9zdGluZ09yZ2FuaXphdGlvbktleSI6ImM3NmNmMDMwLTJhOTUtMTFkYS05Y2MxLWI4YTAzYzUwYTg2MiIsImhvc3RpbmdPcmdhbml6YXRpb25UaXRsZSI6IlNlbmNrZW5iZXJnIiwiY291bnRyeUNvdmVyYWdlIjpbXSwicHVibGlzaGluZ0NvdW50cnkiOiJERSIsInB1Ymxpc2hpbmdPcmdhbml6YXRpb25LZXkiOiJjNzZjZjAzMC0yYTk1LTExZGEtOWNjMS1iOGEwM2M1MGE4NjIiLCJwdWJsaXNoaW5nT3JnYW5pemF0aW9uVGl0bGUiOiJTZW5ja2VuYmVyZyIsImxpY2Vuc2UiOiJodHRwOi8vY3JlYXRpdmVjb21tb25zLm9yZy9saWNlbnNlcy9ieS80LjAvbGVnYWxjb2RlIiwiZGVjYWRlcyI6W10sImtleXdvcmRzIjpbXSwicmVjb3JkQ291bnQiOjE5NjI3fSx7ImtleSI6ImQ0NWI4ZThhLTFmMzItNDBiMC1hMTMyLWJkNjkwYmQ5MGIzMCIsInRpdGxlIjoiWkZNSyBIeW1lbm9wdGVyYSBjb2xsZWN0aW9uIiwiZGVzY3JpcHRpb24iOiJUaGUgSHltZW5vcHRlcmEgY29sbGVjdGlvbiBhdCB0aGUgWm9vbG9naWNhbCBSZXNlYXJjaCBNdXNldW0gQWxleGFuZGVyIEtvZW5pZyBjb250YWlucyBwYXJ0cyBvZiB0aGUgY29sbGVjdGlvbiBvZiBKb2hhbm4gS2xhcHBlcmljaCBhcyB3ZWxsIGFzIHRoZSBjb2xsZWN0aW9ucyBvZiBXLiBBZXJ0cywgSm9oYW5uZXMgR2FsbGFzY2gsIFIuIE9iZXJ0aMO8ciwgQXVndXN0IFJlaWNoZW5zcGVyZ2VyLCBSLiBSb2VzbGVyLCBBLiBTY2hvb3AgYW5kIHRoZSBwZXJtYW5lbnQgbG9hbiBvZiB0aGUgWm9vIENvbG9nbmUiLCJ0eXBlIjoiT0NDVVJSRU5DRSIsImhvc3RpbmdPcmdhbml6YXRpb25LZXkiOiI2ZTFjYWQ4MC1iZGY1LTExZDgtODRlYS1iOGEwM2M1MGE4NjIiLCJob3N0aW5nT3JnYW5pemF0aW9uVGl0bGUiOiJab29sb2dpc2NoZXMgRm9yc2NodW5nc2luc3RpdHV0IHVuZCBNdXNldW0gQWxleGFuZGVyIEtvZW5pZyIsImNvdW50cnlDb3ZlcmFnZSI6W10sInB1Ymxpc2hpbmdDb3VudHJ5IjoiREUiLCJwdWJsaXNoaW5nT3JnYW5pemF0aW9uS2V5IjoiNmUxY2FkODAtYmRmNS0xMWQ4LTg0ZWEtYjhhMDNjNTBhODYyIiwicHVibGlzaGluZ09yZ2FuaXphdGlvblRpdGxlIjoiWm9vbG9naXNjaGVzIEZvcnNjaHVuZ3NpbnN0aXR1dCB1bmQgTXVzZXVtIEFsZXhhbmRlciBLb2VuaWciLCJsaWNlbnNlIjoiaHR0cDovL2NyZWF0aXZlY29tbW9ucy5vcmcvbGljZW5zZXMvYnkvNC4wL2xlZ2FsY29kZSIsImRlY2FkZXMiOltdLCJrZXl3b3JkcyI6W10sInJlY29yZENvdW50IjoxOTM3Mn0seyJrZXkiOiIyNjNiYmZlNy1mNjQzLTQzYmItYjQ0OC1mMDcwNWQxYzBlMTgiLCJ0aXRsZSI6IkhlcnBldG9sb2d5IiwiZGVzY3JpcHRpb24iOiJIZXJwZXRvbG9neSAoUmVwdGlsZXMgYW5kIEFtcGhpYmlhbnMpIENvbGxlY3Rpb24iLCJ0eXBlIjoiT0NDVVJSRU5DRSIsImhvc3RpbmdPcmdhbml6YXRpb25LZXkiOiI2ZTFjYWQ4MC1iZGY1LTExZDgtODRlYS1iOGEwM2M1MGE4NjIiLCJob3N0aW5nT3JnYW5pemF0aW9uVGl0bGUiOiJab29sb2dpc2NoZXMgRm9yc2NodW5nc2luc3RpdHV0IHVuZCBNdXNldW0gQWxleGFuZGVyIEtvZW5pZyIsImNvdW50cnlDb3ZlcmFnZSI6W10sInB1Ymxpc2hpbmdDb3VudHJ5IjoiREUiLCJwdWJsaXNoaW5nT3JnYW5pemF0aW9uS2V5IjoiNmUxY2FkODAtYmRmNS0xMWQ4LTg0ZWEtYjhhMDNjNTBhODYyIiwicHVibGlzaGluZ09yZ2FuaXphdGlvblRpdGxlIjoiWm9vbG9naXNjaGVzIEZvcnNjaHVuZ3NpbnN0aXR1dCB1bmQgTXVzZXVtIEFsZXhhbmRlciBLb2VuaWciLCJsaWNlbnNlIjoiaHR0cDovL2NyZWF0aXZlY29tbW9ucy5vcmcvbGljZW5zZXMvYnkvNC4wL2xlZ2FsY29kZSIsImRlY2FkZXMiOltdLCJrZXl3b3JkcyI6W10sInJlY29yZENvdW50IjoxODE4NX0seyJrZXkiOiI4Mjc3YjMyNC1mNzYyLTExZTEtYTQzOS0wMDE0NWViNDVlOWEiLCJ0aXRsZSI6IlRoZSBTcGlkZXIgQ29sbGVjdGlvbiBhdCB0aGUgU3RhYXRsaWNoZXMgTXVzZXVtIGbDvHIgTmF0dXJrdW5kZSBLYXJsc3J1aGUiLCJkZXNjcmlwdGlvbiI6Imh0dHA6Ly93d3cuZGl2ZXJzaXR5d29ya2JlbmNoLmRlL0RhdGFiYXNlQ2xpZW50cy9TTU5Lc3BpZGVyY29sbC9BYm91dC5odG1sIiwidHlwZSI6Ik9DQ1VSUkVOQ0UiLCJob3N0aW5nT3JnYW5pemF0aW9uS2V5IjoiMDY3NGFlYTAtYTdlMS0xMWQ4LTk1MzQtYjhhMDNjNTBhODYyIiwiaG9zdGluZ09yZ2FuaXphdGlvblRpdGxlIjoiU3RhYXRsaWNoZSBOYXR1cndpc3NlbnNjaGFmdGxpY2hlIFNhbW1sdW5nZW4gQmF5ZXJucyIsImNvdW50cnlDb3ZlcmFnZSI6W10sInB1Ymxpc2hpbmdDb3VudHJ5IjoiREUiLCJwdWJsaXNoaW5nT3JnYW5pemF0aW9uS2V5IjoiMDY3NGFlYTAtYTdlMS0xMWQ4LTk1MzQtYjhhMDNjNTBhODYyIiwicHVibGlzaGluZ09yZ2FuaXphdGlvblRpdGxlIjoiU3RhYXRsaWNoZSBOYXR1cndpc3NlbnNjaGFmdGxpY2hlIFNhbW1sdW5nZW4gQmF5ZXJucyIsImxpY2Vuc2UiOiJodHRwOi8vY3JlYXRpdmVjb21tb25zLm9yZy9saWNlbnNlcy9ieS80LjAvbGVnYWxjb2RlIiwiZGVjYWRlcyI6W10sImtleXdvcmRzIjpbXSwicmVjb3JkQ291bnQiOjE4MTM5fSx7ImtleSI6Ijg4ZjRlMzVhLWJkZjgtNGFhMi05YTFiLTU2NDAxZDRlZWQxNSIsInRpdGxlIjoiVGF4b24gbGlzdCBvZiBhbmltYWxzIHdpdGggR2VybWFuIG5hbWVzICh3b3JsZHdpZGUpIGNvbXBpbGVkIGF0IHRoZSBTTU5TIiwiZGVzY3JpcHRpb24iOiJodHRwOi8vd3d3LmRpdmVyc2l0eW1vYmlsZS5uZXQvd2lraS9BYm91dF8lMjJUYXhvbl9saXN0X29mX2FuaW1hbHNfd2l0aF9HZXJtYW5fbmFtZXNfJTI4d29ybGR3aWRlJTI5X2NvbXBpbGVkX2F0X3RoZV9TTU5TJTIyIiwidHlwZSI6IkNIRUNLTElTVCIsImhvc3RpbmdPcmdhbml6YXRpb25LZXkiOiIwNjc0YWVhMC1hN2UxLTExZDgtOTUzNC1iOGEwM2M1MGE4NjIiLCJob3N0aW5nT3JnYW5pemF0aW9uVGl0bGUiOiJTdGFhdGxpY2hlIE5hdHVyd2lzc2Vuc2NoYWZ0bGljaGUgU2FtbWx1bmdlbiBCYXllcm5zIiwiY291bnRyeUNvdmVyYWdlIjpbXSwicHVibGlzaGluZ0NvdW50cnkiOiJERSIsInB1Ymxpc2hpbmdPcmdhbml6YXRpb25LZXkiOiIwNjc0YWVhMC1hN2UxLTExZDgtOTUzNC1iOGEwM2M1MGE4NjIiLCJwdWJsaXNoaW5nT3JnYW5pemF0aW9uVGl0bGUiOiJTdGFhdGxpY2hlIE5hdHVyd2lzc2Vuc2NoYWZ0bGljaGUgU2FtbWx1bmdlbiBCYXllcm5zIiwibGljZW5zZSI6Imh0dHA6Ly9jcmVhdGl2ZWNvbW1vbnMub3JnL2xpY2Vuc2VzL2J5LzQuMC9sZWdhbGNvZGUiLCJkZWNhZGVzIjpbXSwia2V5d29yZHMiOltdLCJyZWNvcmRDb3VudCI6MTgxMjd9XSwiZmFjZXRzIjpbXX0=
  recorded_at: 2018-10-10 16:23:14 GMT
  recorded_with: vcr/0.1.0, webmockr/0.2.6, crul/0.6.0
