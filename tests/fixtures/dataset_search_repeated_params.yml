http_interactions:
- request:
    method: get
    uri: https://api.gbif.org/v1/dataset/search?limit=100&type=metadata&type=checklist
    body:
      encoding: ''
      string: ''
    headers:
      Accept-Encoding: gzip, deflate
      Accept: application/json, text/xml, application/xml, */*
      User-Agent: r-curl/4.3 crul/0.9.0 rOpenSci(rgbif/2.1.0)
      X-USER-AGENT: r-curl/4.3 crul/0.9.0 rOpenSci(rgbif/2.1.0)
  response:
    status:
      status_code: '200'
      message: OK
      explanation: Request fulfilled, document follows
    headers:
      status: HTTP/1.1 200 OK
      date: Wed, 12 Feb 2020 06:00:34 GMT
      content-type: application/json
      access-control-allow-origin: '*'
      access-control-allow-methods: HEAD, GET, POST, DELETE, PUT, OPTIONS
      server: Jetty(9.3.z-SNAPSHOT)
      cache-control: public, max-age=600
      x-varnish: 529728490 500895385
      age: '1'
      via: 1.1 varnish (Varnish/5.2)
      accept-ranges: bytes
      content-length: '154681'
      connection: keep-alive
    body:
      encoding: ASCII-8BIT
      file: no
      string: {"offset":0,"limit":100,"endOfRecords":false,"count":29925,"results":[{"key":"7ddf754f-d193-4cc9-b351-99906754a03b","title":"Catalogue of Life","description":"<p>This release of the Catalogue of Life contains contributions from 173 databases with information on 1,900,983 species, 161,499 infraspecific taxa and also includes 1,710,092 synonyms and 437,994 common names covering the following groups:</p>\n<p>Viruses * Viruses and Subviral agents from ICTV_MSL\nBacteria and Archaea from BIOS\nChromista * Chromistan fungi from Species Fungorum\nProtozoa * Major groups from ITIS Regional, * Ciliates from CilCat, * Polycystines from WoRMS Polycystina UPDATED!, * Protozoan fungi from Species Fungorum and Trichomycetes database * Slime moulds from Nomen.eumycetozoa.com\nFungi * Various taxa in whole or in part from CABI Bioservices databases (Species Fungorum, Phyllachorales, Rhytismatales, Saccharomycetes and Zygomycetes databases) and from three other databases covering Xylariaceae, Glomeromycota, Trichomycetes, Dothideomycetes * Lichens from LIAS\nPlantae (Plants) * Mosses from MOST * Liverworts and hornworts from ELPT * Conifers from Conifer Database * Cycads and 6 flowering plant families from IOPI-GPC, and 99 families from WCSP * Plus individual flowering plants families from AnnonBase, Brassicaceae, ChenoBase, Droseraceae Database, EbenaBase, GCC, ILDIS, LecyPages, LHD, MELnet, RJB Geranium, Solanaceae Source, Umbellifers.\nAnimalia (Animals) * Marine groups from URMO, ITIS Global, Hexacorals, ETI WBD (Euphausiacea), WoRMS: WoRMS Asteroidea UPDATED!, WoRMS Bochusacea UPDATED!, WoRMS Brachiopoda UPDATED!, WoRMS Brachypoda UPDATED!, WoRMS Brachyura UPDATED!, WoRMS Bryozoa UPDATED!, WoRMS Cestoda UPDATED!, WoRMS Chaetognatha UPDATED!, WoRMS Cumacea UPDATED!, WoRMS Echinoidea UPDATED!, WoRMS Gastrotricha UPDATED!, WoRMS Gnathostomulida UPDATED!, WoRMS Holothuroidea UPDATED!, WoRMS Hydrozoa UPDATED!, WoRMS Isopoda UPDATED!, WoRMS Leptostraca UPDATED!, WoRMS Monogenea UPDATED!, WoRMS Mystacocarida UPDATED!, WoRMS Myxozoa UPDATED!, WoRMS Nemertea UPDATED!, WoRMS Oligochaeta UPDATED!, WoRMS Ophiuroidea UPDATED!, WoRMS Phoronida UPDATED!, WoRMS Placozoa UPDATED!, WoRMS Polychaeta UPDATED!, WoRMS Polycystina UPDATED!, WoRMS Porifera UPDATED!, WoRMS Priapulida UPDATED!, WoRMS Proseriata-Kalyptorhynchia UPDATED!, WoRMS Remipedia UPDATED!, WoRMS Scaphopoda UPDATED!, WoRMS Tanaidacea UPDATED!, WoRMS Tantulocarida UPDATED!, WoRMS Thermosbaenacea UPDATED!, WoRMS Trematoda UPDATED!, WoRMS Xenoturbellida UPDATED! * Rotifers, mayflies, freshwater hairworms, planarians from FADA databases: FADA Rotifera, FADA Ephemeroptera, FADA Nematomorpha &amp; FADA Turbellaria * Entoprocts, water bears from ITIS Global * Spiders, scorpions, ticks &amp; mites from SpidCat via ITIS, SalticidDB , ITIS Global, TicksBase, SpmWeb BdelloideaBase UPDATED! &amp; Mites GSDs: OlogamasidBase, PhytoseiidBase, RhodacaridBase &amp; TenuipalpidBase * Diplopods, centipedes, pauropods and symphylans from SysMyr UPDATED! &amp; ChiloBase * Dragonflies and damselflies from Odonata database * Stoneflies from PlecopteraSF * Cockroaches from BlattodeaSF * Praying mantids from MantodeaSF * Stick and leaf insects from PhasmidaSF * Grasshoppers, locusts, katydids and crickets from OrthopteraSF * Webspinners from EmbiopteraSF * Bark &amp; parasitic lices from PsocodeaSF * Some groups of true bugs from ScaleNet, FLOW, COOL, Psyllist, AphidSF , MBB, 3i Cicadellinae, 3i Typhlocybinae, MOWD &amp; CoreoideaSF* Twisted-wing parasites from Strepsiptera Database * Lacewings, antlions, owlflies, fishflies, dobsonflies &amp; snakeflies from LDL Neuropterida * Some beetle groups from the Scarabs UPDATED!, TITAN, WTaxa &amp; ITIS Global * Fleas from Parhost * Flies, mosquitoes, bots, midges and gnats from Systema Dipterorum, CCW &amp; CIPA * Butterflies and moths from LepIndex, GloBIS (GART), Tineidae NHM, World Gracillariidae * Bees &amp; wasps from ITIS Bees, Taxapad Ichneumonoidea, UCD, ZOBODAT Vespoidea &amp; HymIS Rhopalosomatidae* Molluscs from WoRMS Mollusca UPDATED!, FADA Bivalvia, MolluscaFW &amp; AFD (Pulmonata) * Fishes from FishBase * Reptiles from ReptileDB UPDATED! * Amphibians, birds and mammals from ITIS Global PLUS additional species of many groups from ITIS Regional, NZIB and CoL China</p>","type":"CHECKLIST","subtype":"TAXONOMIC_AUTHORITY","hostingOrganizationKey":"f4ce3c03-7b38-445e-86e6-5f6b04b649d4","hostingOrganizationTitle":"The Catalogue of Life Partnership","countryCoverage":[],"publishingOrganizationKey":"f4ce3c03-7b38-445e-86e6-5f6b04b649d4","publishingOrganizationTitle":"The Catalogue of Life Partnership","license":"unspecified","decades":[],"keywords":["taxonomy"],"recordCount":3835143},{"key":"d9a4eedb-e985-4456-ad46-3df8472e00e8","title":"The Plant List with literature","description":"This dataset is a derivative work under the \"Terms of Use for The Plant List\" http://www.theplantlist.org/1.1/terms/ that (a) converts The Plant List version 1.1 CSV files into a Darwin Core Archive, and (b) adds identifiers (e.g., DOIs) and complete bibliographic details to the original citations for many of the plant names.</br>The Plant List http://www.theplantlist.org/ is a working list of all known plant species. Version 1.1, released in September 2013, aims to be comprehensive for species of Vascular plant (flowering plants, conifers, ferns and their allies) and of Bryophytes (mosses and liverworts). It does not include algae or fungi. Version 1.1 contains 1,293,685 scientific plant names of which 350,699 are accepted species names. It includes no vernacular or common plant names.","type":"CHECKLIST","hostingOrganizationKey":"92f51af1-e917-49bc-a8ed-014ed3a77bec","hostingOrganizationTitle":"Institute of Biodiversity, Animal Health and Comparative Medicine, College of Medical, Veterinary and Life Sciences, University of Glasgow","countryCoverage":[],"publishingCountry":"GB","publishingOrganizationKey":"92f51af1-e917-49bc-a8ed-014ed3a77bec","publishingOrganizationTitle":"Institute of Biodiversity, Animal Health and Comparative Medicine, College of Medical, Veterinary and Life Sciences, University of Glasgow","license":"unspecified","decades":[],"keywords":[],"recordCount":1315920},{"key":"046bbc50-cae2-47ff-aa43-729fbf53f7c5","title":"International Plant Names Index","description":"The International Plant Names Index (IPNI) is a database of the names and associated basic bibliographical details of seed plants, ferns and lycophytes. \n\t\t\t\tIts goal is to eliminate the need for repeated reference to primary sources for basic bibliographic information about plant names. \n\t\t\t\tThe data are freely available and are gradually being standardized and checked. \n\t\t\t\tIPNI is a dynamic resource, depending on direct contributions by all members of the botanical community.\n\t\t\t\tIPNI is the product of a collaboration between The Royal Botanic Gardens, Kew, The Harvard University Herbaria, and the Australian National Herbarium.","type":"CHECKLIST","subtype":"NOMENCLATOR_AUTHORITY","hostingOrganizationKey":"72da316f-62b4-451e-9238-cf72289e6372","hostingOrganizationTitle":"The International Plant Names Index Collaborators","countryCoverage":[],"publishingOrganizationKey":"72da316f-62b4-451e-9238-cf72289e6372","publishingOrganizationTitle":"The International Plant Names Index Collaborators","license":"unspecified","decades":[],"keywords":["ICBN","Nomenclature","clb:type=nomenclator","Nomenclator","Vascular plants","ICBfpn"],"recordCount":1279809},{"key":"6cfd67d6-4f9b-400b-8549-1933ac27936f","title":"GBIF Type Specimen Names","description":"A checklist of names extracted from all GBIF type specimen with parsable names.\n                The list uses the verbatim, original data not interpreted by GBIF with the exception\n                of the name itself which is parsed using the GBIF Name Parser.\n                The detailed procedure can be found at https://github.com/gbif/type-specimen-checklist.","type":"CHECKLIST","hostingOrganizationKey":"fbca90e3-8aed-48b1-84e3-369afbd000ce","hostingOrganizationTitle":"GBIF Secretariat","countryCoverage":[],"publishingOrganizationKey":"fbca90e3-8aed-48b1-84e3-369afbd000ce","publishingOrganizationTitle":"GBIF Secretariat","license":"http://creativecommons.org/publicdomain/zero/1.0/legalcode","decades":[],"keywords":["nomenclature","type specimen"],"recordCount":1221078},{"key":"2d59e5db-57ad-41ff-97d6-11f5fb264527","title":"World Register of Marine Species","description":"An authoritative classification and catalogue of marine names","type":"CHECKLIST","hostingOrganizationKey":"2089ce96-4fb5-4a20-999c-3ccf45a27a4d","hostingOrganizationTitle":"Flanders Marine Institute","countryCoverage":[],"publishingCountry":"BE","publishingOrganizationKey":"d1f6b74b-1d53-44db-bed5-d08497095900","publishingOrganizationTitle":"WoRMS Editorial Board","license":"unspecified","decades":[],"keywords":["SpeciesChecklist","Authoritative","Taxonomy","checklist","taxonomic","marine","database","Marine","inventoryThematic","species","taxonomicAuthority","Specimens","online","backbone","globalSpeciesDataset"],"recordCount":1032321},{"key":"9ca92552-f23a-41a8-a140-01abaa31c931","title":"Integrated Taxonomic Information System (ITIS)","description":"The White House Subcommittee on Biodiversity and Ecosystem Dynamics has identified systematics as a research priority that is fundamental to ecosystem management and biodiversity conservation. This primary need identified by the Subcommittee requires improvements in the organization of, and access to, standardized nomenclature. ITIS (originally referred to as the Interagency Taxonomic Information System) was designed to fulfill these requirements. In the future, the ITIS will provide taxonomic data and a directory of taxonomic expertise that will support the system.\n\nThe ITIS is the result of a partnership of federal agencies formed to satisfy their mutual needs for scientifically credible taxonomic information. Since its inception, ITIS has gained valuable new partners and undergone a name change; ITIS now stands for the Integrated Taxonomic Information System.\n\nThe goal is to create an easily accessible database with reliable information on species names and their hierarchical classification. The database will be reviewed periodically to ensure high quality with valid classifications, revisions, and additions of newly described species. The ITIS includes documented taxonomic information of flora and fauna from both aquatic and terrestrial habitats.\n\nThe original ITIS partners include:\nDepartment of Commerce\n    National Oceanic and Atmospheric Administration (NOAA)\nDepartment of Interior (DOI)\n    Geological Survey (USGS)\nEnvironmental Protection Agency (EPA)\nDepartment of Agriculture (USDA)\n    Agriculture Research Service (ARS)\n    Natural Resources Conservation Service (NRCS)\nSmithsonian Institution\n    National Museum of Natural History (NMNH)\n\nThese agencies signed a Memorandum of Understanding and have formed a Steering Committee that directs two technical work groups - the Database Work Group (DWG) and the Taxonomy Work Group (TWG). The DWG is responsible for the database design and overseeing development of the system to meet the requirements of the ITIS partners. The TWG is responsible for the quality and integrity of the database information. In addition to the database, the working groups have created &#34;Taxonomic Workbench&#34; software designed for easy entry and manipulation of taxonomic data.\n\nPrimary objectives of the TWG include the review of data prior to incorporation into the ITIS and the establishment of a process for periodic peer review to ensure data quality. The TWG has evaluated the taxonomic information priorities of the agencies and is locating data sources for the highest priority groups. Efforts to gather data are helping to identify gaps in taxonomic coverage in both scientific expertise and available information. The TWG hopes to promote collaboration among, and provide a point of focus for, taxonomists, scientific institutions, and taxonomic information users.\n\nFor each scientific name, ITIS will include the authority (author and date), taxonomic rank, associated synonyms and vernacular names where available, a unique taxonomic serial number, data source information (publications, experts, etc.) and data quality indicators. Expert reviews and changes to taxonomic information in the database will be tracked. Geographic coverage will be worldwide with initial emphasis on North American taxa. The TWG is coordinating its efforts with several national and international biodiversity programs.\n\nITIS will be a significant contribution to the scientific infrastructure that is fundamental to the description, conservation, and management of the nation&#39;s biodiversity. Use of the ITIS and the taxonomic serial numbers will facilitate sharing of biological information among researchers and cooperating agencies by providing a common framework for taxonomic data. Agencies that typically cannot afford to maintain taxonomic data will have access to high quality taxonomic information through ITIS. This project allows the coordination of efforts among federal agencies, thereby increasing productivity and saving resources.\n\nStatus reports on ITIS system development may be found in the What&#39;s New section. You can also contact Gerald Guala, Ph.D., Director, Integrated Taxonomic Information System (ITIS) at U.S. Geological Survey, 12201 Sunrise Valley Drive, MS 302, Reston, VA 20192 or via email at itiswebmaster&#64;itis.gov .","type":"CHECKLIST","hostingOrganizationKey":"fbca90e3-8aed-48b1-84e3-369afbd000ce","hostingOrganizationTitle":"GBIF Secretariat","countryCoverage":[],"publishingCountry":"US","publishingOrganizationKey":"bc092ff0-02e4-11dc-991f-b8a03c50a862","publishingOrganizationTitle":"National Museum of Natural History, Smithsonian Institution","license":"unspecified","decades":[],"keywords":[],"recordCount":805242},{"key":"34a96ebe-e51c-4222-9d08-5c2043c39dec","title":"Global Names Usage Bank","description":"The Global Names Usage Bank (GNUB) is one of the two major indexes within the Global Names Architecture (GNA).  Referred to as the “clean bucket” of taxon names, the core object is a “Taxon Name Usage” (TNU; records representing the usage of a particular","type":"CHECKLIST","hostingOrganizationKey":"90cc71b0-055b-11d8-b84e-b8a03c50a862","hostingOrganizationTitle":"Bernice Pauahi Bishop Museum","countryCoverage":[],"publishingCountry":"US","publishingOrganizationKey":"8bf297bb-ec4e-4165-97f5-f250109480c0","publishingOrganizationTitle":"Global Names Architecture","license":"unspecified","decades":[],"keywords":[],"recordCount":532234},{"key":"0938172b-2086-439c-a1dd-c21cb0109ed5","title":"The Interim Register of Marine and Nonmarine Genera","description":"The Interim Register of Marine and Nonmarine Genera is a provisional (or ‘interim’) compilation of genus names – including species names in many cases – and covers both living and extinct biota into a single system to support taxonomic and other queries dealing with e.g. homonyms, authorities, parent-child relationships, spelling variations and distinctions between marine and non-marine or fossil and recent taxa","type":"CHECKLIST","hostingOrganizationKey":"2174414a-9b2a-4774-85f1-2a9c54c28ca9","hostingOrganizationTitle":"Australian Ocean Biogeographic Information System (OBIS Australia)","countryCoverage":[],"publishingCountry":"AU","publishingOrganizationKey":"2174414a-9b2a-4774-85f1-2a9c54c28ca9","publishingOrganizationTitle":"Australian Ocean Biogeographic Information System (OBIS Australia)","license":"unspecified","decades":[],"keywords":["database","inventoryThematic","species","taxonomicAuthority","IRMNG","online","checklist","globalSpeciesDataset","clb:type=taxonomic","taxonomic"],"recordCount":497759},{"key":"bf3db7c9-5e5d-4fd0-bd5b-94539eaf9598","title":"Index Fungorum","description":"The Index Fungorum, the global fungal nomenclator coordinated and supported by the Index Fungorum Partnership, contains names of fungi (including yeasts, lichens, chromistan fungi, protozoan fungi and fossil forms) at species level and below. Funding from GBIF (2003-2004) under the ECAT work programme enabled the addition of most missing author citations and year of publication and the linking of most homotypic names. New names from the Index of Fungi, compiled at CABI-UK and published by CABI, are added every three months.\n\nThe Bibliography of Systematic Mycology provides a survey of the literature encompassing the biodiversity, classification, distribution, evolution, identification, nomenclature, phylogeny, systematics and taxonomy of fungi (as defined in the previous paragraph). You can search the database using the index of cited generic names or author names.\n\nThe Dictionary of the Fungi (currently 10th edition, 2008) published by CABI also contains the current consensus on the fungal taxonomic hierarchy to the rank of genus. Here you can search the database for the status of generic names, or walk down the hierarchy from the rank of Kingdom. The entries for each genus generally include authors and place of publication together with the type species (linked to Index Fungorum) and other data. A database of family names which includes authors, place of publication and type genus (linked to the Dictionary of the Fungi hierarchy) is now supplemented by one which contains names at all supra-familial ranks although it is far from completion.\n\nCABI Bioscience is presently coordinating the fungal component of the Species 2000 project and its contribution, in partnership with ITIS, to the Catalogue of Life (currently used in the GBIF portal); for more information regarding this global initiative visit their website. You may search here a small but growing number of taxonomically complete datasets - global species databases. Please contact Paul Kirk if you you would like to contribute.\n\nAll these databases need to be improved and updated in terms of data content. Please contact Paul Kirk if you have any additions or suggested changes (which will be acknowledged). The database structures have been developed by Jerry Cooper and Paul Kirk and the web interface by Jerry Cooper. Please contact Jerry Cooper if you have any problems with pages or database searches.","type":"CHECKLIST","subtype":"NOMENCLATOR_AUTHORITY","hostingOrganizationKey":"1ce482ab-14e3-48f0-8b70-b58b14625902","hostingOrganizationTitle":"Index Fungorum Partnership","countryCoverage":[],"publishingOrganizationKey":"1ce482ab-14e3-48f0-8b70-b58b14625902","publishingOrganizationTitle":"Index Fungorum Partnership","license":"unspecified","decades":[],"keywords":["nomenclature","ICBN","Nomenclature","nomenclator","nomenclatural synonymy","clb:type=nomenclator","Nomenclator"],"recordCount":416640},{"key":"c33ce2f2-c3cc-43a5-a380-fe4526d63650","title":"The Paleobiology Database","description":"The Paleobiology Database is a public database of paleontological data that anyone can use, maintained by an international non-governmental group of paleontologists.\n\nFossil occurrences from scientific publications are added to the database by our contributing members. Thanks to our membership, which includes nearly 400 scientists from over 130 institutions in 24 countries, the Paleobiology Database is able to provide scientists and the public with information about the fossil record.","type":"CHECKLIST","hostingOrganizationKey":"fbca90e3-8aed-48b1-84e3-369afbd000ce","hostingOrganizationTitle":"GBIF Secretariat","countryCoverage":[],"publishingCountry":"US","publishingOrganizationKey":"b711353c-44d7-4e8b-90c5-16fea0d247e0","publishingOrganizationTitle":"Paleobiology Database","license":"http://creativecommons.org/licenses/by/4.0/legalcode","decades":[],"keywords":[],"recordCount":340090},{"key":"90d9e8a6-0ce1-472d-b682-3451095dbc5a","title":"Fauna Europaea","description":"The Fauna Europaea project (EVR1-1999-20001) has been funded by the European Commission for a period of four years (1 March 2000 - 1 March 2004) within the Fifth Framework Programme (5FP). Fauna Europaea has assembled a database of the scientific names and distribution of all living multicellular European land and fresh-water animals.","type":"CHECKLIST","hostingOrganizationKey":"fbca90e3-8aed-48b1-84e3-369afbd000ce","hostingOrganizationTitle":"GBIF Secretariat","countryCoverage":[],"publishingOrganizationKey":"72ec38fe-dc8b-41a2-a6c4-7793f73857e0","publishingOrganizationTitle":"Fauna Europaea Consortium","license":"unspecified","decades":[],"keywords":["Fauna","Europe","Zoology","Checklist","Metadata"],"recordCount":270140},{"key":"1bd42c2b-b58a-4a01-816b-bec8c8977927","title":"EUNIS Biodiversity Database","description":"The EUNIS Database is the European Nature Information System, developed and managed by the European Topic Centre on Biological Diversity (ETC/BD in Paris) for the European Environment Agency (EEA) and the European Environmental Information Observation Network(Eionet).</br>The EUNIS Database web application provides access to publicly available data in a consolidated database. The information includes:</br>Data on Species, Habitats and Sites compiled in the framework of NATURA2000 (EU Habitats and Birds Directives),\nData collected from frameworks, data sources or material published by ETC/BD (formerly the European Topic Centre for Nature Conservation).\nInformation on Species, Habitats and Sites taken into account in relevant international conventions or from International Red Lists.\nSpecific data collected in the framework of the EEA's reporting activities, which also constitute a core set of data to be updated periodically.","type":"CHECKLIST","hostingOrganizationKey":"ec469dc0-9530-11d9-8902-b8a03c50a862","hostingOrganizationTitle":"European Environment Agency","countryCoverage":[],"publishingOrganizationKey":"ec469dc0-9530-11d9-8902-b8a03c50a862","publishingOrganizationTitle":"European Environment Agency","license":"unspecified","decades":[],"keywords":[""],"recordCount":266562},{"key":"c8227bb4-4143-443f-8cb2-51f9576aff14","title":"ZooBank","description":"Nomenclatural records in ZooBank","type":"CHECKLIST","subtype":"NOMENCLATOR_AUTHORITY","hostingOrganizationKey":"f2f462db-541d-4a24-9921-892d57e1da9f","hostingOrganizationTitle":"International Commission on Zoological Nomenclature","countryCoverage":[],"publishingOrganizationKey":"f2f462db-541d-4a24-9921-892d57e1da9f","publishingOrganizationTitle":"International Commission on Zoological Nomenclature","license":"http://creativecommons.org/publicdomain/zero/1.0/legalcode","decades":[],"keywords":["Checklist","Nomenclatorauthority"],"recordCount":219889},{"key":"4cec8fef-f129-4966-89b7-4f8439aba058","title":"International Barcode of Life project (iBOL) Barcode Index Numbers (BINs)","description":"<p>Established in 2008, the International Barcode of Life Consortium (iBOL, http://www.ibol.org/) is a research alliance of nations with the desire to transform biodiversity science by building the DNA barcode reference libraries, the sequencing facilities, the informatics platforms, the analytical protocols, and the international collaboration required to inventory and assess biodiversity.</p>\n<p>iBOL has overseen the completion of one major program, BARCODE 500K, and a second program, BIOSCAN runs for seven years from June 2019. The first program barcoded 500,000 species reflecting the investment of $150 million by research organizations in 25 nations. Building on this success, BIOSCAN will extend barcode coverage to 2.5 million species by 2025. This program will stimulate activation of the Planetary Biodiversity Mission (PBM) – iBOL’s final project. PBM is a research initiative that will deliver a comprehensive understanding of the composition and distribution of multi-cellular life by 2045.</p>\n<p>iBOL maintains the Barcode of Life Data System (BOLD, http://www.boldsystems.org/). BOLD is a cloud-based data storage and analysis platform developed at the Centre for Biodiversity Genomics in Canada. It consists of four main modules, a data portal, an educational portal, a registry of BINs (putative species), and a data collection and analysis workbench.</p>","type":"CHECKLIST","hostingOrganizationKey":"fbca90e3-8aed-48b1-84e3-369afbd000ce","hostingOrganizationTitle":"GBIF Secretariat","countryCoverage":[],"publishingOrganizationKey":"b3bf3a83-1f68-4541-a03f-330d30d567f5","publishingOrganizationTitle":"The International Barcode of Life Consortium","license":"http://creativecommons.org/licenses/by/4.0/legalcode","decades":[],"keywords":[],"recordCount":162976},{"key":"de8934f4-a136-481c-a87a-b0b202b80a31","title":"Dyntaxa. Svensk taxonomisk databas","description":"Dyntaxa is a Swedish taxonomic database of organisms occurring in Swedish nature. For other databases at the Swedish Species Information Centre, e.g. Artportalen, it has a normative function for taxonomic concepts, and is increasingly referenced by external Swedish users. To date (October 2018) Dyntaxa contains information about 61,500 species occurring in Sweden. This includes about 95% of known multicellular species – remaining gaps mainly found among the fungi. Our goal is to include in the database all species documented from Sweden – at least the multicellular ones and such unicellular species that are included in environmental monitoring by the Swedish EPA. In addition to these species there are many names at other taxonomic levels, scientific synonyms, Swedish vernaculars, etc. In all, the database includes more than 290,000 names (October 2018). Dyntaxa is continuously updated with new species, changes in taxonomy and added Swedish names and scientific synonyms.","type":"CHECKLIST","hostingOrganizationKey":"4c415e40-1e21-11de-9e40-a0d6ecebb8bf","hostingOrganizationTitle":"GBIF-Sweden","countryCoverage":[],"publishingCountry":"SE","publishingOrganizationKey":"b8323864-602a-4a7d-9127-bb903054e97d","publishingOrganizationTitle":"ArtDatabanken","license":"http://creativecommons.org/publicdomain/zero/1.0/legalcode","decades":[],"keywords":["sweden","regional","Taxonomicauthority","Checklist","sverige","taxonomy"],"recordCount":161803},{"key":"3772da2f-daa1-4f07-a438-15a881a2142c","title":"Catalogue of Life China, 2013 Annual Checklist(Biodiversity Committee, Chinese Academy of Sciences)","description":"Organized by the Biodiversity Committee of Chinese Academy of Sciences (BC-CAS),Catalogue of Life China 2013 Annual Checklist edition has been compiled by Species 2000 China Node, published by Science Press and released during the 3rd National Biodiversity Informatics Conference in Shanghai on September 14.\nConsistent with the Species 2000 data standard, each species page includes scientific name, synonyms, common name, literature, classification system, distribution and Chinese name with Pinyin. The reviewers for each record are also listed.\nThere are 66708 species, 9754infraspecific taxa, 95362 synonyms and 32327 common names in this edition, including 7 kingdoms, 30 phylums, 83 classes, 397 orders, 1 959 families and 11 731 genera. Compare with the last edition, another 6 000 species orinfraspecific taxa and more than 170 000 Latin are added.\nThe main change in the 2013 edition are:about 4000 species or infraspecific taxa were added in Animalia Arthropoda; about 1800 species or infraspecific taxa were added in Fungi Basidiomycota; about 250 species or infraspecific taxa were added in Plantae Angiosperms; about 390 species or infraspecific taxa were added in Protozoa, Amoeba.\nThe national annual species checklist has been compiled and released since 2008 by the participants of Species 2000 China Node, together with more than 100 domestic and overseas taxonomists. It follows the data standard of the Standard Dataset of the Species 2000, and provides the Catalogue of Life China to all users in the world.","type":"CHECKLIST","hostingOrganizationKey":"a2fa5b68-3ebf-4845-abc5-f456d251386f","hostingOrganizationTitle":"Chinese Academy of Sciences (CAS)","countryCoverage":[],"publishingCountry":"CN","publishingOrganizationKey":"a2fa5b68-3ebf-4845-abc5-f456d251386f","publishingOrganizationTitle":"Chinese Academy of Sciences (CAS)","license":"unspecified","decades":[],"keywords":["species checklist","China","2013","CoL standard","Inventory regional"],"recordCount":160297},{"key":"a6c6cead-b5ce-4a4e-8cf5-1542ba708dec","title":"Artsnavnebasen","description":"Artsnavnebasen (the Species Nomenclature Database) aims to compile a complete list of all existing species in Norway, and also contains names of species not found in Norway but present in Norwegian museum collections and herbaria.","type":"CHECKLIST","hostingOrganizationKey":"64795dcb-ad74-41b3-95e5-cc52ba754776","hostingOrganizationTitle":"GBIF.no","countryCoverage":[],"publishingCountry":"NO","publishingOrganizationKey":"d3978a37-635a-4ae3-bb85-7b4d41bc0b88","publishingOrganizationTitle":"The Norwegian Biodiversity Information Centre (NBIC)","license":"http://creativecommons.org/licenses/by/4.0/legalcode","decades":[],"keywords":["Checklist"],"recordCount":147255},{"key":"66dd0960-2d7d-46ee-a491-87b9adcfe7b1","title":"GRIN Taxonomy","description":"GRIN taxonomic data provide the structure and nomenclature for accessions of the National Plant Germplasm System (NPGS), part of the National Genetic Resources Program (NGRP) of the United States Department of Agriculture&#39;s (USDA&#39;s) Agricultural Research Service (ARS). In GRIN Taxonomy for Plants all families and genera of vascular plants and over 46,000 species from throughout the world are represented, especially economic plants and their relatives. Information on scientific and common names, classification, distribution, references, and economic impacts are provided.","type":"CHECKLIST","hostingOrganizationKey":"fbca90e3-8aed-48b1-84e3-369afbd000ce","hostingOrganizationTitle":"GBIF Secretariat","countryCoverage":[],"publishingCountry":"US","publishingOrganizationKey":"83e105d0-1e21-11de-85d0-fe7fa1df8ee2","publishingOrganizationTitle":"US National Plant Germplasm System","license":"unspecified","decades":[],"keywords":["Germplasm","Checklist"],"recordCount":131773},{"key":"aacd816d-662c-49d2-ad1a-97e66e2a2908","title":"Brazilian Flora 2020 project - Projeto Flora do Brasil 2020","description":"In 2010, Brazil published the Catalog of Plants and Fungi of Brazil and launched the first online version of the List of Species of the Brazilian Flora, meeting Target 1 of the Global Strategy for Plant Conservation (GSPC-CBD). This botanical milestone was only achieved due to the commitment of more than 400  Brazilians and foreign taxonomists who worked on a platform where information about our flora was included and disseminated in real time. The &#34;Brazilian List&#34;, as it was popularly known, closed in November 2015 with the publication of five papers and their respective databases (see Download as above) dealing with the different groups of fungi and plants. We enthusiastically present, in 2016, the brand new system that houses the Brazilian Flora 2020 project, aiming to achieve Target 1 established for 2020 by the GSPC-CBD. This new project icludes provisions to include descriptions, identification keys and illustrations to all species of plants, algae and fungi known in the country. The Brazilian Flora 2020 project is part of the Reflora Programme and is being conducted with the support of the Sistema de Informação sobre a Biodiversidade Brasileira (SiBBr). At the moment has nearly 700 scientists working in a network to prepare the monographs. These researchers are also responsible for nomenclatural information and geographic distribution (coverage in Brazil, endemism and biomes), as well as valuable data regarding life forms, substrate and vegetation types for each species. The search results on this page include information on endangered species (thanks to the cooperation with the Centro Nacional de Conservação da Flora) and allow access to the Index Herbariorum (due to the collaboration of The New York Botanical Garden). Besides this information, users can also access images of herbarium specimens, including nomenclatural types, from both the Reflora Virtual Herbarium and INCT Virtual Herbarium of Flora and Fungi; as well as images of live plants and scientific illustrations with all images included by the experts in each group.\n\nTo date (2018-02-06), 46485 species are recognized for Brazil&#39;s flora: 4754 Algae, 33087 Angiosperms, 1567 Bryophytes, 5718 Fungi, 30 Gymnosperms and 1329 Ferns and Lycophytes.","type":"CHECKLIST","hostingOrganizationKey":"838537fc-4aeb-4980-8b58-97fbdcd1d91a","hostingOrganizationTitle":"Instituto de Pesquisas Jardim Botanico do Rio de Janeiro","countryCoverage":[],"publishingCountry":"BR","publishingOrganizationKey":"838537fc-4aeb-4980-8b58-97fbdcd1d91a","publishingOrganizationTitle":"Instituto de Pesquisas Jardim Botanico do Rio de Janeiro","license":"http://creativecommons.org/licenses/by/4.0/legalcode","decades":[],"keywords":["Inventoryregional","Checklist"],"recordCount":122120},{"key":"4dd32523-a3a3-43b7-84df-4cda02f15cf7","title":"Checklist Dutch Species Register - Nederlands Soortenregister","description":"<p>The Dutch Species Register provides a current and comprehensive overview of Dutch biodiversity. It is based on numerous published papers, reports, books and checklists provided by experts, covering all aspects of the Dutch flora and fauna. The Dutch Species Register combines this information into an authoritative and frequently updated national checklist.</p>\n<p>All multicellular animals, plants and fungi are included in the checklist, with the exception of species under direct supervision of humans (e.g. pets) and species not recorded since 1758 (i.e. subfossil and fossil species).</p>\n<p>The checklist includes available synonyms and preferred Dutch name and higher classification, including associated source and expert. Furthermore, all species and lower taxa are assigned a standardized code for their occurrence status within the Netherlands.</p>\n<p>The Dutch Species Register is coordinated and hosted by Naturalis Biodiversity Center in close collaboration with European Invertebrate Survey (EIS) - the Netherlands. A large number of scientific institutions, individual experts and organizations of volunteer recorders contribute to the Dutch Species Register. The project is supported by the Dutch Ministry of Economic Affairs and NLBIF.</p>","type":"CHECKLIST","hostingOrganizationKey":"396d5f30-dea9-11db-8ab4-b8a03c50a862","hostingOrganizationTitle":"Naturalis Biodiversity Center","countryCoverage":[],"publishingCountry":"NL","publishingOrganizationKey":"396d5f30-dea9-11db-8ab4-b8a03c50a862","publishingOrganizationTitle":"Naturalis Biodiversity Center","license":"http://creativecommons.org/licenses/by/4.0/legalcode","decades":[1700,1800,1810,1820,1830,1840,1850,1860,1870,1880,1890,1900,1910,1920,1930,1940,1950,1960,1970,1980,1990,2000,2010],"keywords":["Checklist","inventoryRegional"],"recordCount":84221},{"key":"1ec61203-14fa-4fbd-8ee5-a4a80257b45a","title":"The National Checklist of Taiwan","description":"The catalog of Taiwanese species is call \"TaiBNET\" and the national node of GBIF (Global Biodiversity Information Facility) in Taiwan is called \"TaiBIF\". Currently, the websites have been established at Academia Sinica (http://taibnet.sinica.edu.tw and http://www.gbif.org.tw). Both of the Biodiversity Research Center and the Computing Center of Academia Sinica are in charge of the maintenance and the updating biodiversity related information and data.\n\nThrough the node, the background of participating GBIF, related documents, news, upcoming conferences, name list of Taiwanese taxonomists, catalog of life in Taiwan, specimen database, biodiversity related organization, team research projects, independent biological databases, natural heritage, and local publications etc. can be accessed. Among them, \"Name list of Taiwanese taxonomists\" and \"Catalog of Life of Taiwan\" are one promoting project sponsored by the National Science Council. So far, 236 local taxonomists have included their titles, telephones, e-mail addresses, and the taxa that they are expertised. In the future, we hope to include all of the ecologists or the applied scientists in agriculture, forestry, fishery, and animal husbandry in the name list.\n\nThe first phase of Catalog of Life in Taiwan will contain the following items of animals (including insects), plants, and fungi: species names, authors and year, suggested Chinese names, endemic in Taiwan or not, their classification hierarchy, the most authorized citation proving that particular species has occurred in Taiwan. Users can get the name list of one group of organisms through keywords search, species name searching, or image searching etc. Further information of each species can be obtained through the hyperlink to more than 18 well-known global databases or networks, such as Species2000 and ITIS etc. Right now, more than 30,000 species have been compiled, and we hope to collect more than 60,000 species by July 2004. Species checklist of the microorganisms will be included next year. We hope to get more funding and collaborators in the next phase to collect specimen or ecological photos (endemic species first), description (morphology, ecology and biology), geographical distribution, synonyms, literatures, as well as deposited specimen data for each species.\n\nThrough this node, the most authorized information of high biodiversity and endemism of Taiwan can be exchanged and shared with other GBIF participants. This mission is also requested by both of the Convention on Biological Diversity and GBIF to each member because in such a way, education, research, and conservation of biodiversity in the world could be promoted effectively.","type":"CHECKLIST","hostingOrganizationKey":"12b1df00-3f75-11d8-aa2d-b8a03c50a862","hostingOrganizationTitle":"Taiwan Biodiversity Information Facility (TaiBIF)","countryCoverage":[],"publishingCountry":"TW","publishingOrganizationKey":"12b1df00-3f75-11d8-aa2d-b8a03c50a862","publishingOrganizationTitle":"Taiwan Biodiversity Information Facility (TaiBIF)","license":"http://creativecommons.org/licenses/by-nc/4.0/legalcode","decades":[],"keywords":["Checklist"],"recordCount":78906},{"key":"39653f3e-8d6b-4a94-a202-859359c164c5","title":"Belgian Species List","description":"This resource was created by publishing the backend database of the Belgian Species List website (www.species.be). This publishing work has been done by the Belgian Biodiversity Platform (http://www.biodiversity.be) in the framework of the &#34;GBIF award for evaluating checklist publication format&#34; during May 2011.\n\nData extracted by Francis Strobbe on May 27th 2011.\n\nAbstract of the Belgian Species List project:\nSince almost a year now, people of all ages can access the Belgian Species List for an extensive overview of the biodiversity in Belgium. Animals, plants, fungi: you can make your way through a total of more than 32.000 species!\n\nThe Belgian species list was set up by the RBINS – the research institution behind the Museum of Natural Sciences – in cooperation with different Belgian and international institutions and organizations.\n\nThe purpose of the species list is to become the online reference in naming and occurrence of species in Belgium, easy to consult in just one website that centralizes and standardizes the information. For every species that&#39;s been described, information is given on among other things the conservation status, the distribution, the habitat and much more. More and more species index cards are fitted with pictures and interesting links.\n\nThe website is aimed at a broad audience: researchers, decision makers, students, journalists, nature conversationists and all nature lovers.\n\nWant to know more? \nLog on to www.species.be!","type":"CHECKLIST","hostingOrganizationKey":"37e82b90-1e21-11de-ab90-f72009d2669b","hostingOrganizationTitle":"Belgian Biodiversity Platform","countryCoverage":[],"publishingCountry":"BE","publishingOrganizationKey":"37e82b90-1e21-11de-ab90-f72009d2669b","publishingOrganizationTitle":"Belgian Biodiversity Platform","license":"http://creativecommons.org/publicdomain/zero/1.0/legalcode","decades":[],"keywords":["Belgium"],"recordCount":58930},{"key":"3d9b97e9-2f2c-458e-883b-488a628a3fa5","title":"Freshwater Animal Diversity Assessment","description":"The Freshwater Animal Diversity Assessment (FADA) database contains authoritative species lists for several taxonomic groups and distribution data at the level of faunistic regions. The groups currently published (26-06-2015) include Halacaridae, Cnidaria-Hydroida, Cladocera, Copepoda, Mysidaceae, Ephemeroptera, Plecoptera, Trichoptera, Macrophytes, Bivalvia, Nematomorpha, Rotifera, Turbellaria, Fish, Mammals, Diptera-Chironomidae-Tanytarsini, Diptera-Culicidae, Coleoptera-Psephenidae, Coleoptera-Dytiscidae, Coleoptera-Gyrinidae, Coleoptera-Haliplidae, Coleoptera-Donaciinae and Gastrotricha","type":"CHECKLIST","hostingOrganizationKey":"e88c96a3-5884-4e51-a580-e417ca4c9eed","hostingOrganizationTitle":"Royal Belgian Institute of Natural Sciences","countryCoverage":[],"publishingCountry":"BE","publishingOrganizationKey":"e88c96a3-5884-4e51-a580-e417ca4c9eed","publishingOrganizationTitle":"Royal Belgian Institute of Natural Sciences","license":"unspecified","decades":[],"keywords":["Chironomidae","Authoritative species list","Biological Classification","Nematomorpha","Coleoptera","Trichoptera","Biota","Cnidaria-Hydroida","Cladocera","Plecoptera","Mysidaceae","Dytiscidae","Freshwater","Macrophytes","Haliplidae","Bivalvia","Tanytarsini","Halacaridae","Copepoda","Fish","Donaciinae","Gastrotricha","Platyhelminthes-Turbellaria","Psephenidae","Rotifera","Gyrinidae","Ephemeroptera","Mammals","Culicidae","Checklist","Diptera","Faunistic regions","Inventorythematic"],"recordCount":58301},{"key":"65c9103f-2fbf-414b-9b0b-e47ca96c5df2","title":"Afromoths, online database of Afrotropical moth species (Lepidoptera)","description":"This dataset covers all relevant information on every Afrotropical moth species.\n\nThe zoogeographic area covered can be defined as the Africa continent south of the Sahara (i.e. excl. Morocco, Algeria, Tunisia, Libya and Egypt), the islands in the Atlantic Ocean: Amsterdam Island, Ascension, Cape Verde Archipelago, Inaccessible Island, St. Helena, São Tomé and Principe, Tristan da Cunha, and the islands in the Indian Ocean: Comores (Anjouan, Grande Comore, Mayotte, Mohéli), Madagascar, Mascarene Islands (La Réunion, Mauritius, Rodrigues), Seychelles (Félicité, Mahé, Praslin, Silhouette, a.o.).\n\nFurthermore, also those moth species occurring in the transition zone to the Palaearctic fauna have been included, namely most of the Arabia Peninsula (Kuwait, Oman, Saudi Arabia, United Arab Emirates, Yemen with Socotra) but not Iraq, Jordan and further north. Also, some Saharan species have been included (e. g. Hoggar Mts. in Algeria, Tibesti Mts. in South Libya).\n\nUtmost care was taken that the data incorporated in the database are correct. We decline any responsibility in case of damage to soft- or hardware based on information used in this website. Persons retrieving information from this website for their own research or for applied aspects such as pest control programmes, should acknowledge the usage of data from this website in the following format:\n\nDe Prins, J. &amp; De Prins, W. 2011. Afromoths, online database of Afrotropical moth species (Lepidoptera). World Wide Web electronic publication (www.afromoths.net)","type":"CHECKLIST","hostingOrganizationKey":"37e82b90-1e21-11de-ab90-f72009d2669b","hostingOrganizationTitle":"Belgian Biodiversity Platform","countryCoverage":[],"publishingCountry":"BE","publishingOrganizationKey":"37e82b90-1e21-11de-ab90-f72009d2669b","publishingOrganizationTitle":"Belgian Biodiversity Platform","license":"http://creativecommons.org/licenses/by/4.0/legalcode","decades":[],"keywords":["africa","Checklist","moths"],"recordCount":46652},{"key":"af66d4cf-0fd2-434b-9334-9806a5efa6f7","title":"Orthoptera Species File","description":"This file contains taxon names and related nomenclatural information for the order Orthoptera originating from the Orthoptera Species File maintained by the Species File Group (http://software.speciesfile.org) at the University of Illinois, Illinois Natural History Survey.","type":"CHECKLIST","hostingOrganizationKey":"47a779a6-a230-4edd-b787-19c3d2c80ab5","hostingOrganizationTitle":"Species File Group","countryCoverage":[],"publishingCountry":"US","publishingOrganizationKey":"47a779a6-a230-4edd-b787-19c3d2c80ab5","publishingOrganizationTitle":"Species File Group","license":"http://creativecommons.org/licenses/by/4.0/legalcode","decades":[],"keywords":["Checklist","locusts","taxonomy","katydids","catalogue","crickets","Grasshoppers"],"recordCount":42569},{"key":"9fe7c02c-a45e-4f31-afca-4840ead2d62a","title":"Fishes of the Neotropics","type":"CHECKLIST","hostingOrganizationKey":"315b3c03-4a0a-424e-83a5-d25aa748e666","hostingOrganizationTitle":"Scratchpads","countryCoverage":[],"publishingCountry":"GB","publishingOrganizationKey":"315b3c03-4a0a-424e-83a5-d25aa748e666","publishingOrganizationTitle":"Scratchpads","license":"unspecified","decades":[],"keywords":[],"recordCount":41225},{"key":"2599d15f-58e1-4766-bbaf-93344bd09bb6","title":"Echinoderms","type":"CHECKLIST","hostingOrganizationKey":"315b3c03-4a0a-424e-83a5-d25aa748e666","hostingOrganizationTitle":"Scratchpads","countryCoverage":[],"publishingCountry":"GB","publishingOrganizationKey":"315b3c03-4a0a-424e-83a5-d25aa748e666","publishingOrganizationTitle":"Scratchpads","license":"unspecified","decades":[],"keywords":[],"recordCount":37215},{"key":"47f16512-bf31-410f-b272-d151c996b2f6","title":"The Clements Checklist","description":"The Clements Checklist of Birds of the World, 6th Edition was published and released by Cornell University Press in June 2007. The book was produced from a nearly completed manuscript left by James Clements upon his death in 2005.\n\nThe Cornell Lab of Ornithology has accepted the job of maintaining the ever-changing list of species, subspecies, English names, and approximate distributions, beginning with publication of the 6th Edition. Our procedures for accomplishing this ongoing task include using the considerable expertise of our research ornithologists on staff, aided enormously by input from knowledgeable professional and amateur cooperators worldwide. We invite input on known or suspected errors or updates at any time.\n\nThis website serves as the clearinghouse for keeping your Clements Checklist up to date. We will post all corrections once a year in August. At the same time, we’ll post updates to the taxonomy, scientific and English nomenclature, and range descriptions, to incorporate changes that have made their way into the literature and are generally accepted by the appropriate scientific body or community. In the future, we will also be posting a list of alternative English names.","type":"CHECKLIST","hostingOrganizationKey":"fbca90e3-8aed-48b1-84e3-369afbd000ce","hostingOrganizationTitle":"GBIF Secretariat","countryCoverage":[],"publishingCountry":"US","publishingOrganizationKey":"e2e717bf-551a-4917-bdc9-4fa0f342c530","publishingOrganizationTitle":"Cornell Lab of Ornithology","license":"unspecified","decades":[],"keywords":["birds"],"recordCount":33087},{"key":"155b33d2-84b1-4a31-9287-9d9e900bc6c8","title":"Taxon list of fungi and fungal-like organisms from Germany compiled by the DGfM","description":"http://www.diversitymobile.net/wiki/About_%22Taxon_list_of_fungi_and_fungal-like_organisms_from_Germany_compiled_by_the_DGfM%22","type":"CHECKLIST","hostingOrganizationKey":"0674aea0-a7e1-11d8-9534-b8a03c50a862","hostingOrganizationTitle":"Staatliche Naturwissenschaftliche Sammlungen Bayerns","countryCoverage":[],"publishingCountry":"DE","publishingOrganizationKey":"0674aea0-a7e1-11d8-9534-b8a03c50a862","publishingOrganizationTitle":"Staatliche Naturwissenschaftliche Sammlungen Bayerns","license":"http://creativecommons.org/licenses/by/4.0/legalcode","decades":[],"keywords":[],"recordCount":32095},{"key":"9d015991-438a-4093-a8d2-9a8006492121","title":"EOL Hotlist","type":"CHECKLIST","hostingOrganizationKey":"315b3c03-4a0a-424e-83a5-d25aa748e666","hostingOrganizationTitle":"Scratchpads","countryCoverage":[],"publishingCountry":"GB","publishingOrganizationKey":"315b3c03-4a0a-424e-83a5-d25aa748e666","publishingOrganizationTitle":"Scratchpads","license":"unspecified","decades":[],"keywords":[],"recordCount":31003},{"key":"a5358a8d-9b1a-43a3-b769-50d3e6ef8bd9","title":"Cnidaria","type":"CHECKLIST","hostingOrganizationKey":"315b3c03-4a0a-424e-83a5-d25aa748e666","hostingOrganizationTitle":"Scratchpads","countryCoverage":[],"publishingCountry":"GB","publishingOrganizationKey":"315b3c03-4a0a-424e-83a5-d25aa748e666","publishingOrganizationTitle":"Scratchpads","license":"unspecified","decades":[],"keywords":[],"recordCount":30886},{"key":"3f8a1297-3259-4700-91fc-acc4170b27ce","title":"Database of Vascular Plants of Canada (VASCAN)","description":"The Database of Vascular Plants of Canada or VASCAN (http://data.canadensys.net/vascan) is a comprehensive and curated checklist of all vascular plants reported in Canada, Greenland (Denmark), and Saint Pierre and Miquelon (France). VASCAN was developed at the Université de Montréal Biodiversity Centre and is maintained by a group of editors and contributors. For every core taxon in the checklist (species, subspecies, or variety), VASCAN provides the accepted scientific name, the accepted French and English vernacular names, and their synonyms/alternatives in Canada, as well as the distribution status (native, introduced, ephemeral, excluded, extirpated, doubtful or absent) of the plant for each province or territory, and the habit (tree, shrub, herb and/or vine) of the plant in Canada. For reported hybrids (nothotaxa or hybrid formulas) VASCAN also provides the hybrid parents, except if the parents of the hybrid do not occur in Canada. All taxa are linked to a classification. VASCAN refers to a source for all name, classification and distribution information.\n\nAll data have been released to the public domain under a CC0 waiver and are available through Canadensys and the Global Biodiversity Information Facility (GBIF). VASCAN is a service to the scientific community and the general public, including administrations, companies, and non-governmental organizations.","type":"CHECKLIST","hostingOrganizationKey":"ff7bd5db-b724-4932-b496-10ea298851f9","hostingOrganizationTitle":"Université de Montréal Biodiversity Centre","countryCoverage":[],"publishingCountry":"CA","publishingOrganizationKey":"ff7bd5db-b724-4932-b496-10ea298851f9","publishingOrganizationTitle":"Université de Montréal Biodiversity Centre","license":"http://creativecommons.org/publicdomain/zero/1.0/legalcode","decades":[],"keywords":["synonymy","vernacular names","provinces","Inventoryregional","checklist","taxonomy","hybrids","distribution","open data","Canada","English","VASCAN","French","habit","Checklist","Saint Pierre and Miquelon","Canadensys","Greenland"],"recordCount":30099},{"key":"3e88422b-340c-4b7d-af88-151e817f3077","title":"Peracarida","type":"CHECKLIST","hostingOrganizationKey":"315b3c03-4a0a-424e-83a5-d25aa748e666","hostingOrganizationTitle":"Scratchpads","countryCoverage":[],"publishingCountry":"GB","publishingOrganizationKey":"315b3c03-4a0a-424e-83a5-d25aa748e666","publishingOrganizationTitle":"Scratchpads","license":"unspecified","decades":[],"keywords":[],"recordCount":27944},{"key":"16c3f9cb-4b19-4553-ac8e-ebb90003aa02","title":"German Wikipedia - Species Pages","description":"Species pages extracted from the $LANG Wikipedia article XML dump from $DATE.\nMultimedia, vernacular names and textual descriptions are extracted, but only pages with a taxobox or speciesbox template are recognized.\n\nSee https://github.com/mdoering/wikipedia-dwca for details.","type":"CHECKLIST","hostingOrganizationKey":"fbca90e3-8aed-48b1-84e3-369afbd000ce","hostingOrganizationTitle":"GBIF Secretariat","countryCoverage":[],"publishingCountry":"US","publishingOrganizationKey":"b289cfec-b50c-4845-b142-d20a1739b9fd","publishingOrganizationTitle":"Wikimedia Foundation","license":"unspecified","decades":[],"keywords":["wikipedia"],"recordCount":25984},{"key":"61a5f178-b5fb-4484-b6d8-9b129739e59d","title":"UNITE - Unified system for the DNA based fungal species linked to the classification","description":"UNITE is a rDNA sequence database designed to provide a stable and reliable platform for sequence-borne identification of all fungal species. UNITE provides a unified way for delimiting, identifying, communicating, and working with DNA-based Species Hypotheses (SH). All fungal ITS sequences in the International Nucleotide Sequence Databases (INSD: GenBank, ENA, DDBJ) are clustered to approximately the species level by applying a set of dynamic distance values (&lt;0.5 - 3.0%). All species hypotheses are given a unique, stable name in the form of a DOI, and their taxonomic and ecological annotations are verified through distributed, web-based third-party annotation efforts. SHs are connected to a taxon name and its classification as far as possible (phylum, class, order, etc.) by taking into account identifications for all sequences in the SH. An automatically or manually designated sequence is chosen to represent each such SH. These sequences are released (https://unite.ut.ee/repository.php) for use by the scientific community in, for example, local sequence similarity searches and next-generation sequencing analysis pipelines. The system and the data are updated automatically as the number of public fungal ITS sequences grows.","type":"CHECKLIST","hostingOrganizationKey":"0870a77b-587c-4369-a8ed-bc3d347b8e1c","hostingOrganizationTitle":"PlutoF","countryCoverage":[],"publishingCountry":"EE","publishingOrganizationKey":"0870a77b-587c-4369-a8ed-bc3d347b8e1c","publishingOrganizationTitle":"PlutoF","license":"http://creativecommons.org/licenses/by/4.0/legalcode","decades":[],"keywords":["Checklist; rDNA; species hypothesis; OTU"],"recordCount":25604},{"key":"3c37ebc6-d3d8-496c-96e8-55a6088aaecb","title":"Annelida","type":"CHECKLIST","hostingOrganizationKey":"315b3c03-4a0a-424e-83a5-d25aa748e666","hostingOrganizationTitle":"Scratchpads","countryCoverage":[],"publishingCountry":"GB","publishingOrganizationKey":"315b3c03-4a0a-424e-83a5-d25aa748e666","publishingOrganizationTitle":"Scratchpads","license":"unspecified","decades":[],"keywords":[],"recordCount":25497},{"key":"d8fb1600-d636-4b35-aa0d-d4f292c1b424","title":"Fauna Europaea - Lepidoptera","description":"All Lepidoptera from the Fauna Europaea project, which has assembled a database of the scientific names and distribution of all living multicellular European land and fresh-water animals.","type":"CHECKLIST","hostingOrganizationKey":"fbca90e3-8aed-48b1-84e3-369afbd000ce","hostingOrganizationTitle":"GBIF Secretariat","countryCoverage":[],"publishingOrganizationKey":"72ec38fe-dc8b-41a2-a6c4-7793f73857e0","publishingOrganizationTitle":"Fauna Europaea Consortium","license":"http://creativecommons.org/licenses/by/4.0/legalcode","decades":[],"keywords":["Fauna","Europe","Lepidoptera","Checklist"],"recordCount":23446},{"key":"3e9a9493-47e4-4dc9-a73a-00c23156b100","title":"Colaboraciones Americanas Sobre Aves","type":"CHECKLIST","hostingOrganizationKey":"315b3c03-4a0a-424e-83a5-d25aa748e666","hostingOrganizationTitle":"Scratchpads","countryCoverage":[],"publishingCountry":"GB","publishingOrganizationKey":"315b3c03-4a0a-424e-83a5-d25aa748e666","publishingOrganizationTitle":"Scratchpads","license":"unspecified","decades":[],"keywords":[],"recordCount":23298},{"key":"bb395a0a-72f0-4c50-b9b6-e1010b79d5c9","title":"Yanayacu Natural History Research Group","type":"CHECKLIST","hostingOrganizationKey":"315b3c03-4a0a-424e-83a5-d25aa748e666","hostingOrganizationTitle":"Scratchpads","countryCoverage":[],"publishingCountry":"GB","publishingOrganizationKey":"315b3c03-4a0a-424e-83a5-d25aa748e666","publishingOrganizationTitle":"Scratchpads","license":"unspecified","decades":[],"keywords":[],"recordCount":22562},{"key":"0e35c8a8-d77a-4de5-92e9-e87166ed028a","title":"Anthophila- an online repository of bee diversity","type":"CHECKLIST","hostingOrganizationKey":"315b3c03-4a0a-424e-83a5-d25aa748e666","hostingOrganizationTitle":"Scratchpads","countryCoverage":[],"publishingCountry":"GB","publishingOrganizationKey":"315b3c03-4a0a-424e-83a5-d25aa748e666","publishingOrganizationTitle":"Scratchpads","license":"unspecified","decades":[],"keywords":[],"recordCount":20500},{"key":"47baa56c-a511-4764-b506-342d63a9ecbe","title":"Porifera","type":"CHECKLIST","hostingOrganizationKey":"315b3c03-4a0a-424e-83a5-d25aa748e666","hostingOrganizationTitle":"Scratchpads","countryCoverage":[],"publishingCountry":"GB","publishingOrganizationKey":"315b3c03-4a0a-424e-83a5-d25aa748e666","publishingOrganizationTitle":"Scratchpads","license":"unspecified","decades":[],"keywords":[],"recordCount":20318},{"key":"0b1735ff-6a66-454b-8686-cae1cbc732a2","title":"Checklist of Vermont Species","description":"<p>The aim of the Checklist of Vermont Species (VTspecies) is to provide a comprehensive list of names of organisms, including information on synonymy, that have been recorded in the State of Vermont, United States. Like all science, VTspecies is a work in progress. Many taxonomic groups remain deficient and little studies in the state, and users will notice that many species are still missing from the database. Your contributions and feedback are essential to further improve the quality and taxonomic coverage of VTspecies.</p>\n<p>While the highest priority is to provide valid names, other names in use are included so that this register can serve as a guide to interpret taxonomic literature and explore biodiversity data from the state. Completing a checklist of all species and keeping it up-to-date is a continuous process. New information is continually discovered and added. Often data also come in from contributions of large datasets, such as global or regional species lists. Please contact us with errors, omissions, or questions to help us make this resource as complete as possible.</p>\n<p>VTspecies contains animals, plants, and fungi. For each species we provide scientific name(s), authors and year, vernacular name(s), classification hierarchy, citation proving that particular species has occurred in Vermont, and more. Further information of each species can be obtained at the Vermont Atlas of Life (VAL) at http://val.vtecostudies.org.</p>\n<p>VTspecies uses a set of generally accepted references, augmented by recent scientific literature and expert opinion, to establish a standard scientific name for every species and their hierarchical classification. Generally, VTspecies follows the Integrated Taxonomic Information System (ITIS; https://www.itis.gov/\n) for authoritative taxonomic information on plants, animals, and fungi of North America, as well as the GBIF backbone taxonomy (https://www.gbif.org/dataset/d7dddbf4-2cf0-4f39-9b2a-bb099caae36c).</p>","type":"CHECKLIST","hostingOrganizationKey":"b6d09100-919d-4026-b35b-22be3dae7156","hostingOrganizationTitle":"Vermont Center for Ecostudies","countryCoverage":[],"publishingCountry":"US","publishingOrganizationKey":"b6d09100-919d-4026-b35b-22be3dae7156","publishingOrganizationTitle":"Vermont Center for Ecostudies","license":"http://creativecommons.org/licenses/by-nc/4.0/legalcode","decades":[],"keywords":["Inventoryregional","Metadata"],"projectIdentifier":"VAL","recordCount":20296},{"key":"52a423d2-0486-4e77-bcee-6350d708d6ff","title":"Prokaryotic Nomenclature Up-to-date","description":"&#34;Prokaryotic Nomenclature up-to-date&#34; is a compilation of all names of Bacteria and Archaea which have been validly published according to the Bacteriological Code since 1. Jan. 1980, and nomenclatural changes which have been validly published since. It will be updated with the publication of each new issue of the Int. J. Syst. Evol. Microbiol. (IJSEM). &#34;Prokaryotic Nomenclature up-to-date&#34; is published by the Leibniz-Institut DSMZ - Deutsche Sammlung von Mikroorganismen und Zellkulturen GmbH.","type":"CHECKLIST","hostingOrganizationKey":"fbca90e3-8aed-48b1-84e3-369afbd000ce","hostingOrganizationTitle":"GBIF Secretariat","countryCoverage":[],"publishingCountry":"DE","publishingOrganizationKey":"463555b0-d081-11da-ae8f-b8a03c50a862","publishingOrganizationTitle":"Leibniz Institute DSMZ - German Collection of Microorganisms and Cell Cultures","license":"unspecified","decades":[],"keywords":[],"recordCount":20237},{"key":"71667154-257d-4d8e-a2a5-711aaf9b2d74","title":"Phthiraptera.info","type":"CHECKLIST","hostingOrganizationKey":"315b3c03-4a0a-424e-83a5-d25aa748e666","hostingOrganizationTitle":"Scratchpads","countryCoverage":[],"publishingCountry":"GB","publishingOrganizationKey":"315b3c03-4a0a-424e-83a5-d25aa748e666","publishingOrganizationTitle":"Scratchpads","license":"unspecified","decades":[],"keywords":[],"recordCount":19251},{"key":"88f4e35a-bdf8-4aa2-9a1b-56401d4eed15","title":"Taxon list of animals with German names (worldwide) compiled at the SMNS","description":"http://www.diversitymobile.net/wiki/About_%22Taxon_list_of_animals_with_German_names_%28worldwide%29_compiled_at_the_SMNS%22","type":"CHECKLIST","hostingOrganizationKey":"0674aea0-a7e1-11d8-9534-b8a03c50a862","hostingOrganizationTitle":"Staatliche Naturwissenschaftliche Sammlungen Bayerns","countryCoverage":[],"publishingCountry":"DE","publishingOrganizationKey":"0674aea0-a7e1-11d8-9534-b8a03c50a862","publishingOrganizationTitle":"Staatliche Naturwissenschaftliche Sammlungen Bayerns","license":"http://creativecommons.org/licenses/by/4.0/legalcode","decades":[],"keywords":[],"recordCount":18127},{"key":"39f36f10-559b-427f-8c86-2d28afff68ca","title":"DAISIE - Inventory of alien invasive species in Europe","description":"<p>The DAISIE - inventory of alien invasive species in Europe is a species checklist dataset published by the Research Institute for Nature and Forest (INBO) and the Centre for Ecology and Hydrology (CEH). It contains information on 12,104 taxa (mostly species and mostly introduced) occurring in the wild in Europe since 1500. It covers a broad taxonomic spectrum of terrestrial and aquatic free living and parasitic organisms. The collation of the alien species list is the result of the efforts of the DAISIE (http://www.europe-aliens.org/) project partners and more than 300 collaborators from Europe and neighbouring countries, involved in different fields of expertise and organisations. Here the DAISIE checklist is published as a standardized Darwin Core Archive and includes for each species: the scientific name, higher classification, and stable taxon identifier (in the taxon core), the vernacular names (in the vernacular names extension), the presence in a specific region, the year of the first introduction (first collection) and/or last assessment/observation in that region, as well as extra information (in the distribution extension), and the habitat, native range, and ecofunctional group (in the description extension). The DAISIE dataset is no longer maintained, but can be used as a historical archive for researching and managing alien plants or compiling regional and national registries of alien species. Issues with the dataset can be reported at https://github.com/trias-project/daisie-checklist</p>\n<p>We have released this dataset under a Creative Commons Attribution license (CC-BY 4.0). We would appreciate it if you follow the GBIF citation guidelines (https://www.gbif.org/citation-guidelines) when using the data. If you have any questions regarding this dataset, don’t hesitate to contact us via the contact information provided in the metadata or via https://twitter.com/trias_project.</p>\n<p>The publication of the checklist to GBIF was supported by the European Cooperation in Science and Technology (COST) action Alien CSI “CA17122 - Increasing understanding of alien species through citizen science” as a Short Term Scientific Mission “Publishing alien species checklist data for Europe through repeatable, open workflows”,  with technical support provided by the Research Institute for Nature and Forest (INBO).</p>","type":"CHECKLIST","hostingOrganizationKey":"1cd669d0-80ea-11de-a9d0-f1765f95f18b","hostingOrganizationTitle":"Research Institute for Nature and Forest (INBO)","countryCoverage":[],"publishingCountry":"BE","publishingOrganizationKey":"1cd669d0-80ea-11de-a9d0-f1765f95f18b","publishingOrganizationTitle":"Research Institute for Nature and Forest (INBO)","license":"http://creativecommons.org/licenses/by/4.0/legalcode","decades":[1400,1500,1600,1700,1800,1810,1820,1830,1840,1850,1860,1870,1880,1890,1900,1910,1920,1930,1940,1950,1960,1970,1980,1990,2000],"keywords":["Europe","alien species","Checklist","checklist","inventory","AlienCSI","Inventorythematic"],"recordCount":17357},{"key":"6fb9265c-2d98-40ad-989d-7b6bf4820519","title":"Psocodea Species File","description":"This file contains taxon names and related nomenclatural information for the order Psocodea originating from the Psocodea Species File maintained by the Species File Group (http://software.speciesfile.org) at the University of Illinois, Illinois Natural History Survey.","type":"CHECKLIST","hostingOrganizationKey":"47a779a6-a230-4edd-b787-19c3d2c80ab5","hostingOrganizationTitle":"Species File Group","countryCoverage":[],"publishingCountry":"US","publishingOrganizationKey":"47a779a6-a230-4edd-b787-19c3d2c80ab5","publishingOrganizationTitle":"Species File Group","license":"http://creativecommons.org/licenses/by/4.0/legalcode","decades":[],"keywords":["Checklist","taxonomy","catalogue"],"recordCount":15011},{"key":"e09e1e1f-2460-4017-a964-e999abd2bf66","title":"Korean Peninsula Flora","type":"CHECKLIST","hostingOrganizationKey":"315b3c03-4a0a-424e-83a5-d25aa748e666","hostingOrganizationTitle":"Scratchpads","countryCoverage":[],"publishingCountry":"GB","publishingOrganizationKey":"315b3c03-4a0a-424e-83a5-d25aa748e666","publishingOrganizationTitle":"Scratchpads","license":"http://creativecommons.org/licenses/by/4.0/legalcode","decades":[],"keywords":[],"recordCount":14997},{"key":"ec1a0bfb-7d8e-4c6b-bc4d-dfd68a1e844f","title":"A list of the terrestrial and marine biota from the Azores","description":"The Azores is a remote oceanic archipelago of nine islands which belongs to the Macaronesia biogeographical region and is among the richest regions concerning fungi, plant and animal diversity in Europe. This checklist lists all the species of the most important terrestrial and marine taxonomic groups. \n\nThe total number of terrestrial and marine taxa (species and subspecies) in the Azores\nis estimated in about 8047. The marine organisms currently listed make up about 23% of the Azorean biodiversity. The total number of terrestrial and marine endemic taxa (species and subspecies) in the Azores is estimated of about 491.","type":"CHECKLIST","hostingOrganizationKey":"cdcc4ce1-7f6e-4ed2-b47c-eb451925b038","hostingOrganizationTitle":"Instituto Superior de Agronomia / Universidade de Lisboa","countryCoverage":[],"publishingCountry":"PT","publishingOrganizationKey":"0a80feca-b411-428a-a34e-c5c2fa07cdba","publishingOrganizationTitle":"Universidade dos Açores","license":"http://creativecommons.org/licenses/by/4.0/legalcode","decades":[2010],"keywords":["Lichens","Flatworms","Macroalgae","Vascular plants","Diatoms. Bryophytes","Pteridophytes","Fungi","Vertebrates","Molluscs","Animals","Checklist","Nematodes","Arthropods","Azores","Earthworms"],"recordCount":14677},{"key":"2b94a042-fe01-4d9f-8995-d996c21d33cd","title":"Checklist of Danish Fungi","description":"Checklist of Fungi including lichens, accepted as Danish. The list is generated from the taxonomic backbone of the Danish fungal atlas.\nRead more at svampe.databasen.org - the Danish Mycological Societys fungal records database.","type":"CHECKLIST","hostingOrganizationKey":"ccc2e3ec-98ba-4e74-878d-7dcf0f57baba","hostingOrganizationTitle":"Danish Mycological Society","countryCoverage":[],"publishingCountry":"DK","publishingOrganizationKey":"ccc2e3ec-98ba-4e74-878d-7dcf0f57baba","publishingOrganizationTitle":"Danish Mycological Society","license":"http://creativecommons.org/licenses/by-nc/4.0/legalcode","decades":[],"keywords":["Taxon List","Fungi","Vernacular Names","Inventory Regional","Checklist","Denmark","Higher Classification"],"recordCount":13776},{"key":"8b4ecd20-850f-473e-af8c-dbf5d1e76932","title":"Línea base de especies en términos de su vocación de conservación y uso sostenible del departamento de Santander - Proyecto Santander BIO","description":"El departamento de Santander cuenta con unas características hídricas, geológicas y climáticas que hacen que el departamento tenga una riqueza de ecosistemas y recursos biológicos importante a nivel nacional. Por lo tanto, el reconocimiento del componente biológico de la región resulta determinante frente a la toma de decisiones relacionadas con la preservación y el uso sostenible de estos recursos. La construcción de una línea base de información sobre biodiversidad de escritorio posibilita identificar necesidades y establecer planes de acción que serán útiles y complementarán los datos obtenidos en las expediciones Santander Bio realizadas por el Instituto Humboldt y la Universidad Industrial de Santander en Santander. La presente lista contiene un total de 9485 especies (plantas, líquenes, invertebrados, aves, mamíferos, peces, reptiles, anfibios, hongos y bacterias)  con potencial distribución en el departamento de Santander. De las especies encontradas 1069 son endémicas, 148 son invasoras, 196 tienen algún grado de amenaza según resolución MADS No.1912 de 2017 y 218 especies entran en algún apéndice CITES. Las tres instituciones que más aportaron información según las fuentes consultadas fueron el Instituto Humboldt, la Universidad Industrial de Santander y la Corporación Autónoma Regional para la Defensa de la Meseta de Bucaramanga. Se destaca la iniciativa de ciencia participativa eBird como la iniciativa que más aporta datos sobre la fauna del departamento con un 35% del total de registros de presencia de especies. Varios de los municipios de Santander que cuentan con la mayor cantidad de información en las bases de datos de libre acceso se encuentran en el área Metropolitana de Bucaramanga. La lista de especies fue construida a partir de registros biológicos disponibles y de literatura complementaria.","type":"CHECKLIST","hostingOrganizationKey":"2a7e3080-28a9-11dd-97cd-b8a03c50a862","hostingOrganizationTitle":"Instituto de Investigación de Recursos Biológicos Alexander von Humboldt","countryCoverage":[],"publishingCountry":"CO","publishingOrganizationKey":"2a7e3080-28a9-11dd-97cd-b8a03c50a862","publishingOrganizationTitle":"Instituto de Investigación de Recursos Biológicos Alexander von Humboldt","license":"http://creativecommons.org/licenses/by-nc/4.0/legalcode","decades":[2010],"keywords":["Lista de chequeo","recopilación","registros de presencia de especies","especies","línea base","Inventario regional","bases de datos"],"recordCount":13365},{"key":"e1c9e885-9d8c-45b5-9f7d-b710ac2b303b","title":"Endemic species in Taiwan","description":"Taiwan is a continental island, located between the southeastern coastline of mainland China and Japan's Ryukyu Islands. With diverse terrain and wide range of vertical elevations, Taiwan has tropical, subtropical, temperate, and frigid climate zones. These unique geographical conditions, coupled with the effect of habitat isolation, gave Taiwan its high biodiversity.\n\nThe endemic species of Taiwan denotes the native plants and animals of Taiwan and its offshore islands such as Penghu Archipelago, Orchid Island, Green Island, etc. Even though the areas are small, the Checklist of Taiwan (TaiBNET) lists around 50,000 valid species scientific names. Among them, 8,000 are endemic species (including endemic subspecies and varietas), showing the abundance of Taiwan’s endemic Species. TaiBNET also provides information on these species, such as their scientific names (including authors and years), common names, and synonyms. Through Taiwan Biodiversity Information Facility (TaiBIF), the information on these endemic species are published and then shared and exchanged with other GBIF participants. Users can use keywords to link to other websites with relevant information. All these efforts will result in the circulation and utilization of information in the areas of research, education and conservation.","type":"CHECKLIST","hostingOrganizationKey":"12b1df00-3f75-11d8-aa2d-b8a03c50a862","hostingOrganizationTitle":"Taiwan Biodiversity Information Facility (TaiBIF)","countryCoverage":[],"publishingCountry":"TW","publishingOrganizationKey":"12b1df00-3f75-11d8-aa2d-b8a03c50a862","publishingOrganizationTitle":"Taiwan Biodiversity Information Facility (TaiBIF)","license":"unspecified","decades":[],"keywords":["Inventoryregional","Checklist"],"recordCount":13328},{"key":"672aca30-f1b5-43d3-8a2b-c1606125fa1b","title":"Mammal Species of the World","description":"The data in this checklist of mammal species of the world are being presented for non-commercial, personal, and collections management use only. Copying or redistributing these data in any manner for personal or corporate gain is not permitted.  A list of the authors responsible for various portions of the text can be found here.","type":"CHECKLIST","hostingOrganizationKey":"fbca90e3-8aed-48b1-84e3-369afbd000ce","hostingOrganizationTitle":"GBIF Secretariat","countryCoverage":[],"publishingCountry":"US","publishingOrganizationKey":"bc092ff0-02e4-11dc-991f-b8a03c50a862","publishingOrganizationTitle":"National Museum of Natural History, Smithsonian Institution","license":"unspecified","decades":[],"keywords":["Checklist"],"recordCount":13144},{"key":"a43ec6d8-7b8a-4868-ad74-56b824c75698","title":"A list of the terrestrial fungi, flora and fauna of Madeira and Selvagens archipelagos","description":"This checklist includes, as rigorously as possible, all the known terrestrial and freshwater, i.e. insular, fungi, plants and animals of the Madeira and Selvagens archipelagos with the indication of their known presence on the islands of Madeira, Porto Santo, Desertas and Selvagens. It results from the collaborative work of many taxonomists from different Portuguese and foreign institutions (about 90 taxonomists), under the editorial coordination of the Azorean Biodiversity Group (http://www.gba.uac.pt).\n\nThe total estimated number of terrestrial species and subspecies in the Madeira and Selvagens archipelagos was about 7,571 (7,452 species and 421 subspecies). Fungi and plants represent about 42% of the terrestrial diversity. However, animals dominate, arthropods being the majority (51%) of all recorded taxa.\n\nThe total number of endemic species and subspecies from the Madeira and Selvagens archipelagos is about 1,419 (1,286 species and 182 subspecies), which represents 19% of the overall species diversity. The animal Phyla are the most diverse in endemic taxa, namely Mollusca (210) and Arthropoda (979), comprising about 84% of the Madeiran endemics. The percentage of endemism within Mollusca is particularly remarkable, reaching 71%. Within vascular plants there are 154 endemic species and subspecies (13% of the overall plant species diversity) while the remaining higher taxonomic groups are less diverse in terms of endemic forms: Fungi – 36 (5%); Lichens – 12 (2%); Bryophytes – 11 (2%); vertebrates 15 (24%).","type":"CHECKLIST","hostingOrganizationKey":"cdcc4ce1-7f6e-4ed2-b47c-eb451925b038","hostingOrganizationTitle":"Instituto Superior de Agronomia / Universidade de Lisboa","countryCoverage":[],"publishingCountry":"PT","publishingOrganizationKey":"0a80feca-b411-428a-a34e-c5c2fa07cdba","publishingOrganizationTitle":"Universidade dos Açores","license":"http://creativecommons.org/licenses/by/4.0/legalcode","decades":[2000],"keywords":["Desertas","Selvagens","Lichens","Flatworms","Macroalgae","Vascular plants","Diatoms. Bryophytes","Inventory regional","Pteridophytes","Fungi","Vertebrates","Molluscs","Animals","Madeira","Porto Santo","Checklist","Nematodes","Arthropods","Earthworms"],"recordCount":12782},{"key":"d7435f14-dfc9-4aaa-bef3-5d1ed22d65bf","title":"Taxonomy in Flux Checklist","description":"Aves - A Taxonomy in Flux\nVersion 2.87: June 02 2013\n\nThere are big changes underway in bird taxonomy. You've probably noticed that the checklist is always changing. Suddenly the ducks have replaced the loons in front of the NGS guide. Not too long ago the shrikes and vireos were next to the warblers, now they're next to the jays. Maybe you've heard that vultures are storks, or that they're not really storks after all, or that North American tanagers are now cardinals, or that saltators are tanagers, not cardinals. Then there are the Baltimore and Bullock's Orioles, or are they just Northern Orioles? Are they Slate-colored and Oregon Juncos, or maybe it's Dark-eyed Junco today. Not only are species being split or lumped, but everything is being rearranged. A new view of bird taxonomy takes shape as we watch.\n\nThere have always been questions and disagreements about bird taxonomy, and it has always been changing (see Bruce, 2003). Since Aristotle or before, people have tried to find a natural way to order all bird species (the very words “genus” and “species” carry the Aristotelean tradition). Early attempts were based on obvious similarities, such as grouping all waterbirds together. But what constitutes a natural order?\n\nLinnaeus simplified scientific nomenclature by naming each type bird with a genus and species, but was unable to tell us what order was natural. It is not until Darwin that we get a clearcut way to order the birds. They should be ordered according to descent. Birds with more recent common ancestors should be grouped together.\n\nThomas Huxley (1867) was the first to construct a comprehensive bird list on Darwinian lines. He focused on the characteristics of the bird's skull to determine common inherited features that he could base his taxonomy on. Numerous other ornithologists have used morphological traits to classify the birds, with Livezey and Zusi (2007) being the most recent effort of this type.\n\nMore recently, focus has shifted to molecular methods, the most important of which is to directly study the stuff of inheritance—DNA. The culmination of the first wave of DNA based taxonomy were the publications by Sibley, Ahlquist, and Monroe (Sibley, Ahlquist, and Monroe, 1988; Sibley and Ahlquist, 1990; Sibley and Monroe, 1990). Sibley, Ahlquist, and Monroe used DNA hybridization to try to classify birds. This, together with increasing emphasis on cladistic methods, has revitalized interest in bird taxonomy. In the 1990's, DNA hybridization was replaced by the much more precise DNA sequencing, allowing direct examination of the genes themselves. This has opened the possibility of constructing a “tree of life” showing the evolutionary relationships between all living organisms. It has brought the prospect of producing a completely accurate taxonomic tree of all living bird species, and touched off an onslaught of new research. This ongoing research is the driving force behind the checklist changes.\n\nThis set of web pages contains a guess at what the avian part of the tree of life might look like. It examines recent taxonomic changes, and possible changes to come. Some of the projected changes are pretty solid, others are guesses based on current research. Keep in mind that some of my guesses will turn out to be wrong, and some of the research they are based will be wrong or misleading. There will doubtless be taxonomic surprises before the entire avian tree is worked out, just as there have been a number of recent surprises.\n\nThe “Tapestry” on Steroids\nUnlike all of the other current checklists, the TiF checklist includes explicit phylogenetic hypotheses whenever possible. These hypotheses are embodied in tree diagrams. From the beginning, the TiF list has used an explicit family-level tree. That has now been extended to a genus-level tree for most families (now over 95%). In some cases it has been pushed to the species level, and in a very few cases, even to subspecies.\n\nPreviously, only the combination of Sibley and Monroe (1990) and Sibley and Ahlquist (1990) had attempted anything of this sort, their famous “tapestry”. However, they had nowhere near the coverage that is now possible. One of the goals of this checklist is to provide a tapestry on steroids that will eventually include all extant bird species.\n\nThe tree I've put together is an interpretation of the genetic relationships studied by many authors. The higher level taxonomy (the non-passerines) I use is primarily based on Hackett et al. (2008), which refines the results of Ericson et al. (2006a) and Fain and Houde (2004). This taxonomy is slowly creeping into the checklists. The latest (2008) of Christidis and Boles Australian checklist incorporates some of these ideas, as does the AOU's South American checklist.\n\nThe purpose of these webpages is twofold: To present the new ideas that Fain and Houde's Metaves hypothesis has brought to the higher taxonomy (mostly above the family level), and to examine the wholesale changes that been going on within the various families. The latter has particularly affected the passerine families, which at times seems like they've been run through a blender (see the Sylviidae page for an example).\n\nThe higher-level phylogeny has followed Hackett et al. (2008) since version 2.1. I've created a pdf that summarizes the changes from the previous version. Since then, I've concentrated on adding as many genus-level phylogenetic family trees as are possible (not needed for the one and two genus families). At present, under 5% of the extant bird families lack even a draft tree, although some of other family trees still have areas of conjecture.\n\nI also have further information on the Metaves hypothesis and higher-level taxonomy. It discusses the composition of the major groups and the relations between them, particularly Metaves and Coronaves.","type":"CHECKLIST","hostingOrganizationKey":"fbca90e3-8aed-48b1-84e3-369afbd000ce","hostingOrganizationTitle":"GBIF Secretariat","countryCoverage":[],"publishingCountry":"US","publishingOrganizationKey":"4c05ab8a-89b2-4b5f-9a90-14c0c2c7fd37","publishingOrganizationTitle":"Florida International University","license":"unspecified","decades":[],"keywords":["Checklist"],"recordCount":12536},{"key":"d027759f-84bc-4dfc-a5ea-b17a50793451","title":"Taxon list of vascular plants from Bavaria, Germany compiled in the context of the BFL project","description":"http://www.diversitymobile.net/wiki/About_%22Taxon_list_of_vascular_plants_from_Bavaria,_Germany_compiled_in_the_context_of_the_BFL_project%22","type":"CHECKLIST","hostingOrganizationKey":"0674aea0-a7e1-11d8-9534-b8a03c50a862","hostingOrganizationTitle":"Staatliche Naturwissenschaftliche Sammlungen Bayerns","countryCoverage":[],"publishingCountry":"DE","publishingOrganizationKey":"0674aea0-a7e1-11d8-9534-b8a03c50a862","publishingOrganizationTitle":"Staatliche Naturwissenschaftliche Sammlungen Bayerns","license":"http://creativecommons.org/licenses/by/4.0/legalcode","decades":[],"keywords":[],"recordCount":12289},{"key":"5a71d803-e916-4aac-a373-a2f6010c8f13","title":"Aproximación a la representatividad de la diversidad de plantas vasculares en los Parques Nacionales Naturales de Colombia ¿Cuantas especies se conservan en el sistema?","description":"Colombia cuenta con 59 áreas del Sistema Nacional de Parques Nacionales Naturales (PNNC). El inventario de la flora del sistema es insipiente ya que se desconoce el número y que especies de plantas que alberga. Se compiló información disponible de colecciones de herbario y literatura para establecer una lista preliminar de especies de plantas vasculares con evidencias que se encuentran PNNC. Esta lista fue confrontada con el catálogo nacional de plantas y se establecieron valores porcentuales del número de especies con respecto a las cifras nacionales. Se estima que el inventario de la flora del Sistema de PNNC se encuentra en un 49.6%.  Lo conocido en PNNC hasta el momento representa el 37.8% de las especies de plantas vasculares conocidas para el país. El 18.2% de las especies endémicas a Colombia y el 56% de las especies categorizadas en algún grado de amenaza se encuentran en PNNC. Se plantea el uso de estas cifras como posibles índices de representatividad de la fitodiversidad que complemente otros índices como el de porcentaje del territorio nacional bajo conservación. Se enfatiza que los parques nacionales asociados a los Andes son los más determinantes y que aportan al mejoramiento de estos indicadores de fitodiversidad propuestos.","type":"CHECKLIST","hostingOrganizationKey":"2a7e3080-28a9-11dd-97cd-b8a03c50a862","hostingOrganizationTitle":"Instituto de Investigación de Recursos Biológicos Alexander von Humboldt","countryCoverage":[],"publishingCountry":"CO","publishingOrganizationKey":"2a7e3080-28a9-11dd-97cd-b8a03c50a862","publishingOrganizationTitle":"Instituto de Investigación de Recursos Biológicos Alexander von Humboldt","license":"http://creativecommons.org/licenses/by-nc/4.0/legalcode","decades":[2010],"keywords":["Colombia","plantas vasculares","Inventoryregional","Parques Nacionales Naturales","Checklist","diversidad de especies","representatividad."],"recordCount":11948},{"key":"80b4b440-eaca-4860-aadf-d0dfdd3e856e","title":"Official Lists and Indexes of Names in Zoology","description":"All scientific names listed in the Official Lists and Indexes of Names in Zoology from the International Commission on Zoological Nomenclature (ICZN).","type":"CHECKLIST","hostingOrganizationKey":"fbca90e3-8aed-48b1-84e3-369afbd000ce","hostingOrganizationTitle":"GBIF Secretariat","countryCoverage":[],"publishingOrganizationKey":"f2f462db-541d-4a24-9921-892d57e1da9f","publishingOrganizationTitle":"International Commission on Zoological Nomenclature","license":"unspecified","decades":[],"keywords":[],"recordCount":11901},{"key":"91fecd78-0986-4713-9c36-77532846ee25","title":"Lista de táxones de la flora vascular española","description":"Este juego de datos recoge la Lista de Táxones de la Flora Vascular Española presentada como una tabla adaptada al formato estándar Darwin Core. Comprende las especies y subespecies de flora vascular presentes en la Península Ibérica, Islas Baleares e Islas Canarias, además de sus géneros y familias correspondientes (no se han incluido híbridos). Incluye un total de 10.493 taxones dispuestos en 212 familias, 1399 géneros, 7069 especies y 1813 subespecies. Para su elaboración se ha utilizado como fuente primaria Flora iberica (http://www.floraiberica.es) y ha sido completada con taxones mencionados en la legislación (Atlas y Libros Rojos), así como otras obras donde se recogen taxones canarios, alóctonos u otros aún no tratados por esta obra (ver apartado Citations). \n\nOperativamente se entiende que un taxon es un nombre científico con una descripción que lo circunscribe, en este caso, las descripciones vienen referidas por la referencia bibliográfica de las obras (floras, monografías, artículos) que las contienen, no obstante 826 se encuentran provisionalmente sin referencia. \n\nTodos los táxones, nombres y referencias bibliográficas vienen acompañadas de sus respectivos identificadores que son de tipo LSID (Life Science Identifiers), y por tanto son únicos, globales, persistentes y resolvibles. Para la asignación de los LSID de nombres científicos se ha utilizado IPNI (http://www.ipni.org). En los casos en que IPNI registra más de una entrada para el mismo nombre (incluido el protólogo), se ha elegido el identificador de la entrada más completa o con menos errores. En caso de discrepancia entre los autores de los nombres científicos entre IPNI y Flora iberica, se ha seguido el criterio de Flora iberica y mantenido el LSID de IPNI. Cuando un nombre no se ha encontrado en IPNI se le ha generado un identificador utilizando el servidor de LSID de GBIF.ES, que llevan de prefijo «urn:lsid:recibio.net:name:». \n\nPara la taxonomía se ha seguido en lo posible a Flora iberica (incluyendo las listadas como «Especies que han de buscarse») y subsidiariamente el proyecto Anthos (http://www.anthos.es/). Estas fuentes se han completado con otras atendiendo a criterios de coherencia, relevancia y actualidad.","type":"CHECKLIST","hostingOrganizationKey":"6c4a0bb0-2a4d-11d8-aa2d-b8a03c50a862","hostingOrganizationTitle":"GBIF-Spain","countryCoverage":[],"publishingCountry":"ES","publishingOrganizationKey":"6c4a0bb0-2a4d-11d8-aa2d-b8a03c50a862","publishingOrganizationTitle":"GBIF-Spain","license":"http://creativecommons.org/licenses/by/4.0/legalcode","decades":[],"keywords":["Inventoryregional","Checklist"],"recordCount":11578},{"key":"0b366d90-bd5e-4e7a-ba06-295813334125","title":"Taxon list of Hymenoptera from Germany compiled in the context of the GBOL project","description":"http://www.diversitymobile.net/wiki/About_%22Taxon_list_of_Hymenoptera_from_Germany_compiled_in_the_context_of_the_GBOL_project%22","type":"CHECKLIST","hostingOrganizationKey":"0674aea0-a7e1-11d8-9534-b8a03c50a862","hostingOrganizationTitle":"Staatliche Naturwissenschaftliche Sammlungen Bayerns","countryCoverage":[],"publishingCountry":"DE","publishingOrganizationKey":"0674aea0-a7e1-11d8-9534-b8a03c50a862","publishingOrganizationTitle":"Staatliche Naturwissenschaftliche Sammlungen Bayerns","license":"http://creativecommons.org/licenses/by/4.0/legalcode","decades":[],"keywords":[],"recordCount":11405},{"key":"a5dd063e-f45b-4a54-8b94-8fa3adf7f1e1","title":"Multilingual IOC World Bird List, vnull","description":"The IOC World Bird List is an open access resource of the international community of ornithologists.","type":"CHECKLIST","hostingOrganizationKey":"fbca90e3-8aed-48b1-84e3-369afbd000ce","hostingOrganizationTitle":"GBIF Secretariat","countryCoverage":[],"publishingOrganizationKey":"1249271c-25ff-45c2-adb3-264dd38798b5","publishingOrganizationTitle":"International Ornithologists Union (IOU)","license":"unspecified","decades":[],"keywords":[],"recordCount":11088},{"key":"8067e0a2-a26d-4831-8a1e-21b9118a299c","title":"Families of Living Organisms (FALO)","description":"The list of Families of Living Organisms (FALO) compiled by Ruggiero (2014) as an extension of a seven-kingdom classification of life in Ruggiero et al. (2015). \n      The latter work is the result of an expert panel representing the major taxonomic disciplines convened to review, revise, and update the existing incomplete Catalogue of Life (CoL) hierarchy down to order.\n\n      The FALO classification is based on a consensus view among the authors, accommodating taxonomic choices and practical compromises among diverse opinions, usages and often conflicting evidence of the boundaries between ranks and some major taxa, including kingdoms.\n\n      FALO is unique because it aims to be comprehensive, with all known species of life on earth finding a home within its classification. Obviously, FALO is just \"a\" classification, certainly not \"THE\" classification of life. \n      Because it heuristically combines strictly phylogenetic and relatively classical taxonomies, no doubt some of the implied relationships will require revision.","type":"CHECKLIST","hostingOrganizationKey":"fbca90e3-8aed-48b1-84e3-369afbd000ce","hostingOrganizationTitle":"GBIF Secretariat","countryCoverage":[],"publishingOrganizationKey":"fbca90e3-8aed-48b1-84e3-369afbd000ce","publishingOrganizationTitle":"GBIF Secretariat","license":"unspecified","decades":[],"keywords":[],"recordCount":10968},{"key":"cbb6498e-8927-405a-916b-576d00a6289b","title":"English Wikipedia - Species Pages","description":"Species pages extracted from the $LANG Wikipedia article XML dump from $DATE.\nMultimedia, vernacular names and textual descriptions are extracted, but only pages with a taxobox or speciesbox template are recognized.\n\nSee https://github.com/mdoering/wikipedia-dwca for details.","type":"CHECKLIST","hostingOrganizationKey":"fbca90e3-8aed-48b1-84e3-369afbd000ce","hostingOrganizationTitle":"GBIF Secretariat","countryCoverage":[],"publishingCountry":"US","publishingOrganizationKey":"b289cfec-b50c-4845-b142-d20a1739b9fd","publishingOrganizationTitle":"Wikimedia Foundation","license":"unspecified","decades":[],"keywords":["wikipedia"],"recordCount":10794},{"key":"214c3109-d37a-40f8-9c24-5b6e59915394","title":"Aphid Species File","description":"This file contains taxon names and related nomenclatural information for the infraorder Aphidomorpha, including aphids and their relatives, originating from Aphid Species File maintained by the Species File Group (http://software.speciesfile.org) at the University of Illinois, Illinois Natural History Survey.","type":"CHECKLIST","hostingOrganizationKey":"47a779a6-a230-4edd-b787-19c3d2c80ab5","hostingOrganizationTitle":"Species File Group","countryCoverage":[],"publishingCountry":"US","publishingOrganizationKey":"47a779a6-a230-4edd-b787-19c3d2c80ab5","publishingOrganizationTitle":"Species File Group","license":"http://creativecommons.org/licenses/by/4.0/legalcode","decades":[],"keywords":["phylloxerid","catalog","nomenclator","aphidid","checklist","taxonomy","fossil","catalogue","bibliography","phylloxera","Checklist","adelgid","aphid"],"recordCount":10683},{"key":"c5725db2-507f-4ec1-96ef-60dccb4de490","title":"Vernacular names of Iberian fungi in Spain","description":"<p>Vernacular names of Iberian fungi in Spain</p>\n<p>Note: this dataset was previously orphaned. It has been rescued by ① extracting it from the GBIF.org index (see GBIF Download in External Data) and ② republishing it on this IPT data hosting centre as version 1.0.</p>","type":"CHECKLIST","hostingOrganizationKey":"6c4a0bb0-2a4d-11d8-aa2d-b8a03c50a862","hostingOrganizationTitle":"GBIF-Spain","countryCoverage":[],"publishingCountry":"ES","publishingOrganizationKey":"6c4a0bb0-2a4d-11d8-aa2d-b8a03c50a862","publishingOrganizationTitle":"GBIF-Spain","license":"http://creativecommons.org/licenses/by/4.0/legalcode","decades":[],"keywords":["Checklist"],"recordCount":10633},{"key":"7a9bccd4-32fc-420e-a73b-352b92267571","title":"Checklist of Beetles (Coleoptera) of Canada and Alaska. Second Edition.","description":"All 8238 species-group taxa of Coleoptera known to occur in Canada and Alaska are recorded by province/territory or state, along with their author(s) and year of publication, in a classification framework. Only presence of taxa in each Canadian province or territory and Alaska is noted. Labrador is considered a distinct geographical entity. Adventive and Holarctic species-group taxa are indicated. References to pertinent identification keys are given under the corresponding supraspecific taxa.","type":"CHECKLIST","hostingOrganizationKey":"ff7bd5db-b724-4932-b496-10ea298851f9","hostingOrganizationTitle":"Université de Montréal Biodiversity Centre","countryCoverage":[],"publishingCountry":"CA","publishingOrganizationKey":"ff7bd5db-b724-4932-b496-10ea298851f9","publishingOrganizationTitle":"Université de Montréal Biodiversity Centre","license":"http://creativecommons.org/licenses/by/4.0/legalcode","decades":[1700,1800,1810,1820,1830,1840,1850,1860,1870,1880,1890,1900,1910,1920,1930,1940,1950,1960,1970,1980,1990,2000,2010],"keywords":["Canada","regional","Coleoptera","Checklist","Alaska","Inventory"],"recordCount":10507},{"key":"b4af7484-5acd-4804-8211-d738f13832c7","title":"Compositae","type":"CHECKLIST","hostingOrganizationKey":"315b3c03-4a0a-424e-83a5-d25aa748e666","hostingOrganizationTitle":"Scratchpads","countryCoverage":[],"publishingCountry":"GB","publishingOrganizationKey":"315b3c03-4a0a-424e-83a5-d25aa748e666","publishingOrganizationTitle":"Scratchpads","license":"unspecified","decades":[],"keywords":[],"recordCount":10443},{"key":"ee2aac07-de9a-47a2-b828-37430d537633","title":"Lista de taxones en el SIRAP-EC","description":"Para el diseño e implementación de un SIRAP, es esencial conocer la biodiversidad regional. Este conocimiento de los patrones regionales de distribución de las especies, es importante para determinar las áreas de mayor diversidad, el grado de concentración de endemismos y los patrones de diversidad beta; es decir, la forma como cambia la composición de especies de acuerdo al gradiente altitudinal. Además, es importante tener información detallada de la distribución de las especies focales en la región.\n\nPara caracterizar los patrones de biodiversidad regional en el Eje Cafetero se tuvo como punto de partida dos bases de datos. La primera es una recopilación de la información disponible sobre las localidades de registro de las especies que conforman la biota regional (inventarios básicos). La segunda base de datos consiste en los listados de especies potenciales para cada subregión del Eje Cafetero. La fuente de la información ha sido Fundación Ecoandina y WCS, que suministraron una base de datos digital con más de 35 mil registros (que representan 6974 especies de hongos, plantas y animales). A partir de esta base de datos se originó este listado de especies.","type":"CHECKLIST","hostingOrganizationKey":"c4f66525-4d36-4c18-82ac-98e088f54db4","hostingOrganizationTitle":"Sistema de Información sobre Biodiversidad de Colombia - SiB","countryCoverage":[],"publishingCountry":"CO","publishingOrganizationKey":"0c23482f-89f3-4efa-b6ed-7b25dadde4fc","publishingOrganizationTitle":"WCS Colombia","license":"http://creativecommons.org/licenses/by/4.0/legalcode","decades":[1100,1200,1300,1400,1500,1600,1700,1800,1810,1820,1830,1840,1850,1860,1870,1880,1890,1900,1910,1920,1930,1940,1950,1960,1970,1980,1990,2000,2010],"keywords":["Animalia","Protozoa","Colombia","Biodiversidad","Áreas protegidas","SIRAP-EC","Derivedfromoccurrence","Fungi","Eje Cafetero","Pantae","coffee growing zone","Zona cafetera","Checklist","SIRAP"],"recordCount":10010},{"key":"3f5e930b-52a5-461d-87ec-26ecd66f14a3","title":"RINSE - Registry of non-native species in the Two Seas region countries (Great Britain, France, Belgium and the Netherlands)","description":"<p>The Registry of non-native species in the Two Seas region countries is a species checklist dataset published by the Research Institute of Nature and Forest (INBO). It contains information on 6.643 taxa occurring in the Two Seas region countries (Great Britain, France, Belgium and the Netherlands). This dataset represents a registry of species that are not native, but recorded to live in the wild in at least one of the four countries and is the result of the screening of 55 national and international print and online sources. The checklist has been published as a data paper by Zieritz et al. (2014, https://doi.org/10.3897/neobiota.23.5665), where it can be downloaded as supplementary material. Here it is published as a standardized Darwin Core Archive and includes for each taxon: the scientific name, higher classification and stable taxon identifier (in the taxon core), the (confidence regarding the) presence of the species in each of the four countries, whether the species is native or introduced (establishment) (in the distribution extension) and coarse habitat information (in the species profile extension). Issues with the dataset can be reported at: https://github.com/trias-project/rinse-registry-checklist</p>\n<p>We have released this dataset to the public domain under a Creative Commons Zero waiver. We would appreciate it if you follow the INBO norms for data use (https://www.inbo.be/en/norms-data-use) when using the data. If you have any questions regarding this dataset, don&#39;t hesitate to contact us via the contact information provided in the metadata or via https://twitter.com/LifeWatchINBO.</p>\n<p>This dataset was published as open data for the TrIAS project (Tracking Invasive Alien Species http://trias-project.be, Vanderhoeven et al. 2017), with technical support provided by the Research Institute for Nature and Forest (INBO). It is selected as one of the authoritative sources for the compilation of a unified and reproducible checklist of alien species in Belgium.</p>","type":"CHECKLIST","hostingOrganizationKey":"1cd669d0-80ea-11de-a9d0-f1765f95f18b","hostingOrganizationTitle":"Research Institute for Nature and Forest (INBO)","countryCoverage":[],"publishingCountry":"BE","publishingOrganizationKey":"1cd669d0-80ea-11de-a9d0-f1765f95f18b","publishingOrganizationTitle":"Research Institute for Nature and Forest (INBO)","license":"http://creativecommons.org/publicdomain/zero/1.0/legalcode","decades":[2010],"keywords":["registry","Great Britain","Netherlands","Belgium","alien species","Checklist","English Channel","TrIAS","France"],"projectIdentifier":"TrIAS","recordCount":9665},{"key":"cb1a57be-c69c-4ebe-a41a-21dd723d7b48","title":"CATE Araceae","description":"CATE-Araceae is a community of experts and enthusiasts, trying to improve our understanding of the taxonomy, biology, ecology and evolution of the Araceae.","type":"CHECKLIST","hostingOrganizationKey":"061b4f20-f241-11da-a328-b8a03c50a862","hostingOrganizationTitle":"Royal Botanic Gardens, Kew","countryCoverage":[],"publishingCountry":"GB","publishingOrganizationKey":"061b4f20-f241-11da-a328-b8a03c50a862","publishingOrganizationTitle":"Royal Botanic Gardens, Kew","license":"unspecified","decades":[],"keywords":["CATE","taxonomy","catalogue"],"recordCount":8765},{"key":"384120be-ef7c-4787-9ff0-cb1b3f588b26","title":"Línea base de las especies de fauna, flora y hongos para el departamento de Boyacá - Proyecto Boyacá Bio","description":"<p>El departamento de Boyacá presenta una variada y diversa flora, lo cual desemboca en una alta variedad de ecosistemas con zonas de páramo bosque húmedo tropical, piedemonte llanero y bosque andino y altoandino; en los cuales se presume haya una alta diversidad de especies. Es así como la construcción de la línea base para el departamento de Boyacá tuvo como objeto identificar y analizar el estado de conocimiento existente de la Biodiversidad en algunos grupos biológicos, encaminada a llenar vacíos de información a través de las expediciones Boyacá Bio. La lista presentada contiene 5550 registros de especies, pertenecientes a 25 clases, de las cuales corresponden a plantas vasculares: Cycadopsida (1), Equisetopsida (2), Liliopsida (868), Lycopodiopsida (59), Magnoliopsida (3131), Marattiopsida (2), Pinopsida (7), Polypodiopsida (343), Psilotopsida (2). Plantas no vasculares: Andreaeopsida (2), Bryopsida (353), Jungermanniopsida (180), Marchantiopsida (7), Polytrichopsida (12), Sphagnopsida (14). Invertebrados: Insecta (60). Vertebrados: Mammalia (105), Actinopterygii (114), Reptilia (111), Amphibia (91). Hongos: Agaricomycetes (46), Dothideomycetes (1), Geoglossomycetes (2), Leotiomycetes (17), Sordariomycetes (20).</p>\n<p>El recurso fue construido a partir de la verificación de registros biológicos (peces, anfibios, reptiles, mamíferos, insectos, plantas vasculares, no vasculares y hongos, provenientes de tres fuentes: insumo SiB Colombia y GBIF para la consolidación de la línea base del departamento de Boyacá elaborado por EC-SiB, de la revisión e identificación de ejemplares de la colección de peces e insectos de la Universidad Pedagógica y Tecnológica de Colombia UPTC, y de la revisión de información secundaria (literatura-documentación). Esta recopilación taxonómica, se desarrolló bajo el convenio No 17-17-170-195CE, suscrito entre UPTC-IAvH, con el objeto fundamental de aunar esfuerzos entre las partes para generar la línea base de información de biodiversidad para el departamento de Boyacá, así como desarrollar procesos de investigación con miras a complementar vacíos de información y contribuir a la consolidación de redes de investigación del departamento de Boyacá en el marco del Convenio.</p>","type":"CHECKLIST","hostingOrganizationKey":"c4f66525-4d36-4c18-82ac-98e088f54db4","hostingOrganizationTitle":"Sistema de Información sobre Biodiversidad de Colombia - SiB","countryCoverage":[],"publishingCountry":"CO","publishingOrganizationKey":"ad3f9c5f-5021-45a3-a7c4-3e64895f6f79","publishingOrganizationTitle":"Universidad Pedagógica y Tecnológica de Colombia","license":"http://creativecommons.org/licenses/by-nc/4.0/legalcode","decades":[2010],"keywords":["Ascomycota","plantas vasculares","colecciones biológicas","Actinopterygii","Inventoryregional","especies","Amphibia","plantas no vasculares","bases de datos","Basidiomycota","insectos acuáticos","Mammalia","Arthropoda","Escarabajos coprófagos","Checklist","Reptilia","registros biológicos"],"recordCount":8021},{"key":"da38f103-4410-43d1-b716-ea6b1b92bbac","title":"Catalogue of Afrotropical Bees","description":"The purpose of this catalogue is to list the valid names, nomenclatorial history of, and references citing, the described bees of sub-saharan Africa and the western Indian Ocean islands, excluding the honey bee (Apis mellifera Linnaeus). The countries in which species occur are listed, as well as the type specimens/species of species/genera. Some ecological information is provided, namely flowers visited, plants used as nests, parasitic bees and host bees.","type":"CHECKLIST","hostingOrganizationKey":"cecc196e-f262-4986-a88a-6adf035dca0e","hostingOrganizationTitle":"The South African Institute for Aquatic Biodiversity","countryCoverage":[],"publishingCountry":"ZA","publishingOrganizationKey":"149b9411-e994-4416-a218-f2ef21173e44","publishingOrganizationTitle":"Agricultural Research Council","license":"http://creativecommons.org/licenses/by/4.0/legalcode","decades":[],"keywords":["Checklist"],"recordCount":7605},{"key":"fab88965-e69d-4491-a04d-e3198b626e52","title":"NCBI Taxonomy","description":"The NCBI taxonomy database is not a primary source for taxonomic or phylogenetic information. Furthermore, the database does not follow a single taxonomic treatise but rather attempts to incorporate phylogenetic and taxonomic knowledge from a variety of sources, including the published literature, web-based databases, and the advice of sequence submitters and outside taxonomy experts. Consequently, the NCBI taxonomy database is not a phylogenetic or taxonomic authority and should not be cited as such.","type":"CHECKLIST","hostingOrganizationKey":"fbca90e3-8aed-48b1-84e3-369afbd000ce","hostingOrganizationTitle":"GBIF Secretariat","countryCoverage":[],"publishingCountry":"US","publishingOrganizationKey":"2f2e4f28-d929-4609-937b-9a8ebd265159","publishingOrganizationTitle":"National Center for Biotechnology Information (NCBI)","license":"unspecified","decades":[],"keywords":[],"recordCount":7367},{"key":"ca694ebf-2b52-4c67-b2e1-0f423149401c","title":"Lygaeoidea Species File","description":"The Lygaeoidea Species File database contains taxonomic and other information about all the seed bugs of the world, both living and fossil.\nNote: This online catalog is under continual development as more specimen data and other information are added.","type":"CHECKLIST","hostingOrganizationKey":"47a779a6-a230-4edd-b787-19c3d2c80ab5","hostingOrganizationTitle":"Species File Group","countryCoverage":[],"publishingCountry":"US","publishingOrganizationKey":"47a779a6-a230-4edd-b787-19c3d2c80ab5","publishingOrganizationTitle":"Species File Group","license":"http://creativecommons.org/licenses/by/4.0/legalcode","decades":[],"keywords":["Checklist"],"recordCount":7056},{"key":"6b64ef7e-82f7-47a3-8ddb-ec6794ea07d6","title":"Global Register of Introduced and Invasive Species- United States of America (Contiguous)","description":"The Global Register of Introduced and Invasive Species (GRIIS) presents validated and verified checklists (inventories) of introduced (alien) and invasive alien species at the country, territory, and associated island level. \n\nThe primary intention of GRIIS is to provide checklists for countries, islands and soon also for protected areas. Checklists are living entities, especially for biological invasions given the growing nature of the problem. GRIIS Checklists are based on a published methodology and supported by the Integrated Publishing Tool that jointly enable ongoing improvements and updates to expand their taxonomic coverage and completeness. \n\nPhase 1 of the project focused on developing validated and verified checklists of countries that are Party to the Convention on Biological Diversity (CBD). Phase 2 which is on-going, aims to achieve global coverage including non-party countries and all overseas territories of countries e.g. Netherlands, France and United Kingdom. Species belonging to all Kingdoms are covered as well as occurring in all Environment/systems. \n\nCountry/ Territory/ Island checklists are reviewed and verified by networks of country or species experts. Verified checklists/ species records as well as those under review are presented on the online GRIIS website (www.griis.org). Individual species records are flagged with a ‘yes’ for verification.  \n\nThis annotated checklist is of introduced (alien) and invasive alien species known to occur in the contiguous United States of America i.e. excluding the states of Alaska and Hawaii. This annotated checklist does not include Phylum Arthropods","type":"CHECKLIST","hostingOrganizationKey":"3c5e4331-7f2f-4a8d-aa56-81ece7014fc8","hostingOrganizationTitle":"Atlas of Living Australia","countryCoverage":[],"publishingCountry":"IT","publishingOrganizationKey":"cdef28b1-db4e-4c58-aa71-3c5238c2d0b5","publishingOrganizationTitle":"Invasive Species Specialist Group ISSG","license":"http://creativecommons.org/licenses/by/4.0/legalcode","decades":[],"keywords":["Validated and verified","Alien","Checklist","country_US","Invasive","Inventorythematic"],"projectIdentifier":"GRIIS","recordCount":6598},{"key":"3e812f13-bd5f-46b6-9bae-710766be526d","title":"Cockroach Species File","description":"This file contains taxon names and related nomenclatural information for the order Blattodea originating from the Cockroach Species File maintained by the Species File Group (http://software.speciesfile.org) at the University of Illinois, Illinois Natural History Survey.","type":"CHECKLIST","hostingOrganizationKey":"47a779a6-a230-4edd-b787-19c3d2c80ab5","hostingOrganizationTitle":"Species File Group","countryCoverage":[],"publishingCountry":"US","publishingOrganizationKey":"47a779a6-a230-4edd-b787-19c3d2c80ab5","publishingOrganizationTitle":"Species File Group","license":"http://creativecommons.org/licenses/by-nc/4.0/legalcode","decades":[],"keywords":["Checklist"],"recordCount":6578},{"key":"a7350d23-6727-4eb6-ae0b-6f86fc8d6a71","title":"Checklist of Danish Flies and Mosquitoes (Diptera)","description":"Checklist of the species of Flies and Mosquitoes (Diptera), accepted as Danish and included in www.allearter-databasen.dk. The list is part of a national checklist covering animals, plants, fungi etc. Compilation of the list started in 2009.\nRead more at www.allearter.dk - a project at DanBIF (Danish Biodiversity Information Facility - www.danbif.dk).","type":"CHECKLIST","hostingOrganizationKey":"299958e0-4c06-11d8-b290-b8a03c50a862","hostingOrganizationTitle":"Danish Biodiversity Information Facility","countryCoverage":[],"publishingCountry":"DK","publishingOrganizationKey":"299958e0-4c06-11d8-b290-b8a03c50a862","publishingOrganizationTitle":"Danish Biodiversity Information Facility","license":"http://creativecommons.org/licenses/by/4.0/legalcode","decades":[],"keywords":["Taxon List","Mosquitoes","Vernacular Names","Inventory Regional","Checklist","Denmark","Higher Classification","Tovinger","Flies","Diptera"],"recordCount":6451},{"key":"b6a01612-c202-4310-9559-caa82aa3f957","title":"Checklist derived from plant species of Benin downloaded from GBIF site","description":"Plant species collected throughout Benin were published on GBIF site. Data concerning those species were downloaded from GBIF site. Using Excel dynamic pivot table we derived and achieved the checklist of plant species of Benin from the dataset downloaded.","type":"CHECKLIST","hostingOrganizationKey":"b2db85d5-c5fe-4125-9e36-590a5f651829","hostingOrganizationTitle":"GBIF Benin","countryCoverage":[],"publishingCountry":"BJ","publishingOrganizationKey":"5ca9a113-2397-4540-84b4-41114a1404ef","publishingOrganizationTitle":"Laboratory of Forest Sciences (University of Abomey-Calavi)","license":"http://creativecommons.org/licenses/by/4.0/legalcode","decades":[1700,1800,1810,1820,1830,1840,1850,1860,1870,1880,1890,1900,1910,1920,1930,1940,1950,1960,1970,1980,1990,2000,2010],"keywords":["Benin","plants","Checklist"],"projectIdentifier":"http://jrsbiodiversity.org/jrs-supports-capacity-development-uac-oxford-2018/; http://jrsbiodiversity.org/grants/uac-2018/ ","recordCount":6238},{"key":"e01b0cbb-a10a-420c-b5f3-a3b20cc266ad","title":"ICTV Master Species List 2019 v2","description":"Official lists of all ICTV-approved taxa.\n\nThe creation or elimination, (re)naming, and (re)assignment of a virus species, genus, (sub)family, or order are all taxonomic acts that require public scrutiny and debate, leading to formal approval by the full membership of the ICTV. In contrast, the naming of a virus isolate and its assignment to a pre-existing species are not considered taxonomic acts and therefore do not require formal ICTV approval. Instead they will typically be accomplished by publication of a paper describing the virus isolate in the peer-reviewed virology literature.\n\nDescriptions of virus satellites, viroids and the agents of spongiform encephalopathies (prions) of humans and several animal and fungal species are included.","type":"CHECKLIST","hostingOrganizationKey":"fbca90e3-8aed-48b1-84e3-369afbd000ce","hostingOrganizationTitle":"GBIF Secretariat","countryCoverage":[],"publishingOrganizationKey":"9fd9422d-0e85-4264-a025-6061e034dd0c","publishingOrganizationTitle":"International Committee on Taxonomy of Viruses","license":"unspecified","decades":[],"keywords":[],"recordCount":6193},{"key":"6a97172b-09ed-4b18-9ade-3b3f4f649825","title":"Flore illustrée du Sénégal et des régions voisines","description":"Flore illustrée du Sénégal et des régions voisines","type":"CHECKLIST","hostingOrganizationKey":"24faa081-ab14-4fa6-a646-a99af3fcc5f5","hostingOrganizationTitle":"Institut des Sciences de l'Environnement","countryCoverage":[],"publishingCountry":"SN","publishingOrganizationKey":"24faa081-ab14-4fa6-a646-a99af3fcc5f5","publishingOrganizationTitle":"Institut des Sciences de l'Environnement","license":"http://creativecommons.org/licenses/by-nc/4.0/legalcode","decades":[],"keywords":["Checklist"],"projectIdentifier":"BID-AF2015-0064-NAC","recordCount":5978},{"key":"bd0a2b6d-69d1-4650-8bb1-829c8f92035f","title":"Biodiversity inventories in high gear: DNA barcoding facilitates a rapid biotic survey of a temperate nature reserve","type":"CHECKLIST","hostingOrganizationKey":"750a8724-fa66-4c27-b645-bd58ac5ee010","hostingOrganizationTitle":"Biodiversity Data Journal","countryCoverage":[],"publishingCountry":"BG","publishingOrganizationKey":"750a8724-fa66-4c27-b645-bd58ac5ee010","publishingOrganizationTitle":"Biodiversity Data Journal","license":"unspecified","decades":[],"keywords":[],"recordCount":5944},{"key":"81100c08-fca6-4b9d-97e5-153dd2b80914","title":"Checklist of Danish Wasps, Bees, Ants etc. (Hymenoptera)","description":"Checklist of the species of Wasps, Bees, Ants etc. (Hymenoptera), accepted as Danish and included in www.allearter-databasen.dk. The list is part of a national checklist covering animals, plants, fungi etc. Compilation of the list started in 2009.\nRead more at www.allearter.dk - a project at DanBIF (Danish Biodiversity Information Facility - www.danbif.dk).","type":"CHECKLIST","hostingOrganizationKey":"299958e0-4c06-11d8-b290-b8a03c50a862","hostingOrganizationTitle":"Danish Biodiversity Information Facility","countryCoverage":[],"publishingCountry":"DK","publishingOrganizationKey":"299958e0-4c06-11d8-b290-b8a03c50a862","publishingOrganizationTitle":"Danish Biodiversity Information Facility","license":"http://creativecommons.org/licenses/by/4.0/legalcode","decades":[],"keywords":["Taxon List","Ants","Vernacular Names","Inventory Regional","Checklist","Denmark","Higher Classification","Årevinger","Wasps","Hymenoptera","Bees"],"recordCount":5788},{"key":"0b08c1b1-7031-4c21-acaa-8806048a5380","title":"Liste des publications par taxon TOGO","description":"<p>Ce dictionnaire multilingue de plantes médicinales répertorie près de 1000 plantes identifiées par leur nom scientifique, leur synonymes scientifiques et leurs indications médicinales dans environs 150 langues (souvent groupes linguistiques) locales de huit pays d’Afrique de l’Ouest : Bénin,Burkina Faso, Côte d’Ivoire,Guinée, Mali, Niger, Sénégal et Togo.Cet ouvrage de complication, certes incomplète, des données collectées dans la littérature et sur Internet, est conçu comme un guide de lecture complémentaire aux études ethnobotanique dont nous présentons un aperçu non exhaustif dans les références bibliographique,afin d’en rendre la consultation plus accessible même au grand public. Il se veut avant tout être un outil de synthèse pour devenir un outil de dialogue entre les différents acteurs de la santé.Ce document n’est en aucun cas un ouvrage de recettes médicinales d’où le choix d’une présentation synthétique qui mentionne uniquement les utilisations thérapeutiques sans livrer ni les associations de plantes, ni le mode de préparation, encore moins les posologies, afin d’éviter la tentation d’automédication, pratique dangereuse vu le caractère souvent toxique  des plantes.Les volumes de ce dictionnaire permettent l’accès aux informations par différentes entrées.Le volume 1 est une vraie démarche  « Dictionnaire » et contient les index qui renvoient aux noms scientifiques :•\tNoms africains : 25 000 noms de plantes en langues africaines et européennes (français et anglais) classés par ordre alphabétique ; la langue et pays sont indiqués.•\tLexique des termes médicaux.•\tIndications médicinales : afin de faciliter  la recherche correspondant à une pathologie et de mettre en évidence les propriétés thérapeutiques des espèces, genres ou familles, sont présentées selon les 21 chapitres de la Classification Internationale des Maladies (CIM) version de l’Organisation Mondiale de la Santé (OMS). Une page d’introduction décrit cette classification, suivie d’une explication de la structure des différents chapitres puis l’index renvoie aux pages des propriétés thérapeutiques des plantes.•\tSynonymes scientifiques : les synonymes des noms scientifiques faciliteront la consultation des anciens ouvrages de référence qui se révèle souvent difficile.L’intérêt de ce volume est de pouvoir mieux exploiter  la littérature dans un contexte de dialogue et d’échanges. En médecine traditionnelle, le nom local correspond à un savoir empirique transmis de génération en génération qui reste à une échelle très locale, celle du guérisseur du village ou de petite région. Au contraire, la nomenclature scientifique est universelle et constitue une référence pour identifier une plante, mais l’évolution des connaissances entraîne régulièrement une révision et une modification de cette classification binomiale. Grâce aux index nous espérons stimuler d’une part la communication entre tradithérapeutes pour qu’ils puissent  élargir  leur  pratique en s’inspirant de leur collègues d’autres régions, d’autres part la collaboration entre tradithérapeutes et scientifiques pour que la médecine traditionnelle puisse se développer et continue à soigner le plus grand nombre de personnes selon les critères d’efficacité et de sûreté actuellement en vigueur.Le volume2 est une démarche de Monographie » des plantes choisies en raison principalement de la disponibilité de leurs noms locaux africains.Elles sont classées par ordre alphabétique de leur nom scientifique reconnu actuellement.•\tLe genre et l’espèce de la plante sont suivis de la famille à laquelle elle appartient, les synonymes scientifiques sont aussi répertoriés ainsi que les noms vulgaires en français et en anglais. Pour rendre homogène le classement des familles, la nomenclature adopté est celle de la base des données de plantes d’Afrique du Conservatoire et Jardin botanique  de la ville de Genève.•\tPour son identification, chaque plante est présentée, dans la mesure possible, par une brève description etar sa répartition géographique. Les illustrations sont des dessins tirés d’ouvrages, pour la plupart publiés par certains des auteurs. Le lexique des termes botaniques explique par des figures et des définitions la terminologie scientifique employée.•\tEnsuite, on trouve les noms vernaculaires dans plus de 150 langues africaines classées par pays ainsi que l’utilisation médicinale traditionnelle présentée aussi par pays, avec l’organe et l’indication thérapeutique.La relation entre le nom scientifique et le nom vernaculaire, permet la conservation des connaissances en médecine traditionnelle pour la préservation des savoir des peuples. Nous espérons que ce choix permettra une meilleure exploitation de la littérature spécialisée, favorisera une prise de conscience des ressources locales et surtout  encouragera un transfert efficace des connaissances entre jeunes instruits à « l’occidentale » et tradipraticiens de la santé, véritables « ethno-médecins » détenteurs de savoirs séculaires en voies de disparition. Ainsi les échanges entre les différents partenaires de santé contribueront à un enrichissement, par échanges entre tradipraticiens pour élargir leur pratique mutuelle et à  la mise au point de médicaments sûrs et efficaces si une collaboration s’instaure entre chercheurs en pharmacopée et praticiens traditionnels.Cet ouvrage constitue une porte ouverte vers la comparaison entreles floreset la phytothérapie traditionnelle d’autres régions en vue de découvrir les convergences et les divergences dans l’utilisation de la même plante par différentes populations. Outre un enrichissement intellectuel, cela peut constituer  une piste pour le choix des espèces à cultiver à des fins utilitaires.De plus, une meilleure connaissance par le grand public de l’utilisation des plantes contribuera à garantir une plus grande participationà la protection de la biodiversité. Il sera plus difficile de détruire ou de saccager la forêt et la savane si ces milieux sont considérés comme de véritables < pharmacies vivantes » utiles mais fragiles.</p>\n<p>INTRODUCTION (volume 1&2)Après l’Organisation de l’Unité Africaine (aujourd’hui devenue l’Union Africaine) qui a promulgué en 2000 la décennie 2001-2010 « Décennie de la Médecine Traditionnelle Africaine (MTA) », l’Organisation Mondiale de la Santé a proclamé à son tour le 31 Août « Journée Internationale de la MédecineTraditionnelle Africaine ». Il s’agit là de décisions fortement symboliques de la reconnaissance officielle et internationale de la MTA par les gouvernements pour son rôle fondamental dans les soins de santé publique. C’est aussi  le signal d’un  coup  d’envoi pour des  actions scientifiques et sociales sans complexes en vue de lui  donner sa juste place.En effet, la MTA et les  plantes médicinales bénéficient déjà de la reconnaissance populaire car elles occupent une place prépondérante, plus de 80%, dans les soins de santé en Afrique. Paradoxalement, la disparition progressive des véritables tradipraticiens de santé, détenteurs d’un savoir ethno-médical, et en danger cette pratique. De plus, le recours aux plantes médicinales, comme médecine complémentaire est en nette progression dans les autres parties du monde. Au cours  du 20ème siècle, de nombreuses études ont répertorié l’usage médicinal des plantes, mais leur accès est difficile pour les acteurs de terrain à cause  du manque de dictionnaires scientifique en langues africaines. Il est devenu nécessaire de mettre à la disposition des chercheurs et surtout des tradipraticiens  de santé, véritables «  ethno-médecins » des outils permettant d’identifier par leurs noms vernaculaires et scientifiques, les plantes utilisées dans leurs différentes régions de l’Afrique. Ceci permet de mieux exploiter la littérature et de comparer les usages  au-delà des cercles  restreints  de villages ou de régions.Dans un dialogue c’est préférable de savoir que l’on parle de la même chose… !C’est pourquoi l’Association Traditions et Médecine  T &M de Genève a pris l’initiative de parrainer la rédaction et la publication de cet ouvrage, avec pour principal objectif de contribuer à combler cette lacune en offrant un outil de dialogue  pour, d’une part faciliter les échanges entre et avec les Thérapeutes et les chercheurs, et d’autres part, simplifier la constitution des nombreux ouvrages  disponibles. Ilsconstituent un extrait des résultats d’un travail de compilation d’informations sur les noms vernaculaires africains  des plantes à partir d’enquêtes en ethnobotaniqueet sur les pharmacopées, complétés par des recherches bibliographiques et sur Internet.L’originalité de cette démarche réside donc dans sa présentation synthétique facilitant  la consultation tant par le grand public et les «chercheurs profanes » que par les professionnels de divers secteurs (biologie, pharmacie, médecine, santé publique, environnement, histoire, éducation, sociologie, etc.), afin d’avoir une indication rapide sur la position systématique d’une plante,en attendant confirmation par un spécialiste. Loin d’être exhaustifs, nous avons donc essayé de présenter un choix d’informations collectées, avec les réserves qui s’imposent, mais surtout en comptant sur les apports futurs des lecteurs, en vue d’un enrichissement quantitatif et qualitatif pour des révisions futures.Le développement de l’intérêt pour les pharmacopées locales et l’ethnobotanique, les synergies suscitées par la réhabilitation des médecines traditionnelles par le grand public  et par les décideurs politiques, ainsi que les matériaux disponibles dans la littérature, permettent aujourd’hui cette réalisation. Au-delà de l’intérêt scientifique ou médicinal, notre souhait est de voir cet ouvrage contribuer aussi à une meilleure exploitation des plantes en Afrique, sources de produits alimentaires, médicaux préindustriels ou d’intérêt environnemental, ainsi qu’à un meilleur dialogue scientifique Nord-Sud et Sud-Sud.Si le résultat de ce travail permet au lecteur de profiter des acquis antérieurs, il devrait aussi contribuer à une meilleure exploitation des plantes en Afrique dans l’optique d’une politique de développement durable comme c’est déjà le cas dans un pays pionnier qu’est le Mali. Notre souhait est que les cultures des plantes africaines s’intensifient en Afrique de l’Ouest par une meilleure intégration dans la politique de santé et d’économie nationale. En effet, la valeur sanitaire et économique de la culture des plantes médicinales, tout en préservant, autant que possible les espèces sauvages dans leur milieu, n’est plus à démontrer. Ainsi, en plus d’assurer une médecine accessible à tous, les emplois générés dans les secteurs de l’agriculture et de la santé permettraient d’améliorer les conditions sociales et économiques des populations africaines, pour une vraie contributionau développement durable à partir des ressources de la biodiversité.Genève, 2012</p>","type":"CHECKLIST","hostingOrganizationKey":"d2583793-e5c1-41ae-83bd-86300d34e2cb","hostingOrganizationTitle":"Université de Lomé","countryCoverage":[],"publishingCountry":"TG","publishingOrganizationKey":"d2583793-e5c1-41ae-83bd-86300d34e2cb","publishingOrganizationTitle":"Université de Lomé","license":"http://creativecommons.org/licenses/by/4.0/legalcode","decades":[],"keywords":["Observation","Occurrence"],"projectIdentifier":"BID-AF2015-0004-NAC","recordCount":5476},{"key":"fbab0194-b923-49d4-9848-1b3279a6673e","title":"Plecoptera Species File","description":"This file contains taxon names and related nomenclatural information for the order Plecoptera originating from the Plecoptera Species File maintained by the Species File Group (http://software.speciesfile.org) at the University of Illinois, Illinois Natural History Survey.","type":"CHECKLIST","hostingOrganizationKey":"47a779a6-a230-4edd-b787-19c3d2c80ab5","hostingOrganizationTitle":"Species File Group","countryCoverage":[],"publishingCountry":"US","publishingOrganizationKey":"47a779a6-a230-4edd-b787-19c3d2c80ab5","publishingOrganizationTitle":"Species File Group","license":"http://creativecommons.org/licenses/by/4.0/legalcode","decades":[],"keywords":["Checklist"],"recordCount":5228},{"key":"61de76b3-9ba5-4b0c-a16c-1b554ae8f869","title":"Checklist da Flora de Portugal (Continental, Açores e Madeira)","description":"The checklist of vascular plants of Portugal, including Mainland Portugal, Azores and Madeira, was published in 2012 by ALFA (Associação Lusitana de Fitossociologia), and adopted formally by the Instituto de Conservação da Natureza e da Biodiversidade (presently ICNF). The checklist covers Continental Portugal, Azores and Madeira. It includes a total of 3995 taxa (including infraspecific taxa), of which 3314 are for Mainland Portugal, 1006 for Azores and 1233 for Madeira. These taxa are distributed among 185 families and 1066 genera. The checklist also includes establishment means, identifying native, introduced of endemic taxa.","type":"CHECKLIST","hostingOrganizationKey":"cdcc4ce1-7f6e-4ed2-b47c-eb451925b038","hostingOrganizationTitle":"Instituto Superior de Agronomia / Universidade de Lisboa","countryCoverage":[],"publishingCountry":"PT","publishingOrganizationKey":"e061767c-6138-4700-af1e-53ad31fe69db","publishingOrganizationTitle":"GBIF Portugal","license":"unspecified","decades":[2010],"keywords":["Madeira","Plantae","Checklist","Vascular Plants","Azores","Portugal"],"recordCount":5119},{"key":"9042ab45-d31e-47c6-ad1a-38660a7ce9a7","title":"Checklist of Danish Beetles (Coleoptera)","description":"Checklist of the species of Beetles (Coleoptera), accepted as Danish and included in www.allearter-databasen.dk. The list is part of a national checklist covering animals, plants, fungi etc. Compilation of the list started in 2009.\nRead more at www.allearter.dk - a project at DanBIF (Danish Biodiversity Information Facility - www.danbif.dk).","type":"CHECKLIST","hostingOrganizationKey":"299958e0-4c06-11d8-b290-b8a03c50a862","hostingOrganizationTitle":"Danish Biodiversity Information Facility","countryCoverage":[],"publishingCountry":"DK","publishingOrganizationKey":"299958e0-4c06-11d8-b290-b8a03c50a862","publishingOrganizationTitle":"Danish Biodiversity Information Facility","license":"http://creativecommons.org/licenses/by/4.0/legalcode","decades":[],"keywords":["Taxon List","Beetles","Vernacular Names","Coleoptera","Inventory Regional","Checklist","Denmark","Higher Classification","Biller"],"recordCount":5109},{"key":"0a2eaf0c-5504-4f48-a47f-c94229029dc8","title":"World Register of Introduced Marine Species (WRiMS)","description":"The World Register of Introduced Marine Species (WRiMS, http://www.marinespecies.org/introduced) records which marine species in the World Register of Marine Species (WoRMS, http://www.marinespecies.org/, https://doi.org/10.14284/170) have been introduced deliberately or accidentally by human activities to geographic areas outside their native range. It excludes species that colonized new locations naturally (so called ‘range extensions’), even if in response to climate change. The dataset is published as a standardized Darwin Core Archive and includes for each taxon: the scientific name, higher classification, stable identifiers linking to taxon and scientific name information, taxonomic status, and nomenclatural status, the vernacular names, the region of introduction and associated country, as well as the year of the first introduction (first collection) and/or last assessment/observation in this region, coarse habitat information, and the pathway(s) of introduction and invasion stage.\nWe have released this dataset under a Creative Commons license  (CC-BY). If you have any questions regarding this dataset, don’t hesitate to contact us via the contact information provided in the metadata.","type":"CHECKLIST","hostingOrganizationKey":"2089ce96-4fb5-4a20-999c-3ccf45a27a4d","hostingOrganizationTitle":"Flanders Marine Institute","countryCoverage":[],"publishingCountry":"BE","publishingOrganizationKey":"2089ce96-4fb5-4a20-999c-3ccf45a27a4d","publishingOrganizationTitle":"Flanders Marine Institute","license":"http://creativecommons.org/licenses/by/4.0/legalcode","decades":[],"keywords":["database","inventoryThematic","species","taxonomicAuthority","online","checklist","globalSpeciesDataset","taxonomic","marine"],"recordCount":5025},{"key":"e0a61544-c923-4fd7-8ed1-9b692655cf6b","title":"Coreoidea Species File","description":"This file contains taxon names and related nomenclatural information for the superfamily Coreoidea originating from the Coreoidea Species File maintained by the Species File Group (http://software.speciesfile.org) at the University of Illinois, Illinois Natural History Survey.","type":"CHECKLIST","hostingOrganizationKey":"47a779a6-a230-4edd-b787-19c3d2c80ab5","hostingOrganizationTitle":"Species File Group","countryCoverage":[],"publishingCountry":"US","publishingOrganizationKey":"47a779a6-a230-4edd-b787-19c3d2c80ab5","publishingOrganizationTitle":"Species File Group","license":"http://creativecommons.org/licenses/by/4.0/legalcode","decades":[],"keywords":["Checklist","taxonomy","catalogue"],"recordCount":5004},{"key":"598678e4-323c-49dc-8eb7-3a96ac72d472","title":"Phasmida Species File","description":"This file contains taxon names and related nomenclatural information for the order Phasmida originating from the Phasmida Species File maintained by the Species File Group (http://software.speciesfile.org) at the University of Illinois, Illinois Natural History Survey.","type":"CHECKLIST","hostingOrganizationKey":"47a779a6-a230-4edd-b787-19c3d2c80ab5","hostingOrganizationTitle":"Species File Group","countryCoverage":[],"publishingCountry":"US","publishingOrganizationKey":"47a779a6-a230-4edd-b787-19c3d2c80ab5","publishingOrganizationTitle":"Species File Group","license":"http://creativecommons.org/licenses/by/4.0/legalcode","decades":[],"keywords":["Checklist"],"recordCount":4844},{"key":"6d9e952f-948c-4483-9807-575348147c7e","title":"Global Register of Introduced and Invasive Species - Belgium","description":"<p>The Global Register of Introduced and Invasive Species - Belgium is a species checklist published by the Invasive Species Specialist Group (ISSG). It contains information on 2,800&#43; validated non-native taxa in Belgium and serves as the national reference for the Global Register of Introduced and Invasive Species (GRIIS, Pagad et al. 2018). The checklist is built through an open and reproducible workflow (see step description) developed for the TrIAS project (http://trias-project.be) from the following sources: 1) Verloove et al. (2018, https://doi.org/10.15468/wtda1m) for plants, 2) Preda et al. (2019, https://doi.org/10.15468/wr3gis) for birds, 3) Verreycken et al. (2018a, https://doi.org/10.15468/xvuzfh) for fishes, 4) Boets et al. (2018, https://doi.org/10.15468/yxcq07) for macroinvertebrates, 5) Backeljau et al. (2019, https://doi.org/10.15468/t13kwo) for terrestrial molluscs, 6) Vanderweyen et al. (2018, https://doi.org/10.15468/2dboyn) for rust fungi, 7) Flanders Marine Institute (2019, https://doi.org/10.14284/347) for marine species, 8) Reyserhove et al. (2018, https://doi.org/10.15468/3pmlxs) for various species, 9) Zieritz et al. (2018, https://doi.org/10.15468/guejza) for pathways, which are all published through the TrIAS project, and the GBIF Backbone Taxonomy (https://doi.org/10.15468/39omei) for synonymy and classification. The unified checklist is published here as a standardized Darwin Core Archive and includes for each taxon: the scientific name, higher classification and stable taxon identifier, provided by the GBIF Backbone Taxonomy (in the taxon core) and related information in three extensions, provided by the source checklists (or the most trustworthy one in case of competing information). The related information consists of the year of first introduction and last assessment/observation in Belgium and where available its regions (given as a year range in the event date in the distribution extension), coarse habitat information (in the species profile extension) and the pathway(s) of introduction, native range(s), and invasion stage in Belgium (in the description extension). The source for each piece of information is credited. Issues with the dataset can be reported at https://github.com/trias-project/unified-checklist</p>\n<p>We have released this dataset under a Creative Commons Attribution 4.0 International License (CC-BY 4.0). We would appreciate it if you follow the GBIF citation guidelines (https://www.gbif.org/citation-guidelines) when using the data. If you have any questions regarding this dataset, don’t hesitate to contact us via the contact information provided in the metadata or via https://twitter.com/trias_project.</p>\n<p>This dataset was published as open data for the TrIAS project (Tracking Invasive Alien Species http://trias-project.be, Vanderhoeven et al. 2017), with technical support provided by the Research Institute for Nature and Forest (INBO).</p>","type":"CHECKLIST","hostingOrganizationKey":"1cd669d0-80ea-11de-a9d0-f1765f95f18b","hostingOrganizationTitle":"Research Institute for Nature and Forest (INBO)","countryCoverage":[],"publishingCountry":"IT","publishingOrganizationKey":"cdef28b1-db4e-4c58-aa71-3c5238c2d0b5","publishingOrganizationTitle":"Invasive Species Specialist Group ISSG","license":"http://creativecommons.org/licenses/by/4.0/legalcode","decades":[1400,1500,1600,1700,1800,1810,1820,1830,1840,1850,1860,1870,1880,1890,1900,1910,1920,1930,1940,1950,1960,1970,1980,1990,2000,2010],"keywords":["non-native","invasive","Belgium","country_BE","alien species","Checklist","TrIAS","checklist","inventory","Inventorythematic"],"projectIdentifier":"TrIAS","recordCount":4841},{"key":"fc18b0b1-8777-4c8a-8cb8-f9f15870d6a9","title":"Validated red lists of Flanders, Belgium","description":"<p>The Validated red lists of Flanders, Belgium is a species checklist dataset published by the Research Institute for Nature and Forest (INBO) and described (v1.3) in Maes et al. 2019b (https://doi.org/10.3897/BDJ.7.e34089). It includes 3.063 taxa from 19 Flemish red lists that are considered validated, i.e. which used quantitative criteria and a representative sample of occurrences across all ecological regions in Flanders (Maes et al. 2015) for red list assessment. Here this compilation is published as a standardized Darwin Core Archive and includes for each taxon: the scientific name, higher classification (provided by the GBIF Backbone Taxonomy, https://doi.org/10.15468/39omei), stable taxon identifier and Dutch vernacular name (in the taxon core), the red list category in Flanders as published, its IUCN equivalent and year of assessment (respectively in occurrenceRemarks, threatStatus and eventDate in the distribution extension), and the life-history traits biome, biotope, cuddliness, lifespan, mobility, nutrient level, and spine (in the description extension). Issues with the dataset can be reported at: https://github.com/inbo/rl-flanders-checklist</p>\n<p>We have released this dataset to the public domain under a Creative Commons Zero waiver. We would appreciate it if you follow the INBO norms for data use (https://www.inbo.be/en/norms-data-use) when using the data. If you have any questions regarding this dataset, don&#39;t hesitate to contact us via the contact information provided in the metadata or via opendata&#64;inbo.be.</p>","type":"CHECKLIST","hostingOrganizationKey":"1cd669d0-80ea-11de-a9d0-f1765f95f18b","hostingOrganizationTitle":"Research Institute for Nature and Forest (INBO)","countryCoverage":[],"publishingCountry":"BE","publishingOrganizationKey":"1cd669d0-80ea-11de-a9d0-f1765f95f18b","publishingOrganizationTitle":"Research Institute for Nature and Forest (INBO)","license":"http://creativecommons.org/publicdomain/zero/1.0/legalcode","decades":[1990,2000,2010],"keywords":["conservation","Flanders","life-history traits","IUCN","threatened species","Checklist","red list","Inventorythematic"],"recordCount":4702},{"key":"4f1047ac-a19d-41a8-98eb-d968b2548b53","title":"Norwegian Red List 2015","description":"<p>The Norwegian Red List of Species 2015 has been compiled by the Norwegian Biodiversity Information Centre in cooperation with 24 committees of experts with a total of 90 members. The Norwegian Red List of Species includes species that are assessed as being at risk of\nextinction within Norway. Each species is placed in one of a number of categories, which are ranked according to the level of risk that species will die out if conditions remain unchanged.</p>\n<p>Red list assessments are only made for species that are or have been established as reproducing species in Norway. Alien species, in other words species that have been spread to Norway since 1800 by human activity, are not assessed.</p>\n<p>Species are assessed against a set of criteria developed by the International Union for Conservation of Nature (IUCN). The criteria and guidelines for using them ensure that assessments are standardised, verifiable and objective.</p>\n<p>The categories reflect the level of risk that a species will die out if conditions remain unchanged. Species in the categories Critically Endangered (CR), Endangered (EN) and Vulnerable (VU) are described as threatened species.</p>\n<p>The assessments for most species groups apply to mainland Norway and adjacent Norwegian sea areas. In all, 21 402 species and 278 subspecies of vascular plants have been assessed for the 2015 edition of the Red List.</p>","type":"CHECKLIST","hostingOrganizationKey":"64795dcb-ad74-41b3-95e5-cc52ba754776","hostingOrganizationTitle":"GBIF.no","countryCoverage":[],"publishingCountry":"NO","publishingOrganizationKey":"d3978a37-635a-4ae3-bb85-7b4d41bc0b88","publishingOrganizationTitle":"The Norwegian Biodiversity Information Centre (NBIC)","license":"http://creativecommons.org/licenses/by/4.0/legalcode","decades":[],"keywords":["Checklist"],"recordCount":4613},{"key":"9a4fa5fd-698b-4484-81ce-a4048f5c2d86","title":"Zeigerwerte von Pflanzen & Flechten in Mitteleuropa","description":"<p>Für alle in Mitteleuropa vorhandenen Pflanzenarten sind in dem Datensatz möglichst folgende Angaben zusammengestellt:\n\n1. die ökologischen Zeigerwerte nach Ellenberg (1979), verändert entsprechend der jüngsten Auflage (Ellenberg et al.2001), und nach Wirth (brieflich),\n\n2. die Lebens– oder Wuchsform, bei Flechten auch das Substrat.</p>\n<p>Das ökologische Verhalten gegenüber einem bestimmten Standortfaktor ist in der Regel durch eine Ziffer von 1 bis 9 ausgedrückt. Eine 0 wird nur beim Salzfaktor verwendet; sie weist auf sehr geringe Toleranz hin. Die Zeigerwerte spiegeln das Vorkommen einer Sippe im Gefälle der Umweltfaktoren unter Freilandbedingungen wider, d. h. bei ausgeprägter zwischenartlicher Konkurrenz. Die Zeigerwerte sagen also nichts über die „Ansprüche“, also das Verhalten in Reinkultur, aus.</p>\n<p>Sämtliche Angaben bei den Zeigerwerten beziehen sich auf das westliche Mitteleuropa, insbesondere auf Westdeutschland, einschließlich der angrenzenden Alpen.</p>","type":"CHECKLIST","hostingOrganizationKey":"fbca90e3-8aed-48b1-84e3-369afbd000ce","hostingOrganizationTitle":"GBIF Secretariat","countryCoverage":[],"publishingOrganizationKey":"fbca90e3-8aed-48b1-84e3-369afbd000ce","publishingOrganizationTitle":"GBIF Secretariat","license":"http://creativecommons.org/publicdomain/zero/1.0/legalcode","decades":[],"keywords":["indicator","ecology","ellenberg","botany","central europe","checklist"],"recordCount":4384},{"key":"2fc23906-38f3-4bb6-a4a4-4dad908602a2","title":"Non-validated red list of Flanders, Belgium","description":"<p>The Non-validated red lists of Flanders, Belgium is a species checklist dataset published by the Research Institute for Nature and Forest (INBO) and described (v1.1) in Maes et al. 2019b (https://doi.org/10.3897/BDJ.7.e34089). It includes 3.161 taxa from 19 Flemish red lists that are considered non-validated, i.e. which did not use quantitative criteria and a representative sample of occurrences across all ecological regions in Flanders (Maes et al. 2015) for red list assessment. Here this compilation is published as a standardized Darwin Core Archive and includes for each taxon: the scientific name, higher classification (provided by the GBIF Backbone Taxonomy, https://doi.org/10.15468/39omei), stable taxon identifier and Dutch vernacular name (in the taxon core) and the red list category in Flanders as published, its IUCN equivalent and year of assessment (respectively in occurrenceRemarks, threatStatus and eventDate in the distribution extension). Issues with the dataset can be reported at: https://github.com/inbo/rl-flanders-checklist</p>\n<p>We have released this dataset to the public domain under a Creative Commons Zero waiver. We would appreciate it if you follow the INBO norms for data use (https://www.inbo.be/en/norms-data-use) when using the data. If you have any questions regarding this dataset, don&#39;t hesitate to contact us via the contact information provided in the metadata or via opendata&#64;inbo.be.</p>","type":"CHECKLIST","hostingOrganizationKey":"1cd669d0-80ea-11de-a9d0-f1765f95f18b","hostingOrganizationTitle":"Research Institute for Nature and Forest (INBO)","countryCoverage":[],"publishingCountry":"BE","publishingOrganizationKey":"1cd669d0-80ea-11de-a9d0-f1765f95f18b","publishingOrganizationTitle":"Research Institute for Nature and Forest (INBO)","license":"http://creativecommons.org/publicdomain/zero/1.0/legalcode","decades":[1990,2000,2010],"keywords":["conservation","Flanders","IUCN","threatened species","Checklist","red list","Inventorythematic"],"recordCount":4333},{"key":"a44859c6-af4f-4a2a-a184-1b2d68c82099","title":"FAUNA OF THE KURILSKIY NATURE RESERVE","description":"Monitoring and inventory of the species of the Kurilsky Nature Reserve is carried out since 1984. Vertebrates compose 2 species of cyclostomates, 41 of fish, 3 species of amphibians, 5 species of reptiles, 281 species of birds and 29 species of mammals. 4668 species of invertebrates have been recorded.\nThe fauna of the reserve is represented by 5027 species, 90% of which are invertebrates. Among vertebrates, the richest in term of speciesis ornitofauna – 281 species, including 125 nestling species. The Red book of the Russian includes 33 species of birds. The rarest and most interesting birds are the following: the island subspecies of fish owl (Ketupa blakistoni), Japanese crane (Grus japonensis),  Steller&#39;s sea eagle (Haliaeetus pelagicus), the mandarin duck (Aix galericulata), Japanese green pigeon (Treron sieboldii), varied tit (Parus varius and crested kingfisher (Megaceryle lugubris). \nThere are 29 species of mammals registered in the reserve. The largest representative is the brown bear (Ursus arctos); it is remarkable that in the territory of Kunashir Island there are individuals with an unusual gray color. The red fox (Vulpes vulpes), mountain hare (Lepus timidus), Siberian chipmunk (Eutamias sibiricus), sable (Martes zibellina), weasel (Mustela nivalis) are most frequently referenced. In the waters of the Kunashir and on the cliffs of the islands of the Lesser Kuril Ridge, the Steller sea lion (Eumetopias jubatus) can be observed. The sea otter is also observed near the islands (Enhydra lutris gracilis) [Voronov, 2004]. Large rookeries of the spotted seal (Phoca largha) and harbor seal (Phoca vitulina) are located along the coast of Kunashir Island. 3 species of mammals (Steller sea lion, harbor seal and sea otter) are rare and listed in the Red book of the Russian Federation.\n5 species of reptiles: the Japanese five-lined skink (Plestiodon finitimus), Japanese four-lined ratsnake (Elaphe quadrivirgata), Japanese rat snake (Elaphe climacophora), Japanese forest rat snake (Elaphe japonica), mamushi (Gloydius blomhoffii blomhoffii) most often observed in the area of hot springs. \nThere are 3 species of amphibians near the perennial impounded and intermittent water bodies: the Siberian salamander (Salamandrella keyserlingii), Japanese tree frog (Hyla japonica), the Hokkaidō frog (Rana pirica) [Rastitelnyi zhivotny mir..., 2002].\n39 species of fish are foundin the water bodies of the reserve, among which there is a rare species – the Sakhalin taimen (Parahucho perryi).","type":"CHECKLIST","hostingOrganizationKey":"fcb15579-e732-4e2d-aa74-796787ef8c27","hostingOrganizationTitle":"Institute of Mathematical Problems of Biology, Russian Academy of Sciences","countryCoverage":[],"publishingCountry":"RU","publishingOrganizationKey":"4e3dacd7-58a9-46fb-b6eb-382ea02f73ce","publishingOrganizationTitle":"State Nature Reserve Kurilsky","license":"http://creativecommons.org/licenses/by/4.0/legalcode","decades":[],"keywords":["Inventoryregional","Checklist"],"projectIdentifier":"Russia2019_03","recordCount":4307},{"key":"fdd49d8c-460b-4402-946e-408084ac4e86","title":"Odonata","type":"CHECKLIST","hostingOrganizationKey":"315b3c03-4a0a-424e-83a5-d25aa748e666","hostingOrganizationTitle":"Scratchpads","countryCoverage":[],"publishingCountry":"GB","publishingOrganizationKey":"315b3c03-4a0a-424e-83a5-d25aa748e666","publishingOrganizationTitle":"Scratchpads","license":"unspecified","decades":[],"keywords":[],"recordCount":4181},{"key":"02fff9ea-e629-458d-b99e-cb7dc9deae01","title":"Plantas alimenticias y medicinales de Colombia","description":"El conjunto de datos contiene un total de 2567 especies de plantas y fue construido a partir de una recopilación de los productos asociados a contratos realizados por Henry Yesid Bernal (11-11-020-063PS y 12-024-060PS) y Nestor García (11-11-020-240PS y 12-12-024-051PS) quienes a partir información bibliográfica, realizaron listados de especies de plantas medicinales exclusivas y nativas de Colombia, y plantas alimenticias priorizadas para caracterización de riesgo de extinción, respectivamente.","type":"CHECKLIST","hostingOrganizationKey":"2a7e3080-28a9-11dd-97cd-b8a03c50a862","hostingOrganizationTitle":"Instituto de Investigación de Recursos Biológicos Alexander von Humboldt","countryCoverage":[],"publishingCountry":"CO","publishingOrganizationKey":"2a7e3080-28a9-11dd-97cd-b8a03c50a862","publishingOrganizationTitle":"Instituto de Investigación de Recursos Biológicos Alexander von Humboldt","license":"http://creativecommons.org/licenses/by-nc/4.0/legalcode","decades":[2010],"keywords":["Colombia","medicinales","Plantae","nativas","exclusivas","Fungi","plantas","Checklist","Bacteria","priorizadas","herbarios","alimenticias","Inventorythematic"],"recordCount":4085},{"key":"56c83fd9-533b-4b77-a67a-cf521816866e","title":"Catalogue of Tenebrionidae (Coleoptera) of North America","description":"This Darwin Core Archive contains the nomenclatural and taxonomic information included in the Catalogue of Tenebrionidae (Coleoptera) of North America, Zookeys 728:1-455. https://doi.org/10.3897/zookeys.728.20602\n\nAll available family- genus- and species-group names are included along with the higher classification and taxonomic status for each taxon.","type":"CHECKLIST","hostingOrganizationKey":"bb922300-7ddb-11de-a300-90ac77aa923f","hostingOrganizationTitle":"ZooKeys","countryCoverage":[],"publishingCountry":"BG","publishingOrganizationKey":"bb922300-7ddb-11de-a300-90ac77aa923f","publishingOrganizationTitle":"ZooKeys","license":"http://creativecommons.org/publicdomain/zero/1.0/legalcode","decades":[],"keywords":["Taxonomicauthority","Checklist"],"recordCount":3963},{"key":"99948a8b-63b2-41bf-9d10-6e007e967789","title":"Mantodea Species File","description":"This file contains taxon names and related nomenclatural information for the order Mantodea originating from the Mantodea Species File maintained by the Species File Group (http://software.speciesfile.org) at the University of Illinois, Illinois Natural History Survey.","type":"CHECKLIST","hostingOrganizationKey":"47a779a6-a230-4edd-b787-19c3d2c80ab5","hostingOrganizationTitle":"Species File Group","countryCoverage":[],"publishingCountry":"US","publishingOrganizationKey":"47a779a6-a230-4edd-b787-19c3d2c80ab5","publishingOrganizationTitle":"Species File Group","license":"http://creativecommons.org/licenses/by/4.0/legalcode","decades":[],"keywords":["Checklist","taxonomy","catalogue"],"recordCount":3884},{"key":"70ad86f4-6be8-4e5b-aee8-61896310fb18","title":"Pelagic Invertebrates","type":"CHECKLIST","hostingOrganizationKey":"315b3c03-4a0a-424e-83a5-d25aa748e666","hostingOrganizationTitle":"Scratchpads","countryCoverage":[],"publishingCountry":"GB","publishingOrganizationKey":"315b3c03-4a0a-424e-83a5-d25aa748e666","publishingOrganizationTitle":"Scratchpads","license":"unspecified","decades":[],"keywords":[],"recordCount":3790}],"facets":[]}
  recorded_at: 2020-02-12 06:00:39 GMT
  recorded_with: vcr/0.4.0, webmockr/0.5.0
- request:
    method: get
    uri: https://api.gbif.org/v1/dataset/search?limit=100&publishingCountry=DE&publishingCountry=NZ
    body:
      encoding: ''
      string: ''
    headers:
      Accept-Encoding: gzip, deflate
      Accept: application/json, text/xml, application/xml, */*
      User-Agent: r-curl/4.3 crul/0.9.0 rOpenSci(rgbif/2.1.0)
      X-USER-AGENT: r-curl/4.3 crul/0.9.0 rOpenSci(rgbif/2.1.0)
  response:
    status:
      status_code: '200'
      message: OK
      explanation: Request fulfilled, document follows
    headers:
      status: HTTP/1.1 200 OK
      date: Wed, 12 Feb 2020 06:00:37 GMT
      content-type: application/json
      access-control-allow-origin: '*'
      access-control-allow-methods: HEAD, GET, POST, DELETE, PUT, OPTIONS
      server: Jetty(9.3.z-SNAPSHOT)
      cache-control: public, max-age=600
      x-varnish: 524978045 532022432
      age: '0'
      via: 1.1 varnish (Varnish/5.2)
      accept-ranges: bytes
      content-length: '84202'
      connection: keep-alive
    body:
      encoding: ASCII-8BIT
      file: no
      string: {"offset":0,"limit":100,"endOfRecords":false,"count":8888,"results":[{"key":"e6fab7b3-c733-40b9-8df3-2a03e49532c1","title":"Flora von Deutschland (Phanerogamen)","description":"Verbreitung der Farn- und Bluetenpflanzen in Deutschland, Vorkommensnachweise aggregiert auf Quadranten der Topographischen Karte 1 : 25000 (TK25 = MTB), sowie in Zeitperioden <vor 1950>, <1950 - 1980>, <nach 1980 >","type":"OCCURRENCE","hostingOrganizationKey":"43cab2b0-0653-11d9-acb2-b8a03c50a862","hostingOrganizationTitle":"Bundesamt für Naturschutz / Netzwerk Phytodiversität Deutschland","countryCoverage":[],"publishingCountry":"DE","publishingOrganizationKey":"43cab2b0-0653-11d9-acb2-b8a03c50a862","publishingOrganizationTitle":"Bundesamt für Naturschutz / Netzwerk Phytodiversität Deutschland","license":"http://creativecommons.org/licenses/by-nc/4.0/legalcode","decades":[],"keywords":[],"recordCount":9577887},{"key":"6ac3f774-d9fb-4796-b3e9-92bf6c81c084","title":"naturgucker","description":"naturgucker.de / enjoynature.net is a rapidly growing social network with several millions of observations of wild plants and animals, thus naturgucker.de / enjoynature.net supports and promotes nature conservancy. naturgucker.de / enjoynature.net offers nature observers (mainly citizen scientists) a personal data center for their data in which they can pool and manage all their observations and nature photographs for the surrounding region, or even worldwide from their vacations. In addition, beginners can find a myriad of information, such as hundreds of thousands of photographs, up to date distribution maps, tenthousands observation areas with helpful hints, and a strong community in naturgucker.de /enjoaynature.net.","type":"OCCURRENCE","hostingOrganizationKey":"bb646dff-a905-4403-a49b-6d378c2cf0d9","hostingOrganizationTitle":"naturgucker.de","countryCoverage":[],"publishingCountry":"DE","publishingOrganizationKey":"bb646dff-a905-4403-a49b-6d378c2cf0d9","publishingOrganizationTitle":"naturgucker.de","license":"http://creativecommons.org/licenses/by/4.0/legalcode","decades":[],"keywords":[],"recordCount":9076940},{"key":"ad0d1a24-e952-11e2-961f-00145eb45e9a","title":"VegetWeb - Repositorium von Vegetationsaufnahmen","description":"VegetWeb - Repositorium von Vegetationsaufnahmen aus Deutschland: Vorkommen von Pflanzenarten in den Aufnahmeflächen, zugeordnet zu MTB-Rasterfeldern - repository of vegetation plot data from germany, assigned to grid fields of TK25 map units (6 x 10 geographical minutes)","type":"OCCURRENCE","hostingOrganizationKey":"43cab2b0-0653-11d9-acb2-b8a03c50a862","hostingOrganizationTitle":"Bundesamt für Naturschutz / Netzwerk Phytodiversität Deutschland","countryCoverage":[],"publishingCountry":"DE","publishingOrganizationKey":"43cab2b0-0653-11d9-acb2-b8a03c50a862","publishingOrganizationTitle":"Bundesamt für Naturschutz / Netzwerk Phytodiversität Deutschland","license":"http://creativecommons.org/licenses/by-nc/4.0/legalcode","decades":[],"keywords":[],"recordCount":1142431},{"key":"dee8edc4-b19a-11e2-886d-00145eb45e9a","title":"Floristic Databases of Mecklenburg-Pomerania - Higher Plants","description":"Based on the floristic survey of Eastern Germany (Benkert et al. 1996) a distribution database of higher plants in Mecklenburg-Vorpommern has been managed in the Botanical Institute of Botany and Landscape Ecology at the University of Greifswald. On the occasion of the New critical Flora of Mecklenburg-Vorpommern (Henker & Berg 2005) a comprehensive edit has been done. User input is possible at the website http://www.flora-mv.de.","type":"OCCURRENCE","hostingOrganizationKey":"7ac19c7e-3e49-4672-ac94-76126d676f40","hostingOrganizationTitle":"Ernst-Moritz-Arndt-Universitaet","countryCoverage":[],"publishingCountry":"DE","publishingOrganizationKey":"7ac19c7e-3e49-4672-ac94-76126d676f40","publishingOrganizationTitle":"Ernst-Moritz-Arndt-Universitaet","license":"http://creativecommons.org/licenses/by/4.0/legalcode","decades":[],"keywords":[],"recordCount":710905},{"key":"e1e16cf0-ada2-11e2-8fbc-00145eb45e9a","title":"Neptune Deep-Sea Microfossil Occurrence Database","description":"Micropaleontologic study of deep-sea sediments cored over several decades by the DSDP, ODP and IODP drilling programs has yielded a vast body of information on the occurrences of individual fossil marine plankton species over time. This information also has been combined with other types of geochronologic information by interdisciplinary teams of scientists to construct detailed age estimates - age models - for hundreds of deep-sea drilling sections. Together, this information provides a uniquely detailed history of of biologic evolution in the oceans, as well as an important source of geochronologic information for geologic studies of ocean and climate change.    The Neptune database provides integrated access to this global data-set. It contains over 500,000 records for the occurrences of species in individual, numerically age-dated samples, age models for hundreds of deep-sea sections, and extensive, annotated, quality-controlled taxonomic lists for thousands of fossil marine plankton species. Neptune, or analyses from it, have been used in over 30 research papers (median ISI 3.5), including 8 in Science, Nature or PNAS.    Neptune was originally created by a team led by me in the early 1990s at the ETH in Zürich, and re-cast in internet form, with the addition of more data, by the Chronos project of NSF in the early 2000s. In response to the lapse of Chronos and support for Neptune, I teamed up with Patrick Diver, the main Chronos database programmer, to create a new version of Neptune (Neptune Sandbox Berlin, or NSB) that is hosted at the Museum für Naturkunde. Extensive reprogramming has streamlined the system so that it is easier to maintain, and includes support for direct programmable access over the internet for advanced research purposes. This project was supported by CEES, Oslo. NSB currently does not have a web-interface but one is planned to be added by early 2013.    NSB has already been used in published research within my own group, and to provide data on request to external scientists. Broader collaborations and renewed general public access via the web interface are planned for the future.","type":"OCCURRENCE","hostingOrganizationKey":"10980920-6dad-11da-ad13-b8a03c50a862","hostingOrganizationTitle":"Museum für Naturkunde Berlin","countryCoverage":[],"publishingCountry":"DE","publishingOrganizationKey":"10980920-6dad-11da-ad13-b8a03c50a862","publishingOrganizationTitle":"Museum für Naturkunde Berlin","license":"http://creativecommons.org/licenses/by/4.0/legalcode","decades":[],"keywords":[],"recordCount":500808},{"key":"2a636fd6-dc73-49c0-9e5b-26bd05532313","title":"New Zealand fish and squid distributions from research bottom trawls 1964-2008","description":"From 1997 to 2008, a research programme to determine if fish assemblages in the New Zealand region could be classified into clearly identifiable communities based on their associations with each other and with environmental features was undertaken. This dataset is taken from the resulting fish communities database. These data have been used to show geographical and depth distributions of species from all research tows within the New Zealand EEZ since 2008.","type":"OCCURRENCE","hostingOrganizationKey":"c58ac019-b413-4613-8772-39e57acbeb8e","hostingOrganizationTitle":"The National Institute of Water and Atmospheric Research (NIWA)","countryCoverage":[],"publishingCountry":"NZ","publishingOrganizationKey":"c58ac019-b413-4613-8772-39e57acbeb8e","publishingOrganizationTitle":"The National Institute of Water and Atmospheric Research (NIWA)","license":"http://creativecommons.org/licenses/by/4.0/legalcode","decades":[1960,1970,1980,1990,2000],"keywords":["Observation","Occurrence"],"recordCount":495704},{"key":"c7b39dbc-39f5-47e6-8b70-d49eea899ef9","title":"New Zealand research tagging database","description":"Tagging programmes have been used to provide information on fish and fisheries to central government policy makers in New Zealand for many years. A wide variety of species have been the subject of such studies, including finfish, shellfish and rock lobsters. In New Zealand, the Ministry for Primary Industries (formerly the Ministry of Fisheries) has funded these programmes to aid with fisheries research and stock assessment. Data from these programme are held in the \"tag\" database, from which the data in this dataset are sourced.","type":"OCCURRENCE","hostingOrganizationKey":"c58ac019-b413-4613-8772-39e57acbeb8e","hostingOrganizationTitle":"The National Institute of Water and Atmospheric Research (NIWA)","countryCoverage":[],"publishingCountry":"NZ","publishingOrganizationKey":"1c9c3bb4-377c-4547-aa79-16ea755d6006","publishingOrganizationTitle":"Southwestern Pacific Ocean Biogeographic Information System (OBIS) Node","license":"http://creativecommons.org/licenses/by/4.0/legalcode","decades":[1960,1970,1980,1990,2000,2010],"keywords":["Observation","Occurrence"],"recordCount":411926},{"key":"82a421d4-f762-11e1-a439-00145eb45e9a","title":"Edaphobase","description":"Edaphobase is a GBIF-D project collecting information from literature and museum collections about distribution and ecology of soil animals (earthworms, small earthworms, nematodes, springtails, moss/ beetle mites, gamasina mites, centipedes, millipedes, and woodlice)","type":"OCCURRENCE","hostingOrganizationKey":"98dbab03-09e5-4ceb-988e-04f3e803decb","hostingOrganizationTitle":"Senckenberg Museum für Naturkunde Görlitz","countryCoverage":[],"publishingCountry":"DE","publishingOrganizationKey":"98dbab03-09e5-4ceb-988e-04f3e803decb","publishingOrganizationTitle":"Senckenberg Museum für Naturkunde Görlitz","license":"http://creativecommons.org/licenses/by-nc/4.0/legalcode","decades":[],"keywords":[],"recordCount":394134},{"key":"aa6c5ee6-d4d7-4a65-a04f-379cffbf4842","title":"ArtenFinder","type":"OCCURRENCE","hostingOrganizationKey":"10980920-6dad-11da-ad13-b8a03c50a862","hostingOrganizationTitle":"Museum für Naturkunde Berlin","countryCoverage":[],"publishingCountry":"DE","publishingOrganizationKey":"84a50274-bfbe-49aa-af23-29c3703126f9","publishingOrganizationTitle":"POLLICHIA – Verein für Naturforschung und Landespflege e.V.","license":"http://creativecommons.org/licenses/by/4.0/legalcode","decades":[],"keywords":[],"recordCount":264743},{"key":"77ecd330-b09e-11e2-a01d-00145eb45e9a","title":"Insekten Sachsen","description":"Insekten Sachsen (Insects of Saxony, Germany)","type":"OCCURRENCE","hostingOrganizationKey":"c76cf030-2a95-11da-9cc1-b8a03c50a862","hostingOrganizationTitle":"Senckenberg","countryCoverage":[],"publishingCountry":"DE","publishingOrganizationKey":"c76cf030-2a95-11da-9cc1-b8a03c50a862","publishingOrganizationTitle":"Senckenberg","license":"http://creativecommons.org/licenses/by/4.0/legalcode","decades":[],"keywords":[],"recordCount":217536},{"key":"7d8ed137-1d30-42f1-8b78-12a4957e4690","title":"SysTax -  Zoological Collections","description":"a Database System for Systematics and Taxonomy","type":"OCCURRENCE","hostingOrganizationKey":"021121c0-f040-11d8-b22f-b8a03c50a862","hostingOrganizationTitle":"SysTax","countryCoverage":[],"publishingCountry":"DE","publishingOrganizationKey":"021121c0-f040-11d8-b22f-b8a03c50a862","publishingOrganizationTitle":"SysTax","license":"http://creativecommons.org/licenses/by/4.0/legalcode","decades":[],"keywords":[],"recordCount":215195},{"key":"dfcb0ee8-614f-11e2-897a-00145eb45e9a","title":"SysTax - Botanical Gardens","description":"a Database System for Systematics and Taxonomy","type":"OCCURRENCE","hostingOrganizationKey":"021121c0-f040-11d8-b22f-b8a03c50a862","hostingOrganizationTitle":"SysTax","countryCoverage":[],"publishingCountry":"DE","publishingOrganizationKey":"021121c0-f040-11d8-b22f-b8a03c50a862","publishingOrganizationTitle":"SysTax","license":"http://creativecommons.org/licenses/by/4.0/legalcode","decades":[],"keywords":[],"recordCount":207219},{"key":"be62fffc-d0e7-45f2-9404-d4bc4322bc57","title":"Vulnerable marine ecosystems in the South Pacific Ocean region","description":"Vulnerable marine ecosystems (VMEs) are any ecosystem that are highly vulnerable to one or more kinds of fishing activity or other disturbance, and are identified by the vulnerability of their components (e.g. habitats, communities or species). The South Pacific Regional Fisheries Management Organisation (SPRFMO) Convention includes specific provisions to protect VMEs. SPRFMO has defined ten benthic invertebrate taxa that are regarded as indicators of VMEs. They are: Porifera (sponges); Actiniaria (anemones); Alcyonacea (soft corals); Gorgonacea (sea fans); Pennatulacea (sea pens); Scleractinia (stony corals); Antipatharia (black corals); Stylasteridae (hydrocorals); Crinoidea (sea lilies); and Brisingida (armless stars). For management purposes, it is important to know where VMEs are known or likely to occur, based on the best available scientific and technical information. The likely presence of VMEs can be identified using habitat suitability models for indicator taxa, ideally across the entire SPRFMO area. This is the aim of the South Pacific VME project. Records of VME indicator taxa extracted for the SPRFMO area and the New Zealand EEZ from OBIS (Online Biogeographic Information System: www.iobis.org) together with other online data sources, and data from research institutes (e.g., NIWA, CSIRO) and fisheries agencies (e.g. MPI, AFMA) were used for the project. These data were compiled and groomed prior to use in the habitat suitability modelling. Data in this dataset represent records of the VME indicator taxa as extracted from the variety of data sources listed above and may include records that are outside of the SPRFMO area.","type":"OCCURRENCE","hostingOrganizationKey":"c58ac019-b413-4613-8772-39e57acbeb8e","hostingOrganizationTitle":"The National Institute of Water and Atmospheric Research (NIWA)","countryCoverage":[],"publishingCountry":"NZ","publishingOrganizationKey":"c58ac019-b413-4613-8772-39e57acbeb8e","publishingOrganizationTitle":"The National Institute of Water and Atmospheric Research (NIWA)","license":"http://creativecommons.org/publicdomain/zero/1.0/legalcode","decades":[],"keywords":["Specimen","Occurrence"],"recordCount":202862},{"key":"c5c2542c-408f-442f-97d0-3a97562fe5ec","title":"Bat Banding","description":"Bat banding data Germany since 1900","type":"OCCURRENCE","hostingOrganizationKey":"6e1cad80-bdf5-11d8-84ea-b8a03c50a862","hostingOrganizationTitle":"Zoologisches Forschungsinstitut und Museum Alexander Koenig","countryCoverage":[],"publishingCountry":"DE","publishingOrganizationKey":"6e1cad80-bdf5-11d8-84ea-b8a03c50a862","publishingOrganizationTitle":"Zoologisches Forschungsinstitut und Museum Alexander Koenig","license":"http://creativecommons.org/licenses/by/4.0/legalcode","decades":[],"keywords":[],"recordCount":156265},{"key":"b5192815-5e90-45b4-a17d-62856a3ead51","title":"Monitoring data from the federal state North Rhine-Westphalia (Germany)","description":"<p>The dataset consists of occurrence data of the aquatic organism groups fish, macroinvertebrates and macrophytes that were sampled in the German federal state North Rhine-Westphalia between 2004 and 2009. The sampling was conducted according to the protocols of the national monitoring programme for implementation of the Water Framework Directive.</p>\n<p>For additional metadata see: http://data.freshwaterbiodiversity.eu/metadb/bf_mdb_view.php?entryID=BFE_91</p>","type":"OCCURRENCE","hostingOrganizationKey":"b872b075-9ab5-4e27-b6c6-5add6b890379","hostingOrganizationTitle":"BioFresh","countryCoverage":[],"publishingCountry":"DE","publishingOrganizationKey":"b872b075-9ab5-4e27-b6c6-5add6b890379","publishingOrganizationTitle":"BioFresh","license":"http://creativecommons.org/publicdomain/zero/1.0/legalcode","decades":[2000],"keywords":["rivers","Monitoring data","Macrophytes","Water Framework Directive","Inland Waters","Biota","Macroinvertebrates","Fish","Biosphere","Occurrence"],"recordCount":111991},{"key":"4dea7b5c-36ab-4c09-95d4-ea297d5c5850","title":"Soviet Trawl Fishery Data (New Zealand Waters) 1964-1987","description":"<p>This dataset comprises catch compositions and trawl locations from cruises of Russian fishery research vessels carried out in New Zealand waters between 1964 and 1987, containing 11547 demersal trawls from around New Zealand, Kermadec Islands, Antarctic coast and Tasman Sea. The data were obtained by exchange between the New Zealand Ministry of Fisheries (now Ministry for Primary Industries) and Soviet scientists in the mid 1990s.</p>\n<p>Note: A peer-review carried out by New Zealand scientists have noted some errors in species identification for some of these records.</p>\n<p>This Soviet Fishery Data (New Zealand Waters) 1964-1987 dataset is made available under the Creative Commons Attribution 4.0 New Zealand Licence http://creativecommons.org/licenses/by/4.0/nz/. If you publish, distribute, or otherwise disseminate this work to the public without adapting it, the following attribution to MPI should be used: “Source: Ministry for Primary Industries (MPI) and licensed by MPI for re-use under the Creative Commons Attribution 4.0 New Zealand licence.\" If you adapt this work in any way or include it in a collection, and publish, distribute, or otherwise disseminate that adaptation or collection to the public, the following attribution to MPI should be used: \"This work is based on/includes MPI’s data which are licensed by the Ministry for Primary Industries (MPI) for re-use under the Creative Commons Attribution 4.0 New Zealand licence.\"</p>","type":"OCCURRENCE","hostingOrganizationKey":"c58ac019-b413-4613-8772-39e57acbeb8e","hostingOrganizationTitle":"The National Institute of Water and Atmospheric Research (NIWA)","countryCoverage":[],"publishingCountry":"NZ","publishingOrganizationKey":"1c9c3bb4-377c-4547-aa79-16ea755d6006","publishingOrganizationTitle":"Southwestern Pacific Ocean Biogeographic Information System (OBIS) Node","license":"http://creativecommons.org/licenses/by/4.0/legalcode","decades":[1960,1970,1980],"keywords":["Observation","Occurrence"],"recordCount":111883},{"key":"966426ce-f762-11e1-a439-00145eb45e9a","title":"Herbarium Senckenbergianum (FR)","description":"Herbarium Senckenbergianum","type":"OCCURRENCE","hostingOrganizationKey":"c76cf030-2a95-11da-9cc1-b8a03c50a862","hostingOrganizationTitle":"Senckenberg","countryCoverage":[],"publishingCountry":"DE","publishingOrganizationKey":"c76cf030-2a95-11da-9cc1-b8a03c50a862","publishingOrganizationTitle":"Senckenberg","license":"http://creativecommons.org/licenses/by/4.0/legalcode","decades":[],"keywords":[],"recordCount":111316},{"key":"82b6ab38-f762-11e1-a439-00145eb45e9a","title":"MfN - Heteroptera Collection","description":"Heteroptera collection of the Natural History Museum Berlin, Germany","type":"OCCURRENCE","hostingOrganizationKey":"10980920-6dad-11da-ad13-b8a03c50a862","hostingOrganizationTitle":"Museum für Naturkunde Berlin","countryCoverage":[],"publishingCountry":"DE","publishingOrganizationKey":"10980920-6dad-11da-ad13-b8a03c50a862","publishingOrganizationTitle":"Museum für Naturkunde Berlin","license":"http://creativecommons.org/licenses/by/4.0/legalcode","decades":[],"keywords":[],"recordCount":103178},{"key":"828a3d8c-f762-11e1-a439-00145eb45e9a","title":"Herbarium Senckenbergianum (FR) - Fungi","description":"Herbarium Senckenbergianum (FR) - Fungi","type":"OCCURRENCE","hostingOrganizationKey":"c76cf030-2a95-11da-9cc1-b8a03c50a862","hostingOrganizationTitle":"Senckenberg","countryCoverage":[],"publishingCountry":"DE","publishingOrganizationKey":"c76cf030-2a95-11da-9cc1-b8a03c50a862","publishingOrganizationTitle":"Senckenberg","license":"http://creativecommons.org/licenses/by/4.0/legalcode","decades":[],"keywords":[],"recordCount":102000},{"key":"f29ab192-5964-40ae-a397-fa48ffdf0661","title":"Zoologische Staatssammlung Muenchen - International Barcode of Life (iBOL) - Barcode of Life Project Specimen Data","type":"OCCURRENCE","hostingOrganizationKey":"10980920-6dad-11da-ad13-b8a03c50a862","hostingOrganizationTitle":"Museum für Naturkunde Berlin","countryCoverage":[],"publishingCountry":"DE","publishingOrganizationKey":"0e2ae538-4332-4f41-bfee-8aa2c693d2a9","publishingOrganizationTitle":"Zoologische Staatssammlung München/Staatliche Naturwissenschaftliche Sammlungen Bayerns","license":"http://creativecommons.org/licenses/by/4.0/legalcode","decades":[],"keywords":[],"recordCount":99749},{"key":"9666593a-f762-11e1-a439-00145eb45e9a","title":"Collection Mammalia SMF","description":"Mammals of the world","type":"OCCURRENCE","hostingOrganizationKey":"c76cf030-2a95-11da-9cc1-b8a03c50a862","hostingOrganizationTitle":"Senckenberg","countryCoverage":[],"publishingCountry":"DE","publishingOrganizationKey":"c76cf030-2a95-11da-9cc1-b8a03c50a862","publishingOrganizationTitle":"Senckenberg","license":"http://creativecommons.org/licenses/by/4.0/legalcode","decades":[],"keywords":[],"recordCount":92210},{"key":"96678e90-f762-11e1-a439-00145eb45e9a","title":"Collection Aves (bird skins) SMF","description":"Aves of the world, bird skins","type":"OCCURRENCE","hostingOrganizationKey":"c76cf030-2a95-11da-9cc1-b8a03c50a862","hostingOrganizationTitle":"Senckenberg","countryCoverage":[],"publishingCountry":"DE","publishingOrganizationKey":"c76cf030-2a95-11da-9cc1-b8a03c50a862","publishingOrganizationTitle":"Senckenberg","license":"http://creativecommons.org/licenses/by/4.0/legalcode","decades":[],"keywords":[],"recordCount":83458},{"key":"71f4c974-f762-11e1-a439-00145eb45e9a","title":"MfN - Fossil vertebrates IV","description":"Fossil mammals (bones and teeth)","type":"OCCURRENCE","hostingOrganizationKey":"10980920-6dad-11da-ad13-b8a03c50a862","hostingOrganizationTitle":"Museum für Naturkunde Berlin","countryCoverage":[],"publishingCountry":"DE","publishingOrganizationKey":"10980920-6dad-11da-ad13-b8a03c50a862","publishingOrganizationTitle":"Museum für Naturkunde Berlin","license":"http://creativecommons.org/licenses/by/4.0/legalcode","decades":[],"keywords":[],"recordCount":77414},{"key":"96596036-f762-11e1-a439-00145eb45e9a","title":"Collection Arachnology SMF","description":"One of the most important Aranea and Opiliones collection of the world","type":"OCCURRENCE","hostingOrganizationKey":"c76cf030-2a95-11da-9cc1-b8a03c50a862","hostingOrganizationTitle":"Senckenberg","countryCoverage":[],"publishingCountry":"DE","publishingOrganizationKey":"c76cf030-2a95-11da-9cc1-b8a03c50a862","publishingOrganizationTitle":"Senckenberg","license":"http://creativecommons.org/licenses/by/4.0/legalcode","decades":[],"keywords":[],"recordCount":74314},{"key":"bd63a93c-8283-11e2-b873-00145eb45e9a","title":"ECatSym: Electronic World Catalog of Symphyta","type":"OCCURRENCE","hostingOrganizationKey":"c76cf030-2a95-11da-9cc1-b8a03c50a862","hostingOrganizationTitle":"Senckenberg","countryCoverage":[],"publishingCountry":"DE","publishingOrganizationKey":"c76cf030-2a95-11da-9cc1-b8a03c50a862","publishingOrganizationTitle":"Senckenberg","license":"http://creativecommons.org/licenses/by/4.0/legalcode","decades":[],"keywords":[],"recordCount":69396},{"key":"82b7d2ec-f762-11e1-a439-00145eb45e9a","title":"Chrysomelidae of Central Europe","type":"OCCURRENCE","hostingOrganizationKey":"10980920-6dad-11da-ad13-b8a03c50a862","hostingOrganizationTitle":"Museum für Naturkunde Berlin","countryCoverage":[],"publishingCountry":"DE","publishingOrganizationKey":"7ac19c7e-3e49-4672-ac94-76126d676f40","publishingOrganizationTitle":"Ernst-Moritz-Arndt-Universitaet","license":"http://creativecommons.org/licenses/by/4.0/legalcode","decades":[],"keywords":[],"recordCount":64554},{"key":"e5774d90-9f01-42bb-a747-32331be82b18","title":"African Plants - a photo guide","description":"Photographic records of tropical African plants","type":"OCCURRENCE","hostingOrganizationKey":"c76cf030-2a95-11da-9cc1-b8a03c50a862","hostingOrganizationTitle":"Senckenberg","countryCoverage":[],"publishingCountry":"DE","publishingOrganizationKey":"c76cf030-2a95-11da-9cc1-b8a03c50a862","publishingOrganizationTitle":"Senckenberg","license":"http://creativecommons.org/licenses/by/4.0/legalcode","decades":[],"keywords":[],"recordCount":60685},{"key":"965bbbd8-f762-11e1-a439-00145eb45e9a","title":"Collection Mollusca SMF","description":"Molluscs of the world","type":"OCCURRENCE","hostingOrganizationKey":"c76cf030-2a95-11da-9cc1-b8a03c50a862","hostingOrganizationTitle":"Senckenberg","countryCoverage":[],"publishingCountry":"DE","publishingOrganizationKey":"c76cf030-2a95-11da-9cc1-b8a03c50a862","publishingOrganizationTitle":"Senckenberg","license":"http://creativecommons.org/licenses/by/4.0/legalcode","decades":[],"keywords":[],"recordCount":54566},{"key":"f4419c70-614f-11e2-897a-00145eb45e9a","title":"SysTax - Herbaria","description":"a Database System for Systematics and Taxonomy","type":"OCCURRENCE","hostingOrganizationKey":"021121c0-f040-11d8-b22f-b8a03c50a862","hostingOrganizationTitle":"SysTax","countryCoverage":[],"publishingCountry":"DE","publishingOrganizationKey":"021121c0-f040-11d8-b22f-b8a03c50a862","publishingOrganizationTitle":"SysTax","license":"http://creativecommons.org/licenses/by/4.0/legalcode","decades":[],"keywords":[],"recordCount":53209},{"key":"80b9fe97-d586-49e0-bb4b-c3cc0c3212cf","title":"West African Vegetation Database","description":"Vascular plant observations from inventories and relevés.","type":"OCCURRENCE","hostingOrganizationKey":"c76cf030-2a95-11da-9cc1-b8a03c50a862","hostingOrganizationTitle":"Senckenberg","countryCoverage":[],"publishingCountry":"DE","publishingOrganizationKey":"c76cf030-2a95-11da-9cc1-b8a03c50a862","publishingOrganizationTitle":"Senckenberg","license":"http://creativecommons.org/licenses/by/4.0/legalcode","decades":[],"keywords":[],"recordCount":52920},{"key":"685a47f1-95b5-4bc0-b105-3ed0128defbf","title":"Freshwater fishes of Italy","description":"<p>The database reflects the widely distributed data for Italian freshwater fish occurrences collected in the last 20 years. These data are actually hidden in fisheries plans and studies of the Italian provinces, regions, parks, and some other local administration databases and “grey literature”. These databases and literature resources are collected together, and the records are georeferenced and organized into one database (using Artedian http://artedi.nrm.se/fishbase_se/software/artedian/).</p>\n<p>For additional metadata see: http://data.freshwaterbiodiversity.eu/metadb/bf_mdb_view.php?entryID=BF_CF22</p>","type":"OCCURRENCE","hostingOrganizationKey":"b872b075-9ab5-4e27-b6c6-5add6b890379","hostingOrganizationTitle":"BioFresh","countryCoverage":[],"publishingCountry":"DE","publishingOrganizationKey":"b872b075-9ab5-4e27-b6c6-5add6b890379","publishingOrganizationTitle":"BioFresh","license":"http://creativecommons.org/publicdomain/zero/1.0/legalcode","decades":[1990,2000,2010],"keywords":["rivers","generalfreshwater","Inland Waters","Biota","Metadata","Observation","Biosphere","Environment","Location"],"recordCount":52545},{"key":"505cabc3-7550-4fd1-96dc-6d77d5ffc6de","title":"Monitoring data from the federal state Hesse (Germany)","description":"<p>The dataset consists of occurrence data of the aquatic organism groups fish, macroinvertebrates and macrophytes that were sampled in the German federal state Hesse between 2005 and 2008. The sampling was conducted according to the protocols of the national monitoring programme for implementation of the Water Framework Directive.</p>\n<p>For additional metadata see: http://data.freshwaterbiodiversity.eu/metadb/bf_mdb_view.php?entryID=BFE_87</p>","type":"OCCURRENCE","hostingOrganizationKey":"b872b075-9ab5-4e27-b6c6-5add6b890379","hostingOrganizationTitle":"BioFresh","countryCoverage":[],"publishingCountry":"DE","publishingOrganizationKey":"b872b075-9ab5-4e27-b6c6-5add6b890379","publishingOrganizationTitle":"BioFresh","license":"http://creativecommons.org/publicdomain/zero/1.0/legalcode","decades":[2000],"keywords":["rivers","Monitoring data","Macrophytes","Water Framework Directive","Inland Waters","Biota","Macroinvertebrates","Fish","Biosphere","Occurrence"],"recordCount":49637},{"key":"21448e32-117a-11e3-a753-00145eb45e9a","title":"Sphaeroceridae Collection","description":"Sphaeroceridae Collection","type":"OCCURRENCE","hostingOrganizationKey":"10980920-6dad-11da-ad13-b8a03c50a862","hostingOrganizationTitle":"Museum für Naturkunde Berlin","countryCoverage":[],"publishingCountry":"DE","publishingOrganizationKey":"10980920-6dad-11da-ad13-b8a03c50a862","publishingOrganizationTitle":"Museum für Naturkunde Berlin","license":"http://creativecommons.org/licenses/by/4.0/legalcode","decades":[],"keywords":[],"recordCount":47499},{"key":"8291593c-f762-11e1-a439-00145eb45e9a","title":"Collection Malakologie - SNSD","description":"Molluscs of the world","type":"OCCURRENCE","hostingOrganizationKey":"c76cf030-2a95-11da-9cc1-b8a03c50a862","hostingOrganizationTitle":"Senckenberg","countryCoverage":[],"publishingCountry":"DE","publishingOrganizationKey":"c76cf030-2a95-11da-9cc1-b8a03c50a862","publishingOrganizationTitle":"Senckenberg","license":"http://creativecommons.org/licenses/by/4.0/legalcode","decades":[],"keywords":[],"recordCount":45297},{"key":"9661bc40-f762-11e1-a439-00145eb45e9a","title":"Collection Herpetology SMF","description":"Reptiles and Amphibians of the world","type":"OCCURRENCE","hostingOrganizationKey":"c76cf030-2a95-11da-9cc1-b8a03c50a862","hostingOrganizationTitle":"Senckenberg","countryCoverage":[],"publishingCountry":"DE","publishingOrganizationKey":"c76cf030-2a95-11da-9cc1-b8a03c50a862","publishingOrganizationTitle":"Senckenberg","license":"http://creativecommons.org/licenses/by/4.0/legalcode","decades":[],"keywords":[],"recordCount":44530},{"key":"9668b676-f762-11e1-a439-00145eb45e9a","title":"Collection Crustacea SMF","description":"Decapoda and Isopoda, mainly North Sea, Mediterranean, Japan. -- Largest collection of japanese crabs outside of Japan. -- One of the largest freshwatercrab-collection of the world","type":"OCCURRENCE","hostingOrganizationKey":"c76cf030-2a95-11da-9cc1-b8a03c50a862","hostingOrganizationTitle":"Senckenberg","countryCoverage":[],"publishingCountry":"DE","publishingOrganizationKey":"c76cf030-2a95-11da-9cc1-b8a03c50a862","publishingOrganizationTitle":"Senckenberg","license":"http://creativecommons.org/licenses/by/4.0/legalcode","decades":[],"keywords":[],"recordCount":42556},{"key":"95d672e8-f762-11e1-a439-00145eb45e9a","title":"EDIT - ATBI in Mercantour/Alpi Marittime (France/Italy)","description":"The data provided have been collected under the scope of the European Distributed Institute of Taxonomy (EDIT), a network of more than 20 European, North American and Russian taxonomic institutions with support from the European Commission (Project no. 018340). As part of EDIT's activities to strengthen the input of taxonomy for biodiversity conservation, the Museum fuer Naturkunde Berlin (MfN) and the State Museum of Natural History Stuttgart (SMNS), Germany, coordinates and supports the participation of taxonomic experts in \"All Taxa and Biodiversity Inventory and Monitoring\" (ATBI+M) projects at designated areas of conservation value. ATBI+M efforts are large-scale, longer-term field surveys to record, identify, and document the entire biodiversity of specific (conservation) areas, which will form the basis for subsequent monitoring biodiversity changes over time. All data presented here originate either directly from field surveys undertaken by many individual EDIT researchers and participants at designated ATBI+M sites or from published literature and other records referring to the same areas.","type":"OCCURRENCE","hostingOrganizationKey":"10980920-6dad-11da-ad13-b8a03c50a862","hostingOrganizationTitle":"Museum für Naturkunde Berlin","countryCoverage":[],"publishingCountry":"DE","publishingOrganizationKey":"10980920-6dad-11da-ad13-b8a03c50a862","publishingOrganizationTitle":"Museum für Naturkunde Berlin","license":"http://creativecommons.org/licenses/by/4.0/legalcode","decades":[],"keywords":[],"recordCount":41800},{"key":"76821fef-6181-447a-bf7d-33e690be9134","title":"(Table T1) Miocene planktonic foraminiferal stratigraphy of ODP Hole 184-1148A","type":"OCCURRENCE","hostingOrganizationKey":"d5778510-eb28-11da-8629-b8a03c50a862","hostingOrganizationTitle":"PANGAEA - Publishing Network for Geoscientific and Environmental Data","countryCoverage":[],"publishingCountry":"DE","publishingOrganizationKey":"d5778510-eb28-11da-8629-b8a03c50a862","publishingOrganizationTitle":"PANGAEA - Publishing Network for Geoscientific and Environmental Data","license":"http://creativecommons.org/licenses/by/4.0/legalcode","decades":[],"keywords":[],"recordCount":40260},{"key":"c692cb7e-46f9-4d3a-8d5f-e9fcd41e5ee0","title":"Vascular plant diversity in forests","description":"Original data comes from a project which takes or took place as part of the DFG priority program \"Exploratories for large-scale and long-term functional biodiversity research\". The data is stored together with descriptive metadata, in combination called a dataset, in the project repository (https://www.bexis.uni-jena.de). Species information was extracted from that original dataset. The second paragraph is part of the metadata of the original dataset.</br>Vegetation relevés of all 400 m² GPs in forests","type":"OCCURRENCE","hostingOrganizationKey":"541c2668-9391-4479-b90f-fe90b365f33b","hostingOrganizationTitle":"Biodiversity Exploratories","countryCoverage":[],"publishingCountry":"DE","publishingOrganizationKey":"541c2668-9391-4479-b90f-fe90b365f33b","publishingOrganizationTitle":"Biodiversity Exploratories","license":"http://creativecommons.org/licenses/by-nc/4.0/legalcode","decades":[2000],"keywords":["vegetation data","forest","vascular plants","relevés"],"recordCount":39475},{"key":"ce0f1750-ad92-46b7-b8c7-59033460de43","title":"Freshwater fishes of Poland","description":"<p>The geo-referenced distribution data of freshwater fishes of Poland origin from collection data and a wide set of publications including grey literature.</p>\n<p>For additional metadata see: http://data.freshwaterbiodiversity.eu/metadb/bf_mdb_view.php?entryID=BF_CF8</p>","type":"OCCURRENCE","hostingOrganizationKey":"b872b075-9ab5-4e27-b6c6-5add6b890379","hostingOrganizationTitle":"BioFresh","countryCoverage":[],"publishingCountry":"DE","publishingOrganizationKey":"b872b075-9ab5-4e27-b6c6-5add6b890379","publishingOrganizationTitle":"BioFresh","license":"http://creativecommons.org/publicdomain/zero/1.0/legalcode","decades":[],"keywords":["rivers","wetlands","Inland Waters","Biota","Metadata","Biosphere","Environment","lakes","Location"],"recordCount":39190},{"key":"0ed0a394-5276-433e-bf8d-09ceaaee45e9","title":"Biota occurrence data from plankton surveys around New Zealand","description":"The dataset contains details of the biota caught during plankton surveys around New Zealand and the south western Pacific although some occurrence data is included from other oceans sourced from the digitisation of journal articles from New Zealand authors. A large source from this dataset is provided by the New Zealand Ministry of Primary Industries from its \"plankton\" and \"rocklob\" databases. This dataset records all biological specimens collected during plankton sampling including fish, larvae, and eggs. This dataset does not include and data from Constant Plankton Recorders.","type":"OCCURRENCE","hostingOrganizationKey":"c58ac019-b413-4613-8772-39e57acbeb8e","hostingOrganizationTitle":"The National Institute of Water and Atmospheric Research (NIWA)","countryCoverage":[],"publishingCountry":"NZ","publishingOrganizationKey":"c58ac019-b413-4613-8772-39e57acbeb8e","publishingOrganizationTitle":"The National Institute of Water and Atmospheric Research (NIWA)","license":"http://creativecommons.org/licenses/by-nc/4.0/legalcode","decades":[1950,1960,1970,1980,1990,2000,2010],"keywords":["Observation","Occurrence"],"recordCount":38683},{"key":"85c8e444-f762-11e1-a439-00145eb45e9a","title":"Herbarium Hamburgense","description":"The Herbarium Hamburgense of the University of Hamburg (acronym HBG) is the 4th largest herbarium in Germany and holds a collection of more than 1.8 million preserved plant specimens. All plant groups, e.g. flowering plants, ferns, mosses, lichens, fungi and algae are covered. The scope is worldwide and the collections span a period of 300 years. There are special collections such as the bulky specimens and alcohol collections, galls and teratologia as well as the autograph and portrait collection. The collections are growing by field studies of staff and members of the Biodiversity, Evolution and Ecology working group of the Biocenter Klein Flottbek of the the University of Hamburg. So far, almost 40000 herbarium sheets have been fully digitized including nearly 20000 type specimens.","type":"OCCURRENCE","hostingOrganizationKey":"f739aef0-8a5b-11d9-bc8d-b8a03c50a862","hostingOrganizationTitle":"Herbarium Hamburgense","countryCoverage":[],"publishingCountry":"DE","publishingOrganizationKey":"f739aef0-8a5b-11d9-bc8d-b8a03c50a862","publishingOrganizationTitle":"Herbarium Hamburgense","license":"http://creativecommons.org/licenses/by/4.0/legalcode","decades":[],"keywords":[],"recordCount":38536},{"key":"71eba376-f762-11e1-a439-00145eb45e9a","title":"MfN - Fossil invertebrates Ia","description":"Gastropods, bivalves, brachiopods, sponges","type":"OCCURRENCE","hostingOrganizationKey":"10980920-6dad-11da-ad13-b8a03c50a862","hostingOrganizationTitle":"Museum für Naturkunde Berlin","countryCoverage":[],"publishingCountry":"DE","publishingOrganizationKey":"10980920-6dad-11da-ad13-b8a03c50a862","publishingOrganizationTitle":"Museum für Naturkunde Berlin","license":"http://creativecommons.org/licenses/by/4.0/legalcode","decades":[],"keywords":[],"recordCount":36845},{"key":"b7ec1bf8-819b-11e2-bad2-00145eb45e9a","title":"Animal Sound Archive","description":"The Animal Sound Archive at the Museum fuer Naturkunde Berlin (German: Tierstimmenarchiv) is one of the oldest and largest worldwide. Founded in 1951 by Professor Guenter Tembrock the collection consists now of around 130 000 records of animal voices.","type":"OCCURRENCE","hostingOrganizationKey":"10980920-6dad-11da-ad13-b8a03c50a862","hostingOrganizationTitle":"Museum für Naturkunde Berlin","countryCoverage":[],"publishingCountry":"DE","publishingOrganizationKey":"10980920-6dad-11da-ad13-b8a03c50a862","publishingOrganizationTitle":"Museum für Naturkunde Berlin","license":"http://creativecommons.org/licenses/by/4.0/legalcode","decades":[],"keywords":[],"recordCount":35322},{"key":"cce04086-6c7c-11e2-90ce-00145eb45e9a","title":"Bryophyte herbarium, Göttingen (GOET)","description":"The Bryophyte database contains more than 35000 records of the Bryophyte Herbarium at Göttingen (GOET). Mainly neotropical specimens are presented. Photographs or plates of species located at Göttingen (GOET) are presented if available.","type":"OCCURRENCE","hostingOrganizationKey":"59c81290-df0e-11d8-b22e-b8a03c50a862","hostingOrganizationTitle":"Georg-August-Universität Göttingen, Albrecht-von-Haller-Institut für Pflanzenwissenschaften, Abteilung Systematische Botanik","countryCoverage":[],"publishingCountry":"DE","publishingOrganizationKey":"59c81290-df0e-11d8-b22e-b8a03c50a862","publishingOrganizationTitle":"Georg-August-Universität Göttingen, Albrecht-von-Haller-Institut für Pflanzenwissenschaften, Abteilung Systematische Botanik","license":"http://creativecommons.org/licenses/by/4.0/legalcode","decades":[],"keywords":[],"recordCount":35044},{"key":"966c9070-f762-11e1-a439-00145eb45e9a","title":"Collection Bryozoa SMF","description":"Bryozoa of the world","type":"OCCURRENCE","hostingOrganizationKey":"c76cf030-2a95-11da-9cc1-b8a03c50a862","hostingOrganizationTitle":"Senckenberg","countryCoverage":[],"publishingCountry":"DE","publishingOrganizationKey":"c76cf030-2a95-11da-9cc1-b8a03c50a862","publishingOrganizationTitle":"Senckenberg","license":"http://creativecommons.org/licenses/by/4.0/legalcode","decades":[],"keywords":[],"recordCount":32508},{"key":"155b33d2-84b1-4a31-9287-9d9e900bc6c8","title":"Taxon list of fungi and fungal-like organisms from Germany compiled by the DGfM","description":"http://www.diversitymobile.net/wiki/About_%22Taxon_list_of_fungi_and_fungal-like_organisms_from_Germany_compiled_by_the_DGfM%22","type":"CHECKLIST","hostingOrganizationKey":"0674aea0-a7e1-11d8-9534-b8a03c50a862","hostingOrganizationTitle":"Staatliche Naturwissenschaftliche Sammlungen Bayerns","countryCoverage":[],"publishingCountry":"DE","publishingOrganizationKey":"0674aea0-a7e1-11d8-9534-b8a03c50a862","publishingOrganizationTitle":"Staatliche Naturwissenschaftliche Sammlungen Bayerns","license":"http://creativecommons.org/licenses/by/4.0/legalcode","decades":[],"keywords":[],"recordCount":32095},{"key":"68efc55e-f762-11e1-a439-00145eb45e9a","title":"The Brown University Foraminiferal Data Base (BFD)","type":"OCCURRENCE","hostingOrganizationKey":"d5778510-eb28-11da-8629-b8a03c50a862","hostingOrganizationTitle":"PANGAEA - Publishing Network for Geoscientific and Environmental Data","countryCoverage":[],"publishingCountry":"DE","publishingOrganizationKey":"d5778510-eb28-11da-8629-b8a03c50a862","publishingOrganizationTitle":"PANGAEA - Publishing Network for Geoscientific and Environmental Data","license":"http://creativecommons.org/licenses/by/4.0/legalcode","decades":[],"keywords":[],"recordCount":31907},{"key":"b281d0c7-e700-4067-a47f-39eafda1b893","title":"Geographic distribution of dinoflagellate cysts in surface sediments","description":"Dinoflagellate cysts are useful for reconstructing upper water conditions. For adequate reconstructions detailed information is required about the relationship between modern day environmental conditions and the geographic distribution of cysts in sediments. This Atlas summarises the modern global distribution of 71 organicwalled dinoflagellate cyst species. The synthesis is based on the integration of literature sources together with data of 2405 globally distributed surface sediment samples that have been preparedwith a comparable methodology and taxonomy. The distribution patterns of individual cyst species are being comparedwith environmental factors that are knownto influence dinoflagellate growth, gamete production, encystment, excystment and preservation of their organic-walled cysts: surface water temperature, salinity, nitrate, phosphate, chlorophyll-a concentrations and bottom water oxygen concentrations. Graphs are provided for every species depicting the relationship between seasonal and annual variations of these parameters and the relative abundance of the species. Results have been compared with previously published records; an overview of the ecological significance as well as information about the seasonal production of each individual species is presented. The relationship between the cyst distribution and variation in the aforementioned environmental parameters was analysed by performing a canonical correspondence analysis. All tested variables showed a positive relationship on the 99% confidence level. Sea-surface temperature represents the parameter corresponding to the largest amount of variance within the dataset (40%) followed by nitrate, salinity, phosphate and bottom-water oxygen concentration, which correspond to 34%, 33%, 25% and 24% of the variance, respectively. Characterisations of selected environments as well as a discussion about how these factors could have influenced the final cyst yield in sediments are included.","type":"OCCURRENCE","hostingOrganizationKey":"d5778510-eb28-11da-8629-b8a03c50a862","hostingOrganizationTitle":"PANGAEA - Publishing Network for Geoscientific and Environmental Data","countryCoverage":[],"publishingCountry":"DE","publishingOrganizationKey":"d5778510-eb28-11da-8629-b8a03c50a862","publishingOrganizationTitle":"PANGAEA - Publishing Network for Geoscientific and Environmental Data","license":"http://creativecommons.org/licenses/by/4.0/legalcode","decades":[],"keywords":[],"recordCount":30636},{"key":"7b84c0a2-f762-11e1-a439-00145eb45e9a","title":"Collection Crustacea - ZMB","description":"Crustacea, mainly Amphipoda and Isopoda","type":"OCCURRENCE","hostingOrganizationKey":"c76cf030-2a95-11da-9cc1-b8a03c50a862","hostingOrganizationTitle":"Senckenberg","countryCoverage":[],"publishingCountry":"DE","publishingOrganizationKey":"c76cf030-2a95-11da-9cc1-b8a03c50a862","publishingOrganizationTitle":"Senckenberg","license":"http://creativecommons.org/licenses/by/4.0/legalcode","decades":[],"keywords":[],"recordCount":30069},{"key":"829277c2-f762-11e1-a439-00145eb45e9a","title":"Collection Ichthyologie - SNSD","description":"Pisces of the world","type":"OCCURRENCE","hostingOrganizationKey":"c76cf030-2a95-11da-9cc1-b8a03c50a862","hostingOrganizationTitle":"Senckenberg","countryCoverage":[],"publishingCountry":"DE","publishingOrganizationKey":"c76cf030-2a95-11da-9cc1-b8a03c50a862","publishingOrganizationTitle":"Senckenberg","license":"http://creativecommons.org/licenses/by/4.0/legalcode","decades":[],"keywords":[],"recordCount":30005},{"key":"dc144d63-5ac4-4d2b-a2a3-a1d554850b41","title":"(Table 2) Mollusc biostratigraphy of facies underlying the 'Braunkohlensande' in the Lauenburg district, north Germany","type":"OCCURRENCE","hostingOrganizationKey":"d5778510-eb28-11da-8629-b8a03c50a862","hostingOrganizationTitle":"PANGAEA - Publishing Network for Geoscientific and Environmental Data","countryCoverage":[],"publishingCountry":"DE","publishingOrganizationKey":"d5778510-eb28-11da-8629-b8a03c50a862","publishingOrganizationTitle":"PANGAEA - Publishing Network for Geoscientific and Environmental Data","license":"http://creativecommons.org/licenses/by/4.0/legalcode","decades":[],"keywords":[],"recordCount":29646},{"key":"8cf7cae1-76b6-4b31-a323-bda75d7e1051","title":"(Table T2) Foraminifer distribution in ODP Site 188-1165 sediments","type":"OCCURRENCE","hostingOrganizationKey":"d5778510-eb28-11da-8629-b8a03c50a862","hostingOrganizationTitle":"PANGAEA - Publishing Network for Geoscientific and Environmental Data","countryCoverage":[],"publishingCountry":"DE","publishingOrganizationKey":"d5778510-eb28-11da-8629-b8a03c50a862","publishingOrganizationTitle":"PANGAEA - Publishing Network for Geoscientific and Environmental Data","license":"http://creativecommons.org/licenses/by/4.0/legalcode","decades":[],"keywords":[],"recordCount":29520},{"key":"16a3533d-90cf-4402-95a4-42437e2f9660","title":"Herbarium Senckenbergianum (GLM) - Lichenes","description":"Herbarium Senckenbergianum (GLM) - Lichenes","type":"OCCURRENCE","hostingOrganizationKey":"c76cf030-2a95-11da-9cc1-b8a03c50a862","hostingOrganizationTitle":"Senckenberg","countryCoverage":[],"publishingCountry":"DE","publishingOrganizationKey":"c76cf030-2a95-11da-9cc1-b8a03c50a862","publishingOrganizationTitle":"Senckenberg","license":"http://creativecommons.org/licenses/by/4.0/legalcode","decades":[],"keywords":[],"recordCount":28799},{"key":"7b8964ea-f762-11e1-a439-00145eb45e9a","title":"Collection Vermes - ZMB","description":"Vermes of the world","type":"OCCURRENCE","hostingOrganizationKey":"c76cf030-2a95-11da-9cc1-b8a03c50a862","hostingOrganizationTitle":"Senckenberg","countryCoverage":[],"publishingCountry":"DE","publishingOrganizationKey":"c76cf030-2a95-11da-9cc1-b8a03c50a862","publishingOrganizationTitle":"Senckenberg","license":"http://creativecommons.org/licenses/by/4.0/legalcode","decades":[],"keywords":[],"recordCount":28621},{"key":"f6a07b42-1d2c-11e2-8fd4-00145eb45e9a","title":"Collection Paleontology - GPIT","description":"fossils of the world","type":"OCCURRENCE","hostingOrganizationKey":"c76cf030-2a95-11da-9cc1-b8a03c50a862","hostingOrganizationTitle":"Senckenberg","countryCoverage":[],"publishingCountry":"DE","publishingOrganizationKey":"c76cf030-2a95-11da-9cc1-b8a03c50a862","publishingOrganizationTitle":"Senckenberg","license":"http://creativecommons.org/licenses/by/4.0/legalcode","decades":[],"keywords":[],"recordCount":28350},{"key":"96582dc4-f762-11e1-a439-00145eb45e9a","title":"Collection Pisces SMF","description":"Fishes of the world","type":"OCCURRENCE","hostingOrganizationKey":"c76cf030-2a95-11da-9cc1-b8a03c50a862","hostingOrganizationTitle":"Senckenberg","countryCoverage":[],"publishingCountry":"DE","publishingOrganizationKey":"c76cf030-2a95-11da-9cc1-b8a03c50a862","publishingOrganizationTitle":"Senckenberg","license":"http://creativecommons.org/licenses/by/4.0/legalcode","decades":[],"keywords":[],"recordCount":28339},{"key":"3186cd3f-a7d0-4e64-bb60-630e20a47fa6","title":"Monitoring data from the federal state Bavaria (Germany)","description":"<p>The dataset consists of occurrence data of the aquatic organism groups macroinvertebrates and macrophytes that were sampled in the German federal state Bavaria between 2004 and 2009. The sampling was conducted according to the protocols of the national monitoring programme for implementation of the Water Framework Directive.</p>\n<p>For additional metadata see: http://data.freshwaterbiodiversity.eu/metadb/bf_mdb_view.php?entryID=BFE_88</p>","type":"OCCURRENCE","hostingOrganizationKey":"b872b075-9ab5-4e27-b6c6-5add6b890379","hostingOrganizationTitle":"BioFresh","countryCoverage":[],"publishingCountry":"DE","publishingOrganizationKey":"b872b075-9ab5-4e27-b6c6-5add6b890379","publishingOrganizationTitle":"BioFresh","license":"http://creativecommons.org/publicdomain/zero/1.0/legalcode","decades":[2000],"keywords":["rivers","Monitoring data","Macrophytes","Water Framework Directive","Inland Waters","Biota","Macroinvertebrates","Biosphere","Occurrence"],"recordCount":26624},{"key":"ae3eff3a-7453-498c-bcdf-c22e1fcdec78","title":"vegetation releves on grassland gridplots in 2007","description":"Original data comes from a project which takes or took place as part of the DFG priority program \"Exploratories for large-scale and long-term functional biodiversity research\". The data is stored together with descriptive metadata, in combination called a dataset, in the project repository (https://www.bexis.uni-jena.de). Species information was extracted from that original dataset. The second paragraph is part of the metadata of the original dataset.</br>'Sammelarten\" sind durch agg= Aggregate oder total gekennzeichnet. Sie umfassen jene Taxa, die teilweise bis zur Kleinart, Subspecies oder Varietas bestimmt wurden, teilweise aber auch nur auf Gattungs- (... spec. (indet.)) oder Artebene. Taxonomie nach Wisskirchen,Haeupler (1998)Standardliste für Deutschland. Lebensformen nach Raunkiaer, C. (1910): Statistik der Lebensformen als Grundlage für die biologische Pflanzengeographie.-Beih. Biol. Cbl. 27 II, 170 - 206d. Rote Liste: KORNECK, D., SCHNITTLER, M., VOLLMER, I. (1996): Rote Liste der Farn- und Blütenpflanzen (Pteridophyta et Spermatophyta) Deutschlands. – LUDWIG, G., SCHNITTLER, M. [Hrsg.]: Rote Listen gefährdeter Pflanzen Deutschlands. – Schriftenr. Vegetationskd. 28: 21–187, Bundesamt für Naturschutz, Bonn.'","type":"OCCURRENCE","hostingOrganizationKey":"541c2668-9391-4479-b90f-fe90b365f33b","hostingOrganizationTitle":"Biodiversity Exploratories","countryCoverage":[],"publishingCountry":"DE","publishingOrganizationKey":"541c2668-9391-4479-b90f-fe90b365f33b","publishingOrganizationTitle":"Biodiversity Exploratories","license":"http://creativecommons.org/licenses/by-nc/4.0/legalcode","decades":[2000],"keywords":["vegetation releve","2007","gridplot","vegetation record","grassland"],"recordCount":26346},{"key":"ab12168f-cd7d-484a-9f58-44ca34afe762","title":"vegetation releves on grassland gridplots 2007-2009","description":"Original data comes from a project which takes or took place as part of the DFG priority program \"Exploratories for large-scale and long-term functional biodiversity research\". The data is stored together with descriptive metadata, in combination called a dataset, in the project repository (https://www.bexis.uni-jena.de). Species information was extracted from that original dataset. The second paragraph is part of the metadata of the original dataset.</br>'Sammelarten\" sind durch agg= Aggregate oder total gekennzeichnet. Sie umfassen jene Taxa, die teilweise bis zur Kleinart, Subspecies oder Varietas bestimmt wurden, teilweise aber auch nur auf Gattungs- (... spec. (indet.)) oder Artebene. Taxonomie nach Wisskirchen,Haeupler (1998)Standardliste für Deutschland. Lebensformen nach Raunkiaer, C. (1910): Statistik der Lebensformen als Grundlage für die biologische Pflanzengeographie.-Beih. Biol. Cbl. 27 II, 170 - 206d. Rote Liste: KORNECK, D., SCHNITTLER, M., VOLLMER, I. (1996): Rote Liste der Farn- und Blütenpflanzen (Pteridophyta et Spermatophyta) Deutschlands. – LUDWIG, G., SCHNITTLER, M. [Hrsg.]: Rote Listen gefährdeter Pflanzen Deutschlands. – Schriftenr. Vegetationskd. 28: 21–187, Bundesamt für Naturschutz, Bonn.'","type":"OCCURRENCE","hostingOrganizationKey":"541c2668-9391-4479-b90f-fe90b365f33b","hostingOrganizationTitle":"Biodiversity Exploratories","countryCoverage":[],"publishingCountry":"DE","publishingOrganizationKey":"541c2668-9391-4479-b90f-fe90b365f33b","publishingOrganizationTitle":"Biodiversity Exploratories","license":"http://creativecommons.org/licenses/by-nc/4.0/legalcode","decades":[2000],"keywords":["vegetation releve","gridplot","vegetation record","grassland"],"recordCount":26041},{"key":"5fe48e2c-a83d-43b7-952a-e1e62c49ad23","title":"Monitoring data from the federal state Saxony (Germany)","description":"<p>The dataset consists of occurrence data of the aquatic organism groups fish, macroinvertebrates and macrophytes that were sampled in the German federal state Saxony between 2007 and 2011. The sampling was conducted according to the protocols of the national monitoring programme for implementation of the Water Framework Directive.</p>\n<p>For additional metadata see: http://data.freshwaterbiodiversity.eu/metadb/bf_mdb_view.php?entryID=BFE_93</p>","type":"OCCURRENCE","hostingOrganizationKey":"b872b075-9ab5-4e27-b6c6-5add6b890379","hostingOrganizationTitle":"BioFresh","countryCoverage":[],"publishingCountry":"DE","publishingOrganizationKey":"b872b075-9ab5-4e27-b6c6-5add6b890379","publishingOrganizationTitle":"BioFresh","license":"http://creativecommons.org/publicdomain/zero/1.0/legalcode","decades":[2000,2010],"keywords":["rivers","Monitoring data","Macrophytes","Water Framework Directive","Inland Waters","Biota","Macroinvertebrates","Fish","Biosphere","Occurrence"],"recordCount":25883},{"key":"7f25efec-f762-11e1-a439-00145eb45e9a","title":"(Table 1) Distribution of nannofossil species in ODP Hole 110-671B","type":"OCCURRENCE","hostingOrganizationKey":"d5778510-eb28-11da-8629-b8a03c50a862","hostingOrganizationTitle":"PANGAEA - Publishing Network for Geoscientific and Environmental Data","countryCoverage":[],"publishingCountry":"DE","publishingOrganizationKey":"d5778510-eb28-11da-8629-b8a03c50a862","publishingOrganizationTitle":"PANGAEA - Publishing Network for Geoscientific and Environmental Data","license":"http://creativecommons.org/licenses/by/4.0/legalcode","decades":[],"keywords":[],"recordCount":25420},{"key":"18c1d733-6cea-4061-8450-8d68d9efbee6","title":"(Table 1) Distribution of planktonic foraminifera in ODP Site 130-806","type":"OCCURRENCE","hostingOrganizationKey":"d5778510-eb28-11da-8629-b8a03c50a862","hostingOrganizationTitle":"PANGAEA - Publishing Network for Geoscientific and Environmental Data","countryCoverage":[],"publishingCountry":"DE","publishingOrganizationKey":"d5778510-eb28-11da-8629-b8a03c50a862","publishingOrganizationTitle":"PANGAEA - Publishing Network for Geoscientific and Environmental Data","license":"http://creativecommons.org/licenses/by/4.0/legalcode","decades":[],"keywords":[],"recordCount":24380},{"key":"78706ad8-f762-11e1-a439-00145eb45e9a","title":"(Appendix A) Radiolarian abundances in sediment core MD96-2086","type":"OCCURRENCE","hostingOrganizationKey":"d5778510-eb28-11da-8629-b8a03c50a862","hostingOrganizationTitle":"PANGAEA - Publishing Network for Geoscientific and Environmental Data","countryCoverage":[],"publishingCountry":"DE","publishingOrganizationKey":"d5778510-eb28-11da-8629-b8a03c50a862","publishingOrganizationTitle":"PANGAEA - Publishing Network for Geoscientific and Environmental Data","license":"http://creativecommons.org/licenses/by/4.0/legalcode","decades":[],"keywords":[],"recordCount":23921},{"key":"d3484430-8876-11dd-986c-b8a03c50a862","title":"New Zealand Biodiversity Recording Network","description":"A system by which the general public can enter their biodiversity observations, as well as view reports on existing observations. The portals are Birds, Plants, Fungi, Mammals, Frogs and Reptiles, and Invertebrates.","type":"OCCURRENCE","hostingOrganizationKey":"2760d7b0-767c-11d8-a198-b8a03c50a862","hostingOrganizationTitle":"GBIF New Zealand","countryCoverage":[],"publishingCountry":"NZ","publishingOrganizationKey":"2760d7b0-767c-11d8-a198-b8a03c50a862","publishingOrganizationTitle":"GBIF New Zealand","license":"http://creativecommons.org/licenses/by/4.0/legalcode","decades":[],"keywords":[],"recordCount":23593},{"key":"71f27d90-f762-11e1-a439-00145eb45e9a","title":"MfN - Fossil invertebrates III","description":"Arthropods (excluding trilobites), echinoderms, graptolites","type":"OCCURRENCE","hostingOrganizationKey":"10980920-6dad-11da-ad13-b8a03c50a862","hostingOrganizationTitle":"Museum für Naturkunde Berlin","countryCoverage":[],"publishingCountry":"DE","publishingOrganizationKey":"10980920-6dad-11da-ad13-b8a03c50a862","publishingOrganizationTitle":"Museum für Naturkunde Berlin","license":"http://creativecommons.org/licenses/by/4.0/legalcode","decades":[],"keywords":[],"recordCount":23319},{"key":"5d2f6092-6dcd-496b-abba-6d9e95ccc801","title":"Monitoring data from the federal state Rhineland-Palatinate (Germany)","description":"<p>The dataset consists of occurrence data of the aquatic organism groups fish, macroinvertebrates and macrophytes that were sampled in the German federal state Rhineland-Palatinate between 2006 and 2009. The sampling was conducted according to the protocols of the national monitoring programme for implementation of the Water Framework Directive.</p>\n<p>For additional metadata see: http://data.freshwaterbiodiversity.eu/metadb/bf_mdb_view.php?entryID=BFE_92</p>","type":"OCCURRENCE","hostingOrganizationKey":"b872b075-9ab5-4e27-b6c6-5add6b890379","hostingOrganizationTitle":"BioFresh","countryCoverage":[],"publishingCountry":"DE","publishingOrganizationKey":"b872b075-9ab5-4e27-b6c6-5add6b890379","publishingOrganizationTitle":"BioFresh","license":"http://creativecommons.org/publicdomain/zero/1.0/legalcode","decades":[2000],"keywords":["rivers","Monitoring data","Macrophytes","Water Framework Directive","Inland Waters","Biota","Macroinvertebrates","Fish","Biosphere","Occurrence"],"recordCount":23215},{"key":"d8ea9662-ada2-11e2-8fbc-00145eb45e9a","title":"MfN - Fossil Fish Collection","type":"OCCURRENCE","hostingOrganizationKey":"10980920-6dad-11da-ad13-b8a03c50a862","hostingOrganizationTitle":"Museum für Naturkunde Berlin","countryCoverage":[],"publishingCountry":"DE","publishingOrganizationKey":"10980920-6dad-11da-ad13-b8a03c50a862","publishingOrganizationTitle":"Museum für Naturkunde Berlin","license":"http://creativecommons.org/licenses/by/4.0/legalcode","decades":[],"keywords":[],"recordCount":22516},{"key":"c40738de-6c7c-11e2-90ce-00145eb45e9a","title":"Type herbarium, Göttingen (GOET)","description":"The type database of the Herbarium Göttingen (GOET) includes type specimens of vascular plants, bryophytes, and lichens (about 11.600 specimens) located in Herbarium Göttingen (GOET). Interactive photographs including plant details and labels are available.","type":"OCCURRENCE","hostingOrganizationKey":"59c81290-df0e-11d8-b22e-b8a03c50a862","hostingOrganizationTitle":"Georg-August-Universität Göttingen, Albrecht-von-Haller-Institut für Pflanzenwissenschaften, Abteilung Systematische Botanik","countryCoverage":[],"publishingCountry":"DE","publishingOrganizationKey":"59c81290-df0e-11d8-b22e-b8a03c50a862","publishingOrganizationTitle":"Georg-August-Universität Göttingen, Albrecht-von-Haller-Institut für Pflanzenwissenschaften, Abteilung Systematische Botanik","license":"http://creativecommons.org/licenses/by/4.0/legalcode","decades":[],"keywords":[],"recordCount":22285},{"key":"863efcc4-f762-11e1-a439-00145eb45e9a","title":"DSMZ Prokarya Collection Catalogue","description":"The catalogue contains all strains (of the Bacteria and Archaea collection)","type":"OCCURRENCE","hostingOrganizationKey":"463555b0-d081-11da-ae8f-b8a03c50a862","hostingOrganizationTitle":"Leibniz Institute DSMZ - German Collection of Microorganisms and Cell Cultures","countryCoverage":[],"publishingCountry":"DE","publishingOrganizationKey":"463555b0-d081-11da-ae8f-b8a03c50a862","publishingOrganizationTitle":"Leibniz Institute DSMZ - German Collection of Microorganisms and Cell Cultures","license":"http://creativecommons.org/licenses/by/4.0/legalcode","decades":[],"keywords":[],"recordCount":22227},{"key":"5e34ffdf-2648-4ecf-ab53-555e3d3d8d2b","title":"Monitoring data from the federal state Mecklenburg-Western Pomerania (Germany)","description":"<p>The dataset consists of occurrence data of the aquatic organism groups fish, macroinvertebrates and macrophytes that were sampled in the German federal state Mecklenburg-Western Pomerania between 2006 and 2010. The sampling was conducted according to the protocols of the national monitoring programme for implementation of the Water Framework Directive.</p>\n<p>For additional metadata see: http://data.freshwaterbiodiversity.eu/metadb/bf_mdb_view.php?entryID=BFE_90</p>","type":"OCCURRENCE","hostingOrganizationKey":"b872b075-9ab5-4e27-b6c6-5add6b890379","hostingOrganizationTitle":"BioFresh","countryCoverage":[],"publishingCountry":"DE","publishingOrganizationKey":"b872b075-9ab5-4e27-b6c6-5add6b890379","publishingOrganizationTitle":"BioFresh","license":"http://creativecommons.org/publicdomain/zero/1.0/legalcode","decades":[2000,2010],"keywords":["rivers","Monitoring data","Macrophytes","Water Framework Directive","Inland Waters","Biota","Macroinvertebrates","Fish","Biosphere","Occurrence"],"recordCount":22224},{"key":"2f391085-e522-4662-afa6-953433267374","title":"(Table T1) Biostratigraphy of calcareous nannofossil taxa in ODP Hole 183-1135A","type":"OCCURRENCE","hostingOrganizationKey":"d5778510-eb28-11da-8629-b8a03c50a862","hostingOrganizationTitle":"PANGAEA - Publishing Network for Geoscientific and Environmental Data","countryCoverage":[],"publishingCountry":"DE","publishingOrganizationKey":"d5778510-eb28-11da-8629-b8a03c50a862","publishingOrganizationTitle":"PANGAEA - Publishing Network for Geoscientific and Environmental Data","license":"http://creativecommons.org/licenses/by/4.0/legalcode","decades":[],"keywords":[],"recordCount":21816},{"key":"deae7cbd-0c20-422f-a7f9-4e8acfb57c4a","title":"Monitoring data from the federal state Saxony-Anhalt (Germany)","description":"<p>The dataset consists of occurrence data of the aquatic organism groups fish, macroinvertebrates and macrophytes that were sampled in the German federal state Saxony-Anhalt in 2008 and 2009. The sampling was conducted according to the protocols of the national monitoring programme for implementation of the Water Framework Directive.</p>\n<p>For additional metadata see: http://data.freshwaterbiodiversity.eu/metadb/bf_mdb_view.php?entryID=BFE_94</p>","type":"OCCURRENCE","hostingOrganizationKey":"b872b075-9ab5-4e27-b6c6-5add6b890379","hostingOrganizationTitle":"BioFresh","countryCoverage":[],"publishingCountry":"DE","publishingOrganizationKey":"b872b075-9ab5-4e27-b6c6-5add6b890379","publishingOrganizationTitle":"BioFresh","license":"http://creativecommons.org/publicdomain/zero/1.0/legalcode","decades":[2000],"keywords":["rivers","Monitoring data","Macrophytes","Water Framework Directive","Inland Waters","Biota","Macroinvertebrates","Fish","Biosphere","Occurrence"],"recordCount":21663},{"key":"52a423d2-0486-4e77-bcee-6350d708d6ff","title":"Prokaryotic Nomenclature Up-to-date","description":"&#34;Prokaryotic Nomenclature up-to-date&#34; is a compilation of all names of Bacteria and Archaea which have been validly published according to the Bacteriological Code since 1. Jan. 1980, and nomenclatural changes which have been validly published since. It will be updated with the publication of each new issue of the Int. J. Syst. Evol. Microbiol. (IJSEM). &#34;Prokaryotic Nomenclature up-to-date&#34; is published by the Leibniz-Institut DSMZ - Deutsche Sammlung von Mikroorganismen und Zellkulturen GmbH.","type":"CHECKLIST","hostingOrganizationKey":"fbca90e3-8aed-48b1-84e3-369afbd000ce","hostingOrganizationTitle":"GBIF Secretariat","countryCoverage":[],"publishingCountry":"DE","publishingOrganizationKey":"463555b0-d081-11da-ae8f-b8a03c50a862","publishingOrganizationTitle":"Leibniz Institute DSMZ - German Collection of Microorganisms and Cell Cultures","license":"unspecified","decades":[],"keywords":[],"recordCount":20237},{"key":"96653d3e-f762-11e1-a439-00145eb45e9a","title":"Collection Aves (bird skeletons) SMF","description":"Aves of the world, bird skeletons","type":"OCCURRENCE","hostingOrganizationKey":"c76cf030-2a95-11da-9cc1-b8a03c50a862","hostingOrganizationTitle":"Senckenberg","countryCoverage":[],"publishingCountry":"DE","publishingOrganizationKey":"c76cf030-2a95-11da-9cc1-b8a03c50a862","publishingOrganizationTitle":"Senckenberg","license":"http://creativecommons.org/licenses/by/4.0/legalcode","decades":[],"keywords":[],"recordCount":19862},{"key":"96703220-f762-11e1-a439-00145eb45e9a","title":"Collection Thysanoptera SMF","description":"Thysanoptera of the world","type":"OCCURRENCE","hostingOrganizationKey":"c76cf030-2a95-11da-9cc1-b8a03c50a862","hostingOrganizationTitle":"Senckenberg","countryCoverage":[],"publishingCountry":"DE","publishingOrganizationKey":"c76cf030-2a95-11da-9cc1-b8a03c50a862","publishingOrganizationTitle":"Senckenberg","license":"http://creativecommons.org/licenses/by/4.0/legalcode","decades":[],"keywords":[],"recordCount":19645},{"key":"7e642a60-f762-11e1-a439-00145eb45e9a","title":"(Table 5) Stratigraphic ranges and relative abundances of Paleogene planktonic foraminifers and other selected organisms in ODP Site 114-702","type":"OCCURRENCE","hostingOrganizationKey":"d5778510-eb28-11da-8629-b8a03c50a862","hostingOrganizationTitle":"PANGAEA - Publishing Network for Geoscientific and Environmental Data","countryCoverage":[],"publishingCountry":"DE","publishingOrganizationKey":"d5778510-eb28-11da-8629-b8a03c50a862","publishingOrganizationTitle":"PANGAEA - Publishing Network for Geoscientific and Environmental Data","license":"http://creativecommons.org/licenses/by/4.0/legalcode","decades":[],"keywords":[],"recordCount":19599},{"key":"d45b8e8a-1f32-40b0-a132-bd690bd90b30","title":"ZFMK Hymenoptera collection","description":"The Hymenoptera collection at the Zoological Research Museum Alexander Koenig contains parts of the collection of Johann Klapperich as well as the collections of W. Aerts, Johannes Gallasch, R. Oberthür, August Reichensperger, R. Roesler, A. Schoop and the permanent loan of the Zoo Cologne","type":"OCCURRENCE","hostingOrganizationKey":"6e1cad80-bdf5-11d8-84ea-b8a03c50a862","hostingOrganizationTitle":"Zoologisches Forschungsinstitut und Museum Alexander Koenig","countryCoverage":[],"publishingCountry":"DE","publishingOrganizationKey":"6e1cad80-bdf5-11d8-84ea-b8a03c50a862","publishingOrganizationTitle":"Zoologisches Forschungsinstitut und Museum Alexander Koenig","license":"http://creativecommons.org/licenses/by/4.0/legalcode","decades":[],"keywords":[],"recordCount":19372},{"key":"965e401a-f762-11e1-a439-00145eb45e9a","title":"Collection Polychaeta SMF","description":"Polychaetes of the world","type":"OCCURRENCE","hostingOrganizationKey":"c76cf030-2a95-11da-9cc1-b8a03c50a862","hostingOrganizationTitle":"Senckenberg","countryCoverage":[],"publishingCountry":"DE","publishingOrganizationKey":"c76cf030-2a95-11da-9cc1-b8a03c50a862","publishingOrganizationTitle":"Senckenberg","license":"http://creativecommons.org/licenses/by/4.0/legalcode","decades":[],"keywords":[],"recordCount":18524},{"key":"873d986a-f762-11e1-a439-00145eb45e9a","title":"Distribution of planktic foraminifera in surface sediments of the Atlantic Ocean (ATL947)","type":"OCCURRENCE","hostingOrganizationKey":"d5778510-eb28-11da-8629-b8a03c50a862","hostingOrganizationTitle":"PANGAEA - Publishing Network for Geoscientific and Environmental Data","countryCoverage":[],"publishingCountry":"DE","publishingOrganizationKey":"d5778510-eb28-11da-8629-b8a03c50a862","publishingOrganizationTitle":"PANGAEA - Publishing Network for Geoscientific and Environmental Data","license":"http://creativecommons.org/licenses/by/4.0/legalcode","decades":[],"keywords":[],"recordCount":18243},{"key":"263bbfe7-f643-43bb-b448-f0705d1c0e18","title":"Herpetology","description":"Herpetology (Reptiles and Amphibians) Collection","type":"OCCURRENCE","hostingOrganizationKey":"6e1cad80-bdf5-11d8-84ea-b8a03c50a862","hostingOrganizationTitle":"Zoologisches Forschungsinstitut und Museum Alexander Koenig","countryCoverage":[],"publishingCountry":"DE","publishingOrganizationKey":"6e1cad80-bdf5-11d8-84ea-b8a03c50a862","publishingOrganizationTitle":"Zoologisches Forschungsinstitut und Museum Alexander Koenig","license":"http://creativecommons.org/licenses/by/4.0/legalcode","decades":[],"keywords":[],"recordCount":18185},{"key":"88f4e35a-bdf8-4aa2-9a1b-56401d4eed15","title":"Taxon list of animals with German names (worldwide) compiled at the SMNS","description":"http://www.diversitymobile.net/wiki/About_%22Taxon_list_of_animals_with_German_names_%28worldwide%29_compiled_at_the_SMNS%22","type":"CHECKLIST","hostingOrganizationKey":"0674aea0-a7e1-11d8-9534-b8a03c50a862","hostingOrganizationTitle":"Staatliche Naturwissenschaftliche Sammlungen Bayerns","countryCoverage":[],"publishingCountry":"DE","publishingOrganizationKey":"0674aea0-a7e1-11d8-9534-b8a03c50a862","publishingOrganizationTitle":"Staatliche Naturwissenschaftliche Sammlungen Bayerns","license":"http://creativecommons.org/licenses/by/4.0/legalcode","decades":[],"keywords":[],"recordCount":18127},{"key":"2cc6f37d-e92f-4845-ac47-6d7b1b58c399","title":"(Table T1) Neogene stratigraphy of diatoms, ebridians and endoskeletal dinoflagellates in ODP Hole 183-1138A","type":"OCCURRENCE","hostingOrganizationKey":"d5778510-eb28-11da-8629-b8a03c50a862","hostingOrganizationTitle":"PANGAEA - Publishing Network for Geoscientific and Environmental Data","countryCoverage":[],"publishingCountry":"DE","publishingOrganizationKey":"d5778510-eb28-11da-8629-b8a03c50a862","publishingOrganizationTitle":"PANGAEA - Publishing Network for Geoscientific and Environmental Data","license":"http://creativecommons.org/licenses/by/4.0/legalcode","decades":[],"keywords":[],"recordCount":18100},{"key":"8f114118-f762-11e1-a439-00145eb45e9a","title":"(Table 1) Distribution of benthic and planktonic foraminifers at DSDP Hole 28-270","description":"Foraminifers from the upper Oligocene, lower Miocene, and Pleistocene at Site 270 in the southern Ross Sea, Antarctica, are discussed and illustrated. The total fauna comprises 74 genera and 163 species. A small number of taxa are recycled from Cretaceous and older Paleogene sediments. Four assemblage zones are proposed, the age of informal lithologic units discussed, and potentially important hiatuses identified. Microfaunas reflect a mixing of biogeographic affinities with one element exhibiting similarities to temperate late Paleogene assemblages in New Zealand, and another representing the early cold-water assemblages of the antarctic Neogene.","type":"OCCURRENCE","hostingOrganizationKey":"d5778510-eb28-11da-8629-b8a03c50a862","hostingOrganizationTitle":"PANGAEA - Publishing Network for Geoscientific and Environmental Data","countryCoverage":[],"publishingCountry":"DE","publishingOrganizationKey":"d5778510-eb28-11da-8629-b8a03c50a862","publishingOrganizationTitle":"PANGAEA - Publishing Network for Geoscientific and Environmental Data","license":"http://creativecommons.org/licenses/by/4.0/legalcode","decades":[],"keywords":[],"recordCount":17808},{"key":"8e4ed6c0-1dac-436a-8afc-a1b10b046067","title":"SMNS Palaeontological collection - Fossil aquatic vertebrates","type":"OCCURRENCE","hostingOrganizationKey":"99ea0c90-61e5-11dc-a64c-b8a03c50a862","hostingOrganizationTitle":"Staatliches Museum für Naturkunde Stuttgart","countryCoverage":[],"publishingCountry":"DE","publishingOrganizationKey":"99ea0c90-61e5-11dc-a64c-b8a03c50a862","publishingOrganizationTitle":"Staatliches Museum für Naturkunde Stuttgart","license":"http://creativecommons.org/licenses/by/4.0/legalcode","decades":[],"keywords":[],"recordCount":17753},{"key":"721f6224-f762-11e1-a439-00145eb45e9a","title":"Lower Albian, Niveau Paquier range chart of nannofossils in SE France","type":"OCCURRENCE","hostingOrganizationKey":"d5778510-eb28-11da-8629-b8a03c50a862","hostingOrganizationTitle":"PANGAEA - Publishing Network for Geoscientific and Environmental Data","countryCoverage":[],"publishingCountry":"DE","publishingOrganizationKey":"d5778510-eb28-11da-8629-b8a03c50a862","publishingOrganizationTitle":"PANGAEA - Publishing Network for Geoscientific and Environmental Data","license":"http://creativecommons.org/licenses/by/4.0/legalcode","decades":[],"keywords":[],"recordCount":17654},{"key":"e0aff3c8-3e32-412b-888c-fde75c2e8750","title":"BioFresh Pond Data","description":"<p>The BioFresh Pond Database contains sampling records of different biological groups (mainly amphibia, invertebrates, macrophytes) at 460 European ponds. The data were collated from scientific literature and unpublished sources.</p>\n<p>See http://www.freshwaterbiodiversity.eu/metadb/bf_mdb_view.php?entryID=BF76 for additional metadata.</p>","type":"OCCURRENCE","hostingOrganizationKey":"b872b075-9ab5-4e27-b6c6-5add6b890379","hostingOrganizationTitle":"BioFresh","countryCoverage":[],"publishingCountry":"DE","publishingOrganizationKey":"b872b075-9ab5-4e27-b6c6-5add6b890379","publishingOrganizationTitle":"BioFresh","license":"http://creativecommons.org/publicdomain/zero/1.0/legalcode","decades":[],"keywords":["generalfreshwater","Inland Waters","Environment","Agriculture","Terrestrial Hydrosphere","Occurrence","Farming"],"recordCount":17532},{"key":"8ea44a78-c6af-11e2-9b88-00145eb45e9a","title":"DORSA - German Orthoptera Collections","description":"a Database System for Systematics and Taxonomy","type":"OCCURRENCE","hostingOrganizationKey":"021121c0-f040-11d8-b22f-b8a03c50a862","hostingOrganizationTitle":"SysTax","countryCoverage":[],"publishingCountry":"DE","publishingOrganizationKey":"021121c0-f040-11d8-b22f-b8a03c50a862","publishingOrganizationTitle":"SysTax","license":"http://creativecommons.org/licenses/by/4.0/legalcode","decades":[],"keywords":[],"recordCount":17485},{"key":"82b9101c-f762-11e1-a439-00145eb45e9a","title":"MfN - Auchenorrhyncha Collection","description":"Auchenorrhyncha collection of the Natural History Museum Berlin, Germany","type":"OCCURRENCE","hostingOrganizationKey":"10980920-6dad-11da-ad13-b8a03c50a862","hostingOrganizationTitle":"Museum für Naturkunde Berlin","countryCoverage":[],"publishingCountry":"DE","publishingOrganizationKey":"10980920-6dad-11da-ad13-b8a03c50a862","publishingOrganizationTitle":"Museum für Naturkunde Berlin","license":"http://creativecommons.org/licenses/by/4.0/legalcode","decades":[],"keywords":[],"recordCount":17369},{"key":"8286cf26-f762-11e1-a439-00145eb45e9a","title":"Collection Herpetologie - SNSD","description":"Herpetologie of the world","type":"OCCURRENCE","hostingOrganizationKey":"c76cf030-2a95-11da-9cc1-b8a03c50a862","hostingOrganizationTitle":"Senckenberg","countryCoverage":[],"publishingCountry":"DE","publishingOrganizationKey":"c76cf030-2a95-11da-9cc1-b8a03c50a862","publishingOrganizationTitle":"Senckenberg","license":"http://creativecommons.org/licenses/by/4.0/legalcode","decades":[],"keywords":[],"recordCount":17206},{"key":"4cf57b8c-7308-46fd-9a78-58e8e2d651d4","title":"Modern foraminifera in the New Zealand EEZ","description":"Biodiversity data of the modern foraminifera in the New Zealand EEZ sourced from Dr Bruce Hayward at Geomarine Research. These data come from two projects: (1) modern deep-sea (100-5000 m water depth) foraminifera; and (2) a 7 year project (1991-1998) on the biodiversity and ecological distribution of modern brackish and shallow-water (0-100 m) foraminifera around New Zealand.","type":"OCCURRENCE","hostingOrganizationKey":"c58ac019-b413-4613-8772-39e57acbeb8e","hostingOrganizationTitle":"The National Institute of Water and Atmospheric Research (NIWA)","countryCoverage":[],"publishingCountry":"NZ","publishingOrganizationKey":"1c9c3bb4-377c-4547-aa79-16ea755d6006","publishingOrganizationTitle":"Southwestern Pacific Ocean Biogeographic Information System (OBIS) Node","license":"http://creativecommons.org/licenses/by-nc/4.0/legalcode","decades":[],"keywords":["Observation","Occurrence"],"recordCount":16998},{"key":"f0c74a2c-4bd8-49d0-837a-92bb835fd2f3","title":"Database for alien invasive plants occurrences in Germany","description":"The dataset includes occurrence data of invasive and potentially invasive nonnative plant species. The datasets are being collected since 2010, mostly in the German federal state Saxony-Anhalt, but also in other federal states of Germany and in Europe. Collectors are the staff of the Coordination Centre for alien invasive plant species (KORINA), employees of public authorities, scientists, students and citizens.","type":"OCCURRENCE","hostingOrganizationKey":"9aef3224-9dd6-4fb5-9e06-2d6c25b42d20","hostingOrganizationTitle":"Independent Institute for environmental issues UfU e.V.","countryCoverage":[],"publishingCountry":"DE","publishingOrganizationKey":"9aef3224-9dd6-4fb5-9e06-2d6c25b42d20","publishingOrganizationTitle":"Independent Institute for environmental issues UfU e.V.","license":"http://creativecommons.org/licenses/by/4.0/legalcode","decades":[],"keywords":[],"recordCount":16506},{"key":"71f5f308-f762-11e1-a439-00145eb45e9a","title":"MfN - Fossil plants (Cenophytic)","description":"Fossil wood, leaves and plant remains of the Cenophytic","type":"OCCURRENCE","hostingOrganizationKey":"10980920-6dad-11da-ad13-b8a03c50a862","hostingOrganizationTitle":"Museum für Naturkunde Berlin","countryCoverage":[],"publishingCountry":"DE","publishingOrganizationKey":"10980920-6dad-11da-ad13-b8a03c50a862","publishingOrganizationTitle":"Museum für Naturkunde Berlin","license":"http://creativecommons.org/licenses/by/4.0/legalcode","decades":[],"keywords":[],"recordCount":16479},{"key":"7cea7040-f762-11e1-a439-00145eb45e9a","title":"(Table 2) Range chart of calcareous nannofossils in ODP Hole 122-762C","type":"OCCURRENCE","hostingOrganizationKey":"d5778510-eb28-11da-8629-b8a03c50a862","hostingOrganizationTitle":"PANGAEA - Publishing Network for Geoscientific and Environmental Data","countryCoverage":[],"publishingCountry":"DE","publishingOrganizationKey":"d5778510-eb28-11da-8629-b8a03c50a862","publishingOrganizationTitle":"PANGAEA - Publishing Network for Geoscientific and Environmental Data","license":"http://creativecommons.org/licenses/by/4.0/legalcode","decades":[],"keywords":[],"recordCount":16443},{"key":"d5312bc2-819b-11e2-bad2-00145eb45e9a","title":"Atlas der Raubfliegen Deutschlands - database","description":"This database contains all published records of robberflies in Germany.","type":"OCCURRENCE","hostingOrganizationKey":"10980920-6dad-11da-ad13-b8a03c50a862","hostingOrganizationTitle":"Museum für Naturkunde Berlin","countryCoverage":[],"publishingCountry":"DE","publishingOrganizationKey":"399f50f1-05cd-4f8f-aa42-4b27f9d8a047","publishingOrganizationTitle":"Asilweb - Atlas der Raubfliegen Deutschlands","license":"http://creativecommons.org/licenses/by/4.0/legalcode","decades":[],"keywords":[],"recordCount":16282},{"key":"ec81f6d4-e92f-480c-a73a-a4b71ba435cc","title":"Herbarium Erlangense","description":"With more than 158,000 specimens (15,000 objects digitised), the herbarium of Erlangen (ER, http://www.herbarium-erlangense.nat.uni-erlangen.de/) is the second largest of Bavaria, Germany. In addition to the possibility to search for taxon, collector and locality, images of over 1650 objects can be freely accessed.","type":"OCCURRENCE","hostingOrganizationKey":"833f0d81-717d-4f11-95b0-0f738545adad","hostingOrganizationTitle":"Friedrich-Alexander University of Erlangen-Nürnberg","countryCoverage":[],"publishingCountry":"DE","publishingOrganizationKey":"833f0d81-717d-4f11-95b0-0f738545adad","publishingOrganizationTitle":"Friedrich-Alexander University of Erlangen-Nürnberg","license":"http://creativecommons.org/licenses/by/4.0/legalcode","decades":[],"keywords":[],"recordCount":16261},{"key":"e37d0298-8e57-449c-8069-c5d73391e061","title":"Digitization of plant specimens from Rhoen and Vogelsberg (FULD)","description":"The digitization  from the possessions of the herbarium of the Verein für Naturkunde in Osthessen (FULD) comprises metadata from specimen labels, georeferencing of localities and a digital image of the object.","type":"OCCURRENCE","hostingOrganizationKey":"c76cf030-2a95-11da-9cc1-b8a03c50a862","hostingOrganizationTitle":"Senckenberg","countryCoverage":[],"publishingCountry":"DE","publishingOrganizationKey":"c76cf030-2a95-11da-9cc1-b8a03c50a862","publishingOrganizationTitle":"Senckenberg","license":"http://creativecommons.org/licenses/by/4.0/legalcode","decades":[],"keywords":[],"recordCount":16078},{"key":"f4a44701-7d70-4f6d-8479-4f27680dcf2f","title":"(Appendix 4) Distribution of benthic foraminifers, living, dead, and total assemblage counts, and faunal diversity in sediment samples collected between 1995 and 2010 in the San Francisco Bay coastal system","type":"OCCURRENCE","hostingOrganizationKey":"d5778510-eb28-11da-8629-b8a03c50a862","hostingOrganizationTitle":"PANGAEA - Publishing Network for Geoscientific and Environmental Data","countryCoverage":[],"publishingCountry":"DE","publishingOrganizationKey":"d5778510-eb28-11da-8629-b8a03c50a862","publishingOrganizationTitle":"PANGAEA - Publishing Network for Geoscientific and Environmental Data","license":"http://creativecommons.org/licenses/by/4.0/legalcode","decades":[],"keywords":[],"recordCount":16071},{"key":"81332e30-f762-11e1-a439-00145eb45e9a","title":"Leiner-Herbar Konstanz","description":"The Leiner Herbarium was founded by the pharmacist Ludwig Leiner (1830 - 1901) in Constance. It contains about 16.000 specimens of flowering plants and ferns, most of them from southern Germany.","type":"OCCURRENCE","hostingOrganizationKey":"bfb257e0-b415-11da-967e-b8a03c50a862","hostingOrganizationTitle":"Bodensee-Naturmuseum Konstanz","countryCoverage":[],"publishingCountry":"DE","publishingOrganizationKey":"bfb257e0-b415-11da-967e-b8a03c50a862","publishingOrganizationTitle":"Bodensee-Naturmuseum Konstanz","license":"http://creativecommons.org/licenses/by/4.0/legalcode","decades":[],"keywords":[],"recordCount":15827},{"key":"7e689ac8-f762-11e1-a439-00145eb45e9a","title":"(Table 6) Stratigraphic ranges and relative abundances of Paleogene planktonic foraminifers and other selected organisms in ODP Hole 114-703A","type":"OCCURRENCE","hostingOrganizationKey":"d5778510-eb28-11da-8629-b8a03c50a862","hostingOrganizationTitle":"PANGAEA - Publishing Network for Geoscientific and Environmental Data","countryCoverage":[],"publishingCountry":"DE","publishingOrganizationKey":"d5778510-eb28-11da-8629-b8a03c50a862","publishingOrganizationTitle":"PANGAEA - Publishing Network for Geoscientific and Environmental Data","license":"http://creativecommons.org/licenses/by/4.0/legalcode","decades":[],"keywords":[],"recordCount":15621}],"facets":[]}
  recorded_at: 2020-02-12 06:00:39 GMT
  recorded_with: vcr/0.4.0, webmockr/0.5.0
